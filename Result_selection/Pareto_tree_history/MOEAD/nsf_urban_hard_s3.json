{"1": [{"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( AMS,ARS ) - Max( Max( Max( FirstVNF_CPU_Server,AMS ),( MDR * FirstVNF_CPU ) ),RRS ) )", "choosing": "Min( Min( RRSe ,MUM ) ,( RMSe + ( MUM - CS ) ) )", "obj1": 0.673828125, "obj2": 0.2754663812417101}, {"determining": "( ( ARS / FirstVNF_CPU_Server ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - ( MUR + RCSe ) )", "obj1": 0.666015625, "obj2": 0.2914621865292436}, {"determining": "Max( ( MDR / ACS ),( PN / FirstVNF_Mem ) )", "choosing": "Max( ( RMSe - MUM ),Min( MLU ,CS ) )", "obj1": 0.7109375, "obj2": 0.2726077989784635}, {"determining": "( Max( PN,FirstVNF_Mem ) * ( PN - PN ) )", "choosing": "( ( MUC / MUR ) - ( DS + DS ) )", "obj1": 0.71875, "obj2": 0.2818859405620086}, {"determining": "( ( FirstVNF_CPU_Server * Const ) / Min( ARS ,PN ) )", "choosing": "( ( DS - CS ) + Max( DS,RMSe ) )", "obj1": 0.67578125, "obj2": 0.2670260045649861}, {"determining": "( ( FirstVNF_Mem * MRS ) - ( PN - MRS ) )", "choosing": "Min( Min( MUC ,MUR ) ,( RRSe * RMSe ) )", "obj1": 0.921875, "obj2": 0.1026076306829326}, {"determining": "Max( ( FirstVNF_CPU_Server + Const ),( FirstVNF_Mem_Server - CRS ) )", "choosing": "( ( RCSe * RMSe ) - Max( MUR,MUM ) )", "obj1": 0.7109375, "obj2": 0.2663761626118413}, {"determining": "Max( ( FirstVNF_RAM * Max( ( CRS + ACS ),PN ) ),Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( ( RMSe * ( Max( Min( DS ,RCSe ),Min( MUR ,MUR ) ) + ( RMSe / MUR ) ) ) - ( CS - MLU ) ) + ( CS + MUC ) )", "obj1": 0.7265625, "obj2": 0.30158669243297437}, {"determining": "( ( AMS + AMS ) * ( MDR + PN ) )", "choosing": "Min( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) ,( MUR / MLU ) )", "obj1": 0.74609375, "obj2": 0.28425338900601416}, {"determining": "( ( RRS * MDR ) + ( FirstVNF_RAM / Const ) )", "choosing": "( Min( RMSe ,MLU ) / Max( MUM,CS ) )", "obj1": 0.68359375, "obj2": 0.26172387996438257}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_CPU_Server ) + ( ( ( Const - AMS ) - PN ) / RRS ) )", "choosing": "( Min( MUC ,MLU ) - ( CS / RCSe ) )", "obj1": 0.7421875, "obj2": 0.2738590142659241}, {"determining": "( ( FirstVNF_Mem + ( DDR * AMS ) ) / Max( MDR,AMS ) )", "choosing": "( Max( MLU,CS ) * Max( MLU,CS ) )", "obj1": 0.7109375, "obj2": 0.26617323486924077}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + DDR ) / ( PN + FirstVNF_RAM ) )", "choosing": "Max( Max( MUR,RCSe ),( CS - MUM ) )", "obj1": 0.72265625, "obj2": 0.27843256856879983}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ( FirstVNF_RAM / AMS ) ) * ( BR + FirstVNF_Mem ) )", "choosing": "( ( ( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) - MLU ) / ( CS / RMSe ) )", "obj1": 0.71875, "obj2": 0.28329798676750895}, {"determining": "( ( FirstVNF_RAM * CRS ) + Max( ( FirstVNF_CPU / PN ),FirstVNF_Mem ) )", "choosing": "Max( ( Max( ( ( ( MUC / Max( MUR,MLU ) ) * ( Min( RMSe ,( MUC * MUR ) ) - MUR ) ) / MUR ),( MUC - Max( ( RMSe * Min( Max( RCSe,RCSe ) ,Min( MUR ,DS ) ) ),( MUC / MUC ) ) ) ) - MUM ),( DS / MLU ) )", "obj1": 0.681640625, "obj2": 0.2688780268543537}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - Max( RRS,FirstVNF_RAM ) )", "choosing": "( Max( MUC,MLU ) - ( MUR / MUC ) )", "obj1": 0.8515625, "obj2": 0.13480934064881694}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.705078125, "obj2": 0.25641222781433576}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( ( RMSe + CS ) - Max( RRSe,RMSe ) )", "obj1": 0.638671875, "obj2": 0.2686027990682632}, {"determining": "Min( Max( FirstVNF_CPU,PN ) ,( DDR / ACS ) )", "choosing": "Max( ( MLU + RCSe ),( MUR * MUC ) )", "obj1": 0.701171875, "obj2": 0.2724254741305878}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( ARS ,ACS ) )", "choosing": "( ( CS * DS ) - ( MUR * CS ) )", "obj1": 0.662109375, "obj2": 0.2629547580154329}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM_Server ) / ( RRS * Min( AMS ,ARS ) ) )", "choosing": "( Max( DS,( Min( MUC ,MUR ) + ( RMSe - ( DS * DS ) ) ) ) + ( MUR * CS ) )", "obj1": 0.68359375, "obj2": 0.2756724442670347}, {"determining": "( ( ACS - Max( FirstVNF_CPU,DDR ) ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Min( MLU ,RMSe ) )", "obj1": 0.8359375, "obj2": 0.14826405891754726}, {"determining": "( ( PN * FirstVNF_CPU ) * ( ( PN / Max( FirstVNF_RAM_Server,( ARS / Max( FirstVNF_Mem,( AMS / ( CRS / MDR ) ) ) ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( MUM * ( ( RRSe - MUC ) * MLU ) ) * Min( CS ,Min( ( RRSe / ( RMSe / RMSe ) ) ,Min( RRSe ,( DS * MLU ) ) ) ) ) / RRSe ) * MUR ) - Max( Min( Min( RCSe ,( MLU * Max( Min( ( CS + MUM ) ,( MUR * MUR ) ),CS ) ) ) ,Max( CS,Min( RRSe ,RMSe ) ) ),MUR ) )", "obj1": 0.755859375, "obj2": 0.27237342010163756}, {"determining": "( ( Max( FirstVNF_RAM,( Const + PN ) ) - Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) ) / Min( FirstVNF_RAM ,DDR ) )", "choosing": "( Min( RCSe ,CS ) * ( ( RCSe - DS ) * MLU ) )", "obj1": 0.634765625, "obj2": 0.27852924615039615}, {"determining": "Max( ( PN / RRS ),Max( ARS,DDR ) )", "choosing": "( ( MUC - RRSe ) - ( Max( DS,MLU ) - RRSe ) )", "obj1": 0.734375, "obj2": 0.26800674711736566}, {"determining": "Max( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,ACS ) ),( Min( ACS ,FirstVNF_Mem_Server ) * ARS ) )", "choosing": "( ( ( ( Max( MLU,MUR ) * DS ) / RRSe ) * ( RRSe / Min( RRSe ,MUM ) ) ) - Max( MUM,RCSe ) )", "obj1": 0.736328125, "obj2": 0.23007658574762602}, {"determining": "( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( RCSe,RMSe ) )", "obj1": 0.763671875, "obj2": 0.21912118266795577}, {"determining": "Max( ( FirstVNF_RAM * FirstVNF_Mem_Server ),( Min( FirstVNF_Mem_Server ,ACS ) * FirstVNF_CPU_Server ) )", "choosing": "( ( Min( Max( MUM,( Max( CS,MUM ) + RCSe ) ) ,MUR ) * RRSe ) - ( DS * MUM ) )", "obj1": 0.701171875, "obj2": 0.28812599315471427}, {"determining": "( Min( FirstVNF_CPU ,ACS ) - ( ARS * BR ) )", "choosing": "Max( Min( CS ,RMSe ),( MUM * RCSe ) )", "obj1": 0.671875, "obj2": 0.28175140668665327}, {"determining": "Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,Max( BR,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( RMSe / MUC ) )", "obj1": 0.7421875, "obj2": 0.28179993666258374}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,BR ) )", "choosing": "( ( RRSe - DS ) - ( MUR + RMSe ) )", "obj1": 0.986328125, "obj2": 0.013651486153939045}, {"determining": "Max( Min( ( Const * DDR ) ,( BR * FirstVNF_RAM_Server ) ),( ( MRS - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ARS ) ) )", "choosing": "( ( ( MLU - DS ) / Max( RRSe,MLU ) ) * ( Min( MUC ,DS ) + MUM ) )", "obj1": 0.7265625, "obj2": 0.2994729797458284}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,AMS ) - ( ARS - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 0.74609375, "obj2": 0.26605644966183256}, {"determining": "( ( ( RRS - RRS ) + Min( ARS ,DDR ) ) - ( Max( FirstVNF_Mem_Server,ACS ) - ( FirstVNF_CPU - BR ) ) )", "choosing": "Max( ( ( RCSe + RRSe ) / MUC ),Max( ( RCSe / CS ),MLU ) )", "obj1": 0.736328125, "obj2": 0.23511674097228386}, {"determining": "( Min( PN ,Min( DDR ,CRS ) ) * Max( FirstVNF_CPU,( MDR * BR ) ) )", "choosing": "( ( ( MUC * MUM ) + ( MUC - MLU ) ) - ( ( MUR + RCSe ) - ( RRSe / MUM ) ) )", "obj1": 0.703125, "obj2": 0.27313598736376193}, {"determining": "Max( ( AMS * AMS ),( FirstVNF_Mem_Server + BR ) )", "choosing": "( Min( CS ,CS ) * ( DS * ( MUM / RCSe ) ) )", "obj1": 0.71484375, "obj2": 0.27013819302785613}, {"determining": "( Min( MRS ,ACS ) / ( MDR + Max( CRS,RRS ) ) )", "choosing": "( Max( RMSe,MLU ) * Max( ( RCSe + RMSe ),DS ) )", "obj1": 0.734375, "obj2": 0.28820554453493946}, {"determining": "( Max( ( BR * RRS ),Const ) / Max( ( FirstVNF_Mem * Const ),( ARS + AMS ) ) )", "choosing": "( Max( RMSe,RRSe ) * Min( ( DS - RMSe ) ,Max( RMSe,MUC ) ) )", "obj1": 0.724609375, "obj2": 0.25400171937886196}, {"determining": "( Max( MDR,ARS ) + ( Const / ( ACS / FirstVNF_Mem ) ) )", "choosing": "( ( RCSe / ( RRSe * DS ) ) * Max( Max( RCSe,MUR ),RMSe ) )", "obj1": 0.640625, "obj2": 0.2841540087409368}, {"determining": "( ( Max( FirstVNF_RAM_Server,CRS ) / Min( Const ,ACS ) ) / ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server + RRS ) ) )", "choosing": "( ( ( RRSe + DS ) - ( CS * MUR ) ) - Max( ( CS * RMSe ),( MUC / MUM ) ) )", "obj1": 0.671875, "obj2": 0.24304913510376436}, {"determining": "( ( ( ACS + FirstVNF_Mem ) / ( MRS / Const ) ) - ( ( FirstVNF_RAM / MDR ) * ( BR + CRS ) ) )", "choosing": "( ( CS + ( RCSe + RMSe ) ) - Max( ( RRSe / CS ),CS ) )", "obj1": 0.681640625, "obj2": 0.2885695687376697}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) / Max( PN,FirstVNF_Mem ) ) + ( ( BR - DDR ) + Min( MDR ,DDR ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 0.751953125, "obj2": 0.2635450432922508}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) * ( FirstVNF_CPU + MDR ) ) ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MLU ) * Min( DS ,RRSe ) )", "obj1": 0.7578125, "obj2": 0.24792184412943521}, {"determining": "( Min( ( AMS / RRS ) ,( Const + CRS ) ) + Max( ( CRS - AMS ),Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) )", "obj1": 0.71484375, "obj2": 0.27070472699442166}, {"determining": "Min( ( ( FirstVNF_Mem_Server * PN ) * ( DDR * Const ) ) ,( ( FirstVNF_RAM + ARS ) - ( AMS * AMS ) ) )", "choosing": "Min( Min( Max( MUR,CS ) ,RMSe ) ,( ( RRSe / MUC ) / RMSe ) )", "obj1": 0.728515625, "obj2": 0.27697629706993043}, {"determining": "( ( ( ACS / DDR ) * ( BR - MRS ) ) * Min( ( DDR + Const ) ,( MDR * CRS ) ) )", "choosing": "Max( ( Max( RMSe,MUC ) - ( RRSe + MLU ) ),( ( RRSe / DS ) / ( MUC + MLU ) ) )", "obj1": 0.73046875, "obj2": 0.28442221178188304}, {"determining": "( Max( Min( Const ,MRS ),BR ) / ( RRS + ( CRS / MDR ) ) )", "choosing": "Min( ( Max( RCSe,MUC ) + ( RRSe + RRSe ) ) ,Min( ( RMSe * RMSe ) ,Min( RMSe ,MUM ) ) )", "obj1": 0.72265625, "obj2": 0.28177188037659134}, {"determining": "( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) )", "choosing": "( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) )", "obj1": 0.736328125, "obj2": 0.283210400408635}, {"determining": "Min( ( Max( PN,FirstVNF_RAM_Server ) * Max( BR,CRS ) ) ,( Min( FirstVNF_Mem_Server ,ACS ) * ( FirstVNF_CPU / ARS ) ) )", "choosing": "Max( ( Max( MUM,CS ) / ( MUR * RMSe ) ),Max( ( DS + RCSe ),( RMSe * MUM ) ) )", "obj1": 0.712890625, "obj2": 0.25142992217311233}, {"determining": "Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) / Const ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + Min( MUM ,MUM ) ) - Min( ( MUM / MLU ) ,( CS * Max( ( ( RRSe / Max( DS,( DS - DS ) ) ) / RMSe ),Min( ( MUR + Max( RMSe,CS ) ) ,Min( RMSe ,Min( Max( MLU,MUR ) ,( RMSe - MLU ) ) ) ) ) ) ) )", "obj1": 0.73828125, "obj2": 0.25510374692544185}, {"determining": "( ( Min( PN ,PN ) * ( PN + Const ) ) * Min( Max( FirstVNF_RAM,CRS ) ,( DDR - RRS ) ) )", "choosing": "( Max( ( RCSe / RRSe ),( MUM / RCSe ) ) / ( ( MUM * DS ) + Max( RMSe,MUM ) ) )", "obj1": 0.673828125, "obj2": 0.27622075045217165}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( Const + Min( MDR ,Min( ( FirstVNF_Mem_Server + ( MDR * Const ) ) ,PN ) ) ) + ( PN / FirstVNF_RAM ) )", "choosing": "Min( ( MLU / ( ( MUR * Max( RMSe,RRSe ) ) / MUR ) ) ,Max( CS,Min( MUM ,( ( RMSe + ( MUR + ( MUC * ( RCSe * RRSe ) ) ) ) + Min( ( MLU * MLU ) ,MLU ) ) ) ) )", "obj1": 0.71484375, "obj2": 0.26962868470901125}, {"determining": "( ( ( PN / FirstVNF_CPU ) - Const ) + ( ( Max( FirstVNF_RAM,Const ) + FirstVNF_CPU ) / ( ARS - FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe + Max( MUC,MUC ) ) - RCSe ) + Min( ( RMSe + DS ) ,MUC ) )", "obj1": 0.67578125, "obj2": 0.24987466373851358}, {"determining": "Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) + FirstVNF_RAM_Server ),( AMS + BR ) )", "choosing": "( Max( RRSe,RMSe ) - Min( ( RMSe / MUR ) ,RMSe ) )", "obj1": 0.7578125, "obj2": 0.27700345223125733}, {"determining": "Max( ( Min( DDR ,MDR ) / Max( FirstVNF_RAM_Server,PN ) ),Max( ( FirstVNF_CPU * MDR ),( FirstVNF_CPU / BR ) ) )", "choosing": "( Max( Max( RRSe,RRSe ),Min( MUM ,DS ) ) - ( ( ( Max( Max( ( Min( MUC ,RCSe ) - Max( MUR,MUM ) ),( DS + MUM ) ),( RCSe - Min( ( RRSe * RCSe ) ,DS ) ) ) - ( Max( DS,CS ) / ( MUC + MUC ) ) ) + MLU ) + ( DS / MUR ) ) )", "obj1": 0.68359375, "obj2": 0.2797613906482569}, {"determining": "Max( ( ( MRS * FirstVNF_RAM_Server ) - ( CRS - FirstVNF_CPU ) ),( Max( FirstVNF_RAM_Server,BR ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ) )", "choosing": "( Max( MUR,RCSe ) / Min( ( RCSe - MUR ) ,MUM ) )", "obj1": 0.732421875, "obj2": 0.286520749727268}, {"determining": "( ( ( DDR - FirstVNF_Mem ) + Min( DDR ,ACS ) ) - Min( ( AMS / ( ( FirstVNF_CPU_Server - BR ) / PN ) ) ,Max( FirstVNF_CPU,PN ) ) )", "choosing": "Max( ( MUC - MUC ),( RMSe * Min( Min( ( CS / MUC ) ,( RMSe - MUM ) ) ,DS ) ) )", "obj1": 0.84375, "obj2": 0.13928473778989764}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ARS / FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( MUC ,MLU ) / Max( MUR,RMSe ) ),Max( ( RMSe / RRSe ),( MUC * MUM ) ) )", "obj1": 0.806640625, "obj2": 0.17455858219209644}, {"determining": "( Max( Min( CRS ,ARS ),( PN / FirstVNF_RAM_Server ) ) / ( Min( PN ,CRS ) * ( FirstVNF_Mem * RRS ) ) )", "choosing": "( Min( RCSe ,DS ) - Min( MUC ,RRSe ) )", "obj1": 0.69921875, "obj2": 0.2586852525792248}, {"determining": "( ( ( ACS + ACS ) * ( MDR / CRS ) ) * Min( CRS ,PN ) )", "choosing": "( ( Min( MUR ,RRSe ) * Min( DS ,MUM ) ) - ( ( DS - RCSe ) + ( RCSe - MUM ) ) )", "obj1": 0.716796875, "obj2": 0.28503645404176425}, {"determining": "( ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),( MRS + MDR ) ) * Min( ( ARS * FirstVNF_RAM ) ,( FirstVNF_CPU_Server - PN ) ) ) + ( Max( Max( DDR,DDR ),( RRS * ARS ) ) + Min( FirstVNF_RAM ,PN ) ) )", "choosing": "Min( Max( RCSe,( MLU - MLU ) ) ,( CS - Min( DS ,MUM ) ) )", "obj1": 0.712890625, "obj2": 0.2550797800451164}, {"determining": "( Max( FirstVNF_RAM,MDR ) / ( ( ( CRS + DDR ) + ( ACS * DDR ) ) + Max( Max( Const,MDR ),( MRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM * Min( MLU ,( ( CS * RRSe ) - DS ) ) ) - ( ( ( DS - MUR ) / CS ) + MUM ) )", "obj1": 0.720703125, "obj2": 0.27118190631239747}, {"determining": "Min( Max( ( Max( ARS,AMS ) / Min( PN ,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server + MRS ) * ( DDR / FirstVNF_RAM_Server ) ) ) ,( ( ( MRS + ARS ) + Max( CRS,FirstVNF_RAM ) ) - ( ( ACS * BR ) / Max( FirstVNF_Mem,AMS ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) - ( RRSe / RRSe ) ) - ( Min( RRSe ,MUC ) * ( MLU / CS ) ) ) - ( Min( ( MUC - MLU ) ,( RMSe / DS ) ) - ( Max( MUR,RMSe ) + ( MLU + CS ) ) ) )", "obj1": 0.740234375, "obj2": 0.2725429368314376}, {"determining": "( Min( ( FirstVNF_CPU + DDR ) ,Const ) + ( ARS - RRS ) )", "choosing": "Min( ( RMSe / MUC ) ,( MUM + Max( MUM,Min( CS ,RMSe ) ) ) )", "obj1": 0.693359375, "obj2": 0.27263449760342806}, {"determining": "Max( Max( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) - Min( PN ,FirstVNF_Mem_Server ) ),( ( PN - CRS ) + ( PN / FirstVNF_CPU_Server ) ) ),Max( ( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_Mem + PN ) ),Min( ( ACS * MRS ) ,( FirstVNF_RAM_Server / CRS ) ) ) )", "choosing": "( ( ( ( RRSe + DS ) - ( MUC - RRSe ) ) * Max( ( MUM * CS ),( RCSe + RMSe ) ) ) / Max( Min( Max( MUC,MLU ) ,( MUR * RRSe ) ),( ( MUR - CS ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.744140625, "obj2": 0.2583607002278307}, {"determining": "( ( MDR / AMS ) + ( BR + FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( MUR,MUM ) - ( MUM / RCSe ) ) - Max( Max( DS,RCSe ),( RCSe - MUM ) ) ) * ( Max( Min( RCSe ,MUM ),Max( MUM,MUR ) ) - Max( Max( MUC,MUR ),Max( DS,RCSe ) ) ) )", "obj1": 0.6796875, "obj2": 0.2699529882296873}, {"determining": "( Max( Min( FirstVNF_RAM ,ARS ),FirstVNF_CPU ) / Min( ( FirstVNF_CPU_Server / DDR ) ,DDR ) )", "choosing": "( Min( MUR ,( ( Min( DS ,RCSe ) * MLU ) / MUM ) ) + ( RCSe - MUM ) )", "obj1": 0.7109375, "obj2": 0.27278681868825255}, {"determining": "( ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) - ( Min( Max( ( Const * FirstVNF_Mem_Server ),Min( ( Max( FirstVNF_CPU_Server,( BR - AMS ) ) / ( FirstVNF_RAM_Server + ( FirstVNF_Mem * CRS ) ) ) ,CRS ) ) ,( FirstVNF_CPU / MDR ) ) * ( ( CRS + FirstVNF_CPU_Server ) - Min( Const ,RRS ) ) ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( MLU * RRSe ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RMSe - MLU ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( Min( MLU ,RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.6640625, "obj2": 0.28983228772028274}, {"determining": "Max( Max( ( Max( BR,FirstVNF_Mem ) * Max( Const,FirstVNF_CPU ) ),( ( AMS / FirstVNF_Mem_Server ) / ( CRS * RRS ) ) ),Max( Min( Max( DDR,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / FirstVNF_Mem ) ),( ( MDR - FirstVNF_RAM ) + ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUR ) - ( DS + DS ) ) * ( MUM - MUC ) ) - ( Max( Max( MUM,MUR ),( RCSe - MUC ) ) * ( ( CS * MLU ) + ( MUR + DS ) ) ) )", "obj1": 0.73046875, "obj2": 0.25070619782369535}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( MUC - DS ) / ( ( CS - ( RRSe * MUR ) ) * RMSe ) )", "obj1": 0.720703125, "obj2": 0.1973049146986168}, {"determining": "Max( ( ( ( AMS + MDR ) - Max( Const,BR ) ) + ( ( ACS * MRS ) + ( CRS + BR ) ) ),( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - Min( ARS ,ARS ) ) * ( Min( FirstVNF_CPU ,ARS ) / Min( RRS ,MDR ) ) ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.724609375, "obj2": 0.2770786961467494}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) - ( FirstVNF_RAM * MRS ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.724609375, "obj2": 0.26258859207141605}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 0.732421875, "obj2": 0.2549897268697347}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "Min( Min( Max( Min( Const ,MRS ),Max( DDR,MRS ) ) ,( ( RRS / FirstVNF_CPU_Server ) * ( ACS + CRS ) ) ) ,( ( Max( BR,FirstVNF_CPU ) + ( FirstVNF_Mem_Server / RRS ) ) / ( ( BR + ARS ) + Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Min( Min( ( RRSe / MUR ) ,( MUR * RCSe ) ) ,Min( ( MUM / MLU ) ,( MUR * DS ) ) ),Min( Min( Min( MLU ,DS ) ,Max( RMSe,RCSe ) ) ,Max( Min( RCSe ,MUR ),( RRSe / RRSe ) ) ) )", "obj1": 0.7265625, "obj2": 0.24763362692278673}, {"determining": "Max( Min( RRS ,FirstVNF_RAM_Server ),( DDR - ( ( Const * ( ( MRS + ( MDR / ( CRS * BR ) ) ) - ( MDR * ( ( Const + MDR ) + Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR / MLU ),( Max( Min( Max( Max( MUR,( MUR * ( DS * CS ) ) ),MLU ) ,RRSe ),( RCSe - MLU ) ) - RMSe ) )", "obj1": 0.677734375, "obj2": 0.2739040063874586}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,( FirstVNF_CPU * MRS ) ) * ( ( BR * FirstVNF_Mem_Server ) / ( CRS + ACS ) ) ) / ( ( ( ACS * MDR ) / Max( AMS,FirstVNF_RAM ) ) / ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( DS + ( ( MUC + RCSe ) / MUC ) ) )", "obj1": 0.7578125, "obj2": 0.26376407104528254}, {"determining": "( Max( FirstVNF_RAM,( MRS * AMS ) ) + ( Min( ARS ,AMS ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( CS + CS ) * ( MLU + MUC ) ) ,MUR ) - ( MUR / ( MUC - ( Min( Max( MUM,MUM ) ,MUC ) - RMSe ) ) ) )", "obj1": 0.7421875, "obj2": 0.2830480952135073}, {"determining": "( ( Min( CRS ,MDR ) + ( ( FirstVNF_RAM_Server * MDR ) / Min( Min( FirstVNF_RAM ,AMS ) ,( RRS + ( ( ( FirstVNF_Mem_Server / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( ARS / ACS ) )", "choosing": "( ( ( ( RRSe / CS ) / Min( CS ,RMSe ) ) + ( Min( RCSe ,MUC ) - Max( ( CS + ( ( RCSe / RRSe ) + ( Max( RRSe,MUC ) * Min( MUM ,MUR ) ) ) ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) / ( MUR * MUM ) ) ) )", "obj1": 0.634765625, "obj2": 0.2761918729777568}, {"determining": "( Max( Min( Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ,FirstVNF_Mem_Server ),FirstVNF_Mem ) / ( BR - ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - ( FirstVNF_CPU_Server / ARS ) ) ) )", "choosing": "( ( ( CS - MUM ) + ( ( RMSe / RCSe ) - ( RRSe / CS ) ) ) / Min( Min( DS ,MLU ) ,RRSe ) )", "obj1": 0.693359375, "obj2": 0.28971159331180335}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Max( ( MLU - RMSe ),DS ) )", "obj1": 0.908203125, "obj2": 0.06712906050130855}, {"determining": "( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( MUM / MLU ) )", "obj1": 0.736328125, "obj2": 0.2777970866631804}, {"determining": "( Max( CRS,MRS ) * ( DDR / PN ) )", "choosing": "( Max( ( ( MUR - DS ) * ( MUR + RMSe ) ),( ( MUC + MUC ) + Min( RMSe ,DS ) ) ) * ( ( Min( RMSe ,CS ) + Min( MLU ,RCSe ) ) + Min( ( DS + CS ) ,( CS + RMSe ) ) ) )", "obj1": 0.732421875, "obj2": 0.2779568825786359}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 0.69140625, "obj2": 0.26784266145161506}, {"determining": "( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) / Max( FirstVNF_RAM,MDR ) ) * ( ( FirstVNF_CPU * ACS ) / ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ) - Max( Min( ( BR - FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,MRS ) ),Min( ( ACS * CRS ) ,Min( ACS ,MRS ) ) ) )", "choosing": "Min( ( ( ( MLU - MUC ) - ( MUM + MLU ) ) - ( Min( MUC ,MLU ) / ( MUM - CS ) ) ) ,( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) )", "obj1": 0.677734375, "obj2": 0.28303289102927487}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( ( PN * FirstVNF_CPU_Server ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - RRSe ) ) ),( MUR / DS ) )", "obj1": 0.73828125, "obj2": 0.282447163486036}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) + ( ARS - Const ) ) / Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,Min( DDR ,FirstVNF_Mem ) ) ) ,( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / ( ( BR * MRS ) + ( FirstVNF_RAM * ACS ) ) ) )", "choosing": "( ( Min( RMSe ,( MUM - MLU ) ) + RRSe ) / ( ( MUC / ( DS * MLU ) ) * Min( ( MUC + RMSe ) ,( MUM - MUR ) ) ) )", "obj1": 0.705078125, "obj2": 0.2787646186647089}, {"determining": "Max( Max( MRS,MDR ),( Const * ARS ) )", "choosing": "( Min( Max( ( MLU / RMSe ),( RMSe - MUM ) ) ,( ( RCSe / DS ) - ( MUC + RMSe ) ) ) / ( ( MLU - Max( Max( CS,RMSe ),RMSe ) ) * MLU ) )", "obj1": 0.697265625, "obj2": 0.2736263145836195}, {"determining": "Min( Max( DDR,( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,Max( ( ( ACS / FirstVNF_CPU_Server ) - ( AMS - RRS ) ),Min( ( FirstVNF_Mem_Server / ACS ) ,Min( PN ,AMS ) ) ) )", "choosing": "Max( ( RCSe * MUR ),( ( ( RMSe * RMSe ) * ( CS * CS ) ) / ( ( MUM / MLU ) * Max( RCSe,RMSe ) ) ) )", "obj1": 0.724609375, "obj2": 0.2593458432143863}, {"determining": "( ( FirstVNF_CPU_Server + ( FirstVNF_CPU - Min( ACS ,MDR ) ) ) * Min( ( Const + FirstVNF_RAM ) ,Min( ( Const + MRS ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( ( ( RRSe * DS ) * ( RCSe + MLU ) ),Min( Min( MUM ,MLU ) ,( MLU - MUC ) ) ) ,( ( ( CS + MUM ) / ( DS / DS ) ) * ( ( MLU * MUR ) * ( MLU * MUM ) ) ) )", "obj1": 0.67578125, "obj2": 0.27144475835319615}], "2": [{"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) ) * Min( DS ,RRSe ) )", "obj1": 0.61328125, "obj2": 0.29323194702905536}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,ACS ) ) / Min( FirstVNF_RAM ,DDR ) )", "choosing": "( Min( RCSe ,CS ) * ( RMSe + MLU ) )", "obj1": 0.970703125, "obj2": 0.031291360875071186}, {"determining": "( ( FirstVNF_RAM_Server / Const ) / ( ACS - FirstVNF_RAM ) )", "choosing": "( Min( MUC ,MUC ) * ( MLU + MLU ) )", "obj1": 0.890625, "obj2": 0.10039513764554797}, {"determining": "( Min( FirstVNF_CPU ,ACS ) - ( ARS * Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,RRSe ) ,( RMSe / MUC ) ),( MUM * RCSe ) )", "obj1": 0.697265625, "obj2": 0.22996640040206753}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "Min( ( ( FirstVNF_RAM_Server * ARS ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.916015625, "obj2": 0.07487966753800675}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "Max( Max( Min( ( FirstVNF_CPU / MDR ) ,Min( FirstVNF_RAM ,MDR ) ),( FirstVNF_RAM - FirstVNF_CPU ) ),( BR - FirstVNF_RAM ) )", "choosing": "( Min( Min( RRSe ,MUC ) ,CS ) - ( MUM + ( CS / MUM ) ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Max( ( MLU - RMSe ),DS ) )", "obj1": 0.908203125, "obj2": 0.06712906050130855}, {"determining": "( ( ( FirstVNF_RAM_Server / Const ) / ( ACS - FirstVNF_RAM ) ) / Min( ARS ,ACS ) )", "choosing": "( ( CS * MLU ) - ( MUR * CS ) )", "obj1": 0.81640625, "obj2": 0.150724524509344}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( MUM / MLU ) )", "obj1": 0.90625, "obj2": 0.08918213286685049}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( ( RMSe + CS ) - Max( RRSe,RMSe ) )", "obj1": 0.638671875, "obj2": 0.2686027990682632}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,BR ) ,( FirstVNF_CPU * MRS ) ) * ( ( BR * FirstVNF_Mem_Server ) / ( CRS + ACS ) ) ) / ( ( ( ACS * MDR ) / Max( AMS,FirstVNF_RAM ) ) / ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe / RRSe ) ,( DS + ( ( MUC + RCSe ) / MUC ) ) )", "obj1": 0.64453125, "obj2": 0.25064064803050184}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.736328125, "obj2": 0.17103897755505743}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,ACS ) ) / ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,( MDR + BR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,CS ) * ( RMSe + Min( ( CS + MUM ) ,( MUR * MUM ) ) ) )", "obj1": 0.978515625, "obj2": 0.020010188610172026}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,BR ) )", "choosing": "( ( RRSe - DS ) - ( MUR + RMSe ) )", "obj1": 0.986328125, "obj2": 0.013651486153939045}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU_Server,MRS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - ( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.6171875, "obj2": 0.2830077439248941}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / Min( FirstVNF_RAM ,DDR ) )", "choosing": "( ( MLU - MUR ) / ( MLU + RMSe ) )", "obj1": 0.619140625, "obj2": 0.2747065436355846}, {"determining": "( Max( AMS,ARS ) - Max( Max( Max( FirstVNF_CPU_Server,AMS ),( MDR * FirstVNF_CPU ) ),RRS ) )", "choosing": "Min( Max( ( ( RRSe * DS ) * ( RCSe + MLU ) ),Min( Min( MUM ,MLU ) ,( MLU - MUC ) ) ) ,( ( ( CS + MUM ) / ( DS / DS ) ) * ( ( MLU * MUR ) * ( MLU * MUM ) ) ) )", "obj1": 0.818359375, "obj2": 0.14705726994285095}, {"determining": "( ( MDR / AMS ) + ( BR + FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.6328125, "obj2": 0.2732655486392252}, {"determining": "( Max( MDR,ARS ) + ( Const / ( ACS / ( BR * RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( RRSe * DS ) ) * Max( Max( RCSe,MUR ),RMSe ) )", "obj1": 0.646484375, "obj2": 0.2433950048551128}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}], "3": [{"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) ) * Min( DS ,RRSe ) )", "obj1": 0.61328125, "obj2": 0.29323194702905536}, {"determining": "( ( BR - ( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) ) ) + ( ( MDR + PN ) * RRS ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) / ( MUC * MUR ) ) )", "obj1": 0.853515625, "obj2": 0.09626691664564391}, {"determining": "( ( BR - ARS ) + ( DDR * ARS ) )", "choosing": "Max( ( MUR * CS ),( CS / ( CS / DS ) ) )", "obj1": 0.955078125, "obj2": 0.05090599457110341}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( MUM / MLU ) )", "obj1": 0.90625, "obj2": 0.08918213286685049}, {"determining": "Min( ( ( FirstVNF_RAM_Server * ARS ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.916015625, "obj2": 0.07487966753800675}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( ( FirstVNF_RAM_Server / Const ) / ( ACS - FirstVNF_RAM ) ) / Min( ARS ,ACS ) )", "choosing": "( ( CS * MLU ) - ( MUR * CS ) )", "obj1": 0.81640625, "obj2": 0.150724524509344}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,ACS ) ) / Min( FirstVNF_RAM ,DDR ) )", "choosing": "( Min( RCSe ,CS ) * ( RMSe + MLU ) )", "obj1": 0.970703125, "obj2": 0.031291360875071186}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "( Min( ACS ,FirstVNF_CPU_Server ) + ( MRS / MRS ) )", "choosing": "( Min( MUC ,( Min( RMSe ,MLU ) / Max( MUM,CS ) ) ) - Max( ( Min( MUC ,MUC ) - ( CS / RCSe ) ),( CS / DS ) ) )", "obj1": 0.6953125, "obj2": 0.23808543322373196}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( CRS + Const ) * Max( DDR,AMS ) )", "choosing": "( Max( MUC,( MUR - Min( CS ,( RCSe - DS ) ) ) ) + Min( ( MUC / RMSe ) ,MUR ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM,ACS ) ) / ( ( FirstVNF_CPU_Server / Max( FirstVNF_RAM_Server,( MDR + BR ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,CS ) * ( RMSe + Min( ( CS + MUM ) ,( MUR * MUM ) ) ) )", "obj1": 0.978515625, "obj2": 0.020010188610172026}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Max( ( MLU - RMSe ),DS ) )", "obj1": 0.908203125, "obj2": 0.06712906050130855}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Min( Max( Max( AMS,FirstVNF_RAM ),( Min( Max( FirstVNF_CPU,PN ) ,( DDR / ACS ) ) - MRS ) ) ,( DDR / ACS ) ) - MRS ) )", "choosing": "( ( RMSe + ( ( RMSe + CS ) - MUC ) ) - MUC )", "obj1": 0.638671875, "obj2": 0.2678519895474422}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) / Min( FirstVNF_RAM ,DDR ) )", "choosing": "( ( MLU - MUR ) / ( MLU + RMSe ) )", "obj1": 0.619140625, "obj2": 0.2747065436355846}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU_Server,MRS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - ( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.6171875, "obj2": 0.2830077439248941}, {"determining": "Max( Max( AMS,MRS ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * ( RCSe * RMSe ) ) )", "obj1": 0.630859375, "obj2": 0.26902675495695555}, {"determining": "( Max( AMS,ARS ) - Max( Max( Max( FirstVNF_CPU_Server,AMS ),( MDR * FirstVNF_CPU ) ),RRS ) )", "choosing": "Min( Max( ( ( RRSe * DS ) * ( RCSe + MLU ) ),Min( Min( MUM ,MLU ) ,( MLU - MUC ) ) ) ,( ( ( CS + MUM ) / ( DS / DS ) ) * ( ( MLU * MUR ) * ( MLU * MUM ) ) ) )", "obj1": 0.818359375, "obj2": 0.14705726994285095}, {"determining": "( Min( FirstVNF_CPU ,ACS ) - ( ARS * Min( ( FirstVNF_RAM / FirstVNF_RAM_Server ) ,Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Min( Min( RMSe ,RRSe ) ,( RMSe / MUC ) ),( MUM * RCSe ) )", "obj1": 0.697265625, "obj2": 0.22996640040206753}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "( Max( MDR,ARS ) + ( Const / ( ACS / ( BR * RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( RRSe * DS ) ) * Max( Max( RCSe,MUR ),RMSe ) )", "obj1": 0.646484375, "obj2": 0.2433950048551128}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( PN + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( ( MUR * CS ),RMSe ) )", "obj1": 0.998046875, "obj2": 0.0016070516371404179}, {"determining": "Max( Max( Min( ( FirstVNF_CPU / MDR ) ,Min( FirstVNF_RAM ,MDR ) ),( FirstVNF_RAM - FirstVNF_CPU ) ),( BR - FirstVNF_RAM ) )", "choosing": "( Min( Min( RRSe ,MUC ) ,CS ) - ( MUM + ( CS / MUM ) ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( MUC / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,Min( RRS ,Min( Const ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) + RRS ) ,Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( Min( Max( MUR,MLU ) ,( MLU + DS ) ) + ( Max( RRSe,DS ) / RRSe ) ) - RRSe ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,BR ) ,( RRS - RRS ) ) / ( Max( ( AMS * FirstVNF_RAM ),( FirstVNF_Mem / ACS ) ) * ( PN * DDR ) ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( Max( Min( Min( ( RRSe - MUC ) ,MLU ) ,RCSe ),Min( RMSe ,RRSe ) ) - ( ( Min( MLU ,MUR ) - ( MUM + ( Max( RMSe,RMSe ) + RMSe ) ) ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,BR ) ,( ( AMS * FirstVNF_Mem_Server ) - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( Max( ( MUC - MUC ),( MUR - RRSe ) ) - Max( ( RMSe + MUM ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( ARS - AMS ) ) / ( MRS - MRS ) )", "choosing": "( ( MLU / MUR ) - Max( ( ( MUC * MLU ) - RRSe ),( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( FirstVNF_CPU ,BR ) ,Max( MRS,( ( CRS * ( FirstVNF_Mem * AMS ) ) - MDR ) ) ) ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUC * RRSe ),( MUC - ( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( MDR - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( Max( ( MUR / DS ),( MUR / MUC ) ) / ( DS * MUC ) ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + Const ) ,( Min( ( AMS * MDR ) ,ACS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM - CS ) / Max( MLU,( Max( CS,( RRSe - RRSe ) ) - Max( CS,RMSe ) ) ) ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) - ( AMS * Min( ( FirstVNF_CPU_Server - Min( MDR ,CRS ) ) ,Min( CRS ,CRS ) ) ) ) + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,CRS ) )", "choosing": "Max( ( ( MUR + ( DS - ( ( Min( MLU ,( MLU * MLU ) ) + Max( RMSe,MUR ) ) * ( Min( CS ,Max( MLU,CS ) ) - ( MUR + CS ) ) ) ) ) - MUC ),( ( RMSe / CS ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ) ,MDR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - ( MUC / ( RMSe + MUM ) ) ) + Min( RRSe ,( ( MUR - DS ) / ( CS / RRSe ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_CPU_Server ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( RMSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,( ( RRS / Max( ACS,( ( ( ARS - FirstVNF_RAM_Server ) / BR ) / FirstVNF_RAM_Server ) ) ) + CRS ) ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( CS ,MUM ) - ( Max( ( RCSe + MUM ),( ( MUC * MUR ) / MLU ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) + Max( DS,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * MRS ) - ( PN - MRS ) ) * MRS ) - ( PN - MRS ) )", "choosing": "Min( Min( Min( MUC ,MUR ) ,( RRSe * RMSe ) ) ,( RRSe * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) ) * Min( DS ,RRSe ) )", "obj1": 0.61328125, "obj2": 0.29323194702905536}, {"determining": "( ( BR - ( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) ) ) + ( ( MDR + PN ) * RRS ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) / ( MUC * MUR ) ) )", "obj1": 0.853515625, "obj2": 0.09626691664564391}, {"determining": "( ( BR - ARS ) + ( DDR * ARS ) )", "choosing": "Max( ( MUR * CS ),( CS / ( CS / DS ) ) )", "obj1": 0.955078125, "obj2": 0.05090599457110341}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( MUM / MLU ) )", "obj1": 0.90625, "obj2": 0.08918213286685049}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( ( FirstVNF_RAM_Server / Const ) / ( ACS - FirstVNF_RAM ) ) / Min( ARS ,ACS ) )", "choosing": "( ( CS * MLU ) - ( MUR * CS ) )", "obj1": 0.81640625, "obj2": 0.150724524509344}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( CRS + Const ) * Max( DDR,AMS ) )", "choosing": "( Max( MUC,( MUR - Min( CS ,( RCSe - DS ) ) ) ) + Min( ( MUC / RMSe ) ,MUR ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "Min( ( ( FirstVNF_RAM_Server * ARS ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.916015625, "obj2": 0.07487966753800675}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( ( ( MRS * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( Min( ( MUR * MUR ) ,MUM ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 0.921875, "obj2": 0.0641005239156702}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU_Server,MRS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - ( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.6171875, "obj2": 0.2830077439248941}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Min( Max( FirstVNF_CPU,PN ) ,( DDR / ACS ) ) - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "( Max( AMS,ARS ) - Max( Max( Max( FirstVNF_CPU_Server,AMS ),( MDR * FirstVNF_CPU ) ),RRS ) )", "choosing": "Min( Max( ( ( RRSe * DS ) * ( RCSe + MLU ) ),Min( Min( MUM ,MLU ) ,( MLU - MUC ) ) ) ,( ( ( CS + MUM ) / ( DS / DS ) ) * ( ( MLU * MUR ) * ( MLU * MUM ) ) ) )", "obj1": 0.818359375, "obj2": 0.14705726994285095}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Max( ( MLU - RMSe ),DS ) )", "obj1": 0.908203125, "obj2": 0.06712906050130855}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 0.921875, "obj2": 0.0641005239156702}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( AMS / ( ARS * Max( BR,MRS ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( RCSe - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.01585846295486032}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( Min( Min( ( MUM / Max( MLU,( Max( MUC,( MLU + RCSe ) ) * Min( MUM ,Max( CS,MUC ) ) ) ) ) ,( MLU * MUC ) ) ,CS ) + ( MUC * RRSe ) )", "obj1": 0.962890625, "obj2": 0.01585846295486032}, {"determining": "( PN + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( ( MUR * CS ),RMSe ) )", "obj1": 0.998046875, "obj2": 0.0016070516371404179}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( Max( ( ( BR + Max( PN,( ( CRS * FirstVNF_RAM ) / FirstVNF_CPU ) ) ) / ACS ),FirstVNF_Mem ) * ( PN - PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ( PN + PN ) / ( ARS * Max( BR,MRS ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( RCSe - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.9609375, "obj2": 0.016651619514618906}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( MUC / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,Min( RRS ,Min( Const ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) + RRS ) ,Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( Min( Max( MUR,MLU ) ,( MLU + DS ) ) + ( Max( RRSe,DS ) / RRSe ) ) - RRSe ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,BR ) ,( RRS - RRS ) ) / ( Max( ( AMS * FirstVNF_RAM ),( FirstVNF_Mem / ACS ) ) * ( PN * DDR ) ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( Max( Min( Min( ( RRSe - MUC ) ,MLU ) ,RCSe ),Min( RMSe ,RRSe ) ) - ( ( Min( MLU ,MUR ) - ( MUM + ( Max( RMSe,RMSe ) + RMSe ) ) ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,BR ) ,( ( AMS * FirstVNF_Mem_Server ) - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( Max( ( MUC - MUC ),( MUR - RRSe ) ) - Max( ( RMSe + MUM ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( ARS - AMS ) ) / ( MRS - MRS ) )", "choosing": "( ( MLU / MUR ) - Max( ( ( MUC * MLU ) - RRSe ),( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( FirstVNF_CPU ,BR ) ,Max( MRS,( ( CRS * ( FirstVNF_Mem * AMS ) ) - MDR ) ) ) ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUC * RRSe ),( MUC - ( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( MDR - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( Max( ( MUR / DS ),( MUR / MUC ) ) / ( DS * MUC ) ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + Const ) ,( Min( ( AMS * MDR ) ,ACS ) * FirstVNF_RAM ) )", "choosing": "Max( ( ( MUM - CS ) / Max( MLU,( Max( CS,( RRSe - RRSe ) ) - Max( CS,RMSe ) ) ) ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) - ( AMS * Min( ( FirstVNF_CPU_Server - Min( MDR ,CRS ) ) ,Min( CRS ,CRS ) ) ) ) + FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,CRS ) )", "choosing": "Max( ( ( MUR + ( DS - ( ( Min( MLU ,( MLU * MLU ) ) + Max( RMSe,MUR ) ) * ( Min( CS ,Max( MLU,CS ) ) - ( MUR + CS ) ) ) ) ) - MUC ),( ( RMSe / CS ) / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) ) * Min( DS ,RRSe ) )", "obj1": 0.61328125, "obj2": 0.29323194702905536}, {"determining": "( ( BR - ( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) ) ) + ( ( MDR + PN ) * RRS ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) / ( MUC * MUR ) ) )", "obj1": 0.853515625, "obj2": 0.09626691664564391}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "Max( ( RMSe * MLU ),( MUM / MLU ) )", "obj1": 0.90625, "obj2": 0.08918213286685049}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( ( FirstVNF_RAM_Server / Const ) / ( ACS - FirstVNF_RAM ) ) / Min( ARS ,ACS ) )", "choosing": "( ( CS * MLU ) - ( MUR * CS ) )", "obj1": 0.81640625, "obj2": 0.150724524509344}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( ( ( MRS * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( Min( ( MUR * MUR ) ,MUM ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 0.921875, "obj2": 0.0641005239156702}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( CRS + Const ) * Max( DDR,AMS ) )", "choosing": "( Max( MUC,( MUR - Min( CS ,( RCSe - DS ) ) ) ) + Min( ( MUC / RMSe ) ,MUR ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "Min( ( ( FirstVNF_RAM_Server * ARS ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.916015625, "obj2": 0.07487966753800675}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU_Server,MRS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - ( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.6171875, "obj2": 0.2830077439248941}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 0.921875, "obj2": 0.0641005239156702}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "( Max( AMS,ARS ) - Max( Max( Max( FirstVNF_CPU_Server,AMS ),( MDR * FirstVNF_CPU ) ),RRS ) )", "choosing": "Min( Max( ( ( RRSe * DS ) * ( RCSe + MLU ) ),Min( Min( MUM ,MLU ) ,( MLU - MUC ) ) ) ,( ( ( CS + MUM ) / ( DS / DS ) ) * ( ( MLU * MUR ) * ( MLU * MUM ) ) ) )", "obj1": 0.818359375, "obj2": 0.14705726994285095}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Min( Max( FirstVNF_CPU,PN ) ,( DDR / ACS ) ) - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.65625, "obj2": 0.23870758421480912}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Max( ( MLU - RMSe ),DS ) )", "obj1": 0.908203125, "obj2": 0.06712906050130855}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( Min( Min( ( MUM / Max( MLU,( Max( MUC,( MLU + RCSe ) ) * Min( MUM ,Max( CS,MUC ) ) ) ) ) ,( MLU * MUC ) ) ,CS ) + ( MUC * RRSe ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "( PN + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( ( MUR * CS ),RMSe ) )", "obj1": 0.998046875, "obj2": 0.0016070516371404179}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "( ( CRS * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( MUC / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,Min( RRS ,Min( Const ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) + RRS ) ,Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( Min( Max( MUR,MLU ) ,( MLU + DS ) ) + ( Max( RRSe,DS ) / RRSe ) ) - RRSe ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,BR ) ,( RRS - RRS ) ) / ( Max( ( AMS * FirstVNF_RAM ),( FirstVNF_Mem / ACS ) ) * ( PN * DDR ) ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( Max( Min( Min( ( RRSe - MUC ) ,MLU ) ,RCSe ),Min( RMSe ,RRSe ) ) - ( ( Min( MLU ,MUR ) - ( MUM + ( Max( RMSe,RMSe ) + RMSe ) ) ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,BR ) ,( ( AMS * FirstVNF_Mem_Server ) - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( Max( ( MUC - MUC ),( MUR - RRSe ) ) - Max( ( RMSe + MUM ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( ARS - AMS ) ) / ( MRS - MRS ) )", "choosing": "( ( MLU / MUR ) - Max( ( ( MUC * MLU ) - RRSe ),( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( FirstVNF_CPU ,BR ) ,Max( MRS,( ( CRS * ( FirstVNF_Mem * AMS ) ) - MDR ) ) ) ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUC * RRSe ),( MUC - ( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) ) * Min( DS ,RRSe ) )", "obj1": 0.61328125, "obj2": 0.29323194702905536}, {"determining": "( Max( ( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( Min( MUM ,RMSe ) - ( MLU / MUR ) )", "obj1": 0.802734375, "obj2": 0.14593095874736436}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * CRS ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( ( MUM - RCSe ) - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.935546875, "obj2": 0.03190766233906159}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "( ( ( Max( MDR,PN ) / Max( RRS,BR ) ) * Min( Min( MDR ,DDR ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM / ACS ) - Max( ARS,DDR ) ) / Min( ( DDR - FirstVNF_RAM ) ,( ARS + ARS ) ) ) )", "choosing": "( Min( CS ,RRSe ) - Max( ( MLU - RMSe ),DS ) )", "obj1": 0.908203125, "obj2": 0.06712906050130855}, {"determining": "( ( BR - ( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) ) ) + ( ( MDR + PN ) * RRS ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) / ( MUC * MUR ) ) )", "obj1": 0.853515625, "obj2": 0.09626691664564391}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "( ( ( MRS * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( Min( ( MUR * MUR ) ,MUM ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 0.921875, "obj2": 0.0641005239156702}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU_Server,MRS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - ( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.6171875, "obj2": 0.2830077439248941}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "( ( CRS + Const ) * Max( DDR,AMS ) )", "choosing": "( Max( MUC,( MUR - Min( CS ,( RCSe - DS ) ) ) ) + Min( ( MUC / RMSe ) ,MUR ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "Min( ( ( FirstVNF_RAM_Server * ARS ) - Max( RRS,FirstVNF_RAM ) ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.916015625, "obj2": 0.07487966753800675}, {"determining": "( Max( ( ( ( CRS * FirstVNF_RAM ) + Max( PN,( ( CRS * FirstVNF_RAM ) / FirstVNF_CPU ) ) ) / ACS ),FirstVNF_Mem ) * ( PN - PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( DS - CS ) ) ) )", "obj1": 0.69921875, "obj2": 0.2234958513984278}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 0.921875, "obj2": 0.0641005239156702}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "( PN + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( ( MUR * CS ),RMSe ) )", "obj1": 0.998046875, "obj2": 0.0016070516371404179}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( Max( ( ( BR + Max( PN,( ( CRS * FirstVNF_RAM ) / FirstVNF_CPU ) ) ) / ACS ),FirstVNF_Mem ) * ( PN - PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( MUC / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,Min( RRS ,Min( Const ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) + RRS ) ,Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( Min( Max( MUR,MLU ) ,( MLU + DS ) ) + ( Max( RRSe,DS ) / RRSe ) ) - RRSe ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( CRS,BR ) ,( RRS - RRS ) ) / ( Max( ( AMS * FirstVNF_RAM ),( FirstVNF_Mem / ACS ) ) * ( PN * DDR ) ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( Max( Min( Min( ( RRSe - MUC ) ,MLU ) ,RCSe ),Min( RMSe ,RRSe ) ) - ( ( Min( MLU ,MUR ) - ( MUM + ( Max( RMSe,RMSe ) + RMSe ) ) ) - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ACS ,BR ) ,( ( AMS * FirstVNF_Mem_Server ) - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( Max( ( MUC - MUC ),( MUR - RRSe ) ) - Max( ( RMSe + MUM ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( ARS - AMS ) ) / ( MRS - MRS ) )", "choosing": "( ( MLU / MUR ) - Max( ( ( MUC * MLU ) - RRSe ),( MLU - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( ( RRS + PN ) / ( Const + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( MUC + MUC ) / ( MLU / MLU ) ) ,( ( RRSe * DS ) - Max( MLU,MLU ) ) ) * Min( DS ,RRSe ) )", "obj1": 0.61328125, "obj2": 0.29323194702905536}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( ( ( ( MLU * RRSe ) * ( MUC + CS ) ) + Min( ( RMSe * MUM ) ,MLU ) ) + ( MUC / MLU ) ) ,RMSe ) ) / DS ) )", "obj1": 0.876953125, "obj2": 0.05865929969664086}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * CRS ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( ( MUM - RCSe ) - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.935546875, "obj2": 0.03190766233906159}, {"determining": "( Max( ( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( Min( MUM ,RMSe ) - ( MLU / MUR ) )", "obj1": 0.802734375, "obj2": 0.14593095874736436}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( ( BR - ( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) ) ) + ( ( MDR + PN ) * RRS ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) / ( MUC * MUR ) ) )", "obj1": 0.853515625, "obj2": 0.09626691664564391}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( Min( ( Min( PN ,RRS ) * ( BR - FirstVNF_RAM_Server ) ) ,( Max( FirstVNF_CPU_Server,MRS ) / ( FirstVNF_CPU + FirstVNF_RAM ) ) ) - ( Min( ( ACS - BR ) ,( ARS - FirstVNF_RAM ) ) - ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( CRS ,PN ) ) ) )", "choosing": "Max( ( RMSe / ( CS + ( DS - ( ( ( MUM - DS ) - Min( RMSe ,RRSe ) ) - Max( Max( MLU,RRSe ),( MLU - MUC ) ) ) ) ) ),( MUR / DS ) )", "obj1": 0.6171875, "obj2": 0.2830077439248941}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( RRS,AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.85546875, "obj2": 0.07923709229043419}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),FirstVNF_RAM_Server ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( Min( ( RMSe * MUM ) ,MLU ) * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.865234375, "obj2": 0.06503749564743994}, {"determining": "( ( CRS + Const ) * Max( DDR,AMS ) )", "choosing": "( Max( MUC,( MUR - Min( CS ,( RCSe - DS ) ) ) ) + Min( ( MUC / RMSe ) ,MUR ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "( Max( ( ( ( CRS * FirstVNF_RAM ) + Max( PN,( ( CRS * FirstVNF_RAM ) / FirstVNF_CPU ) ) ) / ACS ),FirstVNF_Mem ) * ( PN - PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( DS - CS ) ) ) )", "obj1": 0.69921875, "obj2": 0.2234958513984278}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_Mem_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( Max( MUM,MUC ) ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.869140625, "obj2": 0.06253433622892107}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "( PN + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( ( MUR * CS ),RMSe ) )", "obj1": 0.998046875, "obj2": 0.0016070516371404179}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( Max( ( ( BR + Max( PN,( ( CRS * FirstVNF_RAM ) / FirstVNF_CPU ) ) ) / ACS ),FirstVNF_Mem ) * ( PN - PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.701171875, "obj2": 0.22210216116124368}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( MUC / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) / Min( Const ,ARS ) )", "choosing": "( ( MLU / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,Min( RRS ,Min( Const ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) + RRS ) ,Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( Min( Max( MUR,MLU ) ,( MLU + DS ) ) + ( Max( RRSe,DS ) / RRSe ) ) - RRSe ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( Const ,( ( ( MDR / DDR ) / FirstVNF_RAM ) * ( MDR - ( ACS + RRS ) ) ) ) )", "choosing": "( Max( ( RRSe * MLU ),MLU ) - ( MUR / MUC ) )", "obj1": 0.61328125, "obj2": 0.2765869057990941}, {"determining": "( Max( ( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( Min( MUM ,RMSe ) - ( MLU / MUR ) )", "obj1": 0.802734375, "obj2": 0.14593095874736436}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( BR - ( Max( RRS,FirstVNF_RAM ) + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) ) ) + ( ( MDR + PN ) * RRS ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( MUR + ( MUC / MLU ) ) ,RMSe ) ) / ( MUC * MUR ) ) )", "obj1": 0.853515625, "obj2": 0.09626691664564391}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( BR - ARS ) + Min( AMS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( Max( ( MUR - ( MLU * MUM ) ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) * CS ),( CS / DS ) )", "obj1": 0.6953125, "obj2": 0.22037376457511879}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * CRS ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( ( MUM - RCSe ) - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.935546875, "obj2": 0.03190766233906159}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) )", "obj1": 0.865234375, "obj2": 0.05911849682829069}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( MRS - Max( DDR,FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.880859375, "obj2": 0.05306650015156247}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,AMS ) ) ) - ( Min( ( AMS - BR ) ,ARS ) * BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),( ( Max( CS,( CS * ( MLU / ( MUM + RCSe ) ) ) ) * ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( RRS,AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.85546875, "obj2": 0.07923709229043419}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( BR / AMS ) / Min( ARS ,Const ) ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + ( DS * MUR ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.859375, "obj2": 0.07300497416279324}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR * CS ),( ( RRSe / Min( ( ( ( ( MLU * RRSe ) * ( MUC + CS ) ) + Min( ( RMSe * MUM ) ,MLU ) ) + ( MUC / MLU ) ) ,RMSe ) ) / DS ) )", "obj1": 0.876953125, "obj2": 0.05865929969664086}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "( Max( Min( MRS ,CRS ),( Const + MDR ) ) - ( Min( RRS ,CRS ) + ( ARS / FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MLU - MLU ) ,Max( DS,MUM ) ) ,Max( Max( DS,MUR ),( MLU + MUR ) ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "( PN + ( ( MDR - ( Max( ARS,( FirstVNF_CPU / ACS ) ) / FirstVNF_CPU ) ) - Const ) )", "choosing": "( Max( ( ( MUC * MUR ) - CS ),DS ) - Max( ( MUR * CS ),RMSe ) )", "obj1": 0.998046875, "obj2": 0.0016070516371404179}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "Min( ( Min( ACS ,Min( RRS ,Min( Const ,Min( FirstVNF_CPU_Server ,BR ) ) ) ) + RRS ) ,Min( Min( MRS ,FirstVNF_RAM ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MUR ,RRSe ),Min( ( ( Min( Max( MUR,MLU ) ,( MLU + DS ) ) + ( Max( RRSe,DS ) / RRSe ) ) - RRSe ) ,DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( ( MDR * FirstVNF_RAM_Server ) - Max( AMS,( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) - ( MUR + RMSe ) )", "obj1": 0.994140625, "obj2": 0.005657954773866504}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),( ( Const / ( ( ACS - MRS ) * ARS ) ) + ( AMS / ( Min( BR ,MDR ) / Max( FirstVNF_CPU_Server,CRS ) ) ) ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / ( RMSe * MLU ) ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - ( RMSe * RMSe ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( Const ,CRS ),( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ( PN / RRS ) ) ) * ( Min( ( BR - FirstVNF_Mem ) ,Min( MRS ,FirstVNF_CPU ) ) / Min( ( MRS - RRS ) ,( ARS * CRS ) ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( ( MUM - RRSe ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU ,BR ) ,Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( MUC / MUR ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( Const ,( ( ( MDR / DDR ) / FirstVNF_RAM ) * ( MDR - ( ACS + RRS ) ) ) ) )", "choosing": "( Max( ( RRSe * MLU ),MLU ) - ( MUR / MUC ) )", "obj1": 0.61328125, "obj2": 0.2765869057990941}, {"determining": "( Max( ( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( FirstVNF_Mem / ACS ) ),FirstVNF_RAM ) - ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( Min( MUM ,RMSe ) - ( MLU / MUR ) )", "obj1": 0.802734375, "obj2": 0.14593095874736436}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - ( ( MUC - MUR ) - Min( MUR ,MUM ) ) ) ) ,( DS * MUC ) )", "obj1": 0.837890625, "obj2": 0.115539532042256}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( DDR,FirstVNF_Mem_Server ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) )", "obj1": 0.849609375, "obj2": 0.08435171277307849}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( ( BR - ARS ) + Min( AMS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( Max( ( MUR - ( MLU * MUM ) ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) * CS ),( CS / DS ) )", "obj1": 0.6953125, "obj2": 0.22037376457511879}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU / ( ( CS - RMSe ) - Max( MUM,RRSe ) ) ) ,( DS * MUC ) )", "obj1": 0.822265625, "obj2": 0.12227946409425673}, {"determining": "Min( ( ( ( DDR - FirstVNF_CPU_Server ) / ( BR - ACS ) ) + ( Max( ACS,MDR ) - ( FirstVNF_RAM + MRS ) ) ) ,( ( ( FirstVNF_RAM_Server / MDR ) + ( CRS - RRS ) ) * ( Max( ARS,RRS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Max( ( ( ( RRSe * MLU ) / ( MUM * MUC ) ) / ( ( RMSe - MLU ) - Min( MLU ,MUM ) ) ),( ( ( MUC - MUR ) - Min( MUR ,MUM ) ) / ( Max( DS,MUC ) - ( DS * RRSe ) ) ) )", "obj1": 0.826171875, "obj2": 0.13381184932313525}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) )", "obj1": 0.865234375, "obj2": 0.05911849682829069}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "Min( Min( Min( ( FirstVNF_RAM / ( Max( ( ( MRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ,ARS ) ,BR ) ,( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( Max( DS,MLU ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( DS + MLU ) ) / RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( BR / AMS ) / Min( ARS ,Const ) ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + ( DS * MUR ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.859375, "obj2": 0.07300497416279324}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( MRS - Max( DDR,FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.880859375, "obj2": 0.05306650015156247}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - ( RCSe / MUR ) )", "obj1": 0.91015625, "obj2": 0.03862258765367208}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( FirstVNF_RAM + RRS ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.876953125, "obj2": 0.05363990596828219}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * CRS ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( ( MUM - RCSe ) - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.935546875, "obj2": 0.03190766233906159}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe / RMSe ),( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) / MUR ) / ( MLU * RCSe ) ) )", "obj1": 0.9921875, "obj2": 0.0037217381531580544}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( RRS,AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.85546875, "obj2": 0.07923709229043419}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,AMS ) ) ) - ( Min( ( AMS - BR ) ,ARS ) * BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),( ( Max( CS,( CS * ( MLU / ( MUM + RCSe ) ) ) ) * ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "Min( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( Max( ( RCSe / RMSe ),( ( RCSe / MUR ) / ( MLU * RCSe ) ) ) - RRSe ),( MUC - MLU ) ) )", "obj1": 0.904296875, "obj2": 0.04087740081797006}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.07599228636008039}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - ( MUC / ( RMSe + MUM ) ) ) + Min( RRSe ,( ( MUR - DS ) + ( RRSe - DS ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ) ,MDR ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - ( MUC / ( RMSe + MUM ) ) ) + Min( RRSe ,( ( MUR - DS ) / ( CS / RRSe ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const / ( ( Min( FirstVNF_Mem ,Min( ARS ,RRS ) ) * ( FirstVNF_Mem / Min( DDR ,PN ) ) ) - MDR ) ) ,( CRS * Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - MUM ) + ( ( ( RRSe * RMSe ) - Min( MUM ,MLU ) ) / ( ( RCSe - CS ) * ( RRSe / RRSe ) ) ) ) - Min( ( MLU / MUM ) ,( CS * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "( Min( ( Min( CS ,( ( ( MLU * ( CS * DS ) ) * MUM ) * DS ) ) * Max( MUR,MLU ) ) ,( Min( RMSe ,MLU ) - ( MUR + MUC ) ) ) - Min( ( Min( RRSe ,MUC ) - Max( RRSe,MLU ) ) ,( ( RRSe / MUC ) * Max( RCSe,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( RRS + CRS ) * ( ( RRS - BR ) - PN ) )", "choosing": "Max( Max( ( RMSe + DS ),( ( MUR - MUR ) * Max( RCSe,( CS - CS ) ) ) ),( ( RMSe + RRSe ) / ( ( DS + MUC ) * ( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( Const ,( ( ( MDR / DDR ) / FirstVNF_RAM ) * ( MDR - ( ACS + RRS ) ) ) ) )", "choosing": "( Max( ( RRSe * MLU ),MLU ) - ( MUR / MUC ) )", "obj1": 0.61328125, "obj2": 0.2765869057990941}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( ( FirstVNF_RAM_Server * MDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( RMSe * Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( RCSe,CS ) ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.794921875, "obj2": 0.10706427983020464}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( RCSe,CS ) ) )", "obj1": 0.8359375, "obj2": 0.08473378577412397}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( ( BR - ARS ) + Min( AMS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( Max( ( MUR - ( MLU * MUM ) ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) * CS ),( CS / DS ) )", "obj1": 0.6953125, "obj2": 0.22037376457511879}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.845703125, "obj2": 0.06929310261129155}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.841796875, "obj2": 0.08318721773610084}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - ( RCSe / MUR ) )", "obj1": 0.91015625, "obj2": 0.03862258765367208}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server * MDR ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ) ) )", "obj1": 0.892578125, "obj2": 0.047969104697401295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( MRS - Max( DDR,FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.880859375, "obj2": 0.05306650015156247}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( FirstVNF_RAM_Server,RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.927734375, "obj2": 0.03042227018479495}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.06393653214685907}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe / RMSe ),( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) / MUR ) / ( MLU * RCSe ) ) )", "obj1": 0.9921875, "obj2": 0.0037217381531580544}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( ( MDR / FirstVNF_Mem_Server ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( ( ( MUC - DS ) / ( MLU / MUM ) ) / ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.853515625, "obj2": 0.0661783929924934}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) )", "obj1": 0.865234375, "obj2": 0.05911849682829069}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( FirstVNF_RAM_Server,RRS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) + Min( MUM ,( Min( ( Max( DS,( MUC - MLU ) ) * RRSe ) ,( CS - ( ( RRSe * RMSe ) - MLU ) ) ) * MUC ) ) ) - Max( ( MLU - Max( MUM,MUC ) ),( MUR - RRSe ) ) )", "obj1": 0.875, "obj2": 0.05700664068418467}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / BR ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + ( ( RCSe / RRSe ) + ( DS * Min( MUM ,MUR ) ) ) ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 0.623046875, "obj2": 0.2691646353708437}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "Min( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( Max( ( RCSe / RMSe ),( ( RCSe / MUR ) / ( MLU * RCSe ) ) ) - RRSe ),( MUC - MLU ) ) )", "obj1": 0.904296875, "obj2": 0.04087740081797006}, {"determining": "Min( Min( Min( ( FirstVNF_RAM / ( Max( ( ( MRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ),FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ,ARS ) ,BR ) ,( ( Max( ACS,FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( Max( DS,MLU ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( DS + MLU ) ) / RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "Min( Min( BR ,Min( RRS ,FirstVNF_CPU_Server ) ) ,( DDR - ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ARS + AMS ) ) ) ) ) )", "choosing": "Max( ( ( ( DS * ( Max( RCSe,RMSe ) - MUR ) ) + ( DS + ( DS / CS ) ) ) - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * MUC ) ),Max( ( ( DS + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( MUM / Max( MUM,RMSe ) ) + ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( FirstVNF_RAM + RRS ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.876953125, "obj2": 0.05363990596828219}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,AMS ) ) ) - ( Min( ( AMS - BR ) ,ARS ) * BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),( ( Max( CS,( CS * ( MLU / ( MUM + RCSe ) ) ) ) * ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + BR ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RRSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.83984375, "obj2": 0.08428120308958405}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - ( MUC / ( RMSe + MUM ) ) ) + Min( RRSe ,( ( MUR - DS ) + ( RRSe - DS ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "Min( ( ( ACS / Min( RRS ,ACS ) ) * RRS ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( ( ( MUR - RMSe ) + DS ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.837890625, "obj2": 0.0842826114184327}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - ( MUC / ( RMSe + MUM ) ) ) + Min( RRSe ,( ( MUR - DS ) + ( RRSe - DS ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_RAM / AMS ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),( DS + ( ( RRSe - RCSe ) * ( Min( ( MUC * ( CS + RCSe ) ) ,( Max( MUR,RMSe ) - ( CS / MLU ) ) ) * ( ( ( RMSe + CS ) - ( RMSe + MUM ) ) - Min( MLU ,CS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * MRS ) - Max( ( FirstVNF_CPU / MDR ),FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / RMSe ),Min( RMSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * PN ) - ( Const - FirstVNF_CPU_Server ) ) / ( ( AMS * ACS ) * ( Const - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) * ( MUM - RRSe ) ) * ( ( RCSe - CS ) / Min( RMSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( PN - DDR ) ) / ( ( PN * BR ) + Max( FirstVNF_RAM_Server,ARS ) ) )", "choosing": "Max( ( RMSe - MUR ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( CRS + BR ) * ( ( ( CRS + BR ) - ( DDR * FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "Min( ( RRSe / ( RMSe * MUC ) ) ,( Max( MLU,Min( RCSe ,( CS / RCSe ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + CRS ) * ( ( RRS - BR ) - PN ) )", "choosing": "Max( Max( ( RMSe + DS ),( ( MUR - MUR ) * Max( RCSe,( CS - CS ) ) ) ),( ( RMSe + RRSe ) / ( ( DS + MUC ) * ( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( Const ,( ( ( MDR / DDR ) / FirstVNF_RAM ) * ( MDR - ( ACS + RRS ) ) ) ) )", "choosing": "( Max( ( RRSe * MLU ),MLU ) - ( MUR / MUC ) )", "obj1": 0.61328125, "obj2": 0.2765869057990941}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( ( FirstVNF_RAM_Server * MDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( RMSe * Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( RCSe,CS ) ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.794921875, "obj2": 0.10706427983020464}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - Min( FirstVNF_CPU ,BR ) ) - DDR ) )", "choosing": "Max( ( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.775390625, "obj2": 0.13270025608241726}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) )", "obj1": 0.80859375, "obj2": 0.08466293667799787}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "( ( BR - ARS ) + Min( AMS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( Max( ( MUR - ( MLU * MUM ) ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) * CS ),( CS / DS ) )", "obj1": 0.6953125, "obj2": 0.22037376457511879}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "( Min( Max( CS,RCSe ) ,RRSe ) * ( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 0.73046875, "obj2": 0.16282464471169675}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( ( ( ( CRS * PN ) / ( FirstVNF_CPU * ARS ) ) + Min( ( FirstVNF_RAM_Server * FirstVNF_Mem ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ),( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - Max( Min( Min( ( RCSe / RRSe ) ,Max( MUM,MUC ) ) ,Min( ( RMSe + DS ) ,Max( RCSe,MUR ) ) ),( ( Max( MLU,MLU ) * ( DS / MUR ) ) - ( Max( RRSe,CS ) - Min( RCSe ,MUC ) ) ) ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71484375, "obj2": 0.19447792194202507}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Min( ( ( ACS / Min( RRS ,ACS ) ) * RRS ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( ( ( MUR - RMSe ) + DS ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.837890625, "obj2": 0.0842826114184327}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.728515625, "obj2": 0.17154332625580299}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( ( FirstVNF_RAM + RRS ),AMS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( ( MUR - RRSe ) + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.841796875, "obj2": 0.07690187908183142}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.845703125, "obj2": 0.06929310261129155}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( FirstVNF_RAM_Server,RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.927734375, "obj2": 0.03042227018479495}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.857421875, "obj2": 0.06393653214685907}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe / RMSe ),( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) / MUR ) / ( MLU * RCSe ) ) )", "obj1": 0.9921875, "obj2": 0.0037217381531580544}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server * MDR ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ) ) )", "obj1": 0.892578125, "obj2": 0.047969104697401295}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( ( MDR / FirstVNF_Mem_Server ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( ( ( MUC - DS ) / ( MLU / MUM ) ) / ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.853515625, "obj2": 0.0661783929924934}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + ( DS * MUC ) ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8828125, "obj2": 0.05189756860036519}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Min( Min( MDR ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( RMSe - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.9140625, "obj2": 0.035478767670742754}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) )", "obj1": 0.865234375, "obj2": 0.05911849682829069}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - ( RCSe / MUR ) )", "obj1": 0.91015625, "obj2": 0.03862258765367208}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( FirstVNF_RAM_Server,RRS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) + Min( MUM ,( Min( ( Max( DS,( MUC - MLU ) ) * RRSe ) ,( CS - ( ( RRSe * RMSe ) - MLU ) ) ) * MUC ) ) ) - Max( ( MLU - Max( MUM,MUC ) ),( MUR - RRSe ) ) )", "obj1": 0.875, "obj2": 0.05700664068418467}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / BR ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + ( ( RCSe / RRSe ) + ( DS * Min( MUM ,MUR ) ) ) ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 0.623046875, "obj2": 0.2691646353708437}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + BR ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RRSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.83984375, "obj2": 0.08428120308958405}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "Min( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( Max( ( RCSe / RMSe ),( ( RCSe / MUR ) / ( MLU * RCSe ) ) ) - RRSe ),( MUC - MLU ) ) )", "obj1": 0.904296875, "obj2": 0.04087740081797006}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( FirstVNF_RAM + RRS ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.876953125, "obj2": 0.05363990596828219}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( MRS - Max( DDR,FirstVNF_Mem_Server ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.880859375, "obj2": 0.05306650015156247}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,AMS ) ) ) - ( Min( ( AMS - BR ) ,ARS ) * BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),( ( Max( CS,( CS * ( MLU / ( MUM + RCSe ) ) ) ) * ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "Min( Min( BR ,Min( RRS ,FirstVNF_CPU_Server ) ) ,( DDR - ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ARS + AMS ) ) ) ) ) )", "choosing": "Max( ( ( ( DS * ( Max( RCSe,RMSe ) - MUR ) ) + ( DS + ( DS / CS ) ) ) - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * MUC ) ),Max( ( ( DS + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( MUM / Max( MUM,RMSe ) ) + ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - ( MUC / ( RMSe + MUM ) ) ) + Min( RRSe ,( ( MUR - DS ) + ( RRSe - DS ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "Max( ( RCSe / ( ( MUC / MUC ) / ( CS / RMSe ) ) ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "( ( MUC / MUC ) / ( CS / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ARS * ( ( Const - MDR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / ACS ) ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( Max( ( MUR / DS ),( MUR / MUC ) ) / ( DS * MUC ) ) - RRSe ),( Min( ( RMSe + DS ) ,MUC ) - Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + BR ) * ( ( ( CRS + BR ) - ( DDR * FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "Min( ( RRSe / ( RMSe * MUC ) ) ,( Max( MLU,Min( RCSe ,( CS / RCSe ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( Const ,( ( ( MDR / DDR ) / FirstVNF_RAM ) * ( MDR - ( ACS + RRS ) ) ) ) )", "choosing": "( Max( ( RRSe * MLU ),MLU ) - ( MUR / MUC ) )", "obj1": 0.61328125, "obj2": 0.2765869057990941}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( ( FirstVNF_RAM_Server * MDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( RMSe * Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( RCSe,CS ) ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.794921875, "obj2": 0.10706427983020464}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - Min( FirstVNF_CPU ,BR ) ) - DDR ) )", "choosing": "Max( ( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.775390625, "obj2": 0.13270025608241726}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) )", "obj1": 0.80859375, "obj2": 0.08466293667799787}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( ( BR - ARS ) + Min( AMS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( Max( ( MUR - ( MLU * MUM ) ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) * CS ),( CS / DS ) )", "obj1": 0.6953125, "obj2": 0.22037376457511879}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( ( BR - Const ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( CS ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.763671875, "obj2": 0.1470579251349929}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / ACS ) ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( ( RMSe + RCSe ) - RCSe ) + Min( ( RMSe + DS ) ,MUC ) )", "obj1": 0.728515625, "obj2": 0.16228627591250377}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( MDR + AMS ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( Max( ( MUR / DS ),( MUR / MUC ) ) / ( DS * MUC ) ) - RRSe ),( Min( ( MUM - ( Max( MUR,RCSe ) * Max( MUM,RMSe ) ) ) ,MUC ) - Max( MLU,CS ) ) )", "obj1": 0.708984375, "obj2": 0.19396032645225816}, {"determining": "( ( Max( Const,PN ) * ARS ) * ( ( ACS + RRS ) - MDR ) )", "choosing": "( ( Min( Max( RRSe,RRSe ) ,Max( RMSe,MUR ) ) / Min( Max( CS,RCSe ) ,Max( MUM,RMSe ) ) ) + ( Max( ( MUM * RRSe ),Min( RCSe ,MUC ) ) * Max( Max( CS,RRSe ),( RMSe + RRSe ) ) ) )", "obj1": 0.716796875, "obj2": 0.18155816265480396}, {"determining": "Min( ( ( ACS / Min( RRS ,ACS ) ) * RRS ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( ( ( MUR - RMSe ) + DS ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.837890625, "obj2": 0.0842826114184327}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( ( FirstVNF_RAM + RRS ),AMS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( ( MUR - RRSe ) + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.841796875, "obj2": 0.07690187908183142}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.845703125, "obj2": 0.06929310261129155}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( Min( ( AMS * MDR ) ,ACS ) * FirstVNF_RAM ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( ( ( MUM - CS ) / Max( MLU,( Max( CS,( RRSe - RRSe ) ) - Max( CS,RMSe ) ) ) ) / ( DS * MUC ) ) - RRSe ),( MUC - MLU ) )", "obj1": 0.7265625, "obj2": 0.16923268857071833}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( FirstVNF_RAM_Server,RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.927734375, "obj2": 0.03042227018479495}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( ( FirstVNF_RAM + RRS ),AMS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + RRSe ) ) - RRSe ) ,DS ) )", "obj1": 0.85546875, "obj2": 0.06172842453185459}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe / RMSe ),( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) / MUR ) / ( MLU * RCSe ) ) )", "obj1": 0.9921875, "obj2": 0.0037217381531580544}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server * MDR ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ) ) )", "obj1": 0.892578125, "obj2": 0.047969104697401295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( ( MDR / FirstVNF_Mem_Server ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( ( ( MUC - DS ) / ( MLU / MUM ) ) / ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.853515625, "obj2": 0.0661783929924934}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + ( DS * MUC ) ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8828125, "obj2": 0.05189756860036519}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) )", "obj1": 0.865234375, "obj2": 0.05911849682829069}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / BR ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + ( ( RCSe / RRSe ) + ( DS * Min( MUM ,MUR ) ) ) ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 0.623046875, "obj2": 0.2691646353708437}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + BR ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RRSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.83984375, "obj2": 0.08428120308958405}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "Min( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( Max( ( RCSe / RMSe ),( ( RCSe / MUR ) / ( MLU * RCSe ) ) ) - RRSe ),( MUC - MLU ) ) )", "obj1": 0.904296875, "obj2": 0.04087740081797006}, {"determining": "Min( Min( MDR ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( RMSe - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.9140625, "obj2": 0.035478767670742754}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - ( RCSe / MUR ) )", "obj1": 0.91015625, "obj2": 0.03862258765367208}, {"determining": "Min( Min( BR ,FirstVNF_CPU ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * CS ) ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.87109375, "obj2": 0.056518581911598226}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,AMS ) ) ) - ( Min( ( AMS - BR ) ,ARS ) * BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),( ( Max( CS,( CS * ( MLU / ( MUM + RCSe ) ) ) ) * ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Min( Min( BR ,Min( RRS ,FirstVNF_CPU_Server ) ) ,( DDR - ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ARS + AMS ) ) ) ) ) )", "choosing": "Max( ( ( ( DS * ( Max( RCSe,RMSe ) - MUR ) ) + ( DS + ( DS / CS ) ) ) - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * MUC ) ),Max( ( ( DS + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( MUM / Max( MUM,RMSe ) ) + ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) ) ) ) ) )", "obj1": 0.875, "obj2": 0.05486679931496969}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( FirstVNF_RAM + RRS ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.876953125, "obj2": 0.05363990596828219}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + ( DS * MUC ) ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.880859375, "obj2": 0.052011139010639494}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( MUR * Min( ( ( Min( DS ,( ( CS + DS ) * RCSe ) ) * ( RMSe * ( MUR * CS ) ) ) - ( MUC / Max( Min( Min( MUC ,MLU ) ,DS ),DS ) ) ) ,Max( ( RRSe - CS ),( ( ( MUM / MUM ) * ( RCSe - Max( RCSe,CS ) ) ) + CS ) ) ) ),( ( RMSe / CS ) - MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Min( FirstVNF_CPU ,BR ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.912109375, "obj2": 0.037053213890624936}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),Min( FirstVNF_CPU ,BR ) ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( RRSe + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.912109375, "obj2": 0.037053213890624936}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( RRS + CRS ) * ( ( RRS - BR ) - PN ) )", "choosing": "Max( Max( ( RMSe + DS ),( ( MUR - MUR ) * Max( RCSe,( CS - CS ) ) ) ),( ( RMSe + RRSe ) / ( ( DS + MUC ) * ( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * Min( ARS ,FirstVNF_CPU ) )", "choosing": "( Min( RMSe ,MUM ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - ( BR / Const ) )", "choosing": "Max( ( RCSe / RMSe ),Max( MUM,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( ( ( ( BR - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ) - MDR ) ,( ( DDR + ( ( ACS + CRS ) - ( ( ( BR - FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ) - MDR ) ) ) * MDR ) )", "choosing": "Max( ( MUR - Min( ( ( ( RMSe * RMSe ) * Min( DS ,( ( CS + DS ) * DS ) ) ) - MUC ) ,Max( ( ( ( MUM / ( RCSe + MUR ) ) * ( RCSe - Max( CS,DS ) ) ) + ( RMSe / RCSe ) ),( RMSe * RMSe ) ) ) ),( ( RMSe / Min( MLU ,( DS + DS ) ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ( ( Const - MDR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / ACS ) ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( Max( ( MUR / DS ),( MUR / MUC ) ) / ( DS * MUC ) ) - RRSe ),( Min( ( RMSe + DS ) ,MUC ) - Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Min( Const ,( ( ( MDR / DDR ) / FirstVNF_RAM ) * ( MDR - ( ACS + RRS ) ) ) ) )", "choosing": "( Max( ( RRSe * MLU ),MLU ) - ( MUR / MUC ) )", "obj1": 0.61328125, "obj2": 0.2765869057990941}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( ( FirstVNF_RAM_Server * MDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( RMSe * Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( RCSe,CS ) ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.794921875, "obj2": 0.10706427983020464}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - Min( FirstVNF_CPU ,BR ) ) - DDR ) )", "choosing": "Max( ( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.775390625, "obj2": 0.13270025608241726}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( Min( ( ( RMSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) )", "obj1": 0.80859375, "obj2": 0.08466293667799787}, {"determining": "( ( ( ( FirstVNF_Mem / ( AMS - ( ( FirstVNF_CPU + MRS ) + FirstVNF_RAM ) ) ) * ( PN - PN ) ) * FirstVNF_RAM ) + Max( AMS,FirstVNF_CPU ) )", "choosing": "Max( ( CS - MLU ),( DS / Max( Min( Max( RMSe,( Max( ( MUR * MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.681640625, "obj2": 0.22563864315119403}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) - ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.20135306942228665}, {"determining": "( ( BR - ARS ) + Min( AMS ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( Max( ( MUR - ( MLU * MUM ) ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) * CS ),( CS / DS ) )", "obj1": 0.6953125, "obj2": 0.22037376457511879}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) )", "choosing": "( Min( MLU ,MUM ) - ( Min( MLU ,MUM ) * RMSe ) )", "obj1": 0.650390625, "obj2": 0.2368240982790917}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * Min( ( FirstVNF_CPU_Server + Const ) ,( Min( ( AMS * MDR ) ,ACS ) * Max( ( Max( FirstVNF_RAM,Const ) + FirstVNF_CPU ),Min( MDR ,AMS ) ) ) ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( Max( CS,( ( RMSe + RCSe ) / MUC ) ) / ( DS * MUC ) ) - RRSe ),( MUC - MLU ) )", "obj1": 0.70703125, "obj2": 0.18256281304948266}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( ( BR - Const ) * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( CS ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.763671875, "obj2": 0.1470579251349929}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.751953125, "obj2": 0.15863495264008098}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / ACS ) ) ) ) / Min( Const ,ARS ) )", "choosing": "( ( ( RMSe + RCSe ) - RCSe ) + Min( ( RMSe + DS ) ,MUC ) )", "obj1": 0.728515625, "obj2": 0.16228627591250377}, {"determining": "( ( ( BR - FirstVNF_CPU_Server ) * Min( ARS ,RRS ) ) * ( PN - ( ( FirstVNF_CPU_Server - MRS ) / Min( ARS ,( FirstVNF_CPU / DDR ) ) ) ) )", "choosing": "( CS - ( Min( Min( ( RCSe - ( CS / ( Max( CS,RRSe ) - ( RCSe + RCSe ) ) ) ) ,MUM ) ,MUR ) + Min( MUM ,DS ) ) )", "obj1": 0.98046875, "obj2": 0.0069165151118450036}, {"determining": "Min( ( ( ACS / Min( RRS ,ACS ) ) * RRS ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( ( ( MUR - RMSe ) + DS ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.837890625, "obj2": 0.0842826114184327}, {"determining": "( Max( Max( FirstVNF_CPU_Server,Const ),MRS ) - ( Max( DDR,MRS ) - Const ) )", "choosing": "( Min( ( MUC - MLU ) ,( DS * RRSe ) ) * ( ( RRSe * MUM ) + ( RCSe + RRSe ) ) )", "obj1": 0.759765625, "obj2": 0.15359641488216713}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( ( FirstVNF_RAM + RRS ),AMS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( ( MUR - RRSe ) + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.841796875, "obj2": 0.07690187908183142}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.845703125, "obj2": 0.06929310261129155}, {"determining": "( ( ARS * ( ( FirstVNF_CPU_Server - MDR ) * ( Min( ( AMS * MDR ) ,ACS ) * FirstVNF_RAM ) ) ) / Min( Const ,ARS ) )", "choosing": "Max( ( ( ( ( MUM - CS ) / Max( MLU,( Max( CS,( RRSe - RRSe ) ) - Max( CS,RMSe ) ) ) ) / ( DS * MUC ) ) - RRSe ),( MUC - MLU ) )", "obj1": 0.7265625, "obj2": 0.16923268857071833}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - ( ( MLU / MUR ) - ( ( Max( MUR,( RMSe * ( RCSe - MUM ) ) ) - ( ( CS - MUR ) - MUC ) ) * MUC ) ) ),( MUR - RRSe ) )", "obj1": 0.966796875, "obj2": 0.014214518194002122}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM_Server ) ) ) ,MDR ) - MDR )", "choosing": "Min( ( MUM + ( MLU * ( MUM * RCSe ) ) ) ,( Max( Min( Min( RRSe ,( MUR * DS ) ) ,( ( RRSe - CS ) + Min( RRSe ,( ( MUR - DS ) / ( CS / RRSe ) ) ) ) ),( DS - MLU ) ) + ( RMSe / RCSe ) ) )", "obj1": 0.716796875, "obj2": 0.17413834526071154}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Max( FirstVNF_RAM_Server,RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.927734375, "obj2": 0.03042227018479495}, {"determining": "Min( Max( FirstVNF_Mem,Const ) ,( FirstVNF_RAM * ACS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.646484375, "obj2": 0.2409690760520295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( ( FirstVNF_RAM + RRS ),AMS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + RRSe ) ) - RRSe ) ,DS ) )", "obj1": 0.85546875, "obj2": 0.06172842453185459}, {"determining": "( Max( ( ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe / RMSe ),( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) / MUR ) / ( MLU * RCSe ) ) )", "obj1": 0.9921875, "obj2": 0.0037217381531580544}, {"determining": "( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) - ( ACS + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,RMSe ) - Max( ( CS + RMSe ),CS ) )", "obj1": 0.939453125, "obj2": 0.030410653065154298}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server * MDR ) ) ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - Max( ( MLU / Max( RRSe,MLU ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ) ) )", "obj1": 0.892578125, "obj2": 0.047969104697401295}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( AMS - ( FirstVNF_Mem_Server * Min( Max( ( ( MDR / FirstVNF_Mem_Server ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( ( ( ( MUC - DS ) / ( MLU / MUM ) ) / ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.853515625, "obj2": 0.0661783929924934}, {"determining": "( ( RRS * FirstVNF_RAM ) / ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC / MLU ) / Max( RRSe,RRSe ) )", "obj1": 0.619140625, "obj2": 0.27198800489848185}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( Min( ( ( Max( ( ( MLU / MLU ) + DS ),( MUR - ( MUC + Min( RRSe ,CS ) ) ) ) - RCSe ) - ( RRSe * MLU ) ) ,Max( Max( Min( MUR ,( ( CS * MUM ) / ( RRSe * ( MUM + RCSe ) ) ) ),RRSe ),( CS * RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.94140625, "obj2": 0.025456817598641133}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ) - MRS ) )", "choosing": "( Min( Max( MUC,MLU ) ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.62890625, "obj2": 0.2614444670767283}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( RCSe * MLU ) )", "obj1": 0.638671875, "obj2": 0.25611556630135957}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + ( DS * MUC ) ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8828125, "obj2": 0.05189756860036519}, {"determining": "Max( Max( Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) ),FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( RMSe ,MUM ) - ( RCSe * RMSe ) )", "obj1": 0.634765625, "obj2": 0.2592956917123429}, {"determining": "Max( Max( AMS,RRS ),( BR - MRS ) )", "choosing": "( Min( MUC ,RMSe ) - ( RCSe * RMSe ) )", "obj1": 0.626953125, "obj2": 0.2670517230986717}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),( ( MUM - DS ) + DS ) )", "obj1": 0.865234375, "obj2": 0.05911849682829069}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( BR - MRS ) )", "choosing": "( Min( MLU ,MUM ) - ( MUM * RMSe ) )", "obj1": 0.640625, "obj2": 0.25025510705618637}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( DS - CS ) + Max( DS,Max( CS,( Min( MUM ,( MLU + RMSe ) ) - MUR ) ) ) )", "obj1": 0.947265625, "obj2": 0.0226073736597312}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / BR ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + ( ( RCSe / RRSe ) + ( DS * Min( MUM ,MUR ) ) ) ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 0.623046875, "obj2": 0.2691646353708437}, {"determining": "( ( Max( FirstVNF_CPU_Server,PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( ( ( MUM / RRSe ) - RMSe ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.020337649665252464}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + BR ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( ( ( CS * CS ) - Min( MUM ,( Min( ( ( RRSe + Max( MUR,RRSe ) ) * RRSe ) ,MUC ) * MUC ) ) ) - Max( ( MUR - RRSe ),( MLU - Max( MUM,MUC ) ) ) )", "obj1": 0.83984375, "obj2": 0.08428120308958405}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( Max( Min( RRSe ,CS ),( MLU + RCSe ) ) / Max( Min( CS ,CS ),Min( RCSe ,RMSe ) ) ) / ( ( ( MLU / RCSe ) + ( DS + DS ) ) / ( Max( RCSe,RMSe ) - Min( DS ,MUR ) ) ) )", "obj1": 0.95703125, "obj2": 0.019170130170989785}, {"determining": "Min( Max( ( ( FirstVNF_Mem * FirstVNF_Mem ) / MDR ),FirstVNF_RAM ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( Max( ( RCSe / RMSe ),( ( RCSe / MUR ) / ( MLU * RCSe ) ) ) - RRSe ),( MUC - MLU ) ) )", "obj1": 0.904296875, "obj2": 0.04087740081797006}, {"determining": "Min( Min( MDR ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( RMSe - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.9140625, "obj2": 0.035478767670742754}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - ( RCSe / MUR ) )", "obj1": 0.91015625, "obj2": 0.03862258765367208}, {"determining": "Min( Min( BR ,FirstVNF_CPU ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * CS ) ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.87109375, "obj2": 0.056518581911598226}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "Max( AMS,( BR - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "( ( ( ( ( AMS * DDR ) * FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server / ( RRS * Max( DDR,ARS ) ) ) + Min( Min( DDR ,( ARS * Const ) ) ,RRS ) ) ) / ( Min( FirstVNF_RAM_Server ,( CRS + BR ) ) / ( Max( Max( ( ACS - MDR ),Min( ( BR / DDR ) ,BR ) ),RRS ) / FirstVNF_CPU_Server ) ) ) * ( MDR + AMS ) )", "choosing": "( ( ( Min( ( Max( MLU,Max( MUC,DS ) ) * MUM ) ,( ( DS - ( ( RCSe / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) / Max( DS,Max( Min( Max( RMSe,( Max( Min( MUR ,MUR ),Min( RRSe ,RRSe ) ) * RMSe ) ) ,MUC ),( ( MUR - MUC ) - Min( ( ( MUR + ( CS - RRSe ) ) - RCSe ) ,MUC ) ) ) ) )", "obj1": 0.958984375, "obj2": 0.01734413185727472}, {"determining": "Min( Min( BR ,Min( RRS ,FirstVNF_CPU_Server ) ) ,( DDR - ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ,( ARS + AMS ) ) ) ) ) )", "choosing": "Max( ( ( ( DS * ( Max( RCSe,RMSe ) - MUR ) ) + ( DS + ( DS / CS ) ) ) - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * MUC ) ),Max( ( ( DS + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( MUM / Max( MUM,RMSe ) ) + ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) ) ) ) ) )", "obj1": 0.875, "obj2": 0.05486679931496969}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( ( FirstVNF_RAM + RRS ) + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( ( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) ) - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.876953125, "obj2": 0.05363990596828219}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.919921875, "obj2": 0.033011260958963125}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "Max( Max( AMS,FirstVNF_RAM ),( Max( AMS,FirstVNF_RAM ) - MRS ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RCSe * RMSe ) ) - ( RCSe * RMSe ) )", "obj1": 0.642578125, "obj2": 0.24737839154185906}, {"determining": "( ( ( ( ARS - MDR ) / Max( FirstVNF_Mem_Server,PN ) ) / Max( ( FirstVNF_CPU_Server - FirstVNF_CPU ),( ACS / FirstVNF_Mem_Server ) ) ) + Min( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( FirstVNF_CPU_Server,( FirstVNF_Mem_Server / ARS ) ) ) )", "choosing": "( Min( RMSe ,RMSe ) + ( ( ( MUR / MUC ) - ( Max( ( ( ( RMSe - CS ) - Max( RMSe,MUR ) ) + MUC ),RCSe ) / RMSe ) ) / ( MUC * ( DS * RMSe ) ) ) )", "obj1": 0.71875, "obj2": 0.17409246795721062}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "( Max( ( MUR - RRSe ),( MUC - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MLU ) ) )", "obj1": 0.90234375, "obj2": 0.04290160566522447}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,AMS ) ) ) - ( Min( ( AMS - BR ) ,ARS ) * BR ) ) )", "choosing": "( Max( ( MUR - RRSe ),( ( Max( CS,( CS * ( MLU / ( MUM + RCSe ) ) ) ) * ( RRSe + DS ) ) - MLU ) ) - Max( ( MUR - RRSe ),( MUC - MUM ) ) )", "obj1": 0.89453125, "obj2": 0.045680047726947}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "Min( Min( BR ,FirstVNF_CPU ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_RAM_Server ) ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - ( ( ( Max( MLU,( DS * CS ) ) + MUM ) / RRSe ) * CS ) ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,Min( RCSe ,( ( MUR - RMSe ) + DS ) ) ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( RCSe / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,MUM ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + RRSe ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.8671875, "obj2": 0.058425342773642135}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( PN ,FirstVNF_Mem_Server ) ) - Min( ( FirstVNF_Mem / MRS ) ,( BR * RRS ) ) ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( RRSe ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.962890625, "obj2": 0.014755996606508781}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( ( Min( Min( ( RRSe - MUC ) ,MLU ) ,RCSe ) + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + ( DS * MUC ) ) + ( MUM / Max( MLU,RMSe ) ) ) ) ) ) )", "obj1": 0.880859375, "obj2": 0.052011139010639494}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( Min( FirstVNF_CPU ,BR ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( Min( RRSe ,( ( MUR - RMSe ) + DS ) ) - Min( RRSe ,( ( MUR - RMSe ) + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.912109375, "obj2": 0.037053213890624936}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),Min( FirstVNF_CPU ,BR ) ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Min( ( ( ( MLU - Min( RRSe ,( RRSe + DS ) ) ) + ( MLU + DS ) ) - RRSe ) ,DS ) )", "obj1": 0.912109375, "obj2": 0.037053213890624936}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( ( Max( FirstVNF_RAM_Server,RRS ) - ( FirstVNF_Mem_Server * Min( Max( ( FirstVNF_RAM + RRS ),AMS ) ,DDR ) ) ) - DDR ) )", "choosing": "Max( ( MUR - RRSe ),Max( ( ( MUM + Max( DS,DS ) ) + Min( CS ,RMSe ) ),( ( MUC + Min( RMSe ,RRSe ) ) - ( MLU / ( ( ( ( MUC * MUC ) * ( MUR / RCSe ) ) + ( DS * MUC ) ) + ( MUM / Max( MUM,RMSe ) ) ) ) ) ) )", "obj1": 0.880859375, "obj2": 0.052011139010639494}, {"determining": "Min( Min( Min( FirstVNF_CPU ,BR ) ,( MDR - Max( DDR,FirstVNF_Mem_Server ) ) ) ,( RRS * ( ( BR / ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) / PN ) ) )", "choosing": "Max( ( MUR - RRSe ),( ( ( ( Min( RRSe ,( MUR / ( MLU + DS ) ) ) - MLU ) + ( MLU + DS ) ) - RRSe ) + DS ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( Min( ( ARS - Min( FirstVNF_CPU ,( CRS - MDR ) ) ) ,MDR ) - ( FirstVNF_CPU_Server / FirstVNF_RAM ) )", "choosing": "Max( ( MUR * Min( ( ( Min( DS ,( ( CS + DS ) * RCSe ) ) * ( RMSe * ( MUR * CS ) ) ) - ( MUC / Max( Min( Min( MUC ,MLU ) ,DS ),DS ) ) ) ,Max( ( RRSe - CS ),( ( ( MUM / MUM ) * ( RCSe - Max( RCSe,CS ) ) ) + CS ) ) ) ),( ( RMSe / CS ) - MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 0.96484375, "obj2": 0.014502885807183624}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "Max( ( RMSe - MUC ),( MUC - MLU ) )", "obj1": 0.9609375, "obj2": 0.014847357474428582}, {"determining": "( ( CRS + BR ) * ( ( ( CRS + BR ) - ( DDR * FirstVNF_Mem_Server ) ) / Const ) )", "choosing": "Min( ( RRSe / ( RMSe * MUC ) ) ,( Max( MLU,Min( RCSe ,( CS / RCSe ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + CRS ) * ( ( RRS - BR ) - PN ) )", "choosing": "Max( Max( ( RMSe + DS ),( ( MUR - MUR ) * Max( RCSe,( CS - CS ) ) ) ),( ( RMSe + RRSe ) / ( ( DS + MUC ) * ( MUM + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),Min( BR ,( MRS - AMS ) ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU ) - ( ( ( FirstVNF_CPU_Server + ( DDR + FirstVNF_CPU_Server ) ) + MRS ) - Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Min( Max( CS,( MUC * MLU ) ) ,Min( ( DS - ( ( MUM / RRSe ) - RMSe ) ) ,DS ) ) ) + Min( MUC ,MUM ) ) + ( ( DS / MLU ) / Max( Min( RMSe ,( Min( Min( MUC ,RMSe ) ,RCSe ) / MUC ) ),( ( MUC - MUR ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( FirstVNF_CPU + MDR ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MUC / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( FirstVNF_CPU_Server + CRS ) - ( ( ( ( MRS + ARS ) / FirstVNF_RAM ) + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( ( RRSe + ( RCSe + RCSe ) ) * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + MUR ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( MDR / ACS ),PN ) / ( ( MDR + CRS ) - ( ( FirstVNF_CPU + MRS ) + Min( ( ARS / ( ARS * Max( BR,FirstVNF_Mem_Server ) ) ) ,MDR ) ) ) ) * ( PN + PN ) )", "choosing": "( ( ( Min( ( RRSe * ( MUM - RCSe ) ) ,( ( DS - ( ( MUM / RRSe ) - RMSe ) ) + DS ) ) - MUR ) + Min( MUC ,MUM ) ) + Max( DS,Max( Min( RMSe ,( Min( Min( ( MLU / RCSe ) ,( MLU + RRSe ) ) ,MLU ) / MUC ) ),( ( MUR - MUC ) - Min( ( MUM - ( MUR + ( CS - RRSe ) ) ) ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * Const ) ,( ACS - ( AMS + ( ( PN / FirstVNF_CPU_Server ) + AMS ) ) ) )", "choosing": "Max( ( CS - MLU ),( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( CRS ,MDR ) + ( ( ACS * MDR ) / Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( RRS + ( ( ( PN / DDR ) + BR ) * FirstVNF_RAM ) ) ) ) ) / ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( ( RMSe / CS ) / Min( CS ,RMSe ) ) + ( ( CS + MUC ) - Max( ( CS + MUC ),CS ) ) ) / ( ( Min( MLU ,MUC ) * ( RRSe - DS ) ) / ( ( CS * RMSe ) - ( MUR * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "Min( Min( ( ( MUM - RRSe ) / CS ) ,RRSe ) ,( ( MLU * ( MUC - MLU ) ) / ( RRSe + ( RMSe * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - AMS ) )", "choosing": "Max( ( MUR - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + ( DDR * RRS ) )", "choosing": "Max( ( MUR * CS ),( CS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * Min( ARS ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( RMSe - ( CS / MUC ) ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU / MDR ),FirstVNF_RAM ) - ( RRS / PN ) )", "choosing": "Max( ( RCSe / RMSe ),Max( ( RCSe + ( ( ( RRSe + ( ( RCSe - MLU ) - MLU ) ) / ( RMSe + ( ( RRSe / MUR ) + MUC ) ) ) / Min( RCSe ,( MUC - RCSe ) ) ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / FirstVNF_CPU_Server ) / ( Max( FirstVNF_CPU,BR ) - ( AMS * AMS ) ) )", "choosing": "( ( ( MUR * MUR ) / ( ( DS / RRSe ) * MUC ) ) / Min( Min( MUM ,RRSe ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR + MDR ) * ( Max( CRS,FirstVNF_CPU_Server ) - DDR ) ) / ( ( BR * PN ) + ( FirstVNF_RAM_Server - ARS ) ) )", "choosing": "Min( Min( Max( CS,RCSe ) ,RRSe ) ,( ( MLU + RMSe ) + ( DS + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( FirstVNF_Mem * AMS ),Max( FirstVNF_RAM_Server,DDR ) ) ,( ( Const - FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_Mem_Server ),( RRS * DDR ) ) / ( Min( CRS ,ACS ) * ( ARS - CRS ) ) ) )", "choosing": "( ( Max( ( CS / RMSe ),( RRSe * MUM ) ) - Min( ( MUC / MUR ) ,( RMSe - RMSe ) ) ) / Min( Min( ( DS - CS ) ,Max( MLU,MLU ) ) ,( ( MUM / CS ) / Min( CS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,FirstVNF_CPU ) ,( MRS - AMS ) ) / ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,MRS ) ) )", "choosing": "( Min( Min( ( ( ( ( ( CS + MLU ) - RMSe ) - ( DS - MLU ) ) + RRSe ) - ( DS + RRSe ) ) ,( Max( ( RMSe + MUM ),( MUM - ( ( DS + RMSe ) * RRSe ) ) ) * ( Min( Max( MUC,( MUR * MLU ) ) ,MLU ) - RCSe ) ) ) ,( ( CS + RMSe ) + Max( RRSe,MUR ) ) ) - ( ( MUR - RRSe ) / ( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,BR ) ,( MRS - ARS ) )", "choosing": "Max( ( ( MLU / MUR ) - RRSe ),( MUC - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( MRS - Const ) )", "choosing": "Max( ( MUM - CS ),( MUR - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS - PN ) + Max( FirstVNF_CPU,Min( Max( Max( MRS,AMS ),BR ) ,MDR ) ) ) ,AMS ) + Max( Min( FirstVNF_RAM ,FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "Max( ( Max( Min( RRSe ,RRSe ),Min( ( ( ( ( MLU * RRSe ) * ( RRSe + CS ) ) + ( ( RMSe * MUM ) + MLU ) ) + ( ( MUM - RRSe ) - ( MLU + ( DS / CS ) ) ) ) ,RMSe ) ) / DS ),( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + ARS ) ,AMS ) - FirstVNF_RAM ) + Max( BR,ARS ) )", "choosing": "Max( ( CS + Max( DS,( ( RCSe * Max( ( MLU * Min( RRSe ,MLU ) ),( Min( RCSe ,MUC ) / ( RCSe * MUC ) ) ) ) - MUC ) ) ),( CS / Min( RCSe ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,BR ) - ( MRS / FirstVNF_RAM_Server ) ) + ( Const * FirstVNF_Mem ) )", "choosing": "Max( ( RMSe * Max( ( MLU / Max( RRSe,RMSe ) ),( ( RMSe - Max( MUR,DS ) ) * RRSe ) ) ),Max( RMSe,Max( Max( RMSe,( MLU / RCSe ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - ARS ) + Max( FirstVNF_RAM,FirstVNF_Mem_Server ) )", "choosing": "Max( ( MUR * CS ),( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_CPU_Server ) * ( BR / Const ) )", "choosing": "( ( RCSe / RMSe ) - Max( DS,CS ) )", "obj1": 1.0, "obj2": 0.0}]}