{"1": [{"determining": "( ( RRS * RRS ) + ( FirstVNF_RAM * ARS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MLU * CS ) )", "obj1": 0.705078125, "obj2": 0.27034152661906174}, {"determining": "Max( Max( Min( Max( Const,Const ) ,( Const + MDR ) ),( ( MDR * AMS ) / ( AMS * FirstVNF_RAM ) ) ),( ( ( MDR - Const ) - ( FirstVNF_CPU / DDR ) ) + ( Max( RRS,FirstVNF_CPU_Server ) + ( CRS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( CS * CS ) + Min( MUM ,CS ) ) * ( Min( MUR ,RMSe ) / Min( RRSe ,MUR ) ) ) * Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) )", "obj1": 0.65234375, "obj2": 0.27501851376230485}, {"determining": "( Min( AMS ,MRS ) / Min( ARS ,MRS ) )", "choosing": "Min( ( RRSe * RCSe ) ,Max( RMSe,( RCSe / ( ( ( RCSe * DS ) + CS ) / RCSe ) ) ) )", "obj1": 0.705078125, "obj2": 0.26626755265310353}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) * ( BR + AMS ) )", "choosing": "Max( ( DS / RRSe ),( RRSe * MLU ) )", "obj1": 0.748046875, "obj2": 0.2722478076209024}, {"determining": "Max( ( Const - DDR ),Min( ( Min( PN ,FirstVNF_RAM ) + FirstVNF_Mem_Server ) ,PN ) )", "choosing": "( ( RCSe / ( RRSe / ( MLU / Max( MUC,( RRSe + RRSe ) ) ) ) ) * ( ( RRSe * RRSe ) * RMSe ) )", "obj1": 0.755859375, "obj2": 0.2702415177827026}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * DDR ),( FirstVNF_RAM * MRS ) )", "choosing": "( ( ( ( MUM - Min( MUR ,Min( MLU ,( RRSe + RCSe ) ) ) ) + Min( MUM ,MUR ) ) * RRSe ) / Max( MLU,MUR ) )", "obj1": 0.634765625, "obj2": 0.2590619850985323}, {"determining": "Min( ( ARS / AMS ) ,( ACS / ACS ) )", "choosing": "( Max( RMSe,CS ) / ( MUM / RRSe ) )", "obj1": 0.732421875, "obj2": 0.2822808621456063}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / Max( Max( FirstVNF_RAM_Server,RRS ),DDR ) )", "choosing": "( Min( CS ,MUR ) + ( ( RCSe - ( CS + CS ) ) - RRSe ) )", "obj1": 0.72265625, "obj2": 0.2680839253023782}, {"determining": "Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,MUM ) * ( MLU - RCSe ) )", "obj1": 0.705078125, "obj2": 0.2673732337383823}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - FirstVNF_Mem ) )", "choosing": "Max( ( MUC - MUM ),( MLU + RRSe ) )", "obj1": 0.744140625, "obj2": 0.2718728490176447}, {"determining": "Max( Max( PN,FirstVNF_CPU_Server ),( MDR / ACS ) )", "choosing": "( Max( CS,MUM ) - ( Max( ( DS - ( MUR - Min( ( MLU / DS ) ,CS ) ) ),RCSe ) / Max( CS,MUR ) ) )", "obj1": 0.716796875, "obj2": 0.256207921218389}, {"determining": "Max( ( CRS + FirstVNF_RAM ),( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( ( RMSe - DS ),( RCSe * RMSe ) )", "obj1": 0.703125, "obj2": 0.28502446128691683}, {"determining": "( ( MRS / MRS ) - Min( ( RRS * FirstVNF_RAM_Server ) ,ARS ) )", "choosing": "( ( MUM * Min( RRSe ,RRSe ) ) / ( DS / CS ) )", "obj1": 0.73828125, "obj2": 0.25938164776304473}, {"determining": "( Min( CRS ,MDR ) * ( ACS + FirstVNF_Mem ) )", "choosing": "Max( ( CS - MUM ),Min( MUC ,MUC ) )", "obj1": 0.70703125, "obj2": 0.2746992969796863}, {"determining": "( ( MDR + FirstVNF_CPU ) + ( FirstVNF_Mem / ACS ) )", "choosing": "Max( ( RRSe * MUC ),( RMSe / MLU ) )", "obj1": 0.69921875, "obj2": 0.27182802553067376}, {"determining": "( Max( PN,FirstVNF_CPU_Server ) * ( MRS + Const ) )", "choosing": "( ( MUM * MLU ) + Max( DS,MUM ) )", "obj1": 0.705078125, "obj2": 0.2823439825044834}, {"determining": "( Max( MDR,BR ) - ( BR / CRS ) )", "choosing": "( ( RCSe - RCSe ) - ( CS - CS ) )", "obj1": 0.87890625, "obj2": 0.1397712434277056}, {"determining": "( Max( Max( ( ACS / FirstVNF_RAM ),DDR ),FirstVNF_CPU ) / ( FirstVNF_Mem * ARS ) )", "choosing": "( ( MUR * DS ) / Max( ( CS - ( ( Min( MUR ,( RCSe / RRSe ) ) / Max( MLU,RMSe ) ) / Max( ( DS / RCSe ),( CS - ( MUC / MUC ) ) ) ) ),CS ) )", "obj1": 0.767578125, "obj2": 0.2461317267825569}, {"determining": "Min( ( BR * FirstVNF_Mem ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * ( AMS + FirstVNF_RAM ) ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( DS * Max( RCSe,RRSe ) ) - ( MUR / DS ) )", "obj1": 0.806640625, "obj2": 0.16758414104193423}, {"determining": "Min( ( DDR - RRS ) ,( DDR + FirstVNF_Mem ) )", "choosing": "( ( MLU * RMSe ) * ( MUR - RMSe ) )", "obj1": 0.740234375, "obj2": 0.2849732465697668}, {"determining": "Max( ( CRS + CRS ),( MRS / ACS ) )", "choosing": "Max( Min( CS ,DS ),( RMSe - RMSe ) )", "obj1": 0.724609375, "obj2": 0.24418117255924407}, {"determining": "( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU * Const ) )", "choosing": "( Min( CS ,MUM ) / ( RRSe / MUC ) )", "obj1": 0.70703125, "obj2": 0.2734300637918453}, {"determining": "( Max( FirstVNF_CPU_Server,ARS ) * ( MRS / FirstVNF_CPU ) )", "choosing": "( ( RMSe - MLU ) / Max( MLU,RCSe ) )", "obj1": 0.69921875, "obj2": 0.28214409000590945}, {"determining": "( Min( FirstVNF_Mem ,BR ) + Min( MDR ,PN ) )", "choosing": "Max( ( MUM * MUC ),( DS + MUC ) )", "obj1": 0.708984375, "obj2": 0.2740853119773941}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) - ( ACS - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( DS,MUM ) ,( RMSe / MUR ) )", "obj1": 0.724609375, "obj2": 0.28606390321203634}, {"determining": "Min( ( MRS - BR ) ,( MDR - DDR ) )", "choosing": "Max( ( MUC - MLU ),( MUC + MLU ) )", "obj1": 0.990234375, "obj2": 0.010936509405900534}, {"determining": "( Max( MRS,BR ) * ( ACS * CRS ) )", "choosing": "Min( ( DS / RCSe ) ,Min( CS ,RMSe ) )", "obj1": 0.7421875, "obj2": 0.27605156209236453}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "( Min( RCSe ,MUM ) - ( RCSe * MUR ) )", "obj1": 0.69921875, "obj2": 0.19426418329495138}, {"determining": "( ( FirstVNF_RAM * MRS ) * ( MDR + CRS ) )", "choosing": "( ( MLU - RMSe ) + Min( MUR ,MLU ) )", "obj1": 0.70703125, "obj2": 0.25904006809200136}, {"determining": "( ( MRS / ACS ) + ( ARS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS - MUM ) - ( MLU * MLU ) )", "obj1": 0.728515625, "obj2": 0.260629920947799}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8125, "obj2": 0.18135089127264606}, {"determining": "Min( ( FirstVNF_CPU_Server * Const ) ,Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe * RCSe ) ,Max( RRSe,MLU ) )", "obj1": 0.6953125, "obj2": 0.2867779361247386}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.921875, "obj2": 0.07140627204204679}, {"determining": "( Max( MRS,CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( ( CRS / FirstVNF_CPU_Server ) ,BR ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MUM,( RCSe + ( MUR - Max( Min( ( MUC + CS ) ,RCSe ),MUM ) ) ) ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "Min( Min( ARS ,Const ) ,( FirstVNF_Mem_Server + FirstVNF_RAM ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 0.76953125, "obj2": 0.25269013346259084}, {"determining": "( ( Max( FirstVNF_CPU,MDR ) / ( ACS * MRS ) ) + ( ( AMS * Const ) / Min( RRS ,MDR ) ) )", "choosing": "( ( ( DS / CS ) * ( MLU * MUC ) ) + ( ( RCSe - RMSe ) + ( RCSe * MUC ) ) )", "obj1": 0.712890625, "obj2": 0.25706004862981313}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,DDR ) / Min( CRS ,PN ) ) + Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) )", "choosing": "Max( ( ( RMSe * MUR ) - ( DS / CS ) ),( Max( DS,MUC ) * ( MUR * MUC ) ) )", "obj1": 0.677734375, "obj2": 0.28084833589537744}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem ,MDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( RMSe * RRSe ) + RCSe ) * RCSe ) * DS ) * ( RMSe - Min( MLU ,( ( ( MLU - ( ( CS / RMSe ) / Max( CS,RRSe ) ) ) + MUR ) - Max( CS,MUR ) ) ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Max( ( AMS / MDR ),Max( DDR,ACS ) ) + ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) )", "choosing": "Max( ( ( RCSe * CS ) + Max( RMSe,Min( MLU ,MLU ) ) ),Max( ( CS - RRSe ),MUC ) )", "obj1": 0.673828125, "obj2": 0.2786961884433759}, {"determining": "( ( ARS * FirstVNF_Mem ) / ( CRS + MDR ) )", "choosing": "( Min( Max( RMSe,RRSe ) ,RCSe ) * ( RMSe / ( MLU - MUM ) ) )", "obj1": 0.744140625, "obj2": 0.2817973600371257}, {"determining": "Min( ( ( BR * DDR ) + ( ( RRS / FirstVNF_RAM_Server ) / ARS ) ) ,Max( ( Const * FirstVNF_RAM ),Min( ACS ,AMS ) ) )", "choosing": "Min( ( Max( MUR,MUR ) / MUR ) ,Max( ( CS / MUR ),( CS / Max( MUC,MUR ) ) ) )", "obj1": 0.71875, "obj2": 0.25245234381626946}, {"determining": "Max( Min( ( MRS * PN ) ,( CRS * MDR ) ),Max( ( ACS * AMS ),( FirstVNF_Mem / FirstVNF_Mem ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 0.736328125, "obj2": 0.26425159259131964}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + MDR ) - ( MDR / MDR ) )", "choosing": "( ( ( RRSe / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "Max( ( MRS / ARS ),( RRS + Max( FirstVNF_CPU,RRS ) ) )", "choosing": "Min( ( ( MUC * MUR ) / ( CS - MUR ) ) ,( ( MUC * MLU ) * MLU ) )", "obj1": 0.7265625, "obj2": 0.29442929269385926}, {"determining": "Min( ( FirstVNF_CPU_Server + ( MRS - PN ) ) ,( ARS + FirstVNF_RAM ) )", "choosing": "( Min( Max( DS,RRSe ) ,Max( RCSe,RCSe ) ) / ( ( MUC / MLU ) / ( RRSe + CS ) ) )", "obj1": 0.71875, "obj2": 0.2724657098089816}, {"determining": "Min( ( MDR * CRS ) ,( FirstVNF_RAM + ( Min( Const ,ARS ) + ACS ) ) )", "choosing": "( ( RMSe / ( MLU / CS ) ) + Max( Max( Min( ( MUR + ( MLU / ( ( MUC * CS ) / RCSe ) ) ) ,( RRSe / MUC ) ),Max( ( Min( RMSe ,( Min( MUR ,MUR ) + ( RRSe * CS ) ) ) * CS ),CS ) ),MUR ) )", "obj1": 0.70703125, "obj2": 0.2619586031921957}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUM,( MUM / MLU ) ) ,( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) )", "obj1": 0.708984375, "obj2": 0.2639535777571646}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / Min( ( MDR - RRS ) ,RRS ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 0.70703125, "obj2": 0.23656140279529192}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.6953125, "obj2": 0.26234204700556885}, {"determining": "Min( ( Max( AMS,BR ) + Min( FirstVNF_RAM ,ARS ) ) ,( ( BR - Const ) / ( PN - ARS ) ) )", "choosing": "Min( Min( RCSe ,( MLU - DS ) ) ,( ( RMSe * MUR ) * MUC ) )", "obj1": 0.7265625, "obj2": 0.2826333285000123}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( RRS ,( FirstVNF_RAM / DDR ) ),( FirstVNF_Mem_Server / ( ACS + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( DS,MUC ) + ( DS - MUM ) ) ,( Max( DS,MLU ) - Max( MUR,RMSe ) ) )", "obj1": 0.755859375, "obj2": 0.2600501356387223}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 0.72265625, "obj2": 0.24902225585164803}, {"determining": "( Max( BR,DDR ) + Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( Max( RRSe,MUM ) ,RCSe ) * ( RRSe - MUR ) )", "obj1": 0.71875, "obj2": 0.26431339840862084}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,( ( RRSe / RCSe ) * ( RRSe * CS ) ) )", "obj1": 0.654296875, "obj2": 0.2650603559635014}, {"determining": "( ( ( FirstVNF_Mem_Server + Const ) - Min( MRS ,FirstVNF_Mem_Server ) ) / ( ( AMS * FirstVNF_CPU_Server ) * Min( PN ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) )", "obj1": 0.720703125, "obj2": 0.2513386657962833}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server * FirstVNF_CPU ) ) + Max( MDR,ARS ) )", "choosing": "( ( Max( DS,MUC ) / Max( MUM,MUR ) ) / ( ( DS * MLU ) + Min( CS ,MUC ) ) )", "obj1": 0.705078125, "obj2": 0.2718451482342721}, {"determining": "Max( Max( ARS,FirstVNF_Mem_Server ),( ( MDR + Const ) * ARS ) )", "choosing": "( Min( DS ,( MUC / RMSe ) ) + ( Min( MUM ,RCSe ) / ( MUM / CS ) ) )", "obj1": 0.734375, "obj2": 0.25829265620007835}, {"determining": "Min( Min( ( MRS + ( ARS * FirstVNF_CPU ) ) ,PN ) ,( FirstVNF_Mem + MRS ) )", "choosing": "( ( ( DS * DS ) - ( DS - MUR ) ) - ( MLU + MLU ) )", "obj1": 0.732421875, "obj2": 0.27969451584702176}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,BR ) * ( AMS + FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 0.734375, "obj2": 0.26808910868716046}, {"determining": "Max( ( Min( RRS ,DDR ) + FirstVNF_Mem ),( Max( FirstVNF_RAM_Server,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - PN ) )", "choosing": "( ( Max( MLU,RRSe ) - Min( RRSe ,MUC ) ) * ( Min( MUM ,RRSe ) * MLU ) )", "obj1": 0.7734375, "obj2": 0.23532421295289033}, {"determining": "( Min( ( MRS + FirstVNF_RAM_Server ) ,ARS ) * ( ACS / FirstVNF_Mem ) )", "choosing": "( Min( ( MUR * CS ) ,Max( MUM,MUM ) ) * Max( ( MUC - MUR ),( MLU + MUM ) ) )", "obj1": 0.732421875, "obj2": 0.2644931204065109}, {"determining": "Max( ( ( MDR * FirstVNF_Mem_Server ) / FirstVNF_CPU ),Max( ( MDR + PN ),Min( CRS ,PN ) ) )", "choosing": "Max( Min( ( DS * MUC ) ,( MUR + RCSe ) ),Min( ( DS - ( MUC + RMSe ) ) ,( MUR + RMSe ) ) )", "obj1": 0.69921875, "obj2": 0.2939356308082122}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) + DDR ) / ( MDR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Max( MUC,MUR ) - ( DS + RRSe ) ) * ( ( CS * RMSe ) / Max( RMSe,MUM ) ) ) ,( Max( ( RMSe - CS ),( MLU + MUC ) ) - ( Min( MLU ,RRSe ) - ( CS * RCSe ) ) ) )", "obj1": 0.708984375, "obj2": 0.27462129805991464}, {"determining": "Max( ( FirstVNF_RAM_Server + MDR ),( MRS + CRS ) )", "choosing": "( Min( ( ( MLU + MUR ) - ( CS * MLU ) ) ,( ( DS - RRSe ) + ( RCSe + MUM ) ) ) - ( Min( Max( MUR,RMSe ) ,Min( MUR ,MUC ) ) / Max( Max( CS,DS ),( CS + MUM ) ) ) )", "obj1": 0.69921875, "obj2": 0.2725569531052941}, {"determining": "( Max( Min( Min( DDR ,BR ) ,Max( FirstVNF_RAM_Server,AMS ) ),( ( DDR / MRS ) + ( FirstVNF_CPU_Server / MDR ) ) ) * Min( Min( Max( FirstVNF_RAM,FirstVNF_CPU ) ,Min( DDR ,MRS ) ) ,Min( ( MRS + DDR ) ,( MDR + MDR ) ) ) )", "choosing": "( ( ( ( RCSe - RMSe ) - ( MUR + MUM ) ) / ( Min( MUC ,MLU ) * ( MUR * DS ) ) ) - Max( Max( ( DS + MUM ),Max( RRSe,RRSe ) ),( ( RMSe - RMSe ) + ( MUC - RRSe ) ) ) )", "obj1": 0.66796875, "obj2": 0.2579145528673922}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM_Server ) ) / ( Max( RRS,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server - ARS ) ) * ( ( BR / FirstVNF_RAM ) * Max( Const,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RMSe + RCSe ) + ( MUC * DS ) ) - ( ( MUC / CS ) - Min( RRSe ,MLU ) ) ),Max( ( Min( RRSe ,DS ) * Max( MUC,RMSe ) ),Min( Max( MLU,RMSe ) ,Min( RMSe ,DS ) ) ) )", "obj1": 0.78515625, "obj2": 0.18743646262668331}, {"determining": "( Max( ( DDR * Const ),FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / ARS ) )", "choosing": "Min( ( ( ( RCSe - RMSe ) * ( RMSe / CS ) ) + ( ( RCSe / MUR ) + ( MUC - CS ) ) ) ,Min( Min( ( CS / CS ) ,Max( DS,RCSe ) ) ,( ( MLU - MUM ) / Max( MLU,MLU ) ) ) )", "obj1": 0.73828125, "obj2": 0.28921847524654243}, {"determining": "Max( Min( CRS ,( PN * FirstVNF_Mem_Server ) ),( Min( PN ,ACS ) / DDR ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 0.712890625, "obj2": 0.2922189291885915}, {"determining": "Max( Max( ( Min( FirstVNF_Mem ,ACS ) / ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) / CRS ) ),Max( ( FirstVNF_Mem_Server + BR ),Max( BR,FirstVNF_CPU_Server ) ) ),( ( Min( DDR ,AMS ) * ( CRS + Const ) ) * Min( Min( PN ,ARS ) ,( ARS - ACS ) ) ) )", "choosing": "( ( ( Min( MUR ,RCSe ) + Max( RRSe,RMSe ) ) - ( ( RMSe * RRSe ) + ( RMSe / MUC ) ) ) + Max( ( Min( MUM ,( MUC * RRSe ) ) - Min( MUR ,CS ) ),Max( ( CS - CS ),( MLU + MUM ) ) ) )", "obj1": 0.697265625, "obj2": 0.27649747293877464}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - RRS ),ARS ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( RMSe - ( RRSe / ( RRSe - MUR ) ) ) * RRSe ) * DS ) / CS ) ) )", "obj1": 0.689453125, "obj2": 0.24589465320786613}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( Min( ( ( RCSe - DS ) + ( MLU - MLU ) ) ,( ( MUR * CS ) - ( RMSe * CS ) ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 0.7578125, "obj2": 0.25613120253865435}, {"determining": "( ( MRS * ( MRS / CRS ) ) / ( AMS * BR ) )", "choosing": "( ( RCSe - RMSe ) / ( MUC + RRSe ) )", "obj1": 0.73046875, "obj2": 0.2852272633836946}, {"determining": "Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,( ( MRS + DDR ) - Max( MRS,( ( ARS - FirstVNF_Mem ) + Max( ARS,CRS ) ) ) ) ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / CRS ) ) ) )", "choosing": "( ( Min( DS ,RRSe ) * ( MUC * CS ) ) + ( RRSe + ( Max( RCSe,DS ) - ( RCSe * RCSe ) ) ) )", "obj1": 0.736328125, "obj2": 0.2653086045306952}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,( Min( FirstVNF_Mem ,ARS ) - PN ) ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Max( MUR,Min( MUR ,MUC ) ) ) )", "obj1": 0.732421875, "obj2": 0.27113369833739076}, {"determining": "( ( Min( ( Const * ARS ) ,( FirstVNF_CPU_Server * Const ) ) * ( ( RRS / PN ) + ( ARS + FirstVNF_CPU ) ) ) - Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( ACS + MRS ) + ( PN / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + CS ) / Min( RCSe ,DS ) ) - Max( ( MUM - MUC ),( RRSe + RRSe ) ) ) * Min( Max( ( RMSe / MUR ),Max( DS,MUM ) ) ,( ( MUR * RMSe ) * Max( MLU,MUC ) ) ) )", "obj1": 0.970703125, "obj2": 0.04286292399878479}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) + Max( FirstVNF_CPU_Server,Const ) ) - Max( ( CRS + FirstVNF_CPU ),( Const + RRS ) ) ),( Const / AMS ) )", "choosing": "( Max( DS,( RMSe - DS ) ) / Max( Min( CS ,( ( MLU - ( ( ( CS - DS ) - MUC ) + MUR ) ) - ( ( ( MLU + ( RRSe + RRSe ) ) + ( CS * ( MLU + MLU ) ) ) / CS ) ) ),( CS / MUR ) ) )", "obj1": 0.732421875, "obj2": 0.293031685199932}, {"determining": "Max( ( Min( ( Const / BR ) ,( FirstVNF_CPU * AMS ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( Const + ACS ) ) ),( ( Max( ( FirstVNF_RAM - FirstVNF_Mem ),FirstVNF_Mem ) - ( FirstVNF_CPU_Server - MDR ) ) + ( Max( CRS,PN ) / ( RRS * Const ) ) ) )", "choosing": "( ( ( ( CS / DS ) - Min( MUR ,MLU ) ) / ( Max( RMSe,RMSe ) / Min( MUC ,MLU ) ) ) * ( ( ( MLU / CS ) / ( CS * MUR ) ) - ( Min( RRSe ,RMSe ) * ( RMSe - CS ) ) ) )", "obj1": 0.6953125, "obj2": 0.2812445939597695}, {"determining": "( Min( ACS ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( RRSe - ( Max( RRSe,MUM ) * MUM ) ) - ( RRSe - ( Min( MLU ,MUC ) * RRSe ) ) )", "obj1": 0.794921875, "obj2": 0.1857898631598467}, {"determining": "( ( ( MRS + FirstVNF_Mem_Server ) * MDR ) + Min( ( Min( ACS ,RRS ) * FirstVNF_CPU_Server ) ,DDR ) )", "choosing": "( Min( Min( Max( RRSe,MUM ) ,MUC ) ,RRSe ) + ( RMSe / RCSe ) )", "obj1": 0.662109375, "obj2": 0.2666614492941314}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,( ACS + FirstVNF_CPU ) ) - CRS ) + Max( ARS,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe + MUM ) + ( MUR / ( MLU + MUC ) ) )", "obj1": 0.69140625, "obj2": 0.2707428031670096}, {"determining": "( Max( MRS,BR ) * ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( ( RRSe + RCSe ) ,( MUM - CS ) ) + ( Max( MUM,MLU ) / ( MUR + RMSe ) ) ),Min( ( ( RMSe / MLU ) * ( MUM / MUR ) ) ,Min( Min( RMSe ,CS ) ,Min( RCSe ,RMSe ) ) ) )", "obj1": 0.736328125, "obj2": 0.2769996436415795}, {"determining": "Min( Max( Max( ( FirstVNF_RAM_Server / ARS ),( FirstVNF_CPU_Server * MRS ) ),( Min( FirstVNF_Mem_Server ,ARS ) - ( MDR / CRS ) ) ) ,( ( Min( CRS ,FirstVNF_Mem ) + ( AMS + FirstVNF_Mem ) ) * Min( ( MDR - FirstVNF_RAM ) ,Max( DDR,DDR ) ) ) )", "choosing": "Max( ( ( ( MUC * MUM ) - ( RRSe + MLU ) ) - Min( ( MLU - RCSe ) ,( RRSe * RMSe ) ) ),( Max( ( CS + DS ),( MUR / CS ) ) + ( ( RRSe + RMSe ) + ( DS + RCSe ) ) ) )", "obj1": 0.912109375, "obj2": 0.09400899368643259}, {"determining": "( ( Max( Min( BR ,CRS ),Max( MRS,FirstVNF_RAM ) ) * Min( Min( AMS ,ARS ) ,( ACS - PN ) ) ) * ( ( ( CRS + PN ) * Min( ARS ,ACS ) ) - ( ( ACS - ACS ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS / DS ) + ( RCSe + RRSe ) ) / ( Min( MUR ,MLU ) * ( RCSe + RCSe ) ) ) / ( ( ( MUM / RMSe ) - ( RMSe - MLU ) ) - ( ( MUC - RMSe ) * ( MLU * DS ) ) ) )", "obj1": 0.732421875, "obj2": 0.25675031344175875}, {"determining": "Min( ( ( ( FirstVNF_CPU / PN ) / ( BR / DDR ) ) - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( CS / MLU ) )", "obj1": 0.724609375, "obj2": 0.28740698926579716}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( ARS,MRS ),FirstVNF_CPU ),( Const - AMS ) )", "choosing": "( Min( RRSe ,( RRSe * MLU ) ) + ( MUC * MLU ) )", "obj1": 0.681640625, "obj2": 0.25826418559551423}, {"determining": "( ( Min( Min( FirstVNF_RAM ,BR ) ,( FirstVNF_RAM - PN ) ) - Min( ( MRS - AMS ) ,( AMS * FirstVNF_Mem ) ) ) / ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_CPU / BR ) ) * ( ( ACS / MDR ) - ( AMS - PN ) ) ) )", "choosing": "( ( MLU - MLU ) - ( ( RCSe / CS ) * RMSe ) )", "obj1": 0.99609375, "obj2": 0.005768069780844738}, {"determining": "Min( ( FirstVNF_Mem - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9375, "obj2": 0.0365384226930656}, {"determining": "( ( Min( ( ACS + AMS ) ,Min( CRS ,ACS ) ) / PN ) / ( MRS / FirstVNF_CPU ) )", "choosing": "( ( CS / MUC ) + Max( RCSe,( MLU * RMSe ) ) )", "obj1": 0.712890625, "obj2": 0.2756198997302227}], "2": [{"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) + Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( Max( RRSe,MUM ) ,RCSe ) * ( RRSe - MUR ) )", "obj1": 0.62890625, "obj2": 0.26952852117241}, {"determining": "( ( MDR + ( MRS / ACS ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RCSe ) / ( ( DS - MUM ) - ( MLU * MLU ) ) )", "obj1": 0.8671875, "obj2": 0.12428469154853497}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Max( ( MUC - MLU ),( MUC + MLU ) )", "obj1": 0.708984375, "obj2": 0.21393105849999042}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( FirstVNF_RAM / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,RCSe ) )", "obj1": 0.841796875, "obj2": 0.14714958484861207}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM_Server ) ) / ( Max( RRS,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server - ARS ) ) * ( ( BR / FirstVNF_RAM ) * Max( Const,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RMSe + RCSe ) + ( MUC * DS ) ) - ( ( MUC / CS ) - Min( RRSe ,MLU ) ) ),Max( ( Min( RRSe ,DS ) * Max( MUC,RMSe ) ),Min( Max( MLU,RMSe ) ,Min( RMSe ,DS ) ) ) )", "obj1": 0.78515625, "obj2": 0.18743646262668331}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.82421875, "obj2": 0.15083337093781915}, {"determining": "Min( ( BR * FirstVNF_Mem ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * ( AMS + FirstVNF_RAM ) ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( DS * Max( RCSe,RRSe ) ) - ( MUR / DS ) )", "obj1": 0.806640625, "obj2": 0.16758414104193423}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.921875, "obj2": 0.07140627204204679}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "( Min( RCSe ,MUM ) - ( RCSe * MUR ) )", "obj1": 0.69921875, "obj2": 0.19426418329495138}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + ARS ) )", "choosing": "Min( Max( RRSe,( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 0.70703125, "obj2": 0.23029641653834812}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( Min( RMSe ,RMSe ) - Max( MLU,MUR ) )", "obj1": 0.974609375, "obj2": 0.024313713062263924}, {"determining": "Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( ( FirstVNF_RAM / FirstVNF_CPU_Server ) - RRS ),ARS ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( RMSe - ( RRSe / ( RRSe - MUR ) ) ) * RRSe ) * DS ) / CS ) ) )", "obj1": 0.689453125, "obj2": 0.24589465320786613}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / Min( ( MDR - RRS ) ,RRS ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 0.67578125, "obj2": 0.24724404144282305}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) )", "obj1": 0.650390625, "obj2": 0.25049533507084903}, {"determining": "( Max( MRS,BR ) * ( ACS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS / RCSe ) ,DS )", "obj1": 0.80078125, "obj2": 0.17971634942765785}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( Max( Max( AMS,FirstVNF_CPU ),MRS ) / ( ACS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / ( AMS - MRS ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RRSe ) / Max( ( Min( MUM ,Max( ( ( MUC * ( RRSe + MLU ) ) / CS ),MUC ) ) * MUM ),DS ) )", "obj1": 0.634765625, "obj2": 0.2590619850985323}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + DDR )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,( RRSe - MUR ) )", "obj1": 0.630859375, "obj2": 0.2631012436652241}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / PN ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) ) )", "obj1": 0.650390625, "obj2": 0.25049533507084903}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) + ( PN * FirstVNF_RAM_Server ) ) / ( Max( RRS,FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_Mem_Server + CRS ) * ( FirstVNF_Mem_Server - ARS ) ) * ( ( BR / FirstVNF_RAM ) * Max( Const,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( RMSe + RCSe ) + ( MUC * DS ) ) - ( ( MUC / CS ) - Min( RRSe ,MLU ) ) ),Max( ( Min( RRSe ,DS ) * Max( MUC,RMSe ) ),Min( Max( MLU,RMSe ) ,Min( RMSe ,DS ) ) ) )", "obj1": 0.78515625, "obj2": 0.18743646262668331}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( ACS ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( RRSe - ( Max( RRSe,MUM ) * MUM ) ) - ( RRSe - ( Min( MLU ,MUC ) * RRSe ) ) )", "obj1": 0.794921875, "obj2": 0.1857898631598467}, {"determining": "( Max( MRS,CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( ( CRS / FirstVNF_CPU_Server ) ,BR ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MUM,( RCSe + ( MUR - Max( Min( ( MUC + CS ) ,RCSe ),MUM ) ) ) ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * DDR ),( FirstVNF_RAM * MRS ) )", "choosing": "( ( ( ( MUM - Min( MUR ,Min( MLU ,( RRSe + RCSe ) ) ) ) + Min( MUM ,MUR ) ) * RRSe ) / Max( MLU,MUR ) )", "obj1": 0.634765625, "obj2": 0.2590619850985323}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MLU,MUR ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( ( MRS + MDR ) - ( MDR / MDR ) )", "choosing": "( ( ( RRSe / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.99609375, "obj2": 0.002915051068341349}, {"determining": "( Min( ACS ,( FirstVNF_RAM_Server + FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,Const ) )", "choosing": "( ( RRSe - ( Max( RRSe,MUM ) * MUM ) ) - ( RRSe - ( Min( MLU ,MUC ) * RRSe ) ) )", "obj1": 0.794921875, "obj2": 0.1857898631598467}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Min( FirstVNF_Mem ,MDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( RMSe * RRSe ) + RCSe ) * RCSe ) * DS ) * ( RMSe - Min( MLU ,( ( ( MLU - ( ( CS / RMSe ) / Max( CS,RRSe ) ) ) + MUR ) - Max( CS,MUR ) ) ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( Min( ( ( RCSe - DS ) + ( MLU - MLU ) ) ,( MUM * MUR ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * CRS ) ) + ( ( FirstVNF_CPU + MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( Min( ( Const * ARS ) ,( FirstVNF_CPU_Server * Const ) ),Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( MUR * RMSe ) * Max( MLU,MUC ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * MRS ) - Max( Min( Min( BR ,FirstVNF_RAM ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ),( ( ACS + MRS ) + ( PN / CRS ) ) ) )", "choosing": "( ( ( ( RCSe + CS ) / Min( RCSe ,DS ) ) - Max( ( MUM - MUC ),( RRSe + RRSe ) ) ) * ( RMSe * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / ( ( MRS + FirstVNF_Mem_Server ) * MDR ) ) )", "choosing": "( ( MUR * Max( CS,RMSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,( ( Min( PN ,( ACS + FirstVNF_CPU ) ) - CRS ) + Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( ( ( RRSe + MUM ) + ( MUR / ( MLU + MUC ) ) ) - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,DDR ) + Max( ARS,FirstVNF_Mem ) )", "choosing": "( Min( Max( RRSe,MUM ) ,RCSe ) * ( RRSe - MUR ) )", "obj1": 0.62890625, "obj2": 0.26952852117241}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "( Min( RCSe ,MUM ) - ( RCSe * MUR ) )", "obj1": 0.7265625, "obj2": 0.17998907052216734}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( ( MRS * FirstVNF_Mem ) - DDR ) )", "choosing": "( Min( ( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) ) ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.8515625, "obj2": 0.10586210555284432}, {"determining": "( Max( MRS,BR ) * ( ACS - FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS / RCSe ) ,DS )", "obj1": 0.80078125, "obj2": 0.17971634942765785}, {"determining": "( ( RRS - MDR ) + Max( ARS,MRS ) )", "choosing": "( Min( RCSe ,MUM ) - ( ( Min( MUR ,MUR ) + ( MLU - RRSe ) ) * MUR ) )", "obj1": 0.6953125, "obj2": 0.19891533573311732}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "Max( Min( ( DDR - RRS ) ,( DDR + FirstVNF_Mem ) ),( MRS / ACS ) )", "choosing": "Max( ( ( MLU * RMSe ) * ( MUR - RMSe ) ),( RMSe - RMSe ) )", "obj1": 0.671875, "obj2": 0.23769521846539787}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 0.84375, "obj2": 0.1332031504827002}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.921875, "obj2": 0.07140627204204679}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "( Min( RCSe ,MUM ) - ( RCSe * MUR ) )", "obj1": 0.69921875, "obj2": 0.19426418329495138}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( Min( RMSe ,RMSe ) - Max( MLU,MUR ) )", "obj1": 0.974609375, "obj2": 0.024313713062263924}, {"determining": "( ( MDR + AMS ) * ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Min( RCSe ,RCSe ) / ( ( Max( MUM,MUR ) - Max( MLU,DS ) ) + MUC ) )", "obj1": 0.837890625, "obj2": 0.14503417301684746}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.82421875, "obj2": 0.15083337093781915}, {"determining": "Max( ARS,( Min( ARS ,ARS ) / ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "( ( DS / ( Min( RCSe ,MUM ) - ( RCSe * MUR ) ) ) / ( Min( MUR ,MUR ) + ( MLU - RRSe ) ) )", "obj1": 0.65234375, "obj2": 0.248704844019964}, {"determining": "Max( Max( Max( ARS,MRS ),FirstVNF_CPU ),( Const - AMS ) )", "choosing": "Max( ( ( MLU * RMSe ) * ( MUR - RMSe ) ),( RMSe - RMSe ) )", "obj1": 0.671875, "obj2": 0.23769521846539787}, {"determining": "Min( ( BR * FirstVNF_Mem ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * ( AMS + FirstVNF_RAM ) ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( DS * Max( RCSe,RRSe ) ) - ( MUR / DS ) )", "obj1": 0.806640625, "obj2": 0.16758414104193423}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,( Min( MUR ,MUR ) + ( MLU - RRSe ) ) ) - Max( MLU,DS ) )", "obj1": 0.91015625, "obj2": 0.08158390304647925}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "Min( Max( FirstVNF_RAM_Server,MDR ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.8203125, "obj2": 0.16150844550162444}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,( Min( MUM ,RCSe ) * ( MLU - RCSe ) ) ) ) - RRSe ) )", "obj1": 0.8125, "obj2": 0.16431292075032305}, {"determining": "( ( FirstVNF_CPU_Server + MDR ) * ( BR + AMS ) )", "choosing": "( ( DS / DS ) / Max( MLU,RRSe ) )", "obj1": 0.634765625, "obj2": 0.2590619850985323}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + DDR )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,( RRSe - MUR ) )", "obj1": 0.630859375, "obj2": 0.2631012436652241}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.98046875, "obj2": 0.014791102801911017}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) )", "obj1": 0.650390625, "obj2": 0.25049533507084903}, {"determining": "( ( Max( Max( AMS,FirstVNF_CPU ),MRS ) / ( ACS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / ( AMS - MRS ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RRSe ) / Max( ( Min( MUM ,Max( ( ( MUC * ( RRSe + MLU ) ) / CS ),MUC ) ) * MUM ),DS ) )", "obj1": 0.634765625, "obj2": 0.2590619850985323}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / PN ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) ) )", "obj1": 0.650390625, "obj2": 0.25049533507084903}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MLU,MUR ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "Min( Max( FirstVNF_RAM_Server,MDR ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.8203125, "obj2": 0.16150844550162444}, {"determining": "( Max( MRS,CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( ( CRS / FirstVNF_CPU_Server ) ,BR ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MUM,( RCSe + ( MUR - Max( Min( ( MUC + CS ) ,RCSe ),MUM ) ) ) ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Min( FirstVNF_Mem ,MDR ) - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + FirstVNF_RAM ) )", "choosing": "( ( ( ( ( RMSe * RRSe ) + RCSe ) * RCSe ) * DS ) * ( RMSe - Min( MLU ,( ( ( MLU - ( ( CS / RMSe ) / Max( CS,RRSe ) ) ) + MUR ) - Max( CS,MUR ) ) ) ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( Min( ( ( RCSe - DS ) + ( MLU - MLU ) ) ,( MUM * MUR ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * CRS ) ) + ( ( FirstVNF_CPU + MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( Min( ( ( DDR + AMS ) + CRS ) ,PN ) * ( ( FirstVNF_CPU_Server - DDR ) * Const ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Min( Max( RMSe,( RRSe + DS ) ) ,Min( ( ( MUR / DS ) + RCSe ) ,MUC ) ) - MUR ),MUR ) )", "obj1": 0.765625, "obj2": 0.1587796368771032}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.82421875, "obj2": 0.15083337093781915}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "Max( Min( ( DDR - RRS ) ,( DDR + FirstVNF_Mem ) ),( MRS / ACS ) )", "choosing": "Max( ( ( MLU * RMSe ) * ( MUR - RMSe ) ),( RMSe - RMSe ) )", "obj1": 0.671875, "obj2": 0.23769521846539787}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.619140625, "obj2": 0.267158493796166}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.970703125, "obj2": 0.02427413578261523}, {"determining": "Max( Max( ARS,MRS ),( Min( ARS ,ARS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) / Min( RCSe ,RCSe ) )", "obj1": 0.634765625, "obj2": 0.2535998274307042}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + DDR )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,( RRSe - MUR ) )", "obj1": 0.630859375, "obj2": 0.2631012436652241}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( ( FirstVNF_Mem_Server / PN ) + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,( Min( MUR ,MUR ) + ( MLU - RRSe ) ) ) - Max( MLU,DS ) )", "obj1": 0.91015625, "obj2": 0.08158390304647925}, {"determining": "( ( Max( Max( AMS,FirstVNF_CPU ),MRS ) / ( ACS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / ( AMS - MRS ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RRSe ) / Max( ( Min( MUM ,Max( ( ( MUC * ( RRSe + MLU ) ) / CS ),MUC ) ) * MUM ),DS ) )", "obj1": 0.619140625, "obj2": 0.267158493796166}, {"determining": "( ( ACS * FirstVNF_Mem ) - ( AMS / FirstVNF_Mem ) )", "choosing": "( ( MUR * Max( CS,RRSe ) ) * Min( RCSe ,RRSe ) )", "obj1": 0.904296875, "obj2": 0.08966693110326206}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.98046875, "obj2": 0.014791102801911017}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / ( ARS / DDR ) ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) )", "obj1": 0.650390625, "obj2": 0.25049533507084903}, {"determining": "( Min( AMS ,MRS ) / Min( BR ,( ( FirstVNF_RAM_Server * Max( Max( AMS,( MRS / ACS ) ),MRS ) ) - ( RRS * BR ) ) ) )", "choosing": "Min( ( RRSe * RCSe ) ,Max( ( Min( MUR ,DS ) - ( MUM / DS ) ),( RCSe / ( ( ( RCSe * DS ) + CS ) / ( Min( MUR ,DS ) - ( MUM / DS ) ) ) ) ) )", "obj1": 0.65625, "obj2": 0.2474809379990847}, {"determining": "( Min( AMS ,MRS ) / Min( ARS ,MRS ) )", "choosing": "( Min( CS ,DS ) / Max( MLU,RRSe ) )", "obj1": 0.669921875, "obj2": 0.2418850335043179}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MLU,MUR ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( Max( MRS,CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( ( CRS / FirstVNF_CPU_Server ) ,BR ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MUM,( RCSe + ( MUR - Max( Min( ( MUC + CS ) ,RCSe ),MUM ) ) ) ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "Max( ARS,( Min( ARS ,ARS ) / ( FirstVNF_Mem_Server / PN ) ) )", "choosing": "( ( DS / ( Min( RCSe ,MUM ) - ( RCSe * MUR ) ) ) / ( Min( MUR ,MUR ) + ( MLU - RRSe ) ) )", "obj1": 0.65234375, "obj2": 0.248704844019964}, {"determining": "Max( Max( Max( ARS,MRS ),FirstVNF_CPU ),( Const - AMS ) )", "choosing": "Max( ( ( MLU * RMSe ) * ( MUR - RMSe ) ),( RMSe - RMSe ) )", "obj1": 0.671875, "obj2": 0.23769521846539787}, {"determining": "( ( Min( FirstVNF_RAM ,AMS ) / PN ) + ( ( FirstVNF_CPU_Server - CRS ) / ( AMS / CRS ) ) )", "choosing": "Min( ( ( DS + MUM ) - ( RRSe * RRSe ) ) ,Min( ( Min( RCSe ,RMSe ) / ( MUR / MLU ) ) ,( ( MLU - RMSe ) - ( RCSe / RRSe ) ) ) )", "obj1": 0.650390625, "obj2": 0.25049533507084903}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( Min( ( ( RCSe - DS ) + ( MLU - MLU ) ) ,( MUM * MUR ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * CRS ) ) + ( ( FirstVNF_CPU + MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) + Min( ( MRS - BR ) ,( MDR - DDR ) ) )", "choosing": "( ( MUC - MLU ) - ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( Min( ( ( DDR + AMS ) + CRS ) ,PN ) * ( ( FirstVNF_CPU_Server - DDR ) * Const ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Min( Max( RMSe,( RRSe + DS ) ) ,Min( ( ( MUR / DS ) + RCSe ) ,MUC ) ) - MUR ),MUR ) )", "obj1": 0.765625, "obj2": 0.1587796368771032}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) / MUC ) ) )", "obj1": 0.728515625, "obj2": 0.17560558156739448}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.89453125, "obj2": 0.09492488436691335}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server / DDR ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.82421875, "obj2": 0.15083337093781915}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( Min( Max( MDR,( ARS / FirstVNF_CPU ) ) ,( ( ( ( ARS / ( MRS / FirstVNF_CPU ) ) / BR ) + FirstVNF_RAM_Server ) + CRS ) ) * Max( ARS,Min( CRS ,BR ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( Max( Min( RMSe ,MUM ),MUC ) + ( ( RMSe + MUR ) * MUR ) ) + ( ( RRSe * RCSe ) - DS ) ) / RRSe ) - MUM ),MUC ) )", "obj1": 0.666015625, "obj2": 0.2350333658074687}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "Min( ( Min( FirstVNF_CPU_Server ,( ACS / MDR ) ) - BR ) ,( MDR - DDR ) )", "choosing": "Max( ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) - MLU ),( MUC + MLU ) )", "obj1": 0.8125, "obj2": 0.15721340910443082}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( DDR / Min( AMS ,AMS ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) ,Min( ( MUM - ( MUR * RMSe ) ) ,RCSe ) )", "obj1": 0.61328125, "obj2": 0.28655891350465795}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.970703125, "obj2": 0.02427413578261523}, {"determining": "( ( ( FirstVNF_Mem_Server + ( ACS * FirstVNF_CPU ) ) - ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_Mem ) * MDR ) ) * ( DDR - Const ) )", "choosing": "( ( MLU / ( MUR - MUC ) ) / Min( MLU ,( ( RMSe / ( ( ( MUM / ( RRSe / DS ) ) - MLU ) / ( Max( MUR,Min( DS ,RCSe ) ) + Max( MLU,( RCSe - RRSe ) ) ) ) ) + ( ( DS + Max( Max( CS,RCSe ),( ( DS / DS ) - MUR ) ) ) * Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.619140625, "obj2": 0.267158493796166}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( FirstVNF_Mem / ( AMS + ( FirstVNF_CPU_Server - ( ACS * ( Min( FirstVNF_RAM ,Const ) - PN ) ) ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.630859375, "obj2": 0.25577107051707093}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( ( MRS / FirstVNF_RAM_Server ) / Min( ( ( ( PN * FirstVNF_Mem_Server ) / Min( Const ,ARS ) ) - RRS ) ,RRS ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( RRSe * ( MUR - MUC ) ) )", "obj1": 0.642578125, "obj2": 0.24897773499662365}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.619140625, "obj2": 0.267158493796166}, {"determining": "Max( Max( ARS,MRS ),( Min( ARS ,ARS ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( ( DS / DS ) / Min( RCSe ,RCSe ) )", "obj1": 0.634765625, "obj2": 0.2535998274307042}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.98046875, "obj2": 0.014791102801911017}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( DDR / Min( AMS ,AMS ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) ,Min( ( MUM - ( MUR * RMSe ) ) ,RCSe ) )", "obj1": 0.61328125, "obj2": 0.28655891350465795}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MLU,MUR ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( Max( MRS,CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( ( CRS / FirstVNF_CPU_Server ) ,BR ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MUM,( RCSe + ( MUR - Max( Min( ( MUC + CS ) ,RCSe ),MUM ) ) ) ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.916015625, "obj2": 0.07445521128768239}, {"determining": "( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) ) / ( FirstVNF_Mem_Server + Const ) )", "choosing": "( Min( ( ( RCSe - DS ) + ( MLU - MLU ) ) ,( MUM * MUR ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * CRS ) ) + ( ( FirstVNF_CPU + MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( ( ACS / FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server * Max( Max( AMS,( Max( RRS,PN ) / ACS ) ),MRS ) ) - FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,Min( RCSe ,RCSe ) ) ,( RCSe * ( ( RCSe + MUR ) / DS ) ) )", "obj1": 0.8828125, "obj2": 0.10338016659532512}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( Min( Max( MDR,( ARS / FirstVNF_CPU ) ) ,( ( ( ( ARS / ( MRS / FirstVNF_CPU ) ) / BR ) + FirstVNF_RAM_Server ) + CRS ) ) * Max( ARS,Min( CRS ,BR ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( Max( Min( RMSe ,MUM ),MUC ) + ( ( RMSe + MUR ) * MUR ) ) + ( ( RRSe * RCSe ) - DS ) ) / RRSe ) - MUM ),MUC ) )", "obj1": 0.666015625, "obj2": 0.2350333658074687}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) / MUC ) ) )", "obj1": 0.728515625, "obj2": 0.17560558156739448}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( CRS / ( ( AMS - AMS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM - DS ) ) / DS ) )", "obj1": 0.73828125, "obj2": 0.1658684030373413}, {"determining": "( Min( ( ( DDR + AMS ) + CRS ) ,PN ) * ( ( FirstVNF_CPU_Server - DDR ) * Const ) )", "choosing": "( Min( DS ,MLU ) * Max( ( Min( Max( RMSe,( RRSe + DS ) ) ,Min( ( ( MUR / DS ) + RCSe ) ,MUC ) ) - MUR ),MUR ) )", "obj1": 0.765625, "obj2": 0.1587796368771032}, {"determining": "( ( DDR / Min( AMS ,AMS ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) ,Min( ( MUM - ( MUR * RMSe ) ) ,RCSe ) )", "obj1": 0.61328125, "obj2": 0.28655891350465795}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.970703125, "obj2": 0.02427413578261523}, {"determining": "( ( Max( Max( AMS,FirstVNF_CPU ),MRS ) / ( ACS - FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM / ( AMS - MRS ) ) + Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,RRSe ) / Max( ( Min( MUM ,Max( ( ( MUC * ( RRSe + MLU ) ) / CS ),MUC ) ) * MUM ),DS ) )", "obj1": 0.76171875, "obj2": 0.16218377476971763}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.89453125, "obj2": 0.09492488436691335}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.619140625, "obj2": 0.267158493796166}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * DS ) / DS ) )", "obj1": 0.623046875, "obj2": 0.26370494326454896}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( MUM ,RCSe ) ) - RRSe ) )", "obj1": 0.98046875, "obj2": 0.014791102801911017}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( DDR / Min( AMS ,AMS ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) ,Min( ( MUM - ( MUR * RMSe ) ) ,RCSe ) )", "obj1": 0.61328125, "obj2": 0.28655891350465795}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - Max( MRS,Const ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MLU,MUR ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( Max( MRS,CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) * Min( ( CRS / FirstVNF_CPU_Server ) ,BR ) ) ) )", "choosing": "( Min( RMSe ,MLU ) - Max( MUM,( RCSe + ( MUR - Max( Min( ( MUC + CS ) ,RCSe ),MUM ) ) ) ) )", "obj1": 0.978515625, "obj2": 0.017502226998091962}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( ( FirstVNF_Mem_Server + ( ACS * FirstVNF_CPU ) ) - ( ( ( ARS + FirstVNF_Mem ) / FirstVNF_Mem ) * MDR ) ) * ( DDR - Const ) )", "choosing": "( ( MLU / ( MUR - MUC ) ) / Min( MLU ,( ( RMSe / ( ( ( MUM / ( RRSe / DS ) ) - MLU ) / ( Max( MUR,Min( DS ,RCSe ) ) + Max( MLU,( RCSe - RRSe ) ) ) ) ) + ( ( DS + Max( Max( CS,RCSe ),( ( DS / DS ) - MUR ) ) ) * Max( RRSe,RMSe ) ) ) ) )", "obj1": 0.619140625, "obj2": 0.267158493796166}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( ( ACS / FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server * Max( Max( AMS,( Max( RRS,PN ) / ACS ) ),MRS ) ) - FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,Min( RCSe ,RCSe ) ) ,( RCSe * ( ( RCSe + MUR ) / DS ) ) )", "obj1": 0.8828125, "obj2": 0.10338016659532512}, {"determining": "( Min( Max( MDR,( ARS / FirstVNF_CPU ) ) ,( ( ( ( ARS / ( MRS / FirstVNF_CPU ) ) / BR ) + FirstVNF_RAM_Server ) + CRS ) ) * Max( ARS,Min( CRS ,BR ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( Max( Min( RMSe ,MUM ),MUC ) + ( ( RMSe + MUR ) * MUR ) ) + ( ( RRSe * RCSe ) - DS ) ) / RRSe ) - MUM ),MUC ) )", "obj1": 0.666015625, "obj2": 0.2350333658074687}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) / MUC ) ) )", "obj1": 0.728515625, "obj2": 0.17560558156739448}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.89453125, "obj2": 0.09492488436691335}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( FirstVNF_CPU_Server / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( ( MUM * Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ) / DS ) ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,MUR ) + ( ( RCSe - Min( ( ( RCSe * RRSe ) * MUM ) ,MUM ) ) - RRSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) / ( ( ( MRS + ( CRS + Max( ( DDR * RRS ),ACS ) ) ) + MRS ) - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RMSe * MUC ) + MLU ) / RMSe ) ,( Max( MLU,( DS / RRSe ) ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) / ( Const - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( CS * Max( RMSe,( RRSe * MUM ) ) ) ,CS ),RCSe ) * ( ( DS * ( ( RCSe * ( MLU - MUC ) ) - MLU ) ) / ( RMSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,AMS ) / ( Const - ( ( ( ( Min( AMS ,ARS ) * Min( ( FirstVNF_Mem_Server / CRS ) ,PN ) ) / Min( Const ,ARS ) ) * Const ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( Min( ( CS * Max( RMSe,( RRSe * MUM ) ) ) ,CS ),RCSe ) * ( ( DS * ( ( RCSe * ( MLU - MUC ) ) - MLU ) ) / ( RMSe * MUC ) ) ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( ( ACS / FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server * Max( Max( AMS,( Max( RRS,PN ) / ACS ) ),MRS ) ) - FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,Min( RCSe ,RCSe ) ) ,( RCSe * ( ( RCSe + MUR ) / DS ) ) )", "obj1": 0.8828125, "obj2": 0.10338016659532512}, {"determining": "( Min( Max( MDR,( ARS / FirstVNF_CPU ) ) ,( ( ( ( ARS / ( MRS / FirstVNF_CPU ) ) / BR ) + FirstVNF_RAM_Server ) + CRS ) ) * Max( ARS,Min( CRS ,BR ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( Max( Min( RMSe ,MUM ),MUC ) + ( ( RMSe + MUR ) * MUR ) ) + ( ( RRSe * RCSe ) - DS ) ) / RRSe ) - MUM ),MUC ) )", "obj1": 0.666015625, "obj2": 0.2350333658074687}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) / MUC ) ) )", "obj1": 0.728515625, "obj2": 0.17560558156739448}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.89453125, "obj2": 0.09492488436691335}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( ( FirstVNF_CPU_Server / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( ( MUM * Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ) / DS ) ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,RMSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - ( MUM / DS ) )", "obj1": 0.662109375, "obj2": 0.2430568664094285}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / CRS ) / ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) )", "choosing": "( ( RMSe - ( Max( MUM,CS ) + MUM ) ) - ( ( Max( MUR,RRSe ) + ( MUC / MUR ) ) / ( Min( MUR ,MUR ) / Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( ( ACS / FirstVNF_Mem ) / ( ( FirstVNF_RAM_Server * Max( Max( AMS,( Max( RRS,PN ) / ACS ) ),MRS ) ) - FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,Min( RCSe ,RCSe ) ) ,( RCSe * ( ( RCSe + MUR ) / DS ) ) )", "obj1": 0.8828125, "obj2": 0.10338016659532512}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) / MUC ) ) )", "obj1": 0.728515625, "obj2": 0.17560558156739448}, {"determining": "( Min( Max( MDR,( ARS / FirstVNF_CPU ) ) ,( ( ( ( ARS / ( MRS / FirstVNF_CPU ) ) / BR ) + FirstVNF_RAM_Server ) + CRS ) ) * Max( ARS,Min( CRS ,BR ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( Max( Min( RMSe ,MUM ),MUC ) + ( ( RMSe + MUR ) * MUR ) ) + ( ( RRSe * RCSe ) - DS ) ) / RRSe ) - MUM ),MUC ) )", "obj1": 0.666015625, "obj2": 0.2350333658074687}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.89453125, "obj2": 0.09492488436691335}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,MRS ) )", "choosing": "Min( ( RRSe - MUC ) ,( CS * ( MUM * RRSe ) ) )", "obj1": 0.662109375, "obj2": 0.239389464403695}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( RRSe - MUC ) ,( CS * ( MUM * RRSe ) ) )", "obj1": 0.662109375, "obj2": 0.239389464403695}, {"determining": "( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( FirstVNF_CPU_Server / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( ( MUM * Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ) / DS ) ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,RMSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( Max( ( FirstVNF_CPU * ( FirstVNF_CPU * FirstVNF_Mem ) ),( FirstVNF_RAM / Max( ( FirstVNF_Mem_Server - MDR ),ARS ) ) ) - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( ( RRSe / ( MLU - MUR ) ) * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / DS ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( Min( MDR ,FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( MLU * RCSe ) / ( ( MUR - RMSe ) * ( ( ( ( ( RRSe / ( MLU - MUR ) ) + RMSe ) * RRSe ) * DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.697265625, "obj2": 0.17833259894117093}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( RRS - MDR ) + Max( ARS,PN ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + ( ( MUM + Max( RMSe,( MUR + DS ) ) ) / ( MUC - MUM ) ) ) / MUC ) ) )", "obj1": 0.728515625, "obj2": 0.17560558156739448}, {"determining": "( Min( Max( MDR,( ARS / FirstVNF_CPU ) ) ,( ( ( ( ARS / ( MRS / FirstVNF_CPU ) ) / BR ) + FirstVNF_RAM_Server ) + CRS ) ) * Max( ARS,Min( CRS ,BR ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( Max( Min( RMSe ,MUM ),MUC ) + ( ( RMSe + MUR ) * MUR ) ) + ( ( RRSe * RCSe ) - DS ) ) / RRSe ) - MUM ),MUC ) )", "obj1": 0.666015625, "obj2": 0.2350333658074687}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,Max( BR,ACS ) ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,Max( ( DS + MUM ),MUC ) ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.890625, "obj2": 0.09482759875539995}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RRSe,RMSe ) )", "obj1": 0.849609375, "obj2": 0.09732117253222344}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.83984375, "obj2": 0.09971831335645398}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.9140625, "obj2": 0.07414963560915636}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.83984375, "obj2": 0.09971831335645398}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( ( ( ACS * AMS ) + ( ( ACS * AMS ) + FirstVNF_RAM_Server ) ) / Max( CRS,ACS ) )", "choosing": "( Min( ( MUM / Max( MLU,Min( MUC ,RCSe ) ) ) ,( RMSe * ( DS * RRSe ) ) ) - ( MUM / DS ) )", "obj1": 0.66015625, "obj2": 0.24071542401585222}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,MRS ) )", "choosing": "Min( ( RRSe - MUC ) ,( CS * ( MUM * RRSe ) ) )", "obj1": 0.662109375, "obj2": 0.239389464403695}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( RRSe - MUC ) ,( CS * ( MUM * RRSe ) ) )", "obj1": 0.662109375, "obj2": 0.239389464403695}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,RMSe ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) ) / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( ( ( ( MUM / RMSe ) + ( DS * MUC ) ) - ( ( RCSe + MLU ) / ( MUM - MUC ) ) ),( ( ( MLU + MUR ) - Max( CS,DS ) ) - ( Min( RCSe ,MUC ) - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.697265625, "obj2": 0.16904941993275868}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,Max( BR,ACS ) ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,Max( ( DS + MUM ),MUC ) ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.890625, "obj2": 0.09482759875539995}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( CRS / ( AMS - AMS ) ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,( DS - DS ) ) ) - DS ) ) / DS ) )", "obj1": 0.73046875, "obj2": 0.16335890342551962}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,RRSe ) ,Max( RRSe,RMSe ) )", "obj1": 0.849609375, "obj2": 0.09732117253222344}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( CS ,Max( RRSe,RMSe ) )", "obj1": 0.818359375, "obj2": 0.11726650943013316}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ( ( PN / Const ) - PN ) - ( FirstVNF_CPU * RRS ) ) * Max( ( ( FirstVNF_Mem - RRS ) * CRS ),ARS ) )", "choosing": "( ( Max( MLU,( RCSe - RRSe ) ) + ( Min( Min( RMSe ,DS ) ,( Min( ( ( RMSe / MUC ) / DS ) ,Max( RCSe,DS ) ) - RCSe ) ) + CS ) ) / ( Max( MLU,Max( CS,( MUM + DS ) ) ) - RMSe ) )", "obj1": 0.697265625, "obj2": 0.16904941993275868}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( ( ( ACS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( MUR ,DS ) - Min( Min( RCSe ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) )", "obj1": 0.650390625, "obj2": 0.24586578348831692}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.8203125, "obj2": 0.11200177162671034}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( MDR + Min( FirstVNF_RAM ,( Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,( ( Const + DDR ) - MRS ) ) - FirstVNF_Mem ) ) ) * ( ARS - FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.8984375, "obj2": 0.08883118967446009}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.83984375, "obj2": 0.09971831335645398}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.9140625, "obj2": 0.07414963560915636}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.83984375, "obj2": 0.09971831335645398}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( FirstVNF_RAM_Server - PN ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( ( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) ) ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( MUC + MUM ) - ( MLU + Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ) ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / RMSe ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,MLU )", "obj1": 0.896484375, "obj2": 0.08588924753531206}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( CRS / ( AMS - AMS ) ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,( DS - DS ) ) ) - DS ) ) / DS ) )", "obj1": 0.73046875, "obj2": 0.16335890342551962}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.810546875, "obj2": 0.11296235831303351}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.8203125, "obj2": 0.11200177162671034}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.83984375, "obj2": 0.09971831335645398}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.83984375, "obj2": 0.09971831335645398}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( ARS ,( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) ) ) / ( CRS + ARS ) )", "choosing": "( Max( ( ( MLU + MLU ) + ( ( MUR - CS ) - ( MLU + DS ) ) ),RCSe ) + ( MLU - RRSe ) )", "obj1": 0.916015625, "obj2": 0.07284160615920415}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( RRSe + MUC ) / ( Min( ( Min( ( RCSe - RMSe ) ,RRSe ) + ( RMSe + DS ) ) ,MUM ) / MUR ) )", "obj1": 0.9140625, "obj2": 0.07414963560915636}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( CRS / ( AMS - AMS ) ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,( DS - DS ) ) ) - DS ) ) / DS ) )", "obj1": 0.73046875, "obj2": 0.16335890342551962}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.810546875, "obj2": 0.11296235831303351}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.8203125, "obj2": 0.11200177162671034}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / RMSe ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,MLU )", "obj1": 0.8046875, "obj2": 0.11158908471326298}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( CRS / ( AMS - AMS ) ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,( DS - DS ) ) ) - DS ) ) / DS ) )", "obj1": 0.73046875, "obj2": 0.16335890342551962}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( BR + RRS ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( Max( MUM,MUR ) - Max( MLU,DS ) )", "obj1": 0.91796875, "obj2": 0.06881039269795991}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( MRS + MDR ) - ( MDR / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) ) / MUR ) * RMSe ) * ( DS / MUC ) )", "obj1": 0.919921875, "obj2": 0.06643716064695787}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( ( MRS / ( PN * FirstVNF_Mem_Server ) ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( Min( RMSe ,( ( MLU / RRSe ) / RCSe ) ) + ( MUR - MUC ) )", "obj1": 0.779296875, "obj2": 0.14193291717128187}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( ( CRS / ( ARS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( ( MLU * RRSe ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.791015625, "obj2": 0.12157704177005924}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,MLU )", "obj1": 0.8046875, "obj2": 0.11158908471326298}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( CRS / ( AMS - AMS ) ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,( DS - DS ) ) ) - DS ) ) / DS ) )", "obj1": 0.73046875, "obj2": 0.16335890342551962}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( Max( MRS,MRS ) + Max( FirstVNF_CPU,( ( DDR * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + FirstVNF_RAM ) - Const ) ) ) ) + ( ( Min( ( ( Min( AMS ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) + AMS ) ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( ( RCSe * DS ) + RRSe ) ,RCSe ),RRSe ) ) )", "obj1": 0.90625, "obj2": 0.07956259757309653}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( ( Max( MRS,MRS ) + Max( MRS,MRS ) ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.916015625, "obj2": 0.0662892475804891}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - FirstVNF_Mem_Server ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( RCSe / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.74609375, "obj2": 0.12692706199774767}, {"determining": "( ( Min( AMS ,MRS ) / ( BR / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,CRS ) ) ) ) + Min( Const ,PN ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Max( ( Min( MUR ,CS ) * RMSe ),DS ) / MUC ) ) ) ,( MUM * CS ) )", "obj1": 0.78515625, "obj2": 0.10739478659533604}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( CRS / ( Min( ( AMS * Const ) ,CRS ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( Min( CS ,DS ) / Min( CS ,DS ) ) )", "obj1": 0.73828125, "obj2": 0.1553437530449415}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( Max( MRS,MRS ) + Max( FirstVNF_CPU,( ( DDR * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + FirstVNF_RAM ) - Const ) ) ) ) + ( ( Min( ( ( Min( AMS ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) + AMS ) ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( ( RCSe * DS ) + RRSe ) ,RCSe ),RRSe ) ) )", "obj1": 0.90625, "obj2": 0.07956259757309653}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( Min( ( ( CRS + FirstVNF_RAM_Server ) + CRS ) ,Max( FirstVNF_Mem_Server,( PN / FirstVNF_CPU ) ) ) * ( Const * ( FirstVNF_CPU_Server - Min( AMS ,( FirstVNF_CPU_Server * ( ( CRS / CRS ) * ( MDR + FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( DS - MLU ) * Max( ( ( ( ( RCSe - ( ( MLU * RRSe ) - CS ) ) + ( RCSe / DS ) ) / DS ) - MUR ),MUR ) )", "obj1": 0.94921875, "obj2": 0.028343908671611944}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "Min( ( Const / ARS ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM - MLU ) ,( RCSe - ( ( Max( ( MUR - ( ( MUC * CS ) + ( RMSe + CS ) ) ),( ( ( RRSe + RRSe ) / ( MUM + RRSe ) ) * ( ( MUC + RRSe ) - ( CS - RRSe ) ) ) ) / RMSe ) - ( ( MLU / ( MUR - RMSe ) ) * ( Min( ( MUR + CS ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( ( Max( MRS,MRS ) + Max( MRS,MRS ) ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.916015625, "obj2": 0.0662892475804891}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MUR + ( DS - MLU ) ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,Min( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,PN ) ,( FirstVNF_Mem / MRS ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( Max( CS,MUM ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS * MUC ) - ( DS - MUR ) ) - Max( Max( CS,MUM ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( Min( AMS ,MRS ) / ( BR / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,CRS ) ) ) ) + Min( Const ,PN ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Max( ( Min( MUR ,CS ) * RMSe ),DS ) / MUC ) ) ) ,( MUM * CS ) )", "obj1": 0.78515625, "obj2": 0.10739478659533604}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - FirstVNF_Mem_Server ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( RCSe / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.74609375, "obj2": 0.12692706199774767}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "Min( ( MLU - RRSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.595703125, "obj2": 0.2947830902165685}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.734375, "obj2": 0.1447923334151287}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( Max( ( RRS + ACS ),AMS ) + ( Max( Max( RRS,( ACS / ( FirstVNF_CPU_Server * ( ARS * FirstVNF_CPU_Server ) ) ) ),MRS ) + Max( ( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + ( RRS * ACS ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe - ( MUR * MUC ) ) * MUR ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.59765625, "obj2": 0.28425414132721377}, {"determining": "( ( Max( MRS,MRS ) + Max( FirstVNF_CPU,( ( DDR * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + FirstVNF_RAM ) - Const ) ) ) ) + ( ( Min( ( ( Min( AMS ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) + AMS ) ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( ( RCSe * DS ) + RRSe ) ,RCSe ),RRSe ) ) )", "obj1": 0.90625, "obj2": 0.07956259757309653}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( ( Min( MRS ,AMS ) / ( BR / ( ( Const - Max( Max( ( FirstVNF_Mem + MRS ),( PN / AMS ) ),( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,( MUM * Max( RMSe,( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.021624620870590767}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( Max( ( PN * MRS ),Min( MDR ,AMS ) ) * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.728515625, "obj2": 0.1559318783421794}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "( ( Max( MRS,MRS ) + Max( MRS,MRS ) ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.916015625, "obj2": 0.0662892475804891}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * FirstVNF_Mem_Server ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / ( RMSe - MUM ) ) ) ) ) )", "obj1": 0.72265625, "obj2": 0.15805132871055694}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( CRS,RRS ) - Max( Const,( ACS - ( FirstVNF_RAM - Const ) ) ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,Max( ( ( ( ( RMSe / MUC ) / MUC ) * MUR ) * Min( CS ,RMSe ) ),( ( RMSe / DS ) / MUM ) ) ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( MDR - FirstVNF_RAM_Server ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),( MLU + RRSe ) )", "obj1": 0.9921875, "obj2": 0.00483278032141458}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( Min( AMS ,MRS ) / ( BR / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,CRS ) ) ) ) + Min( Const ,PN ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Max( ( Min( MUR ,CS ) * RMSe ),DS ) / MUC ) ) ) ,( MUM * CS ) )", "obj1": 0.78515625, "obj2": 0.10739478659533604}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - FirstVNF_Mem_Server ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( RCSe / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.74609375, "obj2": 0.12692706199774767}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( Max( ( ( DDR / Min( Const ,PN ) ) / MDR ),AMS ) + ( Max( Max( RRS,( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ),MRS ) + Max( ( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + ( ( Const + MRS ) + ( RRS * ACS ) ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe - ( MUR * MUC ) ) * ( ( DS - Min( MUR ,CS ) ) + ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( CS / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.59375, "obj2": 0.2840702066133357}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.734375, "obj2": 0.1447923334151287}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( Max( MRS,MRS ) + Max( FirstVNF_CPU,( ( DDR * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + FirstVNF_RAM ) - Const ) ) ) ) + ( ( Min( ( ( Min( AMS ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) + AMS ) ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( ( RCSe * DS ) + RRSe ) ,RCSe ),RRSe ) ) )", "obj1": 0.90625, "obj2": 0.07956259757309653}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( ( Min( MRS ,AMS ) / ( BR / ( ( Const - Max( Max( ( FirstVNF_Mem + MRS ),( PN / AMS ) ),( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,( MUM * Max( RMSe,( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.021624620870590767}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( Max( ( PN * MRS ),Min( MDR ,AMS ) ) * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.728515625, "obj2": 0.1559318783421794}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_Mem + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( ( RCSe * ( ( RCSe + MUR ) / MUC ) ) - DS ) ) / DS ) )", "obj1": 0.65625, "obj2": 0.24318775127727002}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "( ( Min( FirstVNF_Mem_Server ,AMS ) / ( Max( AMS,RRS ) / ( ( Const - ( Max( MRS,( PN / AMS ) ) + ( ( MRS + MDR ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) - ( FirstVNF_CPU - CRS ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( MUR ,RCSe ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,Max( ( MUM - Max( ( ( ( DS / RRSe ) * ( ( RCSe * MUM ) / Max( RMSe,MUC ) ) ) / DS ),( MLU - DS ) ) ),( ( Min( ( MUM * MUC ) ,Max( MUM,Max( CS,Max( MLU,MUC ) ) ) ) + ( Min( Min( ( RCSe + MLU ) ,( MUM + RCSe ) ) ,MLU ) * ( RCSe * MUR ) ) ) - MUR ) ) )", "obj1": 0.98828125, "obj2": 0.004710597624621099}, {"determining": "( ( Max( MRS,MRS ) + Max( MRS,MRS ) ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.916015625, "obj2": 0.0662892475804891}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * FirstVNF_Mem_Server ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / ( RMSe - MUM ) ) ) ) ) )", "obj1": 0.72265625, "obj2": 0.15805132871055694}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RRSe ) / RCSe )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "Max( ( MLU * MUR ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU ) / ( FirstVNF_Mem_Server + ( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) ) ) )", "choosing": "Max( ( MUR + MUR ),( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( FirstVNF_Mem_Server + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / ( MLU - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - AMS ) * Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( ( MRS - AMS ) * Min( FirstVNF_CPU_Server ,AMS ) ) + AMS ) )", "choosing": "Min( Min( ( ( RRSe + ( RCSe * DS ) ) / ( RCSe * DS ) ) ,( MLU * ( ( ( ( MLU + RCSe ) + RCSe ) * DS ) + RRSe ) ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( ( ( ( PN / Const ) - PN ) - PN ) - ( FirstVNF_CPU * RRS ) ) * Max( ( ( FirstVNF_Mem - RRS ) * CRS ),ARS ) )", "choosing": "( ( Max( MLU,( RCSe - RRSe ) ) + ( Min( Min( RMSe ,DS ) ,( Min( ( ( RMSe / MUC ) / DS ) ,Max( RCSe,DS ) ) - RCSe ) ) + CS ) ) / ( Min( Min( RMSe ,DS ) ,( Min( ( ( RMSe / MUC ) / DS ) ,Max( RCSe,DS ) ) - RCSe ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( Min( AMS ,MRS ) / ( BR / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,CRS ) ) ) ) + Min( Const ,PN ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Max( ( Min( MUR ,CS ) * RMSe ),DS ) / MUC ) ) ) ,( MUM * CS ) )", "obj1": 0.78515625, "obj2": 0.10739478659533604}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - FirstVNF_Mem_Server ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( RCSe / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.74609375, "obj2": 0.12692706199774767}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( Max( ( ( DDR / Min( Const ,PN ) ) / MDR ),AMS ) + ( Max( Max( RRS,( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ),MRS ) + Max( ( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + ( ( Const + MRS ) + ( RRS * ACS ) ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe - ( MUR * MUC ) ) * ( ( DS - Min( MUR ,CS ) ) + ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( CS / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.59375, "obj2": 0.2840702066133357}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.734375, "obj2": 0.1447923334151287}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( Max( MRS,MRS ) + Max( FirstVNF_CPU,( ( DDR * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + FirstVNF_RAM ) - Const ) ) ) ) + ( ( Min( ( ( Min( AMS ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) + AMS ) ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( ( RCSe * DS ) + RRSe ) ,RCSe ),RRSe ) ) )", "obj1": 0.90625, "obj2": 0.07956259757309653}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( ( Min( MRS ,AMS ) / ( BR / ( ( Const - Max( Max( ( FirstVNF_Mem + MRS ),( PN / AMS ) ),( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,( MUM * Max( RMSe,( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.021624620870590767}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( ( ( DDR / Min( Const ,PN ) ) / ( ACS + ACS ) ) * Min( DDR ,AMS ) ) + ( Max( Max( RRS,( FirstVNF_RAM / FirstVNF_Mem ) ),MRS ) + Max( ( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + ( RRS * ACS ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe + ( ( ( MUC - RCSe ) / ( RRSe * RMSe ) ) - CS ) ) ,( RRSe - ( MLU + Min( Max( Max( MUR,MUR ),MUR ) ,MLU ) ) ) )", "obj1": 0.595703125, "obj2": 0.2819655820185688}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( Max( ( PN * MRS ),Min( MDR ,AMS ) ) * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.728515625, "obj2": 0.1559318783421794}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( ( ( ( ( Min( ARS ,FirstVNF_RAM ) - ARS ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( ( Min( ARS ,FirstVNF_RAM ) - ARS ) + PN ) )", "choosing": "Min( Min( ( MLU - DS ) ,( MLU * Min( ( ( RMSe / ( ( DS + DS ) / RCSe ) ) * ( ( DS + DS ) / RCSe ) ) ,RRSe ) ) ) ,DS )", "obj1": 0.65234375, "obj2": 0.24294883004601428}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "( ( Min( FirstVNF_Mem_Server ,AMS ) / ( Max( AMS,RRS ) / ( ( Const - ( Max( MRS,( PN / AMS ) ) + ( ( MRS + MDR ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) - ( FirstVNF_CPU - CRS ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( MUR ,RCSe ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,Max( ( MUM - Max( ( ( ( DS / RRSe ) * ( ( RCSe * MUM ) / Max( RMSe,MUC ) ) ) / DS ),( MLU - DS ) ) ),( ( Min( ( MUM * MUC ) ,Max( MUM,Max( CS,Max( MLU,MUC ) ) ) ) + ( Min( Min( ( RCSe + MLU ) ,( MUM + RCSe ) ) ,MLU ) * ( RCSe * MUR ) ) ) - MUR ) ) )", "obj1": 0.98828125, "obj2": 0.004710597624621099}, {"determining": "( ( Max( MRS,MRS ) + Max( MRS,MRS ) ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.916015625, "obj2": 0.0662892475804891}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * FirstVNF_Mem_Server ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / ( RMSe - MUM ) ) ) ) ) )", "obj1": 0.72265625, "obj2": 0.15805132871055694}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( Max( ( ( DDR / Min( Const ,PN ) ) / ( ACS + DDR ) ),AMS ) + ( Max( Max( RRS,( ACS / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ),MRS ) + Max( ( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + ( RRS * ACS ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe - ( MUR * MUC ) ) * MUR ) ,( ( ( RCSe + DS ) + Min( RRSe ,MLU ) ) - RRSe ) )", "obj1": 0.595703125, "obj2": 0.2819655820185688}, {"determining": "( ( ( CRS / ( ( ( CRS / ( AMS - AMS ) ) + PN ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( ( ( ( Min( PN ,FirstVNF_RAM ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( ( ( Min( PN ,FirstVNF_RAM ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) )", "choosing": "Min( ( ( RMSe / ( ( DS + DS ) / ( MLU - DS ) ) ) * DS ) ,DS )", "obj1": 0.99609375, "obj2": 0.0022779187734672884}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( Min( ( PN + ( ( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MDR ) ) - ARS ) ) ,( CRS - Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( PN + ( ( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MDR ) ) - ARS ) ) )", "choosing": "Min( ( ( MUM / ( Max( ( MUR - Min( DS ,Min( RCSe ,MUM ) ) ),( Min( MLU ,Min( CS ,MUM ) ) * ( MUC - MUR ) ) ) / ( DS * Max( RMSe,( ( DS + DS ) / RCSe ) ) ) ) ) / ( ( MUR - Max( Min( CS ,CS ),MUR ) ) * Min( ( DS * Max( RMSe,( ( DS + DS ) / RCSe ) ) ) ,RRSe ) ) ) ,DS )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( Min( MDR ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - RRS ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / MLU )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "Min( Min( CRS ,MDR ) ,( Max( ( Min( FirstVNF_RAM ,Const ) - PN ),Const ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( Min( Max( Max( RMSe,MUM ),RCSe ) ,( Min( RMSe ,( RCSe / MUM ) ) + MUM ) ) ,( CS / Max( CS,( ( RCSe / MUM ) + ( ( MUR - MUC ) * ( MLU / MLU ) ) ) ) ) ) - ( ( MUR * RCSe ) - RCSe ) ) ,( ( ( ( ( MUM - ( RRSe - CS ) ) + ( MLU / Min( RRSe ,RRSe ) ) ) / RRSe ) / RRSe ) * ( CS * ( ( RMSe - ( ( ( MUM + MLU ) / RRSe ) * ( RRSe / Max( MLU,MUM ) ) ) ) - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN / Const ) - PN ) - PN ) - ( FirstVNF_CPU * RRS ) ) * Max( ( ( FirstVNF_Mem - RRS ) * CRS ),ARS ) )", "choosing": "( ( Max( MLU,( RCSe - RRSe ) ) + ( Min( Min( RMSe ,DS ) ,( Min( ( ( RMSe / MUC ) / DS ) ,Max( RCSe,DS ) ) - RCSe ) ) + CS ) ) / ( Min( Min( RMSe ,DS ) ,( Min( ( ( RMSe / MUC ) / DS ) ,Max( RCSe,DS ) ) - RCSe ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( ( Const + MDR ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / DS )", "obj1": 0.576171875, "obj2": 0.3138048647559016}, {"determining": "( ( Min( AMS ,MRS ) / ( BR / ( ( Max( Max( FirstVNF_Mem_Server,FirstVNF_RAM ),ACS ) - Const ) - Max( FirstVNF_CPU,CRS ) ) ) ) + Min( Const ,PN ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Max( ( Min( MUR ,CS ) * RMSe ),DS ) / MUC ) ) ) ,( MUM * CS ) )", "obj1": 0.78515625, "obj2": 0.10739478659533604}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - FirstVNF_Mem_Server ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( RCSe / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.74609375, "obj2": 0.12692706199774767}, {"determining": "( ( ( ( RRS - MDR ) + Max( ARS,PN ) ) / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( RCSe * MUR ) ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 0.67578125, "obj2": 0.19744334699254226}, {"determining": "( Max( Max( ARS,ACS ),( RRS * ARS ) ) / ( ( FirstVNF_Mem - DDR ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( MLU * ( Max( RMSe,MUM ) + Max( RRSe,RRSe ) ) ),Min( Max( RMSe,MUM ) ,RMSe ) )", "obj1": 0.923828125, "obj2": 0.035002595877861364}, {"determining": "( Max( ( ( DDR / Min( Const ,PN ) ) / MDR ),AMS ) + ( Max( Max( RRS,( ACS / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) ),MRS ) + Max( ( ( ARS * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + ( ( Const + MRS ) + ( RRS * ACS ) ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe - ( MUR * MUC ) ) * ( ( DS - Min( MUR ,CS ) ) + ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( CS / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.59375, "obj2": 0.2840702066133357}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RCSe ) / ( CS + DS ) )", "obj1": 0.826171875, "obj2": 0.10390613358115462}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,RRSe )", "obj1": 0.8671875, "obj2": 0.08174359232919003}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - DS ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.689453125, "obj2": 0.17507774236228452}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.734375, "obj2": 0.1447923334151287}, {"determining": "( ( ( ( ( ( Min( PN ,( Const + MRS ) ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( ( Min( ARS ,FirstVNF_RAM ) - ARS ) + PN ) )", "choosing": "Min( Min( ( MLU - DS ) ,( ( MUR * Min( ( DS * RMSe ) ,( MUM * MUM ) ) ) + ( RMSe * CS ) ) ) ,DS )", "obj1": 0.66796875, "obj2": 0.22716047215043333}, {"determining": "( ( ( CRS / ( ( CRS / ( AMS - AMS ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.599609375, "obj2": 0.26076380757043965}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "Min( ( ( ( RCSe * DS ) + ( RCSe * DS ) ) / RCSe ) ,( MLU * CS ) )", "obj1": 0.921875, "obj2": 0.06473595080432666}, {"determining": "( ( Max( MRS,MRS ) + Max( FirstVNF_CPU,( ( DDR * FirstVNF_CPU_Server ) * ( ( ( Const + MRS ) + FirstVNF_RAM ) - Const ) ) ) ) + ( ( Min( ( ( Min( AMS ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) + AMS ) ,Min( AMS ,MRS ) ) / ( Min( AMS ,MRS ) / Min( ARS ,MRS ) ) ) - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( ( RCSe * DS ) + RRSe ) ,RCSe ),RRSe ) ) )", "obj1": 0.90625, "obj2": 0.07956259757309653}, {"determining": "Min( ( Max( ARS,MRS ) - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( ( MUC * MLU ) - ( ( ( MUC + MUR ) - ( DS / CS ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 0.9453125, "obj2": 0.0304759146022444}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * ( FirstVNF_RAM_Server * ACS ) ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * RRSe ) / ( ( MUM * ( ( MUR - CS ) - DS ) ) / DS ) )", "obj1": 0.701171875, "obj2": 0.1669398877836686}, {"determining": "( ( Min( MRS ,AMS ) / ( BR / ( ( Const - Max( Max( ( FirstVNF_Mem + MRS ),( PN / AMS ) ),( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) - ( ( MDR + MRS ) / ( FirstVNF_CPU_Server + CRS ) ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,( MUM * Max( RMSe,( ( ( RCSe / Min( CS ,MUR ) ) * RCSe ) + ( RCSe * DS ) ) ) ) )", "obj1": 0.94921875, "obj2": 0.021624620870590767}, {"determining": "( Max( ( ( DDR / Min( Const ,PN ) ) / ( ACS + DDR ) ),AMS ) + ( Max( Max( RRS,( ACS / ( FirstVNF_CPU_Server - ( FirstVNF_CPU_Server * ARS ) ) ) ),MRS ) + Max( ( ( ( Const + MRS ) + ( RRS * ACS ) ) * ( ( ( Const + MRS ) + ( RRS * ACS ) ) - Const ) ),FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RCSe - ( MUR * MUC ) ) * MUR ) ,( ( ( RCSe + DS ) + ( ( ( RCSe + DS ) + Min( RRSe ,MLU ) ) - RRSe ) ) - RRSe ) )", "obj1": 0.595703125, "obj2": 0.2798795992364908}, {"determining": "( ( FirstVNF_RAM_Server * ARS ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( ( MLU + RCSe ) / RCSe )", "obj1": 0.857421875, "obj2": 0.09046265976650888}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( Min( DS ,MLU ),RMSe ) )", "obj1": 0.837890625, "obj2": 0.09839088202192219}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MUM * ( DS - DS ) ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / Max( ( ( ( ACS / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,BR ) ) / ( ( FirstVNF_Mem + MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),( ( ( MDR / FirstVNF_Mem_Server ) - ( FirstVNF_RAM - BR ) ) + Min( Max( ARS,Const ) ,( RRS / Const ) ) ) ) )", "choosing": "( Min( CS ,RMSe ) - ( RRSe + RMSe ) )", "obj1": 0.984375, "obj2": 0.007898180277996941}, {"determining": "( ( ( FirstVNF_Mem / ( CRS / ( AMS - AMS ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( RRSe - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( RCSe * ( DS - ( ( MUM * ( DS - DS ) ) / DS ) ) ) / ( ( MUM * ( MUM - ( RRSe * CS ) ) ) / DS ) ) )", "obj1": 0.658203125, "obj2": 0.23484055856657043}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ARS * FirstVNF_RAM_Server ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( Min( Min( DS ,MLU ) ,Max( RRSe,RMSe ) ) ,MLU ) ,Max( RRSe,RMSe ) )", "obj1": 0.84765625, "obj2": 0.0937981568386815}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( Max( ( PN * MRS ),Min( MDR ,AMS ) ) * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) ) ) ) ) )", "obj1": 0.728515625, "obj2": 0.1559318783421794}, {"determining": "( Min( Max( MRS,FirstVNF_RAM_Server ) ,MRS ) / Min( ARS ,Min( ( ( ( ARS - FirstVNF_CPU ) * ( ( FirstVNF_CPU_Server + ( ARS - FirstVNF_CPU ) ) * ACS ) ) - MDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( DS ,MLU ) ,Max( RMSe,RMSe ) )", "obj1": 0.96875, "obj2": 0.012949191666518006}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.962890625, "obj2": 0.015549437677865442}, {"determining": "( ( ( ( ( ( ( Min( ARS ,FirstVNF_RAM ) - ARS ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( ( Min( ARS ,FirstVNF_RAM ) - ARS ) + PN ) )", "choosing": "Min( Min( ( MLU - DS ) ,( MLU * Min( ( ( RMSe / ( ( DS + DS ) / RCSe ) ) * ( ( DS + DS ) / RCSe ) ) ,RRSe ) ) ) ,DS )", "obj1": 0.65234375, "obj2": 0.24294883004601428}, {"determining": "( ( ( CRS / ( Min( FirstVNF_CPU ,( PN * MDR ) ) - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( MLU * Min( MUR ,RMSe ) ) / ( ( MUM * ( ( MUR - Min( ( ( DS * CS ) - RCSe ) ,Max( RCSe,Min( MUR ,RMSe ) ) ) ) - DS ) ) / DS ) )", "obj1": 0.693359375, "obj2": 0.16765173357097468}, {"determining": "( Min( AMS ,MRS ) / Min( ( ARS * ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) / FirstVNF_CPU_Server ) ) ,ARS ) )", "choosing": "Min( ( MUM - ( RCSe + RCSe ) ) ,( RCSe * ( DS - MLU ) ) )", "obj1": 0.6484375, "obj2": 0.24564054198978869}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "( ( ( ACS * AMS ) + FirstVNF_RAM_Server ) / Max( CRS,ACS ) )", "choosing": "( ( RRSe * ( CS + Max( ( RRSe * MUR ),CS ) ) ) - ( MUM / DS ) )", "obj1": 0.666015625, "obj2": 0.23052640957069084}, {"determining": "( ( Min( FirstVNF_Mem_Server ,AMS ) / ( Max( AMS,RRS ) / ( ( Const - ( Max( MRS,( PN / AMS ) ) + ( ( MRS + MDR ) / ( FirstVNF_Mem_Server + CRS ) ) ) ) - ( FirstVNF_CPU - CRS ) ) ) ) + Min( MDR ,MRS ) )", "choosing": "Min( ( ( ( ( RCSe / Min( MUR ,RCSe ) ) * RCSe ) + ( RCSe * DS ) ) / ( ( Max( MUC,MUM ) / MUM ) / MUM ) ) ,Max( ( MUM - Max( ( ( ( DS / RRSe ) * ( ( RCSe * MUM ) / Max( RMSe,MUC ) ) ) / DS ),( MLU - DS ) ) ),( ( Min( ( MUM * MUC ) ,Max( MUM,Max( CS,Max( MLU,MUC ) ) ) ) + ( Min( Min( ( RCSe + MLU ) ,( MUM + RCSe ) ) ,MLU ) * ( RCSe * MUR ) ) ) - MUR ) ) )", "obj1": 0.98828125, "obj2": 0.004710597624621099}, {"determining": "( ( Max( MRS,MRS ) + Max( MRS,MRS ) ) + ( FirstVNF_RAM_Server - Const ) )", "choosing": "Min( ( ( ( MLU * ( ( ( Max( RRSe,MUC ) / RMSe ) * MUR ) - Min( MUM ,RRSe ) ) ) + MUM ) * ( ( DS - ( ( MUR + ( MUM / ( MUR + MUR ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( RRSe * Max( Min( ( MLU / MUM ) ,RCSe ),RRSe ) ) )", "obj1": 0.916015625, "obj2": 0.0662892475804891}, {"determining": "( ( Min( AMS ,MRS ) / ( ARS / ( ( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ) - Const ) - Max( Max( Max( ( PN - FirstVNF_RAM ),FirstVNF_RAM ),ACS ),CRS ) ) ) ) + MRS )", "choosing": "Min( ( ( ( MLU * ( RRSe - MLU ) ) + MUM ) * ( ( MUR - ( ( MUR + ( MUM / ( RRSe - MLU ) ) ) * RCSe ) ) - ( RMSe * CS ) ) ) ,( MUM * CS ) )", "obj1": 0.912109375, "obj2": 0.07701344662044424}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + ( ( ( FirstVNF_Mem / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( ( MUM * ( DS - Max( MUC,CS ) ) ) / DS ),RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.625, "obj2": 0.2540778953455062}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( MUM * ( DS - DS ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * FirstVNF_CPU_Server )", "choosing": "( Max( MLU,RRSe ) / ( ( ( MUM * ( DS - DS ) ) * ( DS - DS ) ) / DS ) )", "obj1": 0.62890625, "obj2": 0.25311478842608925}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * MRS ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / MUR ) ) ) ) )", "obj1": 0.720703125, "obj2": 0.15917439781318027}, {"determining": "Min( Min( ( Max( AMS,MRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_Mem ) / ( ( AMS / Max( ( PN * FirstVNF_Mem_Server ),Min( MDR ,AMS ) ) ) - ( FirstVNF_Mem - MRS ) ) ) ) ,CRS ) ,( RRS * CRS ) )", "choosing": "Min( ( MUR - MLU ) ,( RCSe * ( ( MLU / MUR ) - ( CS * ( Min( ( MUM + Min( MLU ,CS ) ) ,MUR ) / ( RMSe - MUM ) ) ) ) ) )", "obj1": 0.72265625, "obj2": 0.15805132871055694}, {"determining": "( ( MDR - Min( Max( FirstVNF_RAM_Server,MDR ) ,( Const + FirstVNF_CPU_Server ) ) ) - ( BR - ( PN * FirstVNF_CPU_Server ) ) )", "choosing": "Max( Max( CS,MUR ),RCSe )", "obj1": 0.994140625, "obj2": 0.0023455929948555344}, {"determining": "( ( ( CRS / ( AMS - ( ( CRS / ( AMS - AMS ) ) + PN ) ) ) + PN ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( MUM * ( DS - DS ) ) ) / DS ) )", "obj1": 0.96484375, "obj2": 0.014707583919000967}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( FirstVNF_CPU + Min( ARS ,( MRS - ACS ) ) )", "choosing": "Min( ( ( ( RMSe * DS ) + ( RCSe * DS ) ) / Min( RRSe ,( Min( MUC ,Min( RMSe ,CS ) ) / Min( Max( MLU,RRSe ) ,RRSe ) ) ) ) ,( MUM * CS ) )", "obj1": 0.9140625, "obj2": 0.07162596849755014}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server - ( ACS * ( Min( FirstVNF_RAM ,Const ) - PN ) ) ) + ( FirstVNF_CPU_Server - ( ACS * ( Min( FirstVNF_RAM ,Const ) - PN ) ) ) ) ) + PN ) * ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) ,RCSe ) / ( ( ( ( ( ( MUC - MUM ) - RMSe ) - MUR ) - DS ) + RMSe ) - RRSe ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( CRS / ( AMS - AMS ) ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / ( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) ) ) )", "obj1": 0.63671875, "obj2": 0.24816096875578006}, {"determining": "( ( ACS * AMS ) * ( FirstVNF_CPU_Server + MDR ) )", "choosing": "( ( RRSe - MUM ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.6328125, "obj2": 0.2501077840328105}, {"determining": "( ( ( ( ( ( Min( PN ,FirstVNF_RAM ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( ( ( Min( PN ,FirstVNF_RAM ) - ARS ) + PN ) * Min( CRS ,Max( ARS,Min( ARS ,Const ) ) ) ) )", "choosing": "Min( ( ( RMSe / ( ( DS + DS ) / ( MLU - DS ) ) ) * DS ) ,DS )", "obj1": 0.99609375, "obj2": 0.0022779187734672884}, {"determining": "( Min( FirstVNF_RAM ,( ( ( PN - DDR ) / Max( FirstVNF_RAM,Max( CRS,AMS ) ) ) / ( FirstVNF_Mem_Server * RRS ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUR - CS ) - ( MLU + DS ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( FirstVNF_RAM - ( ( Max( BR,Max( CRS,AMS ) ) / ( PN - ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) / Max( MRS,FirstVNF_RAM_Server ) ) ) / ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( CS * ( CS * ( RRSe / ( MLU / ( ( RCSe * MUC ) * DS ) ) ) ) ) - ( ( MUC + RMSe ) * RCSe ) )", "obj1": 0.908203125, "obj2": 0.07884654833014516}, {"determining": "( ( ( Min( ( PN + ( ( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MDR ) ) - ARS ) ) ,( CRS - Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( PN + ( ( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MDR ) ) - ARS ) ) )", "choosing": "Min( ( ( MUM / ( Max( ( MUR - Min( DS ,Min( RCSe ,MUM ) ) ),( Min( MLU ,Min( CS ,MUM ) ) * ( MUC - MUR ) ) ) / ( DS * Max( RMSe,( ( DS + DS ) / RCSe ) ) ) ) ) / ( ( MUR - Max( Min( CS ,CS ),MUR ) ) * Min( ( DS * Max( RMSe,( ( DS + DS ) / RCSe ) ) ) ,RRSe ) ) ) ,DS )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( ( CRS / ( AMS - AMS ) ) + PN ) * ( ( ( CRS / ( AMS - AMS ) ) + PN ) + MDR ) )", "choosing": "( Max( MLU,RRSe ) / ( ( MUM * ( DS - DS ) ) / DS ) )", "obj1": 0.623046875, "obj2": 0.25999315553447827}, {"determining": "( ( ( Min( ( PN + ( ( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MDR ) ) - ARS ) ) ,( CRS - Max( ARS,Min( ARS ,Const ) ) ) ) * MDR ) * ( Min( FirstVNF_Mem_Server ,MRS ) - AMS ) ) + ( PN + ( ( ( MRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MDR ) ) - ARS ) ) )", "choosing": "Min( ( ( MUM / ( Max( ( MUR - Min( DS ,Min( RCSe ,MUM ) ) ),( Min( MLU ,Min( CS ,MUM ) ) * ( MUC - MUR ) ) ) / ( DS * Max( RMSe,( ( DS + DS ) / RCSe ) ) ) ) ) / ( ( MUR - Max( Min( CS ,CS ),MUR ) ) * Min( ( DS * Max( RMSe,( ( DS + DS ) / RCSe ) ) ) ,RRSe ) ) ) ,DS )", "obj1": 0.998046875, "obj2": 0.0006782910205611102}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,Max( CRS,CRS ) ) - Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server / Min( PN ,FirstVNF_RAM ) ) ) ) * Max( ( RRS + Const ),MRS ) )", "choosing": "( ( MUM - Min( RRSe ,MUC ) ) / ( ( ( ( Max( RMSe,MUC ) - Min( RCSe ,Max( RMSe,MUC ) ) ) / ( Max( ( RCSe - RRSe ),CS ) + ( CS - DS ) ) ) * Min( DS ,DS ) ) / ( RRSe + ( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "( ( RCSe / DS ) - ( MUR - ( DS - ( CS + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * BR ) ,( RRS - ( ( MDR / ( Min( CRS ,( FirstVNF_Mem_Server * DDR ) ) / ARS ) ) / AMS ) ) )", "choosing": "Min( ( ( RCSe + MUR ) / MUC ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Max( ( DS + MUM ),MUC ) ,( MLU * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( PN + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,MDR ) ) * DDR ) )", "choosing": "Min( Min( MUM ,( ( Max( MLU,CS ) - ( ( ( ( RMSe + RRSe ) + Min( DS ,RRSe ) ) / ( ( MUR * MUC ) / CS ) ) + ( MUR / ( MUC * ( MUM / DS ) ) ) ) ) / Max( ( ( ( MUC - Min( RRSe ,MUR ) ) * CS ) - MLU ),CS ) ) ) ,( RCSe * ( MLU - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Max( MLU,RRSe ) / ( DS / ( MUM * Min( Max( MUM,( ( MUC - ( RRSe - RCSe ) ) / Max( RMSe,Max( MUM,CS ) ) ) ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,Min( Min( ARS ,MDR ) ,Min( BR ,PN ) ) ) - FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server + MRS ) )", "choosing": "( Min( Min( ( ( DS + CS ) / MUR ) ,RCSe ) ,DS ) / ( MLU * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,( ( FirstVNF_RAM_Server * Max( ( AMS + Min( Max( MDR,PN ) ,ACS ) ),MRS ) ) - ( RRS * BR ) ) ) ,( ( CRS - Min( FirstVNF_RAM_Server ,MDR ) ) * DDR ) )", "choosing": "Min( Min( Min( CS ,RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) ) ,Min( RMSe ,( RMSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,( RRS - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) + CS ) / RCSe ) ,( RCSe * ( ( RCSe + MUR ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( AMS - ( ( MRS - FirstVNF_CPU ) + ( ARS / BR ) ) ) ,( Max( Max( FirstVNF_RAM_Server,RRS ),( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Max( MRS,BR ) ) ) )", "choosing": "Min( Max( DS,MUR ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS - PN ) / AMS ) ,( MDR - MRS ) )", "choosing": "( ( DS / MLU ) / Max( MLU,Min( ( RMSe + RRSe ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( Const * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( MLU / RCSe ) + ( RMSe / RRSe ) ),Max( ( RCSe + RCSe ),( MUR / CS ) ) ) - ( ( ( MUC + MUR ) - Max( ( Min( MLU ,MUC ) - ( RMSe - MLU ) ),( Max( MUC,MUM ) * ( RCSe * RRSe ) ) ) ) + ( Min( RMSe ,MUR ) + ( MUR / MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ( Min( ( ARS - DDR ) ,CRS ) - MRS ) ,MDR ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MLU + ( RCSe / ( RRSe - MUC ) ) ) + ( MUC + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ( RRS / PN ) ,BR ) ) - ( ACS - RRS ) )", "choosing": "( ( CS - ( ( MUC - ( ( CS + RCSe ) + ( MLU * ( Min( MLU ,RMSe ) - ( RRSe * MUC ) ) ) ) ) * ( ( MUM - MLU ) * Min( MUR ,MLU ) ) ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Max( MUM,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem * BR ) + MRS ) - ( MDR + ( PN + AMS ) ) )", "choosing": "( ( ( MUC + MUC ) / ( MUC + RMSe ) ) / Max( ( CS / RCSe ),Max( MUR,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,PN ) - Min( ( ( FirstVNF_Mem + MRS ) / ( AMS / MDR ) ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + RMSe ),Min( MUM ,( ( RCSe / ( ( ( ( MLU - CS ) / Max( MUC,MUM ) ) + Max( MUM,( RCSe - MLU ) ) ) - MUC ) ) / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( ( ACS - PN ),Max( FirstVNF_RAM_Server,MRS ) ) ,Max( Min( FirstVNF_Mem ,MRS ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ,Min( ( Min( FirstVNF_CPU ,RRS ) - ( BR * ACS ) ) ,( Max( DDR,CRS ) * ( RRS + CRS ) ) ) )", "choosing": "Max( Min( MUM ,MLU ),( ( CS / ( CS / MUM ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_Mem - BR ) / ( FirstVNF_Mem * FirstVNF_RAM ) ) / ( ( MDR * FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,( FirstVNF_Mem + ACS ) ) ) ) ,( Min( ( ACS - FirstVNF_CPU ) ,( MRS + ACS ) ) / ( Max( FirstVNF_RAM_Server,ARS ) / Min( RRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MLU ) / ( MUM * MUR ) ) / Min( ( CS - RMSe ) ,( CS * MLU ) ) ) - ( ( ( DS + MUM ) / ( MUC / ( RRSe - ( RMSe - ( Max( MUM,CS ) + MUM ) ) ) ) ) + ( ( DS - MLU ) - ( RRSe / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS - FirstVNF_CPU_Server ) - Max( CRS,RRS ) ) - Max( ( CRS - FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - MRS ) ) ) / ( Min( Min( BR ,PN ) ,( Const * Max( MDR,Max( MRS,FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_CPU * MRS ) + ( BR / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RMSe ,Max( ( RMSe * MUM ),MUM ) ) - ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * CRS ) - ( AMS + ( FirstVNF_Mem / Min( ARS ,RRS ) ) ) )", "choosing": "( ( ( ( MUC - RMSe ) + ( DS * CS ) ) * ( ( RMSe - MUR ) * ( RRSe - CS ) ) ) - ( ( ( MUR + MUR ) * ( MUC - MUR ) ) + Min( ( RRSe * MLU ) ,( RMSe * MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const + PN ) * ( FirstVNF_CPU_Server + BR ) ) - ( ( BR - FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,CRS ) ) ) / ( ( ( FirstVNF_Mem_Server * MDR ) * ( FirstVNF_Mem - RRS ) ) - ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) + Max( PN,DDR ) ) ) )", "choosing": "Max( Min( ( ( MUR * CS ) * Min( RMSe ,RRSe ) ) ,Min( ( MUM - MUM ) ,( DS + RRSe ) ) ),Min( ( ( RRSe + CS ) + Min( CS ,RRSe ) ) ,( Max( MLU,MUC ) / ( MUC + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,BR ) - ( Max( MRS,Const ) / ( FirstVNF_Mem * MRS ) ) )", "choosing": "( ( RCSe - RCSe ) - ( Max( MUR,CS ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - Min( ARS ,Const ) ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( ( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) ) + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( RRSe / RCSe ) / Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * FirstVNF_Mem ) - ( ACS - PN ) )", "choosing": "( ( CS - ( RRSe * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * BR ) )", "choosing": "( Min( RMSe ,( RRSe + ( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) ) ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * MRS ) - ( ACS - PN ) )", "choosing": "( Min( RMSe ,( RRSe + RRSe ) ) + ( MUR - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( CS - ( MLU * RMSe ) ) / ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,Min( ( FirstVNF_Mem_Server * DDR ) ,( FirstVNF_CPU - PN ) ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,RRS ) / ( MRS - Const ) ) ,Min( FirstVNF_RAM ,ARS ) ) - Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( CS * RCSe ),DS ) * Max( CS,Max( ( ( DS / MUC ) - ( RMSe * MLU ) ),Max( ( CS * RRSe ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_Mem ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "Max( Min( ( CS + RCSe ) ,Max( RRSe,MUC ) ),( Min( Max( RRSe,MLU ) ,RMSe ) - Min( RMSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - ( ( CRS - FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server / Const ) ) )", "choosing": "( Max( RMSe,DS ) + Min( Max( RRSe,MLU ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + ( ACS + MDR ) ) )", "choosing": "( ( MUC / ( MLU / CS ) ) + ( RCSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( ACS + MDR ) ) )", "choosing": "( ( ( ( RMSe / ( MLU / CS ) ) / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * Max( CS,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "( ( ( RMSe / RRSe ) - ( MUC + MUM ) ) * ( Max( CS,MUC ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server + ARS ) ) - Max( ( BR - MDR ),( RRS - MRS ) ) )", "choosing": "Min( Max( ( MUM + CS ),( MUR / MUM ) ) ,( ( MUM * MUM ) * ( MUR - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}]}