{"1": [{"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.29239766081871343, "obj2": 0.719174651373761}, {"determining": "( Max( FirstVNF_Mem,( FirstVNF_RAM + ARS ) ) + Min( ( FirstVNF_CPU_Server + ARS ) ,ACS ) )", "choosing": "( ( ( MLU * RMSe ) + MUC ) + Min( CS ,CS ) )", "obj1": 0.3138401559454191, "obj2": 0.7036354461820338}, {"determining": "( ( FirstVNF_Mem / RRS ) + ( MRS / Max( DDR,( FirstVNF_Mem_Server - BR ) ) ) )", "choosing": "Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) )", "obj1": 0.3235867446393762, "obj2": 0.6983467822284006}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051846}, {"determining": "( ( FirstVNF_RAM_Server - CRS ) / Min( BR ,FirstVNF_Mem ) )", "choosing": "( ( MUM - MUC ) / ( RMSe + MUR ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "Max( ( MRS * FirstVNF_CPU ),( ACS / FirstVNF_RAM ) )", "choosing": "Max( Min( CS ,RCSe ),( RCSe / MUC ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( AMS / FirstVNF_Mem_Server ) + ( ARS / AMS ) )", "choosing": "( Max( MUC,RMSe ) - ( DS * RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7117901192908751}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * RRS ) / ( FirstVNF_CPU_Server + Const ) )", "choosing": "( Max( MUR,DS ) * ( RCSe - DS ) )", "obj1": 0.3060428849902534, "obj2": 0.717039623457109}, {"determining": "Max( ( BR - Const ),( CRS / AMS ) )", "choosing": "( ( MLU * RRSe ) / Max( RMSe,MUM ) )", "obj1": 0.3138401559454191, "obj2": 0.6977234813659504}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( ( MUM * MLU ) + ( MUM * MUC ) )", "obj1": 0.28460038986354774, "obj2": 0.7255805929681732}, {"determining": "( ( FirstVNF_CPU / CRS ) + ( MRS - PN ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7266986778605674}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "Max( Min( Const ,RRS ),( AMS / FirstVNF_Mem ) )", "choosing": "( Max( MUM,RCSe ) + ( MUR * RMSe ) )", "obj1": 0.3060428849902534, "obj2": 0.7105696348753188}, {"determining": "Min( ( PN + ACS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.290448343079922, "obj2": 0.7240385079919794}, {"determining": "Max( ( PN - MRS ),( CRS - MRS ) )", "choosing": "( Min( MLU ,MLU ) * ( MUR - MUM ) )", "obj1": 0.3216374269005848, "obj2": 0.6992479524903543}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + MUC ) ,( RMSe + RRSe ) )", "obj1": 0.2982456140350877, "obj2": 0.7135547121157687}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,Min( PN ,MRS ) )", "choosing": "( Min( CS ,RMSe ) / Min( RRSe ,MUM ) )", "obj1": 0.3001949317738791, "obj2": 0.7206649399861502}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ACS / FirstVNF_CPU ) )", "choosing": "( ( RCSe * MUC ) / ( MLU / MUM ) )", "obj1": 0.3255360623781676, "obj2": 0.6908636548288183}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) )", "choosing": "Min( ( CS + RMSe ) ,Max( MUM,MLU ) )", "obj1": 0.3079922027290448, "obj2": 0.7064157771686811}, {"determining": "( ( MRS - PN ) / ( AMS * RRS ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3235867446393762, "obj2": 0.6957345104509621}, {"determining": "Max( ( RRS / ARS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,MLU ) * Max( DS,MUC ) )", "obj1": 0.31968810916179335, "obj2": 0.6944288789461691}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + BR ) )", "choosing": "( Max( MUR,DS ) * Max( RRSe,MUC ) )", "obj1": 0.30214424951267055, "obj2": 0.7111746703293738}, {"determining": "Max( ( PN / DDR ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),Min( MLU ,RMSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7247553596033225}, {"determining": "Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) )", "choosing": "( Max( MUM,RRSe ) - Max( RCSe,CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "( Max( AMS,PN ) * ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( MUC ,MUC ) * ( MLU + MUC ) )", "obj1": 0.3157894736842105, "obj2": 0.6941763505390406}, {"determining": "( ( MRS * AMS ) / ( Const / DDR ) )", "choosing": "( Max( CS,DS ) - ( MUR * MUC ) )", "obj1": 0.3001949317738791, "obj2": 0.7207197800372257}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "Min( Max( DDR,MRS ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "Max( Min( CRS ,FirstVNF_Mem ),Min( ACS ,BR ) )", "choosing": "( Max( MUM,DS ) - Max( MUM,MUR ) )", "obj1": 0.2962962962962963, "obj2": 0.7217908551491453}, {"determining": "( ( BR * MRS ) / ( CRS * Const ) )", "choosing": "( Max( MUC,RRSe ) * Min( DS ,CS ) )", "obj1": 0.3060428849902534, "obj2": 0.717465929299301}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / Min( DDR ,FirstVNF_RAM_Server ) ) ,( ARS - ( FirstVNF_CPU_Server * RRS ) ) )", "choosing": "( ( ( DS / RMSe ) * ( MLU / RCSe ) ) - ( ( MUM + MUM ) / ( MUC + MUC ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( Min( Const ,ACS ) - FirstVNF_RAM ) + ( ARS * ARS ) )", "choosing": "Min( Min( ( ( ( Max( Min( RCSe ,MUC ),RMSe ) * MLU ) + RMSe ) * RMSe ) ,RRSe ) ,Max( ( DS * DS ),( CS - CS ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6931484298625813}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6931192198775312}, {"determining": "( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 0.3060428849902534, "obj2": 0.7105696348753188}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - AMS ) - ( MDR - FirstVNF_CPU ) ) + ( Min( RRS ,PN ) - Max( Const,PN ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6868692963072297}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / MRS ) ,MDR ) ,( Min( MDR ,FirstVNF_Mem_Server ) / MRS ) )", "choosing": "( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7247553596033225}, {"determining": "( ( Min( ARS ,ARS ) * MRS ) + Min( RRS ,MDR ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + RCSe ) / MUM ) )", "obj1": 0.3060428849902534, "obj2": 0.7066222571030545}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ARS ) - Max( ACS,MRS ) )", "choosing": "Max( ( ( MLU * DS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6986246516279042}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( ( ARS - ( MDR / ACS ) ) / ( MDR - MDR ) )", "choosing": "( ( Min( MUR ,MUR ) + ( RRSe - DS ) ) / Min( ( MUC * CS ) ,( MUR - RMSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6955631241761216}, {"determining": "Min( Min( FirstVNF_RAM_Server ,DDR ) ,Min( FirstVNF_Mem_Server ,Max( PN,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUM / DS ) * Max( MUM,MLU ) ),Min( ( DS + CS ) ,( MLU / DS ) ) )", "obj1": 0.30994152046783624, "obj2": 0.709499669683052}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_CPU_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) )", "choosing": "( ( ( RRSe + DS ) + ( RCSe + MUR ) ) / ( ( MUR + MUR ) * ( MUM + RCSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.681321185748541}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server + FirstVNF_CPU ) ) * Max( FirstVNF_Mem,( MDR - DDR ) ) )", "choosing": "( ( ( DS * RCSe ) / Max( MLU,MUC ) ) - ( ( RRSe - MLU ) + ( MLU + MLU ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) / Min( ( BR / MDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR * MUM ) - Min( RMSe ,DS ) ) / Max( Min( MLU ,CS ),( RRSe / MLU ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6915766625850365}, {"determining": "( ( ( RRS + MDR ) / RRS ) * ( ACS * BR ) )", "choosing": "Max( ( Max( MUM,MLU ) + ( MUR + RMSe ) ),( RRSe + RRSe ) )", "obj1": 0.3060428849902534, "obj2": 0.717465929299301}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * ( MDR - PN ) )", "choosing": "( ( ( MUC / RRSe ) - Min( CS ,MLU ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.5477582846003899, "obj2": 0.5647916629219912}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( Min( ( MLU - MUC ) ,( RCSe * CS ) ) + ( ( MLU + DS ) / Max( CS,MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.711527505390545}, {"determining": "( ( ( AMS * Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) + ( FirstVNF_Mem * ARS ) ) * ( ARS * FirstVNF_CPU ) )", "choosing": "( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7114438958123732}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - ( ACS / FirstVNF_CPU_Server ) ) / ( ( DDR - FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe / MLU ) * ( ( DS / CS ) - DS ) )", "obj1": 0.3001949317738791, "obj2": 0.7187995439121834}, {"determining": "Min( ( DDR * FirstVNF_Mem_Server ) ,Max( ( DDR / ( BR - ( Min( Max( RRS,( PN - ARS ) ) ,FirstVNF_CPU ) - ( ( AMS + ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) / AMS ) ) ) ),FirstVNF_CPU ) )", "choosing": "( Min( MUM ,MUC ) / ( Min( ( Min( RMSe ,RCSe ) + MUM ) ,( ( RRSe * ( Min( CS ,MUR ) + ( CS / RMSe ) ) ) / Min( MUC ,( Max( ( MUM - RCSe ),Min( RMSe ,MUC ) ) * RRSe ) ) ) ) * RMSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7249731661256266}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Max( ( FirstVNF_RAM * PN ),( FirstVNF_RAM / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),CS ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( ACS / Min( CRS ,CRS ) ) + ( ARS / FirstVNF_CPU ) ) + ( MRS + ARS ) )", "choosing": "Min( ( ( ( CS / RRSe ) * ( CS + DS ) ) + Max( ( MUM - MUC ),Max( CS,RMSe ) ) ) ,( ( ( RCSe - CS ) - ( MUC * RCSe ) ) - ( ( RMSe * DS ) - ( MUM / MUM ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7206649399861502}, {"determining": "Min( Max( Max( ( DDR + FirstVNF_CPU ),( AMS / FirstVNF_CPU_Server ) ),( Max( DDR,MRS ) + ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) ,Max( Max( ( RRS / ARS ),( FirstVNF_Mem / CRS ) ),( ( Const * FirstVNF_RAM ) + ( CRS * MDR ) ) ) )", "choosing": "( ( ( RRSe / RMSe ) / MUC ) / ( RRSe + MUR ) )", "obj1": 0.3001949317738791, "obj2": 0.7208070435222592}, {"determining": "Max( Max( CRS,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe + MUC ) * Max( MLU,MUM ) ) * ( ( RRSe + RCSe ) + ( DS + RMSe ) ) ) / ( ( Max( MUM,RCSe ) + Max( MUM,MUR ) ) * ( ( MUM - CS ) * ( DS + RRSe ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( ( AMS / FirstVNF_Mem_Server ),( Const - ARS ) ) / Min( ( FirstVNF_RAM * ACS ) ,( BR - BR ) ) ),( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe * CS ) + Max( MUM,MUR ) )", "obj1": 0.3333333333333333, "obj2": 0.6781245421053986}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( FirstVNF_CPU + MRS ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( Max( RMSe,MLU ) * CS ) )", "obj1": 0.31189083820662766, "obj2": 0.7068221391386837}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) / ( ARS / MRS ) )", "choosing": "( Min( ( RCSe * MUM ) ,( ( RCSe - CS ) + RMSe ) ) + ( RRSe - ( ( CS * RCSe ) + Max( MUR,MUM ) ) ) )", "obj1": 0.341130604288499, "obj2": 0.6802126659350152}, {"determining": "Max( ( ( RRS - FirstVNF_RAM ) / FirstVNF_CPU ),( ( PN * FirstVNF_Mem_Server ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MUC ,RMSe ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "Max( Min( Max( Min( ( MDR + Min( FirstVNF_CPU ,( RRS + Max( PN,PN ) ) ) ) ,( Const + AMS ) ),( CRS / BR ) ) ,Max( ( Max( Const,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - FirstVNF_Mem_Server ),ARS ) ),( PN / AMS ) )", "choosing": "( Min( ( MUC - RCSe ) ,MLU ) / ( ( RMSe + ( ( ( DS - ( MLU + ( MUR + RCSe ) ) ) + ( MLU * MLU ) ) - Min( ( CS / Max( MUC,MUM ) ) ,Max( RRSe,Max( ( CS * MUC ),Min( RMSe ,MLU ) ) ) ) ) ) + RCSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "Min( Max( Min( ( RRS / Const ) ,FirstVNF_Mem_Server ),Max( CRS,( ( ( PN + MDR ) - FirstVNF_Mem ) + ( PN / FirstVNF_RAM_Server ) ) ) ) ,Max( ( Min( Const ,FirstVNF_CPU_Server ) + ( ( ( FirstVNF_CPU + RRS ) - FirstVNF_RAM_Server ) / RRS ) ),Min( ( FirstVNF_Mem * CRS ) ,( FirstVNF_CPU_Server / MRS ) ) ) )", "choosing": "( ( Min( ( ( CS * RRSe ) * MUR ) ,MLU ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( Min( MUR ,DS ) * ( MUC - MLU ) ),( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.7141327501051118}, {"determining": "( ( DDR + RRS ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( PN * ACS ) ) )", "choosing": "( ( ( ( DS - RCSe ) - ( CS - RRSe ) ) + Min( ( RRSe + MLU ) ,Min( MUC ,CS ) ) ) / ( Min( Min( RCSe ,RMSe ) ,( RRSe / RMSe ) ) - ( Min( MUR ,RRSe ) * ( CS * CS ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6858348294374248}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) - ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Max( Min( CRS ,( ( RRS + Min( Min( MDR ,FirstVNF_RAM_Server ) ,FirstVNF_Mem_Server ) ) - FirstVNF_Mem ) ),Max( Const,FirstVNF_CPU ) ) ,Min( AMS ,RRS ) ) )", "choosing": "Min( Max( ( RRSe - DS ),( ( Min( ( Max( Min( MUC ,DS ),MUC ) - RRSe ) ,( ( ( MUM * RMSe ) - RRSe ) * ( RCSe - ( RMSe - MUR ) ) ) ) - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7169536776887305}, {"determining": "( ( Min( ( MRS * MRS ) ,Max( ( ( CRS + AMS ) + ( FirstVNF_RAM / MRS ) ),AMS ) ) * CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( ( RCSe + ( ( DS / RCSe ) * Min( RCSe ,( ( RCSe / RRSe ) - MUC ) ) ) ) + MLU ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( ( Min( RMSe ,MLU ) - ( MUM * Min( ( RCSe + RMSe ) ,MUM ) ) ) - CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) )", "choosing": "( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) )", "obj1": 0.3079922027290448, "obj2": 0.718461947831679}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ARS ) * PN ) * ACS ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( MLU ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( RCSe * Min( ( MUC + ( DS - Min( ( MUC + MUC ) ,( Min( CS ,MUR ) * Max( RMSe,CS ) ) ) ) ) ,( MUM * ( CS / ( RRSe - MUM ) ) ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7268842948598212}, {"determining": "( ( Const / AMS ) * Max( DDR,FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( RCSe / RCSe ) * ( RMSe * DS ) ) ,( ( MLU * MUR ) * Max( RMSe,MUR ) ) ) / Max( ( ( MLU * DS ) / Max( RRSe,CS ) ),Min( ( RCSe + MUM ) ,Min( MUM ,CS ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.7193631180936327}, {"determining": "Min( Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ,( ACS * RRS ) )", "choosing": "( ( CS - ( MUM / MUR ) ) * Max( Min( ( RMSe + MUM ) ,CS ),MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.7002598619234147}, {"determining": "( ( Max( CRS,DDR ) / ( FirstVNF_Mem + FirstVNF_RAM ) ) / ( FirstVNF_RAM_Server - DDR ) )", "choosing": "Max( ( ( ( RCSe / MUM ) * ( RRSe * MUR ) ) + Min( Max( CS,( RCSe * ( MUC / ( CS + MLU ) ) ) ) ,( RMSe / MLU ) ) ),Max( ( ( RMSe / CS ) / Min( MUR ,CS ) ),Min( ( MLU - MUR ) ,( MUM / DS ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( ( BR + FirstVNF_Mem_Server ) - Min( CRS ,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) - ( ARS / ACS ) ) ) + Min( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( FirstVNF_Mem_Server / AMS ) ) ,( ( FirstVNF_Mem / AMS ) - ( CRS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RRSe * MUC ),( MUM + MLU ) ) + Max( ( RMSe / CS ),Max( RRSe,RMSe ) ) ) ,( ( ( CS - MUC ) - ( CS - MUC ) ) / ( ( RCSe * RRSe ) + ( RRSe * CS ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7289682243378794}, {"determining": "Max( Max( ( FirstVNF_RAM * MRS ),FirstVNF_CPU_Server ),( FirstVNF_CPU_Server * ( CRS + FirstVNF_Mem ) ) )", "choosing": "( ( Min( ( RRSe * RMSe ) ,( RCSe - RCSe ) ) * Min( ( MUC - MUR ) ,( MUC - CS ) ) ) / ( ( ( MUM - DS ) - Min( RCSe ,MUM ) ) - ( ( MUC + DS ) + ( MLU - RRSe ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "Min( ( Min( FirstVNF_CPU ,MDR ) - FirstVNF_RAM ) ,( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / Min( ( MUR * MLU ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS - CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "( Min( Max( ( FirstVNF_RAM - FirstVNF_CPU_Server ),Min( ARS ,FirstVNF_RAM_Server ) ) ,( ( MDR - ACS ) * ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ) / ( ( ( ACS + ACS ) * Max( Const,FirstVNF_Mem_Server ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) * Min( FirstVNF_CPU ,ACS ) ) ) )", "choosing": "( ( ( ( MLU + MUM ) / ( MUR - MLU ) ) / ( ( MLU / MUR ) - ( MUC * CS ) ) ) * ( ( ( MUR / RCSe ) * ( DS * MUC ) ) - Min( Min( MUC ,MLU ) ,( MUC + RCSe ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7135241789441021}, {"determining": "( Max( Max( FirstVNF_CPU_Server,MRS ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) / Min( Min( ( ( FirstVNF_RAM + ( CRS / PN ) ) + MDR ) ,( AMS * ACS ) ) ,( ( MRS / ARS ) / Max( BR,Const ) ) ) )", "choosing": "( Max( ( Max( Max( RCSe,MLU ),( ( ( MUR + Max( RRSe,RRSe ) ) / MUM ) * RMSe ) ) / Max( MUR,MUC ) ),( Max( ( Min( RCSe ,DS ) - Max( Max( CS,DS ),DS ) ),RMSe ) - ( MLU - DS ) ) ) / Max( ( MUM * RRSe ),( ( RMSe - MUM ) / ( MLU / MLU ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7255805929681731}, {"determining": "( ( MRS / Const ) * ( ( FirstVNF_Mem + DDR ) / FirstVNF_Mem_Server ) )", "choosing": "Max( Min( Min( ( DS * MLU ) ,MUC ) ,Min( ( RCSe + MUC ) ,Min( DS ,MUR ) ) ),( MUM * RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.693217583180483}, {"determining": "( Max( ( ( CRS / DDR ) - ( FirstVNF_Mem_Server * MDR ) ),( ( FirstVNF_CPU_Server / Const ) - ( AMS - FirstVNF_Mem ) ) ) / Max( Max( Max( CRS,FirstVNF_RAM ),( ACS + CRS ) ),Max( Min( MDR ,BR ),Max( CRS,CRS ) ) ) )", "choosing": "( ( ( ( CS + MLU ) + ( CS / MUC ) ) - Min( ( MUC - MUM ) ,( MUC * MUM ) ) ) / ( Max( Max( RRSe,MLU ),Max( RCSe,RRSe ) ) - ( Max( RCSe,DS ) - Max( MLU,CS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7135424757963816}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( Min( Min( CRS ,Min( ARS ,PN ) ) ,ACS ) + ( FirstVNF_Mem_Server / RRS ) )", "choosing": "( Min( Max( Max( MUR,MLU ),Max( MUM,RRSe ) ) ,Min( Max( DS,MUM ) ,Min( MUC ,MUR ) ) ) - ( ( ( DS - RRSe ) - Max( MUM,MUR ) ) * ( ( RCSe * RCSe ) + ( RCSe / CS ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( ( Const * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM ,PN ) ) * ( Max( Const,FirstVNF_RAM_Server ) + Min( FirstVNF_RAM ,MRS ) ) ) - ( ( Max( RRS,FirstVNF_CPU ) * ( Const - FirstVNF_CPU ) ) / ( ( ARS * FirstVNF_RAM_Server ) + ( CRS * DDR ) ) ) )", "choosing": "( ( ( ( MUC - CS ) / Max( MUR,CS ) ) / ( ( RRSe * MUR ) * ( MUC - RRSe ) ) ) / ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( RCSe * RRSe ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.7012173713526432}], "2": [{"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) )", "obj1": 0.5243664717348928, "obj2": 0.5343991982159392}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "( Max( DDR,DDR ) - FirstVNF_CPU )", "choosing": "( CS - ( MUC * MLU ) )", "obj1": 0.9883040935672515, "obj2": 0.013397530527229537}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.3356671365677847}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.3356671365677847}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * Max( Min( FirstVNF_RAM ,CRS ),CRS ) )", "choosing": "( ( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6870667573760679}, {"determining": "( Max( ( Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / MDR ),FirstVNF_Mem_Server ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( RMSe + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( ( Min( ARS ,ARS ) * MRS ) + Min( RRS ,MDR ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + RCSe ) / MUM ) )", "obj1": 0.3060428849902534, "obj2": 0.7066222571030545}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( MUR - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.290448343079922, "obj2": 0.7169267264396003}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "Max( ( Max( ( ( ( ( DDR / DDR ) / ACS ) / FirstVNF_CPU ) + ( AMS - ( ( ARS - ( MRS + PN ) ) + FirstVNF_RAM ) ) ),( RRS / ARS ) ) / FirstVNF_Mem ),( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "Max( Max( MLU,DS ),( MLU / CS ) )", "obj1": 0.2962962962962963, "obj2": 0.7140833912626418}, {"determining": "( ( FirstVNF_CPU - FirstVNF_RAM ) + ( ARS * ARS ) )", "choosing": "Min( ( ( RMSe + CS ) + ( RCSe * CS ) ) ,Max( ( DS * DS ),CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7292840366348242}, {"determining": "( ( BR * MRS ) / ( CRS * Const ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( MDR / MDR ),FirstVNF_Mem_Server ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "Min( Max( DDR,MRS ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Max( Const,FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( ( Min( ( MLU - MUC ) ,( MUC - MUR ) ) * ( ( RCSe - RCSe ) - ( MUR + MUC ) ) ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7140833912626418}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( ARS - ( MDR / ACS ) ) / ( MDR - MDR ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( ( Min( ( MRS * MRS ) ,Max( ( ( CRS + AMS ) + ( FirstVNF_RAM / MRS ) ),AMS ) ) * CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( ( RCSe + ( ( DS / RCSe ) * Min( RCSe ,( ( RCSe / RRSe ) - MUC ) ) ) ) + MLU ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( ( Min( RMSe ,MLU ) - ( MUM * Min( ( RCSe + RMSe ) ,MUM ) ) ) - CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "Min( ( FirstVNF_RAM * ( DDR * Min( ( Max( FirstVNF_CPU,Min( CRS ,FirstVNF_CPU_Server ) ) * RRS ) ,( CRS - Min( Min( Max( FirstVNF_RAM,ARS ) ,Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) ,( ( ARS / FirstVNF_Mem_Server ) / RRS ) ) ) ) ) ) ,( MDR + CRS ) )", "choosing": "Min( ( RRSe / MLU ) ,( Min( RCSe ,( ( MUC / RMSe ) * MUM ) ) + MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) - ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "Min( Min( ( FirstVNF_RAM_Server / MRS ) ,MDR ) ,( Min( MDR ,FirstVNF_Mem_Server ) / MRS ) )", "choosing": "( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 0.3060428849902534, "obj2": 0.7066222571030545}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( DS / RMSe ) * ( MLU / RCSe ) ),MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ARS ) / ( ( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * Max( ACS,DDR ) ) )", "choosing": "( MUM * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( Max( ACS,DDR ),PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ACS - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( Min( MDR ,FirstVNF_Mem_Server ) / MRS ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,ARS ) * MRS ) + Min( RRS ,MDR ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ARS - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( ( MLU * DS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( ( MDR + FirstVNF_Mem ),MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Min( ( MUC / MUM ) ,( MUM * DS ) ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( RMSe - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( RCSe,( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( MDR + ( CRS - FirstVNF_RAM_Server ) ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( FirstVNF_CPU_Server + ( Const * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6081871345029239, "obj2": 0.33744838024566465}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( DDR,DDR ) - FirstVNF_CPU )", "choosing": "( CS - ( MUC * MLU ) )", "obj1": 0.9883040935672515, "obj2": 0.013397530527229537}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "( Max( ( PN / DDR ),( ARS - FirstVNF_CPU ) ) + ( PN - ACS ) )", "choosing": "Max( ( MUM - RMSe ),Max( RCSe,DS ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "Min( Min( RRS ,Min( RRS ,FirstVNF_CPU_Server ) ) ,Max( BR,MDR ) )", "choosing": "Min( ( CS + RMSe ) ,Max( MUM,Max( DS,RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.7047394189269787}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( Max( ( ( RMSe / MUM ) * CS ),RRSe ) + ( DS + CS ) ) / DS )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( ( PN + ACS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "Min( Max( MUM,RMSe ) ,( MLU - Min( ( RRSe - RCSe ) ,( RMSe / ( CS - RRSe ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( ( Min( BR ,( FirstVNF_CPU_Server / AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( CS - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN ),Max( CRS,ACS ) ) ,Min( Min( ( FirstVNF_Mem * CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) * Max( CS,MLU ) ) / Max( ( CS + CS ),( ( ( RCSe * MUC ) / ( MLU / MUM ) ) + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RRSe + ( ( MUR / MUM ) + RRSe ) ) - ( DS / CS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6935129070807643}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * Max( Min( FirstVNF_RAM ,CRS ),CRS ) )", "choosing": "( ( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6870667573760679}, {"determining": "Min( Max( DDR,MRS ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6140350877192983, "obj2": 0.332811946636586}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.3356671365677847}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * MUC ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) - ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( Max( ( MDR / MDR ),FirstVNF_Mem_Server ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( ARS - ( MDR / ACS ) ) / ( MDR - MDR ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.3356671365677847}, {"determining": "Max( Min( Const ,RRS ),( AMS / Max( ( PN - MRS ),( CRS - MRS ) ) ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( BR * MRS ) / ( CRS * Const ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Max( ( Max( FirstVNF_Mem,Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) / MDR ),FirstVNF_Mem_Server ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( RMSe + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( DS / RMSe ) * ( MLU / RCSe ) ),MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ARS ) / ( ( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * Max( ACS,DDR ) ) )", "choosing": "( MUM * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( Max( ACS,DDR ),PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ACS - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( Min( MDR ,FirstVNF_Mem_Server ) / MRS ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,ARS ) * MRS ) + Min( RRS ,MDR ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + MUR ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + RCSe ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( DDR * FirstVNF_RAM ) - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( DS + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.442495126705653, "obj2": 0.5922580903431113}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( RCSe,DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( Const * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6081871345029239, "obj2": 0.33744838024566465}, {"determining": "( ( FirstVNF_RAM_Server / RRS ) + Max( AMS,PN ) )", "choosing": "( ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) / ( MUR / RMSe ) )", "obj1": 0.35282651072124754, "obj2": 0.6568892019980754}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Min( ( Min( FirstVNF_CPU_Server ,( ( ( AMS + ( AMS * PN ) ) + MDR ) - Max( ( MRS * ( FirstVNF_CPU_Server / CRS ) ),FirstVNF_Mem ) ) ) / MRS ) ,FirstVNF_CPU ) + Max( AMS,PN ) )", "choosing": "( ( DS * ( ( MUC / Max( ( RRSe - RRSe ),DS ) ) + MUR ) ) / Max( RMSe,DS ) )", "obj1": 0.35282651072124754, "obj2": 0.6568892019980754}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( Const - MDR ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( RMSe + RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "Min( ( PN - DDR ) ,( MRS / FirstVNF_CPU_Server ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( Min( RRS ,Min( RRS ,FirstVNF_CPU_Server ) ) ,Max( BR,MDR ) )", "choosing": "Min( ( CS + RMSe ) ,Max( MUM,Max( DS,RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.7047394189269787}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( Max( ( ( RMSe / MUM ) * CS ),RRSe ) + ( DS + CS ) ) / DS )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) )", "choosing": "Min( Max( RCSe,RMSe ) ,( RRSe * CS ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN ),Max( CRS,ACS ) ) ,Min( Min( ( FirstVNF_Mem * CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( ( Min( MUC ,RRSe ) * Max( CS,MLU ) ) / Max( ( CS + CS ),( ( ( RCSe * MUC ) / ( MLU / MUM ) ) + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RRSe + ( ( MUR / MUM ) + RRSe ) ) - ( DS / CS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6935129070807643}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "Min( Max( ( Max( MRS,RRS ) + ( RRS * RRS ) ),FirstVNF_RAM_Server ) ,Min( MDR ,BR ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.7254722112146653}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) * ( FirstVNF_CPU + ARS ) ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - RRSe ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * Max( Min( FirstVNF_RAM ,CRS ),CRS ) )", "choosing": "( ( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6870667573760679}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + BR ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * MUC ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( Min( BR ,( FirstVNF_CPU_Server / AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( CS - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( Max( Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ),( Min( FirstVNF_CPU ,FirstVNF_RAM ) / Max( PN,DDR ) ) ) ,Min( Max( ( FirstVNF_Mem * CRS ),( MRS / FirstVNF_CPU_Server ) ) ,( ( Const - FirstVNF_CPU_Server ) + ( ARS + RRS ) ) ) )", "choosing": "( ( Min( Min( MUC ,RRSe ) ,Max( CS,MLU ) ) / Max( ( CS + CS ),( MUR + MLU ) ) ) + Max( ( ( DS / MUR ) * ( MUC - MLU ) ),( ( RMSe - CS ) - ( DS / CS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( ARS - ( MDR / ACS ) ) / ( MDR - MDR ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) - ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "Min( Max( DDR,MRS ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,CS ) - ( RCSe / MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "Min( ( PN + ACS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "Min( Max( MUM,RMSe ) ,( MLU - Min( ( RRSe - RCSe ) ,( RMSe / ( CS - RRSe ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( DS / RMSe ) * ( MLU / RCSe ) ),MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ARS ) / ( ( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * Max( ACS,DDR ) ) )", "choosing": "( MUM * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( Max( ACS,DDR ),PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ACS - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * Min( MDR ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) ,( Min( MDR ,FirstVNF_Mem_Server ) / MRS ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - Min( MUC ,( MUC / RCSe ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.5828460038986355, "obj2": 0.37115307414213583}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( RCSe,DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / FirstVNF_RAM_Server )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MLU ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.44964310920283385}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( FirstVNF_CPU_Server + ( Const * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6081871345029239, "obj2": 0.33744838024566465}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( Const - MDR ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( RMSe + RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_Mem / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - Min( PN ,MDR ) ) + BR ) ) / ( FirstVNF_Mem * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( RMSe * MUR ) ) * MLU ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( Max( ( ( RMSe / MUM ) * CS ),RRSe ) + ( DS + CS ) ) / DS )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Max( ( ( FirstVNF_CPU_Server / Const ) / Max( FirstVNF_CPU_Server,AMS ) ),( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / ( DDR - ACS ) ) ) )", "choosing": "Min( Max( RMSe,( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) ) ) ,( CS - RCSe ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( Min( ( MRS * MRS ) ,Max( ( ( CRS + AMS ) + ( FirstVNF_RAM / MRS ) ),AMS ) ) * CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( MLU * ( ( RCSe + ( ( DS / RCSe ) * Min( RCSe ,( ( RCSe / RRSe ) - MUC ) ) ) ) + MLU ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( ( Min( RMSe ,MLU ) - ( MUM * Min( ( RCSe + RMSe ) ,MUM ) ) ) - CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),( ACS + FirstVNF_RAM_Server ) )", "choosing": "Min( Max( RCSe,RMSe ) ,( RRSe * CS ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( Min( BR ,( FirstVNF_CPU_Server / AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( CS - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ),MDR ) )", "choosing": "( ( RCSe * MUC ) / ( MLU / Min( CS ,RRSe ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * MUC ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( Min( Max( Min( ( MDR + Min( FirstVNF_CPU ,( RRS + Max( PN,PN ) ) ) ) ,( Const + AMS ) ),( CRS / BR ) ) ,Max( ( Max( Const,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) - FirstVNF_Mem_Server ),ARS ) ),( PN / AMS ) )", "choosing": "( Min( ( MUC - RCSe ) ,MLU ) / ( ( RMSe + ( ( ( DS - ( MLU + ( MUR + RCSe ) ) ) + ( MLU * MLU ) ) - Min( ( CS / Max( MUC,MUM ) ) ,Max( RRSe,Max( ( CS * MUC ),Min( RMSe ,MLU ) ) ) ) ) ) + RCSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( Max( ( MDR / MDR ),( ( ( BR * ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "( Max( MUM,RCSe ) + ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Max( DS,RCSe ) * Min( DS ,MUC ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( ( FirstVNF_CPU_Server / CRS ) * ( FirstVNF_CPU + ARS ) ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - RRSe ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6852611366061456}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + BR ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ARS ) * PN ) * ACS ) ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( MLU ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( RCSe * Min( ( MUC + ( DS - Min( ( MUC + MUC ) ,( Min( CS ,MUR ) * Max( RMSe,CS ) ) ) ) ) ,( MUM * ( CS / ( RRSe - MUM ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6852611366061456}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( DS / RMSe ) * ( MLU / RCSe ) ),MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ARS ) / ( ( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * Max( ACS,DDR ) ) )", "choosing": "( MUM * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( Max( ACS,DDR ),PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( CRS,PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( ACS - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( CS ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - Min( MUC ,( MUC / RCSe ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.5828460038986355, "obj2": 0.37115307414213583}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / FirstVNF_RAM_Server )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MLU ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.44964310920283385}, {"determining": "( ( FirstVNF_CPU_Server + ( Const * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6081871345029239, "obj2": 0.33744838024566465}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( ( Max( RCSe,RRSe ) * ( MUM + RMSe ) ) ,MLU ) )", "obj1": 0.36257309941520466, "obj2": 0.6361195865264282}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_CPU + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( Max( MUR,RCSe ) - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( MLU ,MUC ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( Const - MDR ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( RMSe + RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( Max( ( ( RMSe / MUM ) * CS ),RRSe ) + ( DS + CS ) ) / DS )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - PN ) ,( ARS / FirstVNF_Mem ) ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6695029360099798}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( RRS / ARS ),Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "Max( Min( ( DS * CS ) ,( MUM / MUC ) ),Min( MLU ,RMSe ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Max( ( RRS / ARS ),Min( CRS ,Max( CRS,PN ) ) )", "choosing": "Max( Max( RCSe,DS ),( RMSe / ( DS - Min( ( Max( ( ( MUM + CS ) * ( MLU * MUR ) ),CS ) - ( ( RCSe * MUR ) + MLU ) ) ,MUM ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * MUC ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( MDR / MDR ),( ( ( BR * ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "( Max( MUM,RCSe ) + ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Max( DS,RCSe ) * Min( DS ,MUC ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + BR ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "Min( ( PN - ( ( Min( ( PN - ( FirstVNF_Mem_Server - BR ) ) ,Min( ARS ,Min( ARS ,FirstVNF_Mem ) ) ) / ( PN * FirstVNF_CPU_Server ) ) - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) * MLU ) ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6695029360099798}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( Min( BR ,( FirstVNF_CPU_Server / AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( CS - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( DS / RMSe ) * ( MLU / RCSe ) ),MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ARS ) / ( ( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( Const - RRS ) + Max( CRS,PN ) ) * Max( ACS,DDR ) ) )", "choosing": "( MUM * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - RRS ) + Max( Max( ACS,DDR ),PN ) ) * ( ( MDR - FirstVNF_CPU_Server ) - ( BR * AMS ) ) )", "choosing": "( ( MUM - RMSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( MUM - RMSe ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - Min( MUC ,( MUC / RCSe ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.5828460038986355, "obj2": 0.37115307414213583}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / FirstVNF_RAM_Server )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MLU ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.44964310920283385}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4977156267685302}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( Min( ARS ,FirstVNF_Mem ) + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( MUR * MLU ),( ( MUR * ( CS - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.6062378167641326, "obj2": 0.35231394132182364}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "Min( ( PN - DDR ) ,( ( FirstVNF_Mem / RRS ) + ( MRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Min( ( ( ( RMSe / MUR ) + DS ) + ( MUM / ( Max( MLU,MLU ) + DS ) ) ) ,Max( Max( RRSe,MUM ),Max( RRSe,Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MUM + MUC ) ) + RRSe ) ) / ( MUR - MLU ) ) ) + Max( MLU,RMSe ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.4977156267685302}, {"determining": "( ( FirstVNF_CPU_Server + ( Const * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6081871345029239, "obj2": 0.33744838024566465}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( Const - MDR ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( RMSe + RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( Max( ( ( RMSe / MUM ) * CS ),RRSe ) + ( DS + CS ) ) / DS )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "Min( ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( PN - MDR ) ) + BR ) ) - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_CPU + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * MUR ) + MLU ) ) / Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6696764453442116}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( RRS / ARS ),Min( FirstVNF_Mem_Server ,Max( FirstVNF_RAM_Server,DDR ) ) )", "choosing": "Max( Min( ( DS * CS ) ,( MUM / MUC ) ),Min( MLU ,RMSe ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Max( MDR,( PN * FirstVNF_CPU_Server ) ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( Min( DS ,MUC ),( MUR - Min( MUR ,( MLU - ( RRSe - DS ) ) ) ) ) / RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6688394899401002}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * MUC ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) )", "choosing": "Min( ( ( DS - Min( ( ( Max( ( MLU + MUR ),MUR ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,MLU ) ) ) + MLU ) ,( Max( MUR,MLU ) - MUC ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Max( ( RRS / ARS ),Min( CRS ,Max( CRS,PN ) ) )", "choosing": "Max( Max( RCSe,DS ),( RMSe / ( DS - Min( ( Max( ( ( MUM + CS ) * ( MLU * MUR ) ),CS ) - ( ( RCSe * MUR ) + MLU ) ) ,MUM ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( MDR / MDR ),( ( ( BR * ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "( Max( MUM,RCSe ) + ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Max( DS,RCSe ) * Min( DS ,MUC ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + BR ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( ( DS / RMSe ) * ( MLU / RCSe ) ),MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( ( ( ( MDR + ARS ) / ( ARS * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ARS ) / ( ( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) ) * CRS ) ) - Max( FirstVNF_RAM_Server,CRS ) )", "choosing": "( ( Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( ( RRSe * RRSe ) / RRSe ) * ( RCSe / ( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( Const + ( MRS - PN ) )", "choosing": "( ( ( MUM * MLU ) + ( MUM * MUC ) ) * ( MUM + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.4790297275505309}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - Max( Const,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( RRSe * ( MUC + MUC ) ) ) ) ) - ( Max( ( MUR / MUR ),Min( Min( CS ,RRSe ) ,( DS * CS ) ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( CS * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),( ( ( ( DS + RMSe ) - Max( MLU,CS ) ) - ( MUR + CS ) ) / ( ( RCSe / MUM ) + RMSe ) ) ) ) ,( RMSe / CS ) )", "obj1": 0.5516569200779727, "obj2": 0.4453213129250053}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ,( CS / RMSe ) )", "obj1": 0.6081871345029239, "obj2": 0.3374483802456646}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / FirstVNF_RAM_Server )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MLU ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.44964310920283385}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( Const - MDR ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( RMSe + RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * CS ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( RRSe + ( RMSe / CS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "Min( ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( PN - MDR ) ) + BR ) ) - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_CPU + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * MUR ) + MLU ) ) / Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6696764453442116}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( Max( ( ( RMSe / MUM ) * CS ),RRSe ) + ( DS + CS ) ) / DS )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Min( Max( MRS,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( ( MLU + DS ) / Max( CS,MUM ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Max( MDR,( PN * FirstVNF_CPU_Server ) ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( Min( DS ,MUC ),( MUR - Min( MUR ,( MLU - ( RRSe - DS ) ) ) ) ) / RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6688394899401002}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Max( ( RRS / ARS ),Min( CRS ,Max( CRS,PN ) ) )", "choosing": "Max( Max( RCSe,DS ),( RMSe / ( DS - Min( ( Max( ( ( MUM + CS ) * ( MLU * MUR ) ),CS ) - ( ( RCSe * MUR ) + MLU ) ) ,MUM ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "Max( ( BR - Const ),( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * MUC ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6809655421897911}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( Max( MUR,RCSe ) - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.6829411745468079}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( ( FirstVNF_Mem_Server * BR ) - AMS ) ,( RRS / ( ( ( RRS * FirstVNF_CPU ) / ( ( BR + MDR ) / Const ) ) + ( ( ( FirstVNF_Mem + Const ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( Max( MUR,RCSe ) - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / ( RRSe / Max( MUR,( RCSe - RCSe ) ) ) ) * ( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.6829411745468079}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * DDR ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( ( RRSe + MUC ) ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.5730994152046783, "obj2": 0.3896270811558445}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( Const - MDR ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( RMSe + RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( CS / RRSe ) - MUR ) * ( ( Max( ( ( Min( ( MLU / MUR ) ,( MLU - RCSe ) ) / Min( ( MLU * CS ) ,CS ) ) / RMSe ),( MUC + Min( RRSe ,( ( DS * MUM ) / ( MUR + RCSe ) ) ) ) ) * RMSe ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( PN - MDR ) ) + BR ) ) - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_CPU + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * MUR ) + MLU ) ) / Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6696764453442116}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( FirstVNF_RAM_Server * Const ) / Max( DDR,FirstVNF_CPU ) )", "choosing": "( Max( RCSe,RRSe ) * ( MUM + RMSe ) )", "obj1": 0.2807017543859649, "obj2": 0.7289724949762545}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * CS ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( RRSe + ( RMSe / CS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( ( FirstVNF_Mem_Server - Max( MDR,( PN * FirstVNF_CPU_Server ) ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( Min( DS ,MUC ),( MUR - Min( MUR ,( MLU - ( RRSe - DS ) ) ) ) ) / RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6688394899401002}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),Max( FirstVNF_Mem,( AMS - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( Max( PN,DDR ) + Max( FirstVNF_Mem_Server,( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( RRSe + MUC ) ,( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,Min( ( DS * CS ) ,( MLU + RMSe ) ) ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server - BR ) ) ,FirstVNF_Mem )", "choosing": "( ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( MUR * MLU ) ) * ( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server - BR ) ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / RRSe ) * ( DS * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( ( CRS - FirstVNF_RAM_Server ) + MDR ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) / ( MLU / MUM ) )", "obj1": 0.341130604288499, "obj2": 0.6646378565694234}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - ( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) ) ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + MUR ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.594541910331384, "obj2": 0.33428968323717817}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( RCSe * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.33238203085017737}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( PN - MDR ) ) + BR ) ) - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_CPU + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * MUR ) + MLU ) ) / Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6696764453442116}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * CS ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( RRSe + ( RMSe / CS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( MUC * MUR ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.6237816764132553, "obj2": 0.32621105439879144}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) )", "choosing": "( ( ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) / RRSe ) * ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) * MUR ) )", "obj1": 0.6159844054580896, "obj2": 0.3319003195739031}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( AMS ,RRS ) ,Max( Max( CRS,( ( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) - FirstVNF_Mem ) ),Max( Const,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( RRSe - DS ),( ( Min( ( Max( Min( MUC ,MUR ),MUC ) - RRSe ) ,( ( ( MUM * RMSe ) - RRSe ) * ( RCSe - Max( MUR,RMSe ) ) ) ) - ( DS / CS ) ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7281467948838983}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( CS / RRSe ) - MUR ) * ( ( Max( ( ( Min( ( MLU / MUR ) ,( MLU - RCSe ) ) / Min( ( MLU * CS ) ,CS ) ) / RMSe ),( MUC + Min( RRSe ,( ( DS * MUM ) / ( MUR + RCSe ) ) ) ) ) * RMSe ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( Min( PN ,( AMS / ( ARS + CRS ) ) ) ,( Const / Const ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) + ( MRS + BR ) )", "choosing": "( Max( CS,RRSe ) - Min( ( ( ( MUR + Max( RRSe,RRSe ) ) / MUM ) + ( ( DS - Max( ( RCSe / RCSe ),MLU ) ) - MUC ) ) ,MLU ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS * ( Min( PN ,AMS ) / Max( FirstVNF_RAM,( FirstVNF_CPU_Server + Max( ( CRS + RRS ),MDR ) ) ) ) ) * Max( Min( MDR ,Min( CRS ,( Max( FirstVNF_CPU_Server,Max( ARS,DDR ) ) / Min( ( ARS - AMS ) ,Max( ACS,FirstVNF_Mem ) ) ) ) ),BR ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) - MRS ) * ( FirstVNF_RAM_Server - ( AMS + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( ( Max( ( DS / RMSe ),MLU ) / ( MUR / ( ( Min( MUR ,MLU ) * Max( RCSe,CS ) ) / ( Max( MUR,MLU ) - ( DS / RRSe ) ) ) ) ) - DS ),MUC ) - Min( MLU ,Min( CS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_CPU ,RRS ) + ( Min( ( MRS / Min( ARS ,Const ) ) ,FirstVNF_RAM_Server ) - ARS ) ) * FirstVNF_RAM ) / Max( ( MDR / Const ),MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - PN ) / BR )", "choosing": "( ( MUM - MLU ) / ( RMSe / ( Max( MUR,DS ) * Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS - PN ) )", "choosing": "( Max( MUR,DS ) * ( ( MUM - MLU ) / ( RMSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * AMS ) / ( Max( DDR,DDR ) - ( AMS / PN ) ) )", "choosing": "( MUC - ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( Min( MLU ,RMSe ) - ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) / ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( ( CRS - FirstVNF_RAM_Server ) + MDR ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( ( ( MUR * ( DS - Min( DS ,DS ) ) ) - Min( RRSe ,Max( ( MUC * DS ),( MUR + MUM ) ) ) ) * MLU ) )", "obj1": 0.8382066276803118, "obj2": 0.16507330840383827}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( DS - Min( DS ,DS ) ) / DS ) ) - ( MUC * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.1696044474721233}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( ( DDR / ( FirstVNF_RAM - ( CRS + FirstVNF_CPU ) ) ) / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * MUC ) * Min( RCSe ,DS ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - CS ) * ( ( MUR + RCSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * ( Min( Min( MUC ,( DS + MUC ) ) ,RRSe ) / MUC ) ) ) / Max( ( MUM + MUR ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.7115009746588694, "obj2": 0.2868302888110902}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( RRS / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MLU / MUM ) ,( CS / RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6070456135548516}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) / ( MLU / MUM ) )", "obj1": 0.341130604288499, "obj2": 0.6646378565694234}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - Max( CRS,FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUM + CS ) - MUM ) )", "obj1": 0.38596491228070173, "obj2": 0.6153864928649365}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( PN - MDR ) ) + BR ) ) - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( MRS / FirstVNF_CPU_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_CPU + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * MUR ) + MLU ) ) / Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6696764453442116}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * CS ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( RRSe + ( RMSe / CS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - ( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) ) ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + MUR ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.594541910331384, "obj2": 0.33428968323717817}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * CS ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( RRSe + ( RMSe / CS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( MRS + Max( Min( Min( Const ,FirstVNF_Mem ) ,( FirstVNF_RAM * MDR ) ),( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( MUM,RRSe ) - RMSe )", "obj1": 0.29239766081871343, "obj2": 0.7159707161265711}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / ( ( RCSe * MUC ) / ( MLU / MUM ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Min( Max( DDR,CRS ) ,Min( RRS ,( Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_CPU ) * DDR ) ) ) ,( Min( Max( MDR,( MDR - Min( PN ,DDR ) ) ) ,FirstVNF_Mem ) / ( BR - ( ACS / BR ) ) ) )", "choosing": "( ( ( MLU * Max( CS,MUR ) ) - ( DS + ( RRSe + ( Min( ( Min( MUC ,CS ) - MLU ) ,MLU ) + MUM ) ) ) ) * ( MUR * Max( CS,( MLU - ( Max( ( DS - RRSe ),( ( RCSe + RCSe ) / DS ) ) / MUR ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( Min( BR ,( ( CRS + ( ( ARS * ARS ) + ( FirstVNF_RAM_Server / BR ) ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7042602575314303}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( MUC * MUR ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( ( ( BR / DDR ) - Max( Const,FirstVNF_Mem ) ) + ( MRS + BR ) )", "choosing": "( Max( CS,RRSe ) - Min( ( ( ( MUR + Max( RRSe,RRSe ) ) / MUM ) + ( ( DS - Max( ( RCSe / RCSe ),MLU ) ) - MUC ) ) ,MLU ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Max( Max( Max( Const,( ARS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ),FirstVNF_CPU_Server ),Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,Max( RRSe,MUM ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ACS )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - Min( RCSe ,MUM ) ) * ( ( MUR + RCSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * ( Min( Min( MUC ,( DS + MUC ) ) ,RRSe ) / MUC ) ) ) - Max( ( MUM + MUR ),CS ) ) ,( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) / ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( ( ( MUR * ( DS - Min( DS ,DS ) ) ) - Min( RRSe ,Max( ( MUC * DS ),( MUR + MUM ) ) ) ) * MLU ) )", "obj1": 0.8382066276803118, "obj2": 0.16507330840383827}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( DS - Min( DS ,DS ) ) / DS ) ) - ( MUC * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.1696044474721233}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( RRS / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MLU / MUM ) ,( CS / RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6070456135548516}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - Max( CRS,FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUM + CS ) - MUM ) )", "obj1": 0.38596491228070173, "obj2": 0.6153864928649365}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - ( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) ) ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + MUR ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.594541910331384, "obj2": 0.33428968323717817}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( MDR / MDR ),( ( ( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,BR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( ( CS + DS ) * RRSe ) ) ),( ( Max( RCSe,RMSe ) / ( MUC * MUM ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6904329263205744}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_CPU * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( ( MUR * MLU ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / ( ( RCSe * MUC ) / ( MLU / MUM ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN - DDR ) ,( ( MRS / FirstVNF_CPU_Server ) + ( ( ( ( FirstVNF_RAM_Server * ARS ) - FirstVNF_Mem_Server ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + BR ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * DS ) * CS ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( RRSe + ( RMSe / CS ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( Min( ACS ,BR ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Min( ( CS - MUR ) ,Max( ( DS * DS ),CS ) ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( MUC * MUR ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( ( CRS - FirstVNF_RAM_Server ) + MDR ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( ARS - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( MLU,RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,RRS ) * ( BR - FirstVNF_CPU_Server ) ) / Min( Max( Min( ( RRS / ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ) ) ,AMS ),DDR ) ,( ARS + FirstVNF_Mem ) ) )", "choosing": "( ( MUR - MUR ) + ( ( ( Min( MUC ,RMSe ) * MUR ) - Min( RRSe ,( MUM - MUM ) ) ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR / ( FirstVNF_Mem / ARS ) ) * ( FirstVNF_RAM_Server + PN ) ) - ( Max( CRS,ARS ) + ( Max( CRS,CRS ) - MDR ) ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * RRSe ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Max( ( PN - ( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - Min( ( DS * RMSe ) ,( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ACS )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - Min( RCSe ,MUM ) ) * ( ( MUR + RCSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * ( Min( Min( MUC ,( DS + MUC ) ) ,RRSe ) / MUC ) ) ) - Max( ( MUM + MUR ),CS ) ) ,( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( ( ( MDR + Min( Min( DDR ,MDR ) ,Max( MDR,FirstVNF_Mem ) ) ) * ( ARS * MDR ) ) - ( ARS - FirstVNF_CPU ) ) * FirstVNF_RAM ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( Max( Max( RMSe,MUM ),( RRSe + ( ( ( ( CS - RRSe ) * MUC ) - ( DS * MLU ) ) / MUR ) ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( ( Max( RRSe,RMSe ) / Max( DS,MUM ) ) - DS ) ) ) ) ) )", "obj1": 0.8635477582846004, "obj2": 0.16038283541069273}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( DS - Min( DS ,DS ) ) / DS ) ) - ( MUC * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.1696044474721233}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( ( ( MUR * ( DS - Min( DS ,DS ) ) ) - Min( RRSe ,Max( ( MUC * DS ),( MUR + MUM ) ) ) ) * MLU ) )", "obj1": 0.8382066276803118, "obj2": 0.16507330840383827}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( RRS / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MLU / MUM ) ,( CS / RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6070456135548516}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - Max( CRS,FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUM + CS ) - MUM ) )", "obj1": 0.38596491228070173, "obj2": 0.6153864928649365}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - ( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) ) ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + MUR ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.594541910331384, "obj2": 0.33428968323717817}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( ( DS * ( ( RCSe + CS ) * MUR ) ) ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / ( ( RCSe * MUC ) / ( MLU / MUM ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( FirstVNF_RAM_Server * Const ) ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( ( FirstVNF_CPU_Server + ( ( CRS / ( DDR - ( FirstVNF_RAM + DDR ) ) ) - DDR ) ) / ( PN * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU * CS ) * ( ( ( DS * ( ( ( CS + MUC ) * ( MLU * MUM ) ) * CS ) ) / ( RCSe + ( ( RRSe / ( ( MUC + DS ) + RCSe ) ) / MLU ) ) ) - Min( ( Max( ( RCSe + MUR ),DS ) / Max( ( ( ( MLU - MUR ) + ( MLU + MUR ) ) / MUM ),MLU ) ) ,Min( ( CS - CS ) ,( MUR / MUM ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( MUC * MUR ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( Min( ACS ,BR ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( Min( ( CS - MUR ) ,Max( ( DS * DS ),CS ) ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) / ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( ( CRS - FirstVNF_RAM_Server ) + MDR ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS - ( CRS - ACS ) ) - PN ) / AMS ) - ( ( Max( BR,Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_RAM_Server ) / Const ) )", "choosing": "( ( Max( Min( MLU ,( Min( Min( RMSe ,( RRSe / MLU ) ) ,MUR ) - MLU ) ),CS ) - MUR ) - ( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR - FirstVNF_Mem ) * FirstVNF_Mem ),CRS ) - Min( BR ,FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MLU ,Max( RCSe,Max( Min( ( DS + MUR ) ,( RCSe - RMSe ) ),CS ) ) ) ,Max( RRSe,( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,MLU ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( MRS + FirstVNF_Mem_Server ) / ( AMS * BR ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( Max( Min( MLU ,RCSe ),MUM ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,PN ) + ( PN - AMS ) ) + ( ( MRS * FirstVNF_Mem ) - ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe / MUM ) * Min( RCSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_CPU_Server / BR ) * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( DS * ( ( RCSe + CS ) * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN - ( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - Min( ( DS * RMSe ) ,( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) ) + DDR ) ,( ( Max( BR,( ACS / ( ( CRS - MDR ) + ( ( AMS * MRS ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( Max( ( ( MUC - Min( RRSe ,RCSe ) ) + MUR ),Max( RMSe,RCSe ) ) - RCSe ) / ( MLU + DS ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( RMSe - DS ) ) ,( MLU - MUM ) ) )", "obj1": 0.8810916179337231, "obj2": 0.11127618257230966}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( DS - Min( DS ,DS ) ) / DS ) ) - ( MUC * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.1696044474721233}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( ( ( ( MDR + Min( Min( DDR ,MDR ) ,Max( MDR,FirstVNF_Mem ) ) ) * ( ARS * MDR ) ) - ( ARS - FirstVNF_CPU ) ) * FirstVNF_RAM ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( Max( Max( RMSe,MUM ),( RRSe + ( ( ( ( CS - RRSe ) * MUC ) - ( DS * MLU ) ) / MUR ) ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( ( Max( RRSe,RMSe ) / Max( DS,MUM ) ) - DS ) ) ) ) ) )", "obj1": 0.8635477582846004, "obj2": 0.16038283541069273}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( ( ( MUR * ( DS - Min( DS ,DS ) ) ) - Min( RRSe ,Max( ( MUC * DS ),( MUR + MUM ) ) ) ) * MLU ) )", "obj1": 0.8382066276803118, "obj2": 0.16507330840383827}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( Max( ( ( MUC - Min( RRSe ,RCSe ) ) + MUR ),Max( RMSe,RCSe ) ) - RCSe ) / ( MLU + DS ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( MUM - DS ) ) ,( MLU - MUM ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( RRS / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MLU / MUM ) ,( CS / RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6070456135548516}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - Max( CRS,FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUM + CS ) - MUM ) )", "obj1": 0.38596491228070173, "obj2": 0.6153864928649365}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - ( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) ) ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + MUR ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.594541910331384, "obj2": 0.33428968323717817}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( ( DS * ( ( RCSe + CS ) * MUR ) ) ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( PN - CRS ) ,( ( FirstVNF_Mem_Server / ( MDR / FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * ARS ) ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + MRS ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * RCSe ) * RCSe ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( Max( ( ( CS + Max( ( CS - MUC ),Min( CS ,MUM ) ) ) / RCSe ),RMSe ) + ( RMSe / CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / ( ( RCSe * MUC ) / ( MLU / MUM ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( MUC * MUR ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3371448731683768}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ACS )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - Min( RCSe ,MUM ) ) * ( ( MUR + RCSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * ( Min( Min( MUC ,( DS + MUC ) ) ,RRSe ) / MUC ) ) ) - Max( ( MUM + MUR ),CS ) ) ,( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) / ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( ( CRS - FirstVNF_RAM_Server ) + MDR ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUR / ( ( MUR / ( ( MUR / RRSe ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) ) ) * ( ( MUC * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( FirstVNF_CPU,Const ) * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * RMSe ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) + ( ( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,Max( ( MUM - RMSe ),( MUR / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) + ( ( PN - ACS ) - FirstVNF_CPU ) )", "choosing": "( Max( MUM,RRSe ) - MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ACS ) - FirstVNF_CPU ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),Max( Max( Max( ( MUM - RMSe ),( MUR / MLU ) ),DS ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) / ( RMSe / CS ) ) ),( ( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,Max( Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,RRS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Const ) ) )", "choosing": "( ( MUR + MLU ) * ( ( MUM + RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_CPU_Server / BR ) * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( DS * ( ( RCSe + CS ) * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) ) + DDR ) ,( ( Max( BR,( ACS / ( ( CRS - MDR ) + ( ( AMS * MRS ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( Max( ( ( MUC - Min( RRSe ,RCSe ) ) + MUR ),Max( RMSe,RCSe ) ) - RCSe ) / ( MLU + DS ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( RMSe - DS ) ) ,( MLU - MUM ) ) )", "obj1": 0.8810916179337231, "obj2": 0.11127618257230966}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( ( DS - Min( DS ,DS ) ) / DS ) ) - ( MUC * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.1696044474721233}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( ( ( ( MDR + Min( Min( DDR ,MDR ) ,Max( MDR,FirstVNF_Mem ) ) ) * ( ARS * MDR ) ) - ( ARS - FirstVNF_CPU ) ) * FirstVNF_RAM ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( Max( Max( RMSe,MUM ),( RRSe + ( ( ( ( CS - RRSe ) * MUC ) - ( DS * MLU ) ) / MUR ) ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( ( Max( RRSe,RMSe ) / Max( DS,MUM ) ) - DS ) ) ) ) ) )", "obj1": 0.8635477582846004, "obj2": 0.16038283541069273}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( ( ( MUR * ( DS - Min( DS ,DS ) ) ) - Min( RRSe ,Max( ( MUC * DS ),( MUR + MUM ) ) ) ) * MLU ) )", "obj1": 0.8382066276803118, "obj2": 0.16507330840383827}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( RRS / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MLU / MUM ) ,( CS / RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6070456135548516}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - Max( CRS,FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUM + CS ) - MUM ) )", "obj1": 0.38596491228070173, "obj2": 0.6153864928649365}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( PN - ACS ) + ( ( Max( FirstVNF_RAM,PN ) + ( ( FirstVNF_RAM_Server / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + Min( CS ,Min( CS ,RRSe ) ) ),DS ),Min( MLU ,RMSe ) )", "obj1": 0.4873294346978557, "obj2": 0.5192460604773863}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( Max( Max( ACS,FirstVNF_RAM_Server ),MRS ) + PN ) ,Max( Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,RRS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Const ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Min( Max( AMS,Min( ( FirstVNF_Mem_Server * Const ) ,Min( Const ,AMS ) ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / ( ( RCSe * MUC ) / ( MLU / MUM ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN - CRS ) ,( ( FirstVNF_Mem_Server / ( MDR / FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * ARS ) ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + MRS ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * RCSe ) * RCSe ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( Max( ( ( CS + Max( ( CS - MUC ),Min( CS ,MUM ) ) ) / RCSe ),RMSe ) + ( RMSe / CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Max( ( PN - ( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - Min( ( DS * RMSe ) ,( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ACS )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - Min( RCSe ,MUM ) ) * ( ( MUR + RCSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * ( Min( Min( MUC ,( DS + MUC ) ) ,RRSe ) / MUC ) ) ) - Max( ( MUM + MUR ),CS ) ) ,( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server + ACS ) ) ) / ( ( ( ARS * Const ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / ( RRS / FirstVNF_Mem_Server ) ) ,( MDR * AMS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Min( ( Max( RCSe,( ( CS * RRSe ) + MUR ) ) / MUC ) ,RRSe ) ) ,Min( MUC ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - Min( FirstVNF_Mem_Server ,MDR ) ) - ( ( Max( FirstVNF_RAM,PN ) + ( ( ( FirstVNF_CPU_Server + ( ( CRS - FirstVNF_RAM_Server ) + MDR ) ) / ( Const / CRS ) ) + Const ) ) - BR ) )", "choosing": "Max( Max( ( MUC + ( RCSe - MUC ) ),DS ),Min( RCSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),( ( MUM - RRSe ) / DS ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Max( ( ACS / FirstVNF_RAM_Server ),Max( ( PN * ( ARS * MRS ) ),FirstVNF_Mem_Server ) ) + PN ) ,( Min( ( Min( ( CRS - Max( MRS,AMS ) ) ,( DDR - Min( ACS ,DDR ) ) ) + ( Max( ( MDR - ( ACS * RRS ) ),( FirstVNF_Mem + BR ) ) / ( Min( DDR ,FirstVNF_RAM ) + FirstVNF_RAM ) ) ) ,RRS ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( DS,RCSe ) * MUM ) + ( MUM * ( RRSe + RCSe ) ) ) * Max( Min( RCSe ,DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,Max( Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,RRS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Const ) ) )", "choosing": "( ( MUR + MLU ) * ( ( MUM + RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( DDR,DDR ) - ( AMS / Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( PN - ( CRS - FirstVNF_CPU_Server ) ) ,( ACS * ( ( FirstVNF_Mem / RRS ) + ( MRS + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( ( ( MUR * ( DS - Min( DS ,DS ) ) ) - Min( RRSe ,Max( ( MUC * DS ),( MUR + MUM ) ) ) ) * MLU ) )", "obj1": 0.8382066276803118, "obj2": 0.16507330840383827}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) ) + DDR ) ,( ( Max( BR,( ACS / ( ( CRS - MDR ) + ( ( AMS * MRS ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( Max( ( ( MUC - Min( RRSe ,RCSe ) ) + MUR ),Max( RMSe,RCSe ) ) - RCSe ) / ( MLU + DS ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( RMSe - DS ) ) ,( MLU - MUM ) ) )", "obj1": 0.8810916179337231, "obj2": 0.11127618257230966}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( ( ( ( MDR + Min( Min( DDR ,MDR ) ,Max( MDR,FirstVNF_Mem ) ) ) * ( ARS * MDR ) ) - ( ARS - FirstVNF_CPU ) ) * FirstVNF_RAM ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( Max( Max( RMSe,MUM ),( RRSe + ( ( ( ( CS - RRSe ) * MUC ) - ( DS * MLU ) ) / MUR ) ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( ( Max( RRSe,RMSe ) / Max( DS,MUM ) ) - DS ) ) ) ) ) )", "obj1": 0.8635477582846004, "obj2": 0.16038283541069273}, {"determining": "Min( ( Min( ( ( ( FirstVNF_Mem + ( BR / BR ) ) / DDR ) * MRS ) ,( MRS * ( ( FirstVNF_Mem + ( BR / BR ) ) / DDR ) ) ) - BR ) ,( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUR * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) - RCSe ) * ( ( MUC * DS ) * MUR ) )", "obj1": 0.8771929824561403, "obj2": 0.1274220977791149}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,( RRS - ( FirstVNF_Mem + Min( MRS ,Const ) ) ) ),FirstVNF_RAM ) )", "choosing": "Min( ( DS * RMSe ) ,( CS / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5950392591085051}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( ( RRS / ( ( ( FirstVNF_RAM + BR ) * Min( MRS ,MDR ) ) * ACS ) ) * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MLU / MUM ) ,( CS / RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.6070456135548516}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - Max( CRS,FirstVNF_CPU ) ) ) ) - ( FirstVNF_CPU - ( Const + ( RRS * FirstVNF_Mem ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUM + CS ) - MUM ) )", "obj1": 0.38596491228070173, "obj2": 0.6153864928649365}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( MLU + MUC ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( MUM - DS ) ) ,( RMSe - MUM ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / DS ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - CRS ) ,( ( FirstVNF_Mem_Server / ( MDR / FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * ARS ) ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + MRS ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * RCSe ) * RCSe ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( Max( ( ( CS + Max( ( CS - MUC ),Min( CS ,MUM ) ) ) / RCSe ),RMSe ) + ( RMSe / CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( Max( Max( ACS,FirstVNF_RAM_Server ),MRS ) + PN ) ,Max( Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,RRS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Const ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem + PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / ( ( RCSe * MUC ) / ( MLU / MUM ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + Max( MUM,( MUM / ( MUM * CS ) ) ) ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( Min( Max( AMS,Min( ( FirstVNF_Mem_Server * Const ) ,Min( Const ,AMS ) ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_CPU_Server / BR ) * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( DS * ( ( RCSe + CS ) * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( PN - ( ( FirstVNF_CPU_Server - ( Min( DDR ,FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - Min( ( DS * RMSe ) ,( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( MDR - ( CRS + FirstVNF_CPU ) ) ) ) - ACS )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) - ( ( ( ( MLU / RRSe ) - Min( RCSe ,MUM ) ) * ( ( MUR + RCSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * ( Min( Min( MUC ,( DS + MUC ) ) ,RRSe ) / MUC ) ) ) - Max( ( MUM + MUR ),CS ) ) ,( CS * ( ( ( CS * DS ) * Min( RCSe ,DS ) ) * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Max( ( ACS / FirstVNF_RAM_Server ),Max( ( CRS * ( ARS * MRS ) ),FirstVNF_Mem_Server ) ) + PN ) ,( Min( ( ACS + ( PN / BR ) ) ,( FirstVNF_CPU_Server + Min( Max( ( ( ARS * AMS ) * ( CRS / PN ) ),( FirstVNF_RAM * Max( DDR,FirstVNF_CPU ) ) ) ,CRS ) ) ) - ( ACS + ( PN / BR ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) + RCSe ) * ( Min( RCSe ,DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ACS / FirstVNF_RAM_Server ),Max( ( PN * ( ARS * MRS ) ),FirstVNF_Mem_Server ) ) + PN ) ,( Min( ( Min( ( CRS - Max( MRS,AMS ) ) ,( DDR - Min( ACS ,DDR ) ) ) + ( Max( ( MDR - ( ACS * RRS ) ),( FirstVNF_Mem + BR ) ) / ( Min( DDR ,FirstVNF_RAM ) + FirstVNF_RAM ) ) ) ,RRS ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( DS,RCSe ) * MUM ) + ( MUM * ( RRSe + RCSe ) ) ) * Max( Min( RCSe ,DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( ARS - Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( DS,Min( Max( RCSe,( MUR * MLU ) ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11434216667530331}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) ) + DDR ) ,( ( Max( BR,( ACS / ( ( CRS - MDR ) + ( ( AMS * MRS ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( Max( ( ( MUC - Min( RRSe ,RCSe ) ) + MUR ),Max( RMSe,RCSe ) ) - RCSe ) / ( MLU + DS ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( RMSe - DS ) ) ,( MLU - MUM ) ) )", "obj1": 0.8810916179337231, "obj2": 0.11127618257230966}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( ( AMS * DDR ) / ( Const - DDR ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * ( RCSe + CS ) ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ARS - ( Const / ( PN * ( FirstVNF_Mem_Server * PN ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( MUM - DS ) ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Min( Max( AMS,Min( ( FirstVNF_Mem_Server * Const ) ,Min( Const ,AMS ) ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - CRS ) * ACS ) + PN ) ) + Max( Min( RRS ,AMS ),Min( ( AMS + FirstVNF_RAM ) ,Const ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( ( MUM / MUM ) - ( MLU - ( RCSe + MUR ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + Max( MUM,( MUM / ( MUM * CS ) ) ) ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN - CRS ) ,( ( FirstVNF_Mem_Server / ( MDR / FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * ARS ) ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + MRS ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * RCSe ) * RCSe ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( Max( ( ( CS + Max( ( CS - MUC ),Min( CS ,MUM ) ) ) / RCSe ),RMSe ) + ( RMSe / CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,Max( Min( ( ( AMS * ( Min( ACS ,DDR ) - DDR ) ) + ( ( RRS - ( PN + RRS ) ) / FirstVNF_RAM ) ) ,RRS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Const ) ) )", "choosing": "( ( MUR + MLU ) * ( ( MUM + RRSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_CPU_Server / BR ) * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( DS * ( ( RCSe + CS ) * MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Max( ( ACS / Max( MRS,( RRS + ARS ) ) ),Max( ( CRS * ( ARS * MRS ) ),AMS ) ) + PN ) ,( ( ( DDR + ( PN / Max( MRS,( RRS + ARS ) ) ) ) / ( FirstVNF_CPU_Server + Min( Max( ( ( CRS / PN ) * ( ARS * RRS ) ),( FirstVNF_RAM * Max( DDR,ARS ) ) ) ,CRS ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( MUR - MUM ) + MUR ) * RMSe ) ,( MLU * MUC ) ) * RRSe ) * Max( ( MUM - ( CS / ( MUM / ( MLU * MUC ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ACS / FirstVNF_RAM_Server ),Max( ( CRS * ( ARS * MRS ) ),FirstVNF_Mem_Server ) ) + PN ) ,( Min( ( ACS + ( PN / BR ) ) ,( FirstVNF_CPU_Server + Min( Max( ( ( ARS * AMS ) * ( CRS / PN ) ),( FirstVNF_RAM * Max( DDR,FirstVNF_CPU ) ) ) ,CRS ) ) ) - ( ACS + ( PN / BR ) ) ) )", "choosing": "( ( Min( RCSe ,DS ) + RCSe ) * ( Min( RCSe ,DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( ARS - Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( DS,Min( Max( RCSe,( MUR * MLU ) ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11434216667530331}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( Max( ( PN - ( Const / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) ) + DDR ) ,( ( Max( BR,( ACS / ( ( CRS - MDR ) + ( ( AMS * MRS ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( Max( ( ( MUC - Min( RRSe ,RCSe ) ) + MUR ),Max( RMSe,RCSe ) ) - RCSe ) / ( MLU + DS ) ) ) * Min( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( RMSe - DS ) ) ,( MLU - MUM ) ) )", "obj1": 0.8810916179337231, "obj2": 0.11127618257230966}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "( ( ( ARS - ( ARS - FirstVNF_CPU ) ) * Const ) / Max( ( FirstVNF_RAM * FirstVNF_RAM ),DDR ) )", "choosing": "( Min( ( MUC / MUM ) ,( CS * DS ) ) / ( ( CS - MUR ) + Max( ( MLU + ( ( RCSe - MLU ) / DS ) ),RMSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( ( ( AMS * DDR ) / ( Const - DDR ) ) - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( Min( MUR ,( MUM / MUC ) ) + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / Min( Min( ( MRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Max( ( MLU + CS ),MUR ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( PN - CRS ) ,( ( FirstVNF_Mem_Server / ( MDR / FirstVNF_Mem ) ) + ( ( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * ARS ) ) / ( DDR + AMS ) ) / ( Max( Max( RRS,FirstVNF_Mem ),( ( PN - ( FirstVNF_Mem + MRS ) ) + BR ) ) / ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( Max( CS,( ( ( MUC * RCSe ) * RCSe ) + MLU ) ) / RRSe ) * ( ( DS * Max( Min( MUC ,DS ),( Min( RCSe ,MLU ) + ( MUR - MLU ) ) ) ) * ( Max( ( ( CS + Max( ( CS - MUC ),Min( CS ,MUM ) ) ) / RCSe ),RMSe ) + ( RMSe / CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Max( ( ARS - ( Const / ( PN * ( FirstVNF_Mem_Server * PN ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( MUM - DS ) ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - CRS ) * ACS ) + PN ) ) + Max( Min( RRS ,AMS ),Min( ( AMS + FirstVNF_RAM ) ,Const ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( ( MUM / MUM ) - ( MLU - ( RCSe + MUR ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( BR,( RRS * DDR ) ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * DS ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( Min( Max( AMS,Min( ( FirstVNF_Mem_Server * Const ) ,Min( Const ,AMS ) ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Min( ( Max( ( ACS / FirstVNF_RAM_Server ),Max( ( PN * ( ARS * MRS ) ),FirstVNF_Mem_Server ) ) + PN ) ,( Min( ( Min( ( CRS - Max( MRS,AMS ) ) ,( DDR - Min( ACS ,DDR ) ) ) + ( Max( ( MDR - ( ACS * RRS ) ),( FirstVNF_Mem + BR ) ) / ( Min( DDR ,FirstVNF_RAM ) + FirstVNF_RAM ) ) ) ,RRS ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( DS,RCSe ) * MUM ) + ( MUM * ( RRSe + RCSe ) ) ) * Max( Min( RCSe ,DS ),CS ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Max( ( ( MDR / CRS ) + ( PN * DDR ) ),( ACS / Max( ( BR / Max( FirstVNF_Mem,AMS ) ),( RRS + ( FirstVNF_RAM_Server * Const ) ) ) ) ) + FirstVNF_RAM ) ,( ( ( DDR + Max( PN,BR ) ) / Max( ACS,FirstVNF_Mem_Server ) ) - ( BR + Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( MUR ,Max( ( ( RRSe + CS ) * Max( MUC,RRSe ) ),RMSe ) ) ) ,( MLU * MUC ) ) * MUC ) * ( ( ( RRSe - MLU ) - RRSe ) + ( Max( CS,CS ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ACS / Max( MRS,( RRS + ARS ) ) ),Max( ( CRS * ( ARS * MRS ) ),AMS ) ) + PN ) ,( ( ( DDR + ( PN / Max( MRS,( RRS + ARS ) ) ) ) / ( FirstVNF_CPU_Server + Min( Max( ( ( CRS / PN ) * ( ARS * RRS ) ),( FirstVNF_RAM * Max( DDR,ARS ) ) ) ,CRS ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( MUR - MUM ) + MUR ) * RMSe ) ,( MLU * MUC ) ) * RRSe ) * Max( ( MUM - ( CS / ( MUM / ( MLU * MUC ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( Min( FirstVNF_Mem ,Max( Max( FirstVNF_CPU_Server,( ( PN / ARS ) * FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem_Server * PN ) - FirstVNF_Mem ) ) ) ,( ( ( ARS + RRS ) - Min( Max( ( ( CRS - ( AMS - MRS ) ) / AMS ),Const ) ,( BR / ACS ) ) ) + ( Min( Max( Const,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( ( RRSe - MLU ) * ( Min( Min( ( RRSe - Max( Min( MUM ,RMSe ),Max( ( MUM - MUC ),Max( RMSe,RMSe ) ) ) ) ,MLU ) ,( ( RMSe * MUM ) + ( RMSe + ( RRSe * ( MLU - DS ) ) ) ) ) + ( DS * RMSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11535301703940783}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11535301703940783}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( ARS - Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( DS,Min( Max( RCSe,( MUR * MLU ) ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11434216667530331}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( Min( BR ,( ( CRS + ( FirstVNF_RAM / MRS ) ) * AMS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RCSe + ( ( DS / CS ) * ( RCSe + ( ( RCSe / RMSe ) - MUC ) ) ) ) + MLU ) * MLU ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUR ) ) - Min( ( MUM * CS ) ,Min( CS ,MLU ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( ( ( AMS * DDR ) / ( Const - DDR ) ) - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( Min( MUR ,( MUM / MUC ) ) + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( RRS * FirstVNF_RAM_Server ),BR ) ) ) ) ) ,Max( ( FirstVNF_CPU + Const ),FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS / MUC ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Max( ( ARS - ( Const / ( PN * ( FirstVNF_Mem_Server * PN ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( MUM - DS ) ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Min( Max( AMS,Min( ( FirstVNF_Mem_Server * Const ) ,Min( Const ,AMS ) ) ) ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.698588105314385}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - CRS ) * ACS ) + PN ) ) + Max( Min( RRS ,AMS ),Min( ( AMS + FirstVNF_RAM ) ,Const ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( ( MUM / MUM ) - ( MLU - ( RCSe + MUR ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( Min( PN ,( AMS / Max( ( CRS / FirstVNF_CPU ),CRS ) ) ) ,( ( FirstVNF_Mem * RRS ) / Const ) )", "choosing": "Min( ( ( ( ( MUM * RCSe ) + DS ) + ( ( MUM + ( MUC + DS ) ) / ( RMSe / MLU ) ) ) + ( DS - Min( ( ( Max( MUR,( MUR + MUR ) ) + MLU ) + ( ( RCSe - MUR ) - MUC ) ) ,Min( DS ,Max( RRSe,Min( MLU ,RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7115916847650652}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / Min( Min( ( MRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Max( ( MLU + CS ),MUR ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( BR,( RRS * DDR ) ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * DS ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}], "20": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Max( ( ( MDR / CRS ) + ( PN * DDR ) ),( ACS / Max( ( BR / Max( FirstVNF_Mem,AMS ) ),( RRS + ( FirstVNF_RAM_Server * Const ) ) ) ) ) + FirstVNF_RAM ) ,( ( ( DDR + Max( PN,BR ) ) / Max( ACS,FirstVNF_Mem_Server ) ) - ( BR + Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( MUR ,Max( ( ( RRSe + CS ) * Max( MUC,RRSe ) ),RMSe ) ) ) ,( MLU * MUC ) ) * MUC ) * ( ( ( RRSe - MLU ) - RRSe ) + ( Max( CS,CS ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR / CRS ) + ( PN * DDR ) ),( ACS / Max( ( BR / Max( FirstVNF_Mem,AMS ) ),( RRS + ( FirstVNF_RAM_Server * Const ) ) ) ) ) + FirstVNF_RAM ) ,( ( ( DDR + Max( PN,BR ) ) / Max( ACS,FirstVNF_Mem_Server ) ) - ( BR + Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( MUR ,Max( ( ( RRSe + CS ) * Max( MUC,RRSe ) ),RMSe ) ) ) ,( MLU * MUC ) ) * MUC ) * ( ( ( RRSe - MLU ) - RRSe ) + ( Max( CS,CS ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( ( ACS + BR ) - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( CS + RMSe ) * RCSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.1153530170394078}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,( PN * RRS ) ) ) ,Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM / ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,Min( MUM ,RCSe ) ) + Min( MUM ,( ( ( ( DS * RMSe ) - ( RMSe + DS ) ) * ( ( RCSe + CS ) * DS ) ) / ( MUR * ( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.8966861598440545, "obj2": 0.10060827962509424}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "( ( ( PN - FirstVNF_RAM_Server ) - Max( MRS,ACS ) ) / ( ( FirstVNF_RAM_Server / ( AMS * FirstVNF_CPU ) ) / ( DDR - ACS ) ) )", "choosing": "( ( ( ( ( MUC / RCSe ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( RRSe * CS ) ) ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6837234351385397}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( ( ( AMS * DDR ) / ( Const - DDR ) ) - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( Min( MUR ,( MUM / MUC ) ) + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / Min( Min( ( MRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Max( ( MLU + CS ),MUR ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( RRS * FirstVNF_RAM_Server ),BR ) ) ) ) ) ,Max( ( FirstVNF_CPU + Const ),FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS / MUC ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Max( ( ARS - ( Const / ( PN * ( FirstVNF_Mem_Server * PN ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( ( Min( ( MUM - DS ) ,MUM ) + MUM ) + ( MUM - DS ) ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - CRS ) * ACS ) + PN ) ) + Max( Min( RRS ,AMS ),Min( ( AMS + FirstVNF_RAM ) ,Const ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( ( MUM / MUM ) - ( MLU - ( RCSe + MUR ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - ( Max( MDR,FirstVNF_Mem_Server ) - ( BR * ( FirstVNF_RAM_Server / ( MDR + ( ARS / RRS ) ) ) ) ) ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / Min( ( MUM - DS ) ,MUM ) ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( BR,( RRS * DDR ) ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * DS ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( Max( ( ACS / Max( MRS,( RRS + ARS ) ) ),Max( ( CRS * ( ARS * MRS ) ),AMS ) ) + PN ) ,( ( ( DDR + ( PN / Max( MRS,( RRS + ARS ) ) ) ) / ( FirstVNF_CPU_Server + Min( Max( ( ( CRS / PN ) * ( ARS * RRS ) ),( FirstVNF_RAM * Max( DDR,ARS ) ) ) ,CRS ) ) ) - ( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) / FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( MUR - MUM ) + MUR ) * RMSe ) ,( MLU * MUC ) ) * RRSe ) * Max( ( MUM - ( CS / ( MUM / ( MLU * MUC ) ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( ( ( DDR + Max( PN,BR ) ) / ( FirstVNF_Mem_Server / ACS ) ) - ( BR + ( ARS + FirstVNF_RAM_Server ) ) ) ,( ( MDR + MDR ) + FirstVNF_RAM ) )", "choosing": "( ( Max( DS,RMSe ) + ( Max( CS,CS ) / DS ) ) * ( Min( ( RMSe * ( MUR * Max( ( Max( CS,MUR ) + DS ),RMSe ) ) ) ,( MLU * MUC ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( MDR / CRS ) + ( PN * DDR ) ),( ACS / Max( ( BR / Max( FirstVNF_Mem,AMS ) ),( RRS + ( FirstVNF_RAM_Server * Const ) ) ) ) ) + FirstVNF_RAM ) ,( ( ( DDR + Max( PN,BR ) ) / Max( ACS,FirstVNF_Mem_Server ) ) - ( BR + Max( FirstVNF_Mem_Server,ACS ) ) ) )", "choosing": "( ( Min( ( RMSe * Min( MUR ,Max( ( ( RRSe + CS ) * Max( MUC,RRSe ) ),RMSe ) ) ) ,( MLU * MUC ) ) * MUC ) * ( ( ( RRSe - MLU ) - RRSe ) + ( Max( CS,CS ) - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,( PN * RRS ) ) ) ,Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM / ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,Min( MUM ,RCSe ) ) + Min( MUM ,( ( ( ( DS * RMSe ) - ( RMSe + DS ) ) * ( ( RCSe + CS ) * DS ) ) / ( MUR * ( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.8966861598440545, "obj2": 0.10060827962509424}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - ( Min( ( FirstVNF_Mem_Server / Const ) ,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( ( ( DS * MUM ) / ( DS + RCSe ) ),RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5908844143293597}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( Min( ARS ,( AMS / FirstVNF_Mem ) ) ,( DDR * MDR ) )", "choosing": "( ( ( RCSe + RRSe ) + RCSe ) / ( Max( MUM,RCSe ) + ( MUR * RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7164818641045619}, {"determining": "Min( ( Const - Max( ( AMS + PN ),MDR ) ) ,Min( ( ACS - Min( PN ,PN ) ) ,( ( Max( FirstVNF_CPU,( FirstVNF_CPU - Max( ( Const + Const ),( RRS - MRS ) ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( DS / MLU ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / Max( Min( Max( ( Min( MUM ,Max( DS,RRSe ) ) / RRSe ),( ( ( MUC * RRSe ) + Max( RRSe,MUR ) ) - MUR ) ) ,( ( DS + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / ( PN * Max( Max( ACS,PN ),ARS ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + ( ( RCSe + MUM ) - RMSe ) ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( ( ACS + BR ) - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( CS + RMSe ) * RCSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.1153530170394078}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Max( ( MDR / MDR ),( ( AMS * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( DS * ( ( MUC / Max( ( RRSe - RCSe ),DS ) ) + MUR ) ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6980388900473414}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( ( ( MUR * RMSe ) - ( RMSe + DS ) ) * ( ( RCSe + CS ) * DS ) ) / ( MUR * ( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( FirstVNF_Mem_Server ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / Min( Min( ( MRS + ( FirstVNF_CPU + FirstVNF_Mem ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Max( ( MLU + CS ),MUR ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( Min( PN ,ARS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - CRS ) * ACS ) + PN ) ) + Max( Min( RRS ,AMS ),Min( ( AMS + FirstVNF_RAM ) ,Const ) ) ),( MRS / MRS ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( ( MUM / MUM ) - ( MLU - ( RCSe + MUR ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Min( ( CS - MLU ) ,( Max( MLU,MUR ) - MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( PN * ( ACS / DDR ) ) + Min( Min( ( FirstVNF_RAM_Server / ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Min( Min( PN ,( DDR / AMS ) ) ,Min( Const ,Const ) ) ) )", "choosing": "Min( Max( ( RRSe - MUM ),Min( DS ,MLU ) ) ,Max( MLU,( RRSe - DS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ( Max( ARS,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( FirstVNF_RAM + ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( ( ( ( MLU * DS ) * Min( MUC ,DS ) ) * MLU ) * CS ) - ( ( RRSe / ( MUC + MUC ) ) - ( ( Max( MLU,RRSe ) - CS ) / ( ( MUR + RRSe ) + RMSe ) ) ) ) - ( Max( RRSe,MUC ) * Max( ( MUR / MUR ),( RRSe * ( RRSe + MUM ) ) ) ) ) / ( MUM - MUC ) ) ,( RMSe / CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759613}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}], "22": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_RAM / Const ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( ( MUR * ( MUM / MUC ) ) ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,( ( MUM - MUM ) + ( MLU + RCSe ) ) ) / Min( MUR ,MUR ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR + Max( PN,BR ) ) / ( FirstVNF_Mem_Server / ACS ) ) - ( BR + ( ARS + FirstVNF_RAM_Server ) ) ) ,( ( MDR + MDR ) + FirstVNF_RAM ) )", "choosing": "( ( Max( DS,RMSe ) + ( Max( CS,CS ) / DS ) ) * ( Min( ( RMSe * ( MUR * Max( ( Max( CS,MUR ) + DS ),RMSe ) ) ) ,( MLU * MUC ) ) - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,( PN * RRS ) ) ) ,Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM / ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,Min( MUM ,RCSe ) ) + Min( MUM ,( ( ( ( DS * RMSe ) - ( RMSe + DS ) ) * ( ( RCSe + CS ) * DS ) ) / ( MUR * ( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.8966861598440545, "obj2": 0.10060827962509424}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MUR - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5882184486298293}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - ( Min( ( FirstVNF_Mem_Server / Const ) ,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( ( ( DS * MUM ) / ( DS + RCSe ) ),RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5908844143293597}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3723196881091618, "obj2": 0.6335101536444047}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( BR + Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ) ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( DS - ( MUM - RRSe ) ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - DDR ) )", "choosing": "( ( Max( CS,( DS - RRSe ) ) / RRSe ) * ( ( DS * Max( Min( DS ,MUC ),( Min( RCSe ,MLU ) + MUM ) ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( ( AMS * DDR ) / ( Const - DDR ) ) ,( ARS - Max( BR,( ( FirstVNF_RAM_Server - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS * Max( DS,MLU ) ) ) + Min( ( Min( RCSe ,( ( MUM - MUM ) + ( MLU + RCSe ) ) ) / Min( MUR ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( BR / ( RRS * DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( ( ( ( MUR * ( DS - CS ) ) * Max( ( MLU + CS ),MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ,MUM ) + Max( MUM,( MUM / ( Min( ( RRSe - RCSe ) ,( RRSe + MUC ) ) / MUM ) ) ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( FirstVNF_Mem_Server ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( ( ARS - Min( ( ( Max( FirstVNF_CPU,Max( FirstVNF_CPU_Server,MRS ) ) / ACS ) * ( ( ACS - ( FirstVNF_RAM / ARS ) ) / Const ) ) ,( RRS - CRS ) ) ) - Max( ( MDR * AMS ),Max( FirstVNF_CPU,( ACS - MDR ) ) ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,RMSe ) * ( CS - ( ( DS * CS ) / ( ( ( RRSe - MLU ) - RMSe ) / Max( ( ( RMSe - DS ) + ( CS / MUM ) ),( RRSe - ( RMSe * CS ) ) ) ) ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6335101536444047}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( Const - Max( ( AMS + PN ),MDR ) ) ,Min( ( ACS - Min( PN ,PN ) ) ,( ( Max( FirstVNF_CPU,( FirstVNF_CPU - Max( ( Const + Const ),( RRS - MRS ) ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( DS / MLU ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / Max( Min( Max( ( Min( MUM ,Max( DS,RRSe ) ) / RRSe ),( ( ( MUC * RRSe ) + Max( RRSe,MUR ) ) - MUR ) ) ,( ( DS + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( ( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) - BR ) ,( FirstVNF_Mem / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( MUM / ( MUC + RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}], "23": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server / ARS ) ) ,( FirstVNF_RAM + ( Const - RRS ) ) )", "choosing": "( ( Min( ( MLU * Min( ( ( ( MLU + MUC ) + MUM ) + MUC ) ,RMSe ) ) ,( ( Min( ( RRSe * DS ) ,( ( RMSe + DS ) + Min( MUM ,RCSe ) ) ) * MUR ) - MUM ) ) + ( Max( CS,CS ) / DS ) ) * ( Min( ( RMSe + ( ( RRSe - RCSe ) * CS ) ) ,( MUC * DS ) ) - ( CS / ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_RAM / Const ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( ( MUR * ( MUM / MUC ) ) ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,( ( MUM - MUM ) + ( MLU + RCSe ) ) ) / Min( MUR ,MUR ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,( PN * RRS ) ) ) ,Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM / ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,Min( MUM ,RCSe ) ) + Min( MUM ,( ( ( ( DS * RMSe ) - ( RMSe + DS ) ) * ( ( RCSe + CS ) * DS ) ) / ( MUR * ( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.8966861598440545, "obj2": 0.10060827962509424}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( ACS,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( RRSe + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5660253544202386}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - ( Min( ( FirstVNF_Mem_Server / Const ) ,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( ( ( DS * MUM ) / ( DS + RCSe ) ),RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5908844143293597}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) + ( ARS - Min( ( MRS / Min( Const ,ARS ) ) ,FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) - Max( FirstVNF_Mem,MRS ) )", "choosing": "( ( RCSe - Max( Max( RRSe,CS ),CS ) ) + ( ( CS * Max( RRSe,MUM ) ) * ( MUC - Max( CS,Max( ( DS * MLU ),( DS - ( ( MUC - RMSe ) / Max( MUC,DS ) ) ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5703038934890217}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3723196881091618, "obj2": 0.6335101536444047}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( RRS + Min( PN ,FirstVNF_CPU ) ) / MRS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),DS ) ,( RMSe - MUM ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5805743466068444}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( Min( CRS ,DDR ) - ( ( PN / CRS ) + FirstVNF_RAM_Server ) ) ,( Min( ARS ,FirstVNF_Mem ) - Max( ( BR * ARS ),( ( Max( FirstVNF_RAM,RRS ) - FirstVNF_CPU_Server ) * BR ) ) ) )", "choosing": "( ( RRSe - ( Min( CS ,DS ) - RMSe ) ) * Max( ( ( RMSe + Max( ( ( MUM / RRSe ) / RMSe ),RCSe ) ) / ( Min( ( ( ( RMSe + DS ) + Max( RMSe,MUC ) ) * ( ( MUC * DS ) / Min( MUM ,RMSe ) ) ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),( Max( RCSe,MUM ) - RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5866291813272889}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( DDR - PN ) ,( FirstVNF_RAM_Server - Max( ARS,Max( PN,FirstVNF_CPU ) ) ) )", "choosing": "( ( RRSe / MUR ) * ( ( MUM + Min( CS ,( CS / MUM ) ) ) + MUR ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( RMSe / RCSe ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5855360834735679}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,( PN * RRS ) ) ) ,Max( ( FirstVNF_CPU_Server / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,Min( MUM ,RCSe ) ) + Min( MUM ,( ( ( ( MUR * RMSe ) - ( RMSe + DS ) ) * ( ( RCSe + CS ) * DS ) ) / CS ) ) ) ) )", "obj1": 0.8966861598440545, "obj2": 0.10060827962509424}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( ( ARS + MDR ) * ( ACS + FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( ACS / ( DDR - PN ) ) - PN ) ) ) )", "choosing": "( ( ( ( RMSe * Min( ( ( ( RRSe * MUR ) + CS ) + Min( CS ,( RCSe + MUM ) ) ) ,RMSe ) ) - MUR ) + MUR ) * ( ( Min( MUC ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,Max( MDR,FirstVNF_Mem_Server ) )", "choosing": "( ( Max( Max( Min( DS ,MUC ),( ( MLU * MUR ) + MUM ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( FirstVNF_Mem ,Max( Max( FirstVNF_CPU_Server,( ( PN / ARS ) * FirstVNF_RAM_Server ) ),( ( FirstVNF_Mem_Server * PN ) - FirstVNF_Mem ) ) ) ,( ( ( ARS + RRS ) - Min( Max( ( ( CRS - ( AMS - MRS ) ) / AMS ),Const ) ,( BR / ACS ) ) ) + ( Min( Max( Const,FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( ( RRSe - MLU ) * ( Min( Min( ( RRSe - Max( Min( MUM ,RMSe ),Max( ( MUM - MUC ),Max( RMSe,RMSe ) ) ) ) ,MLU ) ,( ( RMSe * MUM ) + ( RMSe + ( RRSe * ( MLU - DS ) ) ) ) ) + ( DS * RMSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_RAM_Server - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,Min( CS ,Max( MUM,RMSe ) ) ) / Min( MUR ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Max( ( FirstVNF_Mem_Server * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - CS ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}], "24": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( BR - Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,( Min( RCSe ,( ( MUM - MUM ) + ( MLU + RCSe ) ) ) / Min( MUR ,MUR ) ) ) ) ) * Max( DS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server / ARS ) ) ,( FirstVNF_RAM + ( Const - RRS ) ) )", "choosing": "( ( Min( ( MLU * Min( ( ( ( MLU + MUC ) + MUM ) + MUC ) ,RMSe ) ) ,( ( Min( ( RRSe * DS ) ,( ( RMSe + DS ) + Min( MUM ,RCSe ) ) ) * MUR ) - MUM ) ) + ( Max( CS,CS ) / DS ) ) * ( Min( ( RMSe + ( ( RRSe - RCSe ) * CS ) ) ,( MUC * DS ) ) - ( CS / ( DS / RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( ACS,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( RRSe + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5660253544202386}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - ( Min( ( FirstVNF_Mem_Server / Const ) ,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( ( ( DS * MUM ) / ( DS + RCSe ) ),RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5908844143293597}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3723196881091618, "obj2": 0.6335101536444047}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - MDR ) * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) / ( DS * CS ) ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5722527149942314}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / ( ( Min( ( MLU + ( MUR / Max( RRSe,CS ) ) ) ,RCSe ) / ( ( ( RRSe / Min( MUM ,MUC ) ) / RMSe ) - ( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( MLU ,CS ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RMSe / MUM ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( ARS + MDR ) * ( ACS + FirstVNF_CPU_Server ) ) ,( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server - ( ( ACS / ( DDR - PN ) ) - PN ) ) ) )", "choosing": "( ( ( ( RMSe * Min( ( ( ( RRSe * MUR ) + CS ) + Min( CS ,( RCSe + MUM ) ) ) ,RMSe ) ) - MUR ) + MUR ) * ( ( Min( MUC ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( Min( CRS ,DDR ) - ( ( PN / CRS ) + FirstVNF_RAM_Server ) ) ,( Min( ARS ,FirstVNF_Mem ) - Max( ( BR * ARS ),( ( Max( FirstVNF_RAM,RRS ) - FirstVNF_CPU_Server ) * BR ) ) ) )", "choosing": "( ( RRSe - ( Min( CS ,DS ) - RMSe ) ) * Max( ( ( RMSe + Max( ( ( MUM / RRSe ) / RMSe ),RCSe ) ) / ( Min( ( ( ( RMSe + DS ) + Max( RMSe,MUC ) ) * ( ( MUC * DS ) / Min( MUM ,RMSe ) ) ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),( Max( RCSe,MUM ) - RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( ( PN - AMS ) + Min( MDR ,PN ) ) - ( ( ( PN - AMS ) + Min( MDR ,PN ) ) - BR ) ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( RRSe * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6823331174779873}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( ( MUC - MUC ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - Max( BR,( ( FirstVNF_RAM_Server - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,Min( CS ,Max( MUM,RMSe ) ) ) / Min( MUR ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}], "25": [{"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ,( Min( ( ARS - Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( BR - Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,( Min( RCSe ,( ( MUM - MUM ) + ( MLU + RCSe ) ) ) / Min( MUR ,MUR ) ) ) ) ) * Max( DS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_CPU_Server + Const ) / Min( ACS ,BR ) ),Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( ( MRS / MDR ) + Max( FirstVNF_CPU_Server,DDR ) ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( CS - MUR ) ,Max( ( DS * DS ),( RMSe + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( ACS,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( RRSe + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5660253544202386}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - ( Min( ( FirstVNF_Mem_Server / Const ) ,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( ( ( DS * MUM ) / ( DS + RCSe ) ),RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5908844143293597}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - MDR ) * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) / ( DS * CS ) ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5722527149942314}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( Min( ( Max( ( ( ( CS + DS ) * Min( RCSe ,RRSe ) ) * ( RCSe - Max( CS,MUM ) ) ),RRSe ) / MUM ) ,( MUM * DS ) ) / Min( ( MUR / ( Min( DS ,( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) ) / ( MUC * RRSe ) ) ) ,MUR ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( RMSe / ( ( Min( ( MLU + ( MUR / Max( RRSe,CS ) ) ) ,RCSe ) / ( ( ( RRSe / Min( MUM ,MUC ) ) / RMSe ) - ( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( MLU ,CS ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RMSe / MUM ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( ( PN - AMS ) + Min( MDR ,PN ) ) - ( ( ( PN - AMS ) + Min( MDR ,PN ) ) - BR ) ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( RRSe * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6823331174779873}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "Min( ( PN - DDR ) ,Min( RRS ,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( RMSe - MUM ) / RRSe ) ) + ( MUC - Max( Max( RRSe,RCSe ),CS ) ) ) + ( MUC + Min( MUM ,( MUR / ( DS + DS ) ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( ( MUC - MUC ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}], "26": [{"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Min( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( MLU * Min( RMSe ,( ( ( MUC / MUM ) - ( RCSe + MUC ) ) * Min( MUM ,MLU ) ) ) ) ,( ( Min( ( MUR + RCSe ) ,( ( DS - RMSe ) * DS ) ) * DS ) - ( RRSe / ( ( MUM * ( DS - RMSe ) ) / ( Min( DS ,MUR ) * CS ) ) ) ) ) + ( DS - Max( CS,CS ) ) ) * ( Min( ( MUC * DS ) ,( RMSe * ( ( RRSe - RCSe ) + CS ) ) ) - ( CS / Min( ( CS - MUR ) ,( MUM / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ,( Min( ( ARS - Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( ACS,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( RRSe + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5660253544202386}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - ( Min( ( FirstVNF_Mem_Server / Const ) ,Max( AMS,FirstVNF_CPU ) ) - FirstVNF_Mem_Server ) ) * ( MRS / ARS ) )", "choosing": "( ( ( Min( ( ( ( MUR / RMSe ) + DS ) + ( MUM / ( DS + Max( MLU,MLU ) ) ) ) ,Max( Max( RRSe,MUM ),Max( Max( MLU,( CS + MUR ) ),Min( MUC ,( RRSe + RRSe ) ) ) ) ) * ( Max( CS,( ( RRSe / ( MLU + MUC ) ) + DS ) ) - ( MUR - MUR ) ) ) + Max( ( ( DS * MUM ) / ( DS + RCSe ) ),RMSe ) ) / ( ( ( Min( ( MUC - MUC ) ,( ( MLU - MUR ) * ( ( RRSe * MUM ) / ( MUC + MUC ) ) ) ) / ( RRSe / DS ) ) - DS ) - ( RCSe + RCSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5908844143293597}, {"determining": "Min( Min( ARS ,( BR + Max( MDR,( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) ) ) ) ,( ( ( ( Const - CRS ) + Min( ACS ,Min( ACS ,CRS ) ) ) - ( DDR - AMS ) ) - DDR ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + MLU ) * ( ( Min( DS ,CS ) * ( ( MUR + MLU ) * ( MUR / CS ) ) ) / CS ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5886623353598691}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - MDR ) * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) / ( DS * CS ) ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5722527149942314}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,( ( RCSe * RMSe ) / MLU ) )", "obj1": 0.3255360623781676, "obj2": 0.678153445999613}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - Max( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,Max( AMS,FirstVNF_CPU ) ),Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) - ( Const / ( BR + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( Max( CS,( ( MUM * MUR ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31968810916179335, "obj2": 0.679332630699255}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( Min( ( Max( ( ( ( CS + DS ) * Min( RCSe ,RRSe ) ) * ( RCSe - Max( CS,MUM ) ) ),RRSe ) / MUM ) ,( MUM * DS ) ) / Min( ( MUR / ( Min( DS ,( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) ) / ( MUC * RRSe ) ) ) ,MUR ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "Min( ( ( Min( BR ,( FirstVNF_CPU_Server - Max( ( AMS / ( BR - FirstVNF_Mem ) ),ARS ) ) ) + ( ( FirstVNF_Mem + FirstVNF_RAM ) - CRS ) ) + FirstVNF_CPU_Server ) ,( DDR / ( ( PN - DDR ) * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( CS ,MLU ) / ( CS - MLU ) ) * ( ( Min( ( MLU + MUC ) ,Max( RRSe,RCSe ) ) * CS ) * ( Max( ( RCSe * ( RRSe + CS ) ),RCSe ) - MLU ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Max( ( PN - ( Const * RRS ) ),Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * BR ) ) ,Max( ( ( FirstVNF_CPU / CRS ) * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) ) ) )", "choosing": "( ( Max( Max( DS,CS ),( ( MUR * ( Max( RCSe,RRSe ) - RMSe ) ) + MUM ) ) / RRSe ) * ( DS * Max( Min( DS ,MUC ),( Max( MUR,RRSe ) + MUM ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( ( MUC - MUC ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}], "27": [{"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) ) ,( Min( ( ARS - Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( ( Min( RRSe ,RCSe ) / CS ),RMSe ) ) ) ) * Max( DS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( MDR,FirstVNF_RAM_Server ) ,Min( ( Min( ( FirstVNF_Mem - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( MLU * Min( RMSe ,( ( ( MUC / MUM ) - ( RCSe + MUC ) ) * Min( MUM ,MLU ) ) ) ) ,( ( Min( ( MUR + RCSe ) ,( ( DS - RMSe ) * DS ) ) * DS ) - ( RRSe / ( ( MUM * ( DS - RMSe ) ) / ( Min( DS ,MUR ) * CS ) ) ) ) ) + ( DS - Max( CS,CS ) ) ) * ( Min( ( MUC * DS ) ,( RMSe * ( ( RRSe - RCSe ) + CS ) ) ) - ( CS / Min( ( CS - MUR ) ,( MUM / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * Max( ( Max( ACS,ACS ) + ( PN * FirstVNF_CPU_Server ) ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) + DDR ) ,( ( Max( ACS,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( RRSe + RCSe ) ) ) + ( MUC + ( MUM * ( ( DS + DS ) / MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5660253544202386}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - MDR ) * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) / ( DS * CS ) ) ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5722527149942314}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( Min( ( Max( ( ( ( CS + DS ) * Min( RCSe ,RRSe ) ) * ( RCSe - Max( CS,MUM ) ) ),RRSe ) / MUM ) ,( MUM * DS ) ) / Min( ( MUR / ( Min( DS ,( ( Max( CS,MUC ) - ( RMSe - CS ) ) + DS ) ) / ( MUC * RRSe ) ) ) ,MUR ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( Min( MDR ,( Min( FirstVNF_Mem ,Max( Min( ACS ,FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ) - FirstVNF_Mem_Server ) ) - ( BR * ( FirstVNF_RAM_Server + ( ( RRS / ARS ) + MDR ) ) ) ) + DDR ) ,( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_Mem * Const ) ) ) * DDR ) / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MLU / MUR ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( ( CS + RMSe ) * RMSe ) ) ) + ( MUC + ( MUM * Max( ( DS + DS ),MUR ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.4522417153996101, "obj2": 0.5661081650535803}, {"determining": "( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5692948992865896}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / ( RRSe * MUC ) ) ) * RCSe ) - CS ) ,( ( ( Max( ( ( MUM / DS ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - Max( Max( RRSe,RCSe ),CS ) ) ) + ( MUC + Min( MUM ,( MUR / ( DS + DS ) ) ) ) ) / ( MLU + Min( RRSe ,MUC ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( RMSe - MUM ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( DS ,MUC ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( ( DS + ( MUR / Max( CS,RRSe ) ) ) ,RCSe ) / Max( ( ( ( MUM * RMSe ) - Max( RRSe,MUC ) ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( ( MUM / ( MUC + RRSe ) ) * DS ) ,( ( MLU + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}], "28": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( MRS - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,RMSe ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) ) ,( Min( ( ARS - Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( ( Min( RRSe ,RCSe ) / CS ),RMSe ) ) ) ) * Max( DS,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) / Min( ( FirstVNF_RAM / ( PN * FirstVNF_Mem_Server ) ) ,Max( ACS,( BR * ( Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_CPU ) ) + ACS ) ) ) ) ) ,Min( ( Max( FirstVNF_RAM_Server,ACS ) / ARS ) ,( ( Max( RRS,Max( ( MRS / ( MRS + PN ) ),( BR - ACS ) ) ) + ( Min( FirstVNF_Mem_Server ,( ( CRS / MRS ) + FirstVNF_Mem_Server ) ) + ( FirstVNF_RAM_Server * RRS ) ) ) + FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( CS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU + Max( ( RRSe * RCSe ),DS ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN - MDR ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( Max( ( DS + ( RRSe / RCSe ) ),DS ) + ( RRSe / RCSe ) ),DS ) ) ,RRSe ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( PN - MDR ) ,( ACS * RRS ) )", "choosing": "( Min( DS ,Min( Max( RRSe,MUC ) ,( MUR * MLU ) ) ) - Min( RRSe ,MUM ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237315}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( FirstVNF_RAM * Max( FirstVNF_CPU,( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) * RRS ) ) ) / ( Const / ( Min( FirstVNF_Mem ,BR ) / Min( MDR ,( FirstVNF_Mem_Server / ( ( AMS + DDR ) - PN ) ) ) ) ) ) ,( BR + ( RRS / PN ) ) )", "choosing": "( Max( ( RRSe + ( CS - Min( RCSe ,RCSe ) ) ),Max( Max( RRSe,RMSe ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + Min( RMSe ,( RCSe - MLU ) ) ) ,( MUC + ( ( ( MUC + DS ) - RMSe ) * ( CS * ( DS + MUM ) ) ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.834307992202729, "obj2": 0.11625418730136154}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MRS - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ) ) ,ARS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RMSe * ( Min( ( RMSe / ( Min( MUC ,RCSe ) - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUC ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7012482751829731}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( ( CRS * BR ) * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.11248498610032046}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Max( RRSe,MUC ) ) ) * Max( MUC,( RCSe / Max( RRSe,MUC ) ) ) ) - CS ) ,( ( ( MUC + Min( MUM ,( MUR / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( Max( RRSe,RCSe ),CS ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( RCSe,RMSe ) ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( MUM - RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + ( DS + RMSe ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8362573099415205, "obj2": 0.11358269084484282}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ,( FirstVNF_Mem + ( BR / BR ) ) )", "choosing": "( ( MUR / ( ( DS / Max( ( Min( ( MLU * RMSe ) ,DS ) / RMSe ),( ( ( RRSe + RRSe ) / ( RCSe * RRSe ) ) / ( Min( CS ,MUC ) * ( MUC + RRSe ) ) ) ) ) * ( ( ( MUR - MUR ) * DS ) * MUR ) ) ) * ( Min( Min( RCSe ,( ( ( ( RMSe + MUC ) * RCSe ) / RCSe ) - CS ) ) ,DS ) * ( ( MUR * ( MUC - CS ) ) - RCSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6974466477535761}, {"determining": "Min( ( PN - ( CRS / BR ) ) ,Min( Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.11262668053181368}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( DS ,MUC ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( RMSe * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( ( DS + ( MUR / Max( CS,RRSe ) ) ) ,RCSe ) / Max( ( ( ( MUM * RMSe ) - Max( RRSe,MUC ) ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( ( MUM / ( MUC + RRSe ) ) * DS ) ,( ( MLU + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( FirstVNF_RAM_Server / ( Const / FirstVNF_Mem ) ) ,( PN / MRS ) )", "choosing": "( Max( ( Max( Max( Max( ( MUR * ( DS * RRSe ) ),RMSe ),MLU ),( ( ( CS + ( DS - MUM ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ) - RCSe ),MUM ) * Min( MUM ,( DS * MLU ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934404}], "29": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( MRS - Max( ( ( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ) ,Min( Max( Max( ARS,RRS ),( RRS / FirstVNF_RAM ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( Max( MUC,MUM ) * MUC ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( CS * Min( DS ,RMSe ) ) ) ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,RMSe ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU + Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * DDR ) ,ACS ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MUM / MUR ) ) * MUR ) ,DS ) * Max( RCSe,MUC ) ) / RRSe ) * Max( ( Min( MUM ,Min( DS ,MUM ) ) - Min( ( Min( RMSe ,MLU ) - MUM ) ,RMSe ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( CRS ,RRS ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RRSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6973353674975435}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,RMSe ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "Min( ( Min( ( AMS + ( DDR / ARS ) ) ,Max( MRS,FirstVNF_CPU_Server ) ) - BR ) ,( ( ARS / BR ) + ( FirstVNF_CPU + ( ( MRS - AMS ) + Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( Max( DS,( RCSe - RMSe ) ) * ( RRSe / Max( Min( Max( ( RMSe * MUR ),RCSe ) ,( ( MUM + MLU ) / Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( ( DS + ( MUR / Max( CS,RRSe ) ) ) ,RCSe ) / Max( ( ( ( MUM * RMSe ) - Max( RRSe,MUC ) ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( ( MUM / ( MUC + RRSe ) ) * DS ) ,( ( MLU + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( ( ( ARS - AMS ) + Min( FirstVNF_Mem_Server ,( CRS * ( ( ( PN / MRS ) + ( ACS + MRS ) ) * PN ) ) ) ) - BR ) + ( Const / CRS ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,( RRS * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Max( RRSe,MUC ) ) ) * Max( MUC,( RCSe / Max( RRSe,MUC ) ) ) ) - CS ) ,( ( ( MUC + Min( MUM ,( MUR / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( Max( RRSe,RCSe ),CS ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( RCSe,RMSe ) ) ) ) ) * Min( Max( ( MLU - MLU ),RRSe ) ,( MUM - RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( ( ( RMSe * Min( ( ( ( RRSe * MUR ) + CS ) + Min( CS ,( MLU + MUM ) ) ) ,RMSe ) ) - MUR ) + MUR ) * ( ( Min( MUC ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934404}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( RMSe * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934404}], "30": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( Min( PN ,ACS ) / Max( Const,DDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) * Min( Min( Min( ( MRS / ( ACS + FirstVNF_Mem ) ) ,ACS ) ,( ( RRS / Const ) - ( BR / ( AMS / RRS ) ) ) ) ,PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( Max( MUC,MUM ) * MUC ) ) ) ) ,( ( ( ( MUM * MUC ) / ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * RMSe ) + MUM ) ) * ( Min( MUM ,MUR ) * ( Max( Max( CS,MLU ),RMSe ) - ( MUM - ( Max( MUC,( Min( MUM ,RRSe ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - Max( ( ( ( FirstVNF_CPU_Server + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ) ,Min( Max( Max( ARS,RRS ),( RRS / FirstVNF_RAM ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( Max( MUC,MUM ) * MUC ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( CS * Min( DS ,RMSe ) ) ) ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU + Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( FirstVNF_Mem - Max( ( FirstVNF_Mem - PN ),FirstVNF_RAM ) ) * FirstVNF_CPU_Server ) ,( ( FirstVNF_Mem_Server - Max( MDR,FirstVNF_Mem_Server ) ) - Min( ( CRS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ,RRS ) ) )", "choosing": "( ( CS * RRSe ) * ( Max( Min( DS ,MUC ),( ( Max( Min( ( RRSe / MLU ) ,( CS * MUC ) ),( ( MLU * MUR ) + MUM ) ) * ( RCSe - ( RMSe * MUM ) ) ) + MUM ) ) / RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.5413958432234638}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( Const + FirstVNF_RAM ) * FirstVNF_Mem ) ,( ( FirstVNF_Mem_Server - ( Min( Min( RRS ,FirstVNF_Mem ) ,Max( ( MDR * FirstVNF_RAM ),PN ) ) + MDR ) ) - ( CRS * BR ) ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( CS - Min( ( RRSe / ( RMSe * MUR ) ) ,( RMSe / MUR ) ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5587098275104904}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( RRS / ( ( ( CRS - MRS ) - ( Const / ( RRS + MDR ) ) ) + ( ( ( FirstVNF_Mem + ARS ) + FirstVNF_Mem_Server ) / ACS ) ) ) )", "choosing": "( ( DS * MUM ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.3391812865497076, "obj2": 0.6641225001065496}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * DDR ) ,ACS ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MUM / MUR ) ) * MUR ) ,DS ) * Max( RCSe,MUC ) ) / RRSe ) * Max( ( Min( MUM ,Min( DS ,MUM ) ) - Min( ( Min( RMSe ,MLU ) - MUM ) ,RMSe ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( ( MRS * ( ( FirstVNF_Mem + Min( BR ,BR ) ) / ( ( RRS + Min( PN ,FirstVNF_CPU ) ) / MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe + ( ( DS * RRSe ) * ( ( DS * ( Max( MLU,MUC ) * MUC ) ) * MUR ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( ( DS + ( MUR / Max( CS,RRSe ) ) ) ,RCSe ) / Max( ( ( ( MUM * RMSe ) - Max( RRSe,MUC ) ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( ( MUM / ( MUC + RRSe ) ) * DS ) ,( ( MLU + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( Min( ( AMS + ( DDR / ARS ) ) ,Max( MRS,FirstVNF_CPU_Server ) ) - BR ) ,( ( ARS / BR ) + ( FirstVNF_CPU + ( ( MRS - AMS ) + Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( Max( DS,( RCSe - RMSe ) ) * ( RRSe / Max( Min( Max( ( RMSe * MUR ),RCSe ) ,( ( MUM + MLU ) / Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}], "31": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( Max( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) * FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) + FirstVNF_Mem_Server ) ),Const ) - ( ( FirstVNF_RAM_Server * ARS ) * AMS ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( ( ( RRSe - RRSe ) / RRSe ) * ( Max( DS,MUM ) * MUC ) ) ) ) ,( ( ( ( MUM + MUC ) - ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( CS * ( MUM / MUM ) ) ) * RMSe ) + CS ) ) * ( Min( MUM ,MUR ) * ( Min( ( Min( MUM ,RRSe ) - MUR ) ,RMSe ) - ( MUM - ( Max( MUC,( Min( MUM ,RRSe ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( PN ,ACS ) / Max( Const,DDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) * Min( Min( Min( ( MRS / ( ACS + FirstVNF_Mem ) ) ,ACS ) ,( ( RRS / Const ) - ( BR / ( AMS / RRS ) ) ) ) ,PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( Max( MUC,MUM ) * MUC ) ) ) ) ,( ( ( ( MUM * MUC ) / ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * RMSe ) + MUM ) ) * ( Min( MUM ,MUR ) * ( Max( Max( CS,MLU ),RMSe ) - ( MUM - ( Max( MUC,( Min( MUM ,RRSe ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU + Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * DDR ) ,ACS ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MUM / MUR ) ) * MUR ) ,DS ) * Max( RCSe,MUC ) ) / RRSe ) * Max( ( Min( MUM ,Min( DS ,MUM ) ) - Min( ( Min( RMSe ,MLU ) - MUM ) ,RMSe ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ( ARS * FirstVNF_Mem ) ) - PN ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( CS * MUR ) * ( Max( ( MUM + ( MUR * ( RMSe - ( MLU - ( RRSe - DS ) ) ) ) ),( MUR - Min( MUR ,( MLU + MLU ) ) ) ) / RRSe ) )", "obj1": 0.47953216374269003, "obj2": 0.5356201777442524}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( ( ( PN - AMS ) + Min( ( AMS + PN ) ,Max( MRS,FirstVNF_CPU_Server ) ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( CS - DS ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.6320080418563039}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( ( MDR + ACS ) + ACS ) )", "choosing": "( Max( ( CS * Min( Max( Max( RMSe,( Min( MUM ,MUC ) + ( MUM * MLU ) ) ),RRSe ) ,Max( ( RMSe + RCSe ),( MUR / ( CS * MLU ) ) ) ) ),( Max( Max( RMSe,MUM ),( RCSe / ( ( RCSe * ( MUC * MLU ) ) + DS ) ) ) - MLU ) ) * ( Min( ( CS / Min( MUC ,DS ) ) ,( RMSe + MUC ) ) / DS ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR - DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( FirstVNF_CPU_Server + Const ) )", "choosing": "( ( RCSe * CS ) / Max( Min( ( ( ( MLU + ( ( DS - MUC ) + Max( RCSe,MUC ) ) ) - MLU ) - CS ) ,( RMSe / CS ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.4834307992202729, "obj2": 0.5170525048988278}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( MDR / MDR ),( ( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( DS ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6862171469191748}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( Min( ( ARS - Const ) ,ARS ) - ( ( AMS * DDR ) / ( DDR - Const ) ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,RMSe ) ) ) ) * Max( Min( MUC ,RCSe ),( RMSe * RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server * ( ( RRS - FirstVNF_RAM_Server ) * ( ( ( FirstVNF_RAM * ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) - ( ( ( MRS - Const ) / RRS ) - FirstVNF_CPU ) ) - RRS ) ) ) )", "choosing": "( ( RMSe / ( ( DS * RRSe ) * ( ( DS * Max( ( CS * ( DS * DS ) ),( Max( MUC,RCSe ) - ( RCSe / RMSe ) ) ) ) * MUR ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( Min( ( FirstVNF_CPU_Server * PN ) ,MDR ) / Min( ( FirstVNF_RAM / ( ( PN + RRS ) * FirstVNF_Mem_Server ) ) ,Max( ACS,( BR * ( Min( Min( ARS ,FirstVNF_CPU_Server ) ,( FirstVNF_CPU / FirstVNF_CPU ) ) + ACS ) ) ) ) ) ,( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem_Server / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - FirstVNF_Mem ) ) - DDR ) * BR ) )", "choosing": "( ( RMSe / ( ( DS / MLU ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / Max( Min( Max( ( Min( MUM ,Max( DS,RRSe ) ) / RRSe ),( ( ( MUC * RRSe ) + Max( RRSe,MUR ) ) - MUR ) ) ,( ( DS + MLU ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ,( ( MRS * ( ( FirstVNF_Mem + Min( BR ,BR ) ) / ( ( RRS + Min( PN ,FirstVNF_CPU ) ) / MRS ) ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe + ( ( DS * RRSe ) * ( ( DS * ( Max( MLU,MUC ) * MUC ) ) * MUR ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7006335567815412}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}], "32": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) + FirstVNF_Mem_Server ) ),Const ) - ( ( FirstVNF_Mem_Server * ARS ) * AMS ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( ( ( MUM - RRSe ) / RRSe ) * ( Max( DS,MUM ) * MUC ) ) ) ) ,( ( ( Min( CS ,MUC ) - ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * DS ) + CS ) ) * ( ( MUM + ( MUC / ( ( RCSe + RMSe ) + MUR ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) * FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) + FirstVNF_Mem_Server ) ),Const ) - ( ( FirstVNF_RAM_Server * ARS ) * AMS ) ) ,( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( ( ( RRSe - RRSe ) / RRSe ) * ( Max( DS,MUM ) * MUC ) ) ) ) ,( ( ( ( MUM + MUC ) - ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( CS * ( MUM / MUM ) ) ) * RMSe ) + CS ) ) * ( Min( MUM ,MUR ) * ( Min( ( Min( MUM ,RRSe ) - MUR ) ,RMSe ) - ( MUM - ( Max( MUC,( Min( MUM ,RRSe ) - MUR ) ) * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - AMS ) + Min( DDR ,FirstVNF_CPU ) ) - BR ) ,( CRS / Const ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU + Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * DDR ) ,ACS ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MUM / MUR ) ) * MUR ) ,DS ) * Max( RCSe,MUC ) ) / RRSe ) * Max( ( Min( MUM ,Min( DS ,MUM ) ) - Min( ( Min( RMSe ,MLU ) - MUM ) ,RMSe ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,Const ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) )", "obj1": 0.3586744639376218, "obj2": 0.6356883119838928}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( Max( RRSe,RCSe ),CS ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( Max( FirstVNF_RAM_Server,( PN - ( BR * FirstVNF_Mem_Server ) ) ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( ( MUM * ( ( MUR - MUR ) / DS ) ),( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6946912856189118}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Min( Max( PN,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( MLU / MUR ) + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / RCSe ) + ( MUR / MLU ) ),( MUC * ( MLU * MUM ) ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( CS,MLU ) ,( MUM + RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) / Max( BR,Max( ( Const - DDR ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) + Min( ( ( FirstVNF_CPU + ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / ( DDR - Const ) ) ) + ( FirstVNF_RAM / Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM + RCSe ) * Min( CS ,Max( MUM,RMSe ) ) ) * Min( DS ,RMSe ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}], "33": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( Max( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) * FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) + FirstVNF_Mem_Server ) ),Const ) - ( ( FirstVNF_Mem_Server * ARS ) * AMS ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( ( ( MUM - RRSe ) / RRSe ) * ( Max( DS,MUM ) * MUC ) ) ) ) ,( ( ( MUM - ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * DS ) + CS ) ) * ( ( MUM + ( MUC / ( ( RCSe + RMSe ) + MUR ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( Max( ( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) + FirstVNF_Mem_Server ) ),Const ) - ( ( FirstVNF_Mem_Server * ARS ) * AMS ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( ( ( MUM - RRSe ) / RRSe ) * ( Max( DS,MUM ) * MUC ) ) ) ) ,( ( ( Min( CS ,MUC ) - ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * DS ) + CS ) ) * ( ( MUM + ( MUC / ( ( RCSe + RMSe ) + MUR ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - AMS ) + Min( DDR ,FirstVNF_CPU ) ) - BR ) ,( CRS / Const ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU + Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * DDR ) ,ACS ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MUM / MUR ) ) * MUR ) ,DS ) * Max( RCSe,MUC ) ) / RRSe ) * Max( ( Min( MUM ,Min( DS ,MUM ) ) - Min( ( Min( RMSe ,MLU ) - MUM ) ,RMSe ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( ( ( Min( ( Min( RMSe ,( MUM / MUR ) ) * MUR ) ,DS ) * Max( RCSe,MUC ) ) / RRSe ) * Max( ( Min( MUM ,Min( DS ,MUM ) ) - Min( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) ,RMSe ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUR ) + ( MLU - MLU ) ) / Min( ( MUC / MUM ) ,( MUC * DS ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6345122258914608}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( ( MUM * CS ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7034889627840548}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,Const ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) )", "obj1": 0.3586744639376218, "obj2": 0.6356883119838928}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,Min( ( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server * PN ) ) + BR ) / DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM / MUC ) * RRSe ) * Max( ( RRSe / ( Max( MUC,( Min( RMSe ,( MUC / RRSe ) ) + Min( ( DS / MUC ) ,RCSe ) ) ) - Max( ( MUC / MLU ),MUC ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6945337397562062}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Min( Max( PN,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( MLU / MUR ) + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / RCSe ) + ( MUR / MLU ) ),( MUC * ( MLU * MUM ) ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( CS,MLU ) ,( MUM + RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,Min( ACS ,BR ) ) ) ) )", "choosing": "Min( ( ( Max( Max( CS,RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( DS * DS ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}], "34": [{"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ,( Min( ( ARS / Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( ( ( CS + RRSe ) + ( MLU + RCSe ) ),( RCSe * ( MUM * MLU ) ) ) ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( BR * FirstVNF_RAM_Server ) ,( Max( ( ( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) * FirstVNF_RAM_Server ) / ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * Const ) ) + FirstVNF_Mem_Server ) ),Const ) - ( ( FirstVNF_Mem_Server * ARS ) * AMS ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( ( ( MUM - RRSe ) / RRSe ) * ( Max( DS,MUM ) * MUC ) ) ) ) ,( ( ( MUM - ( CS * Min( DS ,RMSe ) ) ) / RRSe ) - ( DS + RMSe ) ) ) + ( ( ( RCSe * ( ( MUM / MUM ) * CS ) ) * DS ) + CS ) ) * ( ( MUM + ( MUC / ( ( RCSe + RMSe ) + MUR ) ) ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( ( FirstVNF_CPU + ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) + FirstVNF_RAM ) ,( Max( ACS,RRS ) / ( ( BR + AMS ) - ( AMS - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) * ( DDR / ( ARS - DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( MUC ,RRSe ) / ( ( Min( Min( MUR ,DS ) ,MLU ) + Min( Min( RCSe ,MUM ) ,RRSe ) ) * RCSe ) ) / MUC ) / Min( ( ( Min( ( MUM * CS ) ,MLU ) / MUM ) * Max( ( MUC / Min( DS ,( MUC - MLU ) ) ),( MUR - RMSe ) ) ) ,Min( ( RRSe + Min( ( MUR * ( MLU / CS ) ) ,CS ) ) ,MUC ) ) ) * Min( ( ( RMSe * Min( ( MUR - CS ) ,Max( ( ( RMSe / MUR ) / ( DS * MUM ) ),( ( MUM / RMSe ) * MUR ) ) ) ) - MUM ) ,RCSe ) )", "obj1": 0.7504873294346979, "obj2": 0.1437906977427482}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,( PN * BR ) ) - FirstVNF_RAM ) ,( ( PN / ( ( BR * ( ACS * FirstVNF_Mem_Server ) ) - Min( DDR ,Max( FirstVNF_CPU,( BR * Max( FirstVNF_Mem_Server,MRS ) ) ) ) ) ) / BR ) )", "choosing": "( ( MLU / ( MUM * DS ) ) * ( ( ( ( CS - MLU ) - MUR ) - ( ( MUM / RCSe ) - MUM ) ) * MUM ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( PN - ( CRS / BR ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( MDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ACS ) ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( MUR,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Min( ( RMSe / ( RRSe - ( MUR - MUC ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * RCSe ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.8518518518518519, "obj2": 0.1074814879827767}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / ( MLU - RRSe ) ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.8674463937621832, "obj2": 0.10693053814449921}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( ( CS * MUC ) * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7026432273622962}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( Min( ARS ,FirstVNF_Mem ) ,Min( ( ( ( FirstVNF_CPU - ( FirstVNF_CPU_Server * PN ) ) + BR ) / DDR ) ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM / MUC ) * RRSe ) * Max( ( RRSe / ( Max( MUC,( Min( RMSe ,( MUC / RRSe ) ) + Min( ( DS / MUC ) ,RCSe ) ) ) - Max( ( MUC / MLU ),MUC ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6945337397562062}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Min( Max( PN,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( MLU / MUR ) + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / RCSe ) + ( MUR / MLU ) ),( MUC * ( MLU * MUM ) ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( CS,MLU ) ,( MUM + RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( PN - ( BR * FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MUR - MUR ) / DS ) ) * MLU ) ) / MLU ) * Min( Min( MUR ,MUR ) ,RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6904893890424041}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}], "35": [{"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,Max( ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) / Min( ( ( FirstVNF_CPU + ( ( ( DDR - Const ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM / Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( MUC * CS ) ) * ( ( ( MUM + RCSe ) * ( MUC * CS ) ) * Min( DS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ,( Min( ( ARS / Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( ( ( CS + RRSe ) + ( MLU + RCSe ) ),( RCSe * ( MUM * MLU ) ) ) ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( Min( RMSe ,CS ) - ( RCSe / RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( ( CS * MUC ) * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7026432273622962}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Min( Max( PN,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( ( Max( ( ( MLU / MUR ) + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / RCSe ) + ( MUR / MLU ) ),( MUC * ( MLU * MUM ) ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( CS,MLU ) ,( MUM + RMSe ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6861077618868475}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,( PN * BR ) ) - FirstVNF_RAM ) ,( ( PN / ( ( BR * ( ACS * FirstVNF_Mem_Server ) ) - Min( DDR ,Max( FirstVNF_CPU,( BR * Max( FirstVNF_Mem_Server,MRS ) ) ) ) ) ) / BR ) )", "choosing": "( ( MLU / ( MUM * DS ) ) * ( ( ( ( CS - MLU ) - MUR ) - ( ( MUM / RCSe ) - MUM ) ) * MUM ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( DDR + MDR ) / Const ),( ACS * DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUR * Min( RMSe ,( MLU - ( RCSe + MUM ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - MUM ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}], "36": [{"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,Max( ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) / Min( ( ( FirstVNF_CPU + ( ( MDR - Const ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM / Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( MUC * CS ) ) * Min( Max( ( MUR + ( MUC - ( RRSe * Max( MLU,CS ) ) ) ),( MUM + ( RCSe * ( ( CS - MUR ) * ( MLU + ( DS / DS ) ) ) ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,Max( ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) / Min( ( ( FirstVNF_CPU + ( ( ( DDR - Const ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM / Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( MUC * CS ) ) * ( ( ( MUM + RCSe ) * ( MUC * CS ) ) * Min( DS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( ( CS * MUC ) * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7026432273622962}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( Max( FirstVNF_CPU,MRS ) ,( MRS * ARS ) )", "choosing": "( ( Max( CS,( ( MUM * ( ( MLU + MUC ) - MLU ) ) * MLU ) ) / RRSe ) * ( ( ( DS * RCSe ) + DS ) * MUR ) )", "obj1": 0.31189083820662766, "obj2": 0.6894023145477182}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( ( AMS * DDR ) / ( Const - DDR ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Max( MUM,( MUM / ( MUM * CS ) ) ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7126667604023438}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( Min( RMSe ,CS ) - ( RCSe / RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}], "37": [{"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,CS ) ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( Max( Max( RRS,RRS ),RRS ) / Max( BR,Max( ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) / Min( ( ( FirstVNF_CPU + ( ( MDR - Const ) / ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM / Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUM + RCSe ) * ( MUC * CS ) ) * Min( Max( ( MUR + ( MUC - ( RRSe * Max( MLU,CS ) ) ) ),( MUM + ( RCSe * ( ( CS - MUR ) * ( MLU + ( DS / DS ) ) ) ) ) ) ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( ( ARS - FirstVNF_CPU ) - Const ) * Const ) / Max( FirstVNF_CPU,DDR ) )", "choosing": "( ( RCSe - ( RMSe - CS ) ) + ( ( ( MLU * RRSe ) / Max( RMSe,MUM ) ) * MUC ) )", "obj1": 0.4951267056530214, "obj2": 0.4921881426590104}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - Max( ( FirstVNF_RAM - ( AMS + FirstVNF_CPU ) ),ACS ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( RRSe,( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - ( Min( ( RCSe - MUR ) ,( ( Max( MUR,Min( RCSe ,MLU ) ) * ( ( DS * MLU ) * MUC ) ) - RMSe ) ) * ( MUR * ( ( MUC / RRSe ) * Min( DS ,( ( RMSe * MUC ) * DS ) ) ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.45096580428980965}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( ( CS * MUC ) * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7026432273622962}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,BR ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( RCSe * ( RCSe * RMSe ) ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / Max( MUC,Min( MLU ,MUC ) ) ) ) ) ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}], "38": [{"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,MUR ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,Max( MUM,CS ) ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( ( RCSe / MUM ) - Min( RMSe ,CS ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( MLU * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Const ) ) )", "choosing": "( Min( RRSe ,CS ) * ( ( RCSe + MUR ) * ( ( MUM + ( ( CS * MUC ) * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7026432273622962}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "( Max( ( MDR / MDR ),( ( ( AMS + ACS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( ( Min( DS ,Max( DS,MUM ) ) - RMSe ) ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * Min( ( DS + RRSe ) ,( DS - DS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6849069131055692}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}], "39": [{"determining": "Min( ( ( DDR * ( ARS / PN ) ) / Max( BR,Max( ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) / Min( ( ( FirstVNF_CPU + ( ( DDR - Const ) / FirstVNF_Mem_Server ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,MLU ) / Min( CS ,RRSe ) ) + MUC ) + Max( ( ( MUC * Max( MUC,RCSe ) ) - DS ),DS ) ) - MUR ) * Min( DS ,RMSe ) ) * Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( CS ,MUR ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( ( RCSe / MUM ) - Min( RMSe ,CS ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( MLU * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( Max( FirstVNF_CPU_Server,DDR ) + ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) / Min( ( Max( MUM,Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( ( ( ( ( ( MLU + MUM ) + ( MLU + RCSe ) ) * DS ) - RRSe ) + ( RRSe - RMSe ) ) ,Min( ( RMSe * RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( ( RCSe / MUM ) - Min( RMSe ,CS ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( MLU * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( Max( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_CPU_Server,RRS ) ) + FirstVNF_Mem_Server ) ),PN ) ,Min( ( FirstVNF_Mem * ( CRS * PN ) ) ,( Const / PN ) ) )", "choosing": "( ( Min( ( MLU * ( MUC / ( RCSe * ( MUC * Max( MUC,MUM ) ) ) ) ) ,( ( RRSe / ( ( MUM * MUC ) / ( Min( DS ,MLU ) * CS ) ) ) - Min( DS ,RMSe ) ) ) + ( ( ( RCSe * ( ( RRSe + DS ) * MUR ) ) * RMSe ) + MUM ) ) * ( ( RCSe * ( Max( RMSe,RCSe ) + MUR ) ) - ( ( MUM * RCSe ) * MLU ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7238065063881818}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}], "40": [{"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_Mem_Server ) * PN ) ) ) ,( Min( ( ARS / Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( ( ( RCSe + MUR ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( ( DDR * ( ARS / PN ) ) / Max( BR,Max( ( Const - ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ),RRS ) ) ) ,( ( FirstVNF_CPU_Server / ( ( ( FirstVNF_Mem * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / DDR ) ) - FirstVNF_CPU_Server ) ) / Min( ( ( FirstVNF_CPU + ( ( DDR - Const ) / FirstVNF_Mem_Server ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( ( ( Min( CS ,MLU ) / Min( CS ,RRSe ) ) + MUC ) + Max( ( ( MUC * Max( MUC,RCSe ) ) - DS ),DS ) ) - MUR ) * Min( DS ,RMSe ) ) * Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( ( MUC / MUM ) - Min( CS ,RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),( RMSe / ( ( RMSe + MLU ) - ( MUC - MUR ) ) ) ) - CS ) ),Max( Max( CS,RRSe ),( MLU + MUC ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( ( RCSe / MUM ) - Min( RMSe ,CS ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( MLU * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( ( Max( ( ( ( BR / ARS ) * ARS ) - FirstVNF_RAM_Server ),Const ) * Max( ( AMS - Min( ACS ,CRS ) ),MDR ) ) ,( AMS / ARS ) )", "choosing": "( ( MUR * ( RCSe * RMSe ) ) * ( RCSe - ( Min( ( RCSe * Min( RRSe ,CS ) ) ,( CS * Max( Max( MLU,Min( MUM ,DS ) ),( ( CS + MLU ) / ( MUC - CS ) ) ) ) ) * ( RRSe * RRSe ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759612}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}], "41": [{"determining": "Min( Max( Max( PN,DDR ),( CRS - AMS ) ) ,Min( PN ,( Min( PN ,( CRS - FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( ( Min( ( RCSe * ( ( RRSe / RMSe ) - RMSe ) ) ,( Max( Max( MUC,MUM ),RRSe ) - ( MLU - CS ) ) ) - RCSe ) * ( ( MUC * MUC ) + ( RRSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_Mem_Server ) * PN ) ) ) ,( Min( ( ARS / Const ) ,ARS ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( ( CRS + ( ( FirstVNF_RAM_Server * Const ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( ( ( RCSe + MUR ) * ( ( MUM + ( CS * MUC ) ) + Min( ( Min( RCSe ,( ( CS + RRSe ) + ( MLU + RCSe ) ) ) / ( MUR * ( DS / MUM ) ) ) ,MUM ) ) ) * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MLU ,( MUC / DS ) ) - ( MUC * MLU ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( Max( RRSe,Min( Min( RRSe ,( MUC / ( ( MUC / MUM ) - Min( CS ,RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),( RMSe / ( ( RMSe + MLU ) - ( MUC - MUR ) ) ) ) - CS ) ),Max( Max( CS,RRSe ),( MLU + MUC ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( ( Max( ( ( ( BR / ARS ) * ARS ) - FirstVNF_RAM_Server ),Const ) * Max( ( AMS - Min( ACS ,CRS ) ),MDR ) ) ,( AMS / ARS ) )", "choosing": "( ( MUR * ( RCSe * RMSe ) ) * ( RCSe - ( Min( ( RCSe * Min( RRSe ,CS ) ) ,( CS * Max( Max( MLU,Min( MUM ,DS ) ),( ( CS + MLU ) / ( MUC - CS ) ) ) ) ) * ( RRSe * RRSe ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7232172936759612}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}], "42": [{"determining": "Min( Max( Max( PN,DDR ),( CRS - AMS ) ) ,Min( PN ,( Min( PN ,( CRS - FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( ( Min( ( RCSe * ( ( RRSe / RMSe ) - RMSe ) ) ,( Max( Max( MUC,MUM ),RRSe ) - ( MLU - CS ) ) ) - RCSe ) * ( ( MUC * MUC ) + ( RRSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Max( Max( PN,DDR ),( CRS - AMS ) ) ,Min( PN ,( Min( PN ,( CRS - FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( ( Min( ( RCSe * ( ( RRSe / RMSe ) - RMSe ) ) ,( Max( Max( MUC,MUM ),RRSe ) - ( MLU - CS ) ) ) - RCSe ) * ( ( MUC * MUC ) + ( RRSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( FirstVNF_RAM * ( DDR / Min( MDR ,ACS ) ) ) ,( ( BR + ( Const + ( FirstVNF_Mem_Server - ( BR + ( Const + ( FirstVNF_Mem_Server - BR ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Max( Max( MLU,( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ) ),Max( ( MUC - ( Max( Max( Min( RCSe ,MUM ),RRSe ),CS ) / MUM ) ),( DS - Max( DS,( MUR - ( MUC / Min( RMSe ,RCSe ) ) ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( Max( CS,Max( DS,( MUC + RRSe ) ) ) ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( Max( MUR,Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( MUC ,DS ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( Max( AMS,( RRS / MDR ) ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),FirstVNF_Mem_Server ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}], "43": [{"determining": "Min( ( Min( ( AMS + ( PN - ( FirstVNF_Mem_Server + ARS ) ) ) ,( Const + AMS ) ) + MDR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( Max( RCSe,MUM ) * MLU ),MUM ) + ( Max( ( ( MUM + ( MUR + RCSe ) ) / ( CS + ( DS + RCSe ) ) ),MLU ) * ( ( Max( MUM,( MUM * RMSe ) ) - ( ( MUM * MUC ) / MLU ) ) + ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Max( Max( PN,DDR ),( CRS - AMS ) ) ,Min( PN ,( Min( PN ,( CRS - FirstVNF_RAM_Server ) ) - PN ) ) )", "choosing": "( ( Min( ( RCSe * ( ( RRSe / RMSe ) - RMSe ) ) ,( Max( Max( MUC,MUM ),RRSe ) - ( MLU - CS ) ) ) - RCSe ) * ( ( MUC * MUC ) + ( RRSe - MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem / PN ) ) + Max( Min( ( AMS + FirstVNF_RAM_Server ) ,Const ),Min( RRS ,AMS ) ) ),( FirstVNF_CPU * ( ( ( FirstVNF_RAM + RRS ) + DDR ) / MRS ) ) )", "choosing": "( ( ( Max( RMSe,RCSe ) * ( RCSe + MUR ) ) / RCSe ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Max( MLU,RMSe ) + MLU ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( Max( ( ( Max( ACS,BR ) * Max( BR,FirstVNF_CPU_Server ) ) - ( Min( DDR ,FirstVNF_RAM ) + ( FirstVNF_Mem + ARS ) ) ),( ( ( FirstVNF_RAM_Server / MDR ) - ( ARS * MRS ) ) / Max( Max( PN,FirstVNF_RAM_Server ),( FirstVNF_RAM_Server + DDR ) ) ) ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),( ( Max( DS,MUM ) + ( ( RRSe - MUC ) * MUC ) ) - Min( MUR ,Min( Min( MLU ,RRSe ) ,MUC ) ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7186324045538292}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( FirstVNF_RAM_Server ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17503748998410612}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}], "44": [{"determining": "Min( Min( ( Min( Min( ( FirstVNF_Mem - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * CRS ) ) - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RCSe - ( DS + CS ) ) * ( ( ( ( ( RMSe / ( RCSe - ( DS + CS ) ) ) / MUM ) * RRSe ) * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( Min( ( AMS + ( PN - ( FirstVNF_Mem_Server + ARS ) ) ) ,( Const + AMS ) ) + MDR ) ,Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( Max( RCSe,MUM ) * MLU ),MUM ) + ( Max( ( ( MUM + ( MUR + RCSe ) ) / ( CS + ( DS + RCSe ) ) ),MLU ) * ( ( Max( MUM,( MUM * RMSe ) ) - ( ( MUM * MUC ) / MLU ) ) + ( MLU * MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "( ( ( ( ARS * BR ) - ( FirstVNF_CPU_Server / AMS ) ) + Min( ( Const / MRS ) ,Min( Max( ( FirstVNF_Mem_Server / PN ),ACS ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUR + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0021709778251288634}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( FirstVNF_RAM_Server ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17503748998410612}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}], "45": [{"determining": "Min( Min( ( Min( ( FirstVNF_Mem - Const ) ,( RRS * PN ) ) - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RCSe - ( DS + CS ) ) * ( ( ( ( ( RMSe / MUC ) / MUM ) * RRSe ) * ( ( ( RMSe / MUC ) / MUM ) * RRSe ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Min( ( Min( Min( ( FirstVNF_Mem - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * CRS ) ) - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RCSe - ( DS + CS ) ) * ( ( ( ( ( RMSe / ( RCSe - ( DS + CS ) ) ) / MUM ) * RRSe ) * DS ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( FirstVNF_RAM_Server ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17503748998410612}, {"determining": "Min( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( ( DDR * Min( ( FirstVNF_CPU_Server * PN ) ,( Max( DDR,ACS ) - MDR ) ) ) - MDR ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS + DDR ) / ( Const - ( FirstVNF_Mem * ACS ) ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,MLU ) * ( ( MUR + RCSe ) * ( Max( ( MUM + CS ),( MUM / ( MUM + CS ) ) ) + ( RMSe * Max( ( ( MUM + ( MUC * CS ) ) / CS ),MUC ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014495687901811024}, {"determining": "Min( ( ( ( ( ( ( MRS * RRS ) - FirstVNF_Mem_Server ) * MRS ) + ( ( ( CRS / FirstVNF_CPU_Server ) / ( AMS / PN ) ) - BR ) ) - RRS ) * ( Max( MRS,FirstVNF_RAM_Server ) + FirstVNF_Mem ) ) ,( Min( ( ( ( MRS - BR ) - BR ) * PN ) ,MDR ) / Min( ( BR / ( ( FirstVNF_CPU + RRS ) * RRS ) ) ,Min( FirstVNF_CPU_Server ,Max( AMS,Max( DDR,AMS ) ) ) ) ) )", "choosing": "( ( MUC / Max( Max( MLU,MLU ),Max( DS,( Min( ( CS / ( RMSe - CS ) ) ,MUR ) + MUM ) ) ) ) * ( ( MUR / ( ( MUC / CS ) + DS ) ) - ( ( ( RMSe * MUC ) / ( ( DS - MUM ) + ( RRSe * MUM ) ) ) + CS ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0019120206260582382}], "46": [{"determining": "Min( Min( ( Min( Min( ( FirstVNF_Mem - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) ) - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) )", "choosing": "( ( RCSe - ( DS + CS ) ) * ( ( ( ( CS / Max( DS,Min( CS ,( MUR - MLU ) ) ) ) * RRSe ) * DS ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Min( ( Min( ( FirstVNF_Mem - Const ) ,( RRS * PN ) ) - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * CRS ) )", "choosing": "( ( RCSe - ( DS + CS ) ) * ( ( ( ( ( RMSe / MUC ) / MUM ) * RRSe ) * ( ( ( RMSe / MUC ) / MUM ) * RRSe ) ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "( ( RRS + ARS ) - ( MDR + FirstVNF_Mem ) )", "choosing": "Max( ( ( MLU * CS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.557504873294347, "obj2": 0.40444525082585586}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( Max( ( MDR * AMS ),Max( MDR,Max( ACS,MDR ) ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - ( ( RRSe - RCSe ) - RMSe ) ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6444724891777676}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( ACS / ( PN - DDR ) ) ,( DDR / ARS ) )", "choosing": "( ( ( Min( ( Min( ( MUM / MUR ) ,RMSe ) * MUR ) ,DS ) * Max( RCSe,MUM ) ) / RRSe ) * ( ( CS - ( RCSe - RRSe ) ) * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( Max( AMS,( RRS / MDR ) ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),FirstVNF_Mem_Server ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( FirstVNF_RAM_Server ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17503748998410612}], "47": [{"determining": "Min( ( ( MDR + PN ) - ( ( BR - ( FirstVNF_CPU_Server / Max( FirstVNF_CPU,( FirstVNF_Mem / BR ) ) ) ) + ARS ) ) ,Min( ( FirstVNF_CPU / MRS ) ,( RRS * PN ) ) )", "choosing": "( ( RCSe - ( DS + ( CS + ( DS + ( CS + Max( Max( MUR,RRSe ),MUM ) ) ) ) ) ) * ( ( Min( ( ( CS - MUR ) / Max( DS,Min( ( MUR - MLU ) ,CS ) ) ) ,RRSe ) * DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Min( ( Min( Min( ( FirstVNF_Mem - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) ) - Const ) ,( RRS * PN ) ) ,( FirstVNF_Mem_Server * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) )", "choosing": "( ( RCSe - ( DS + CS ) ) * ( ( ( ( CS / Max( DS,Min( CS ,( MUR - MLU ) ) ) ) * RRSe ) * DS ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_Mem ) / PN ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,MUC ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - RMSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.6842105263157895, "obj2": 0.3053841516887664}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "Min( ( BR - Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( MDR - Const ) ) ) ,Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server * MDR ) * Min( Const ,( CRS / ACS ) ) ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,MLU ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.5555555555555556, "obj2": 0.4004578838735382}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( Min( ( ( Const - Min( Min( ( DDR - RRS ) ,ARS ) ,Max( AMS,MDR ) ) ) + BR ) ,CRS ) ,Max( MRS,Min( MDR ,RRS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * ( MUR / ( DS / RCSe ) ) ) * MUR ) ,DS ) / Max( RCSe,MUC ) ) / RRSe ) * Max( Min( CS ,( MUR - MLU ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.042690067182163255}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( ( BR / ARS ) * ARS ) ,( ( FirstVNF_CPU * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MLU - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6430871394358892}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( MDR - Const ) ) ) ,( MDR * Min( ( PN - Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( RMSe - ( ( Max( MUC,RRSe ) / DS ) + ( CS - RCSe ) ) ) * RMSe ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( ( ( MDR + DDR ) / Const ),Max( ( FirstVNF_Mem_Server - BR ),DDR ) ) ) ) ) ) ,( CRS * ( ( FirstVNF_Mem_Server / MRS ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( Max( DS,MUC ),( MUM - ( MUM * Min( ( MUM / MUM ) ,( MLU - ( RCSe + MUR ) ) ) ) ) ) / RRSe ) * ( ( ( RRSe - Max( ( CS - MLU ),MUM ) ) - ( MUC / RMSe ) ) * MUR ) )", "obj1": 0.9902534113060428, "obj2": 0.004701259989565931}, {"determining": "Min( FirstVNF_RAM_Server ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17503748998410612}], "48": [{"determining": "Min( ( Max( ( ( MRS / ( ARS / ( Const + PN ) ) ) * DDR ),CRS ) - ( ( MDR / ( MRS / ( ARS / ( Const + PN ) ) ) ) - ARS ) ) ,Min( PN ,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "( Min( ( MUM + ( ( CS - Min( ( RCSe / ( MLU / MUC ) ) ,RRSe ) ) / DS ) ) ,RCSe ) * ( ( CS - Min( ( RCSe / ( MLU / MUC ) ) ,RRSe ) ) - ( MUC - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( ( MDR + PN ) - ( ( BR - ( FirstVNF_CPU_Server / Max( FirstVNF_CPU,( FirstVNF_Mem / BR ) ) ) ) + ARS ) ) ,Min( ( FirstVNF_CPU / MRS ) ,( RRS * PN ) ) )", "choosing": "( ( RCSe - ( DS + ( CS + ( DS + ( CS + Max( Max( MUR,RRSe ),MUM ) ) ) ) ) ) * ( ( Min( ( ( CS - MUR ) / Max( DS,Min( ( MUR - MLU ) ,CS ) ) ) ,RRSe ) * DS ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( ( ( AMS * AMS ) / ARS ) * ARS ) ,( ( ( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) * Max( ( AMS - Min( ACS ,CRS ) ),MDR ) ) * AMS ) - MDR ) )", "choosing": "( ( Min( RCSe ,RMSe ) / RRSe ) * ( ( CS + MLU ) / MLU ) )", "obj1": 0.6413255360623782, "obj2": 0.29572015706091653}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) * MUM ) * ( RCSe / DS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "Min( ( BR - Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( MDR - Const ) ) ) ,Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server * MDR ) * Min( Const ,( CRS / ACS ) ) ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,MLU ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.5555555555555556, "obj2": 0.4004578838735382}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( Min( ( ( Const - Min( Min( ( DDR - RRS ) ,ARS ) ,Max( AMS,MDR ) ) ) + BR ) ,CRS ) ,Max( MRS,Min( MDR ,RRS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * ( MUR / ( DS / RCSe ) ) ) * MUR ) ,DS ) / Max( RCSe,MUC ) ) / RRSe ) * Max( Min( CS ,( MUR - MLU ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.042690067182163255}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ARS ) * ARS ) ,( ( FirstVNF_CPU * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MLU - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6430871394358892}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( MDR - Const ) ) ) ,( MDR * Min( ( PN - Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( RMSe - ( ( Max( MUC,RRSe ) / DS ) + ( CS - RCSe ) ) ) * RMSe ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}], "49": [{"determining": "Min( Min( MRS ,FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM_Server * ( CRS / PN ) ) - ( FirstVNF_CPU / ( ACS - MRS ) ) ) )", "choosing": "( Min( ( MUM + RRSe ) ,( MUC / RCSe ) ) * Max( RRSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( Max( ( ( MRS / ( ARS / ( Const + PN ) ) ) * DDR ),CRS ) - ( ( MDR / ( MRS / ( ARS / ( Const + PN ) ) ) ) - ARS ) ) ,Min( PN ,( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * Const ) ) ) )", "choosing": "( Min( ( MUM + ( ( CS - Min( ( RCSe / ( MLU / MUC ) ) ,RRSe ) ) / DS ) ) ,RCSe ) * ( ( CS - Min( ( RCSe / ( MLU / MUC ) ) ,RRSe ) ) - ( MUC - Max( MUR,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( ( ( AMS * AMS ) / ARS ) * ARS ) ,( ( ( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) * Max( ( AMS - Min( ACS ,CRS ) ),MDR ) ) * AMS ) - MDR ) )", "choosing": "( ( Min( RCSe ,RMSe ) / RRSe ) * ( ( CS + MLU ) / MLU ) )", "obj1": 0.6413255360623782, "obj2": 0.29572015706091653}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( MLU * CS ) * ( ( MUM / RCSe ) - Min( ( Max( ( RCSe + MLU ),DS ) / Max( ( RMSe / ( Min( MLU ,MUM ) * MUR ) ),MLU ) ) ,Min( ( CS - CS ) ,RCSe ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "Min( ( BR - Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( MDR - Const ) ) ) ,Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server * MDR ) * Min( Const ,( CRS / ACS ) ) ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,MLU ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.5555555555555556, "obj2": 0.4004578838735382}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( Min( ( ( Const - Min( Min( ( DDR - RRS ) ,ARS ) ,Max( AMS,MDR ) ) ) + BR ) ,CRS ) ,Max( MRS,Min( MDR ,RRS ) ) )", "choosing": "( ( ( Min( ( ( RMSe * ( MUR / ( DS / RCSe ) ) ) * MUR ) ,DS ) / Max( RCSe,MUC ) ) / RRSe ) * Max( Min( CS ,( MUR - MLU ) ),Min( RCSe ,RCSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.042690067182163255}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) * MUM ) * ( RCSe / DS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ARS ) * ARS ) ,( ( FirstVNF_CPU * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MLU - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6430871394358892}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( Max( Max( FirstVNF_CPU,Min( DDR ,( DDR - RRS ) ) ),FirstVNF_CPU_Server ) ,( BR - MRS ) )", "choosing": "( Min( RRSe ,( Min( RCSe ,RCSe ) / ( ( Max( ( Min( RCSe ,DS ) / DS ),RRSe ) * CS ) / ( ( RRSe / Min( ( MLU * MLU ) ,MUM ) ) + MUM ) ) ) ) * ( RCSe / MUR ) )", "obj1": 0.3664717348927875, "obj2": 0.6302625977378293}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( MDR - Const ) ) ) ,( MDR * Min( ( PN - Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( RMSe - ( ( Max( MUC,RRSe ) / DS ) + ( CS - RCSe ) ) ) * RMSe ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_RAM_Server + ( AMS + CRS ) ) - ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) + AMS ) ) ,( AMS + BR ) )", "choosing": "( ( ( CS - Max( RCSe,( ( MLU + ( ( RRSe / MUC ) + ( MLU * RCSe ) ) ) * ( RRSe + RCSe ) ) ) ) + ( ( MUC + MUM ) * ( RCSe - Max( MLU,Max( ( RMSe - RRSe ),RMSe ) ) ) ) ) - Min( Max( ( MUC * DS ),( MUR + MUM ) ) ,MUM ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Max( MRS,RRS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + RCSe ) ) ) + ( ( ( ( DS - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( Max( ( MLU - MLU ),( ( ( MUR - ( MUR + MUM ) ) - ( ( MLU - RCSe ) * ( ( RRSe + MUM ) - ( MUR - RRSe ) ) ) ) + RCSe ) ) ,( RMSe - MUM ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699202254163149}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}], "50": [{"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( Min( ( ARS / Const ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( ( ( AMS * DDR ) / ( RRS - DDR ) ) + FirstVNF_CPU ) + ( ( CRS + ( Max( MDR,RRS ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( MLU ,Max( MUM,( RCSe * ( Max( RMSe,RMSe ) * MLU ) ) ) ) ) ) * ( RCSe - Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Min( MRS ,FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM_Server * ( CRS / PN ) ) - ( FirstVNF_CPU / ( ACS - MRS ) ) ) )", "choosing": "( Min( ( MUM + RRSe ) ,( MUC / RCSe ) ) * Max( RRSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( ( ( AMS * AMS ) / ARS ) * ARS ) ,( ( ( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) * Max( ( AMS - Min( ACS ,CRS ) ),MDR ) ) * AMS ) - MDR ) )", "choosing": "( ( Min( RCSe ,RMSe ) / RRSe ) * ( ( CS + MLU ) / MLU ) )", "obj1": 0.6413255360623782, "obj2": 0.29572015706091653}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) * MUM ) * ( RCSe / DS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "Min( ( BR - Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( MDR - Const ) ) ) ,Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server * MDR ) * Min( Const ,( CRS / ACS ) ) ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,MLU ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.5555555555555556, "obj2": 0.4004578838735382}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( Const - ( CRS - ACS ) ) ) ) ,( ARS * Min( ( PN - ( MDR / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( Max( MUM,Min( RMSe ,RRSe ) ) / MUM ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) ) * ( RRSe / MUR ) )", "obj1": 0.9298245614035088, "obj2": 0.038308832201911426}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( MLU * CS ) * ( ( MUM / RCSe ) - Min( ( Max( ( RCSe + MLU ),DS ) / Max( ( RMSe / ( Min( MLU ,MUM ) * MUR ) ),MLU ) ) ,Min( ( CS - CS ) ,RCSe ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ARS ) * ARS ) ,( ( FirstVNF_CPU * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MLU - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6430871394358892}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( Min( Max( PN,MDR ) ,Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ,( ( ( ARS + RRS ) / ( Max( ARS,Const ) / RRS ) ) + ( Min( CRS ,FirstVNF_CPU_Server ) * AMS ) ) )", "choosing": "( Min( Max( CS,Max( RCSe,Max( Max( ( RRSe - MUM ),MUM ),( Min( RMSe ,( DS + CS ) ) / RRSe ) ) ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( Min( Max( MUR,Min( DS ,MLU ) ) ,( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6252024837313183}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "( Min( AMS ,MRS ) - Min( Max( ( ( MRS - FirstVNF_CPU ) * ( Max( FirstVNF_CPU,Const ) - MDR ) ),( Const + AMS ) ) ,FirstVNF_CPU ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( RMSe + Min( MUR ,Min( RRSe ,RCSe ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6181811072490547}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( MDR - Const ) ) ) ,( MDR * Min( ( PN - Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( RMSe - ( ( Max( MUC,RRSe ) / DS ) + ( CS - RCSe ) ) ) * RMSe ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6279873563227868}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( FirstVNF_CPU - RRS ) ,Min( RRS ,Min( ( ( ( Max( Min( BR ,FirstVNF_RAM_Server ),PN ) + ( RRS - RRS ) ) - MDR ) / Const ) ,( ( ( FirstVNF_CPU - DDR ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( BR + ( Max( BR,MRS ) + Const ) ) * ( Min( DDR ,AMS ) * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe / MUR ) * ( RRSe - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) / MLU ) ) * ( CS - Max( MLU,( Max( MLU,Min( RCSe ,( ( CS - CS ) - RCSe ) ) ) * Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.7270955165692008, "obj2": 0.16924760396627223}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}], "51": [{"determining": "Min( Min( Max( RRS,CRS ) ,Min( RRS ,( Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_CPU ) * DDR ) ) ) ,( Min( Max( MDR,DDR ) ,FirstVNF_Mem ) / ( BR - ( ACS / BR ) ) ) )", "choosing": "( ( ( MLU * Max( CS,MUR ) ) - ( DS + ( RRSe + ( Min( ( Min( MUC ,CS ) - MLU ) ,MLU ) + MUM ) ) ) ) * ( ( DS * Max( ( MLU / ( MUR * MUR ) ),RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( Min( ( ARS / Const ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( ( ( AMS * DDR ) / ( RRS - DDR ) ) + FirstVNF_CPU ) + ( ( CRS + ( Max( MDR,RRS ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( MLU ,Max( MUM,( RCSe * ( Max( RMSe,RMSe ) * MLU ) ) ) ) ) ) * ( RCSe - Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( ( ( AMS * AMS ) / ARS ) * ARS ) ,( ( ( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) * Max( ( AMS - Min( ACS ,CRS ) ),MDR ) ) * AMS ) - MDR ) )", "choosing": "( ( Min( RCSe ,RMSe ) / RRSe ) * ( ( CS + MLU ) / MLU ) )", "obj1": 0.6413255360623782, "obj2": 0.29572015706091653}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,( ( ( ( ( DDR + ( FirstVNF_RAM + MRS ) ) - FirstVNF_RAM ) / ( ( DDR - CRS ) + MDR ) ) - ( ( Const - FirstVNF_CPU_Server ) * BR ) ) - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) - RRSe ) * Max( ( RRSe / ( Min( ( ( ( DS + RCSe ) + Max( RCSe,MUR ) ) * MUM ) ,Max( MUC,( ( RRSe - RCSe ) - CS ) ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.6900584795321637, "obj2": 0.28089194234687404}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6074438764138901}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( MLU * CS ) * ( ( MUM / RCSe ) - Min( ( Max( ( RCSe + MLU ),DS ) / Max( ( RMSe / ( Min( MLU ,MUM ) * MUR ) ),MLU ) ) ,Min( ( CS - CS ) ,RCSe ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "Min( ( BR - Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( MDR - Const ) ) ) ,Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server * MDR ) * Min( Const ,( CRS / ACS ) ) ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,MLU ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.5555555555555556, "obj2": 0.4004578838735382}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( Const - ( CRS - ACS ) ) ) ) ,( ARS * Min( ( PN - ( MDR / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( Max( MUM,Min( RMSe ,RRSe ) ) / MUM ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) ) * ( RRSe / MUR ) )", "obj1": 0.9298245614035088, "obj2": 0.038308832201911426}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "( ( FirstVNF_CPU_Server + ( ( ( PN - ACS ) + ( ACS - BR ) ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( DS * MUR ) )", "obj1": 0.6374269005847953, "obj2": 0.30906785317444985}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) * MUM ) * ( RCSe / DS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) * ( Const - MDR ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,CS ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Min( CS ,RRSe ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.6257309941520468, "obj2": 0.32336567663556537}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.32754618896929455}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ARS ) * ARS ) ,( ( FirstVNF_CPU * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MLU - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6430871394358892}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( ACS / ACS ) ,Min( ( ( Min( FirstVNF_CPU_Server ,MRS ) + FirstVNF_RAM ) - FirstVNF_RAM ) ,Min( ( ACS / ( PN - MRS ) ) ,( ( PN + ARS ) / ARS ) ) ) )", "choosing": "( Min( ( ( Max( MUC,( RCSe / Min( RRSe ,MUC ) ) ) * RCSe ) - CS ) ,( ( ( MUC + Min( MUM ,( RRSe / ( DS + DS ) ) ) ) + ( Max( ( ( RCSe * MLU ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) - ( MUC - Max( ( RCSe + CS ),RCSe ) ) ) ) / ( MLU + Min( ( MUM - RCSe ) ,Max( Min( MUR ,RMSe ),RMSe ) ) ) ) ) * Min( Max( MUC,DS ) ,( MUM - RMSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6929824932445539}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( MDR - Const ) ) ) ,( MDR * Min( ( PN - Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( RMSe - ( ( Max( MUC,RRSe ) / DS ) + ( CS - RCSe ) ) ) * RMSe ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - ( MUC * MUR ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.621832358674464, "obj2": 0.32505003433522167}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( FirstVNF_CPU - RRS ) ,Min( RRS ,Min( ( ( ( Max( Min( BR ,FirstVNF_RAM_Server ),PN ) + ( RRS - RRS ) ) - MDR ) / Const ) ,( ( ( FirstVNF_CPU - DDR ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( BR + ( Max( BR,MRS ) + Const ) ) * ( Min( DDR ,AMS ) * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe / MUR ) * ( RRSe - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) / MLU ) ) * ( CS - Max( MLU,( Max( MLU,Min( RCSe ,( ( CS - CS ) - RCSe ) ) ) * Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.7270955165692008, "obj2": 0.16924760396627223}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}, {"determining": "Min( Min( MRS ,FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM_Server * ( CRS / PN ) ) - ( FirstVNF_CPU / ( ACS - MRS ) ) ) )", "choosing": "( Min( ( MUM + RRSe ) ,( MUC / RCSe ) ) * Max( RRSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Const ) )", "choosing": "( ( RMSe / ( ( Max( Min( MLU ,( MLU * RMSe ) ),MUM ) - CS ) - RMSe ) ) * ( Min( MUR ,MUM ) / Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "52": [{"determining": "Min( Min( Max( DDR,CRS ) ,Min( RRS ,( Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_CPU ) * DDR ) ) ) ,( Min( Max( MDR,( MDR - Min( PN ,DDR ) ) ) ,FirstVNF_Mem ) / ( BR - ( ACS / BR ) ) ) )", "choosing": "( ( ( MLU * Max( CS,MUR ) ) - ( DS + ( RRSe + ( Min( ( Min( MUC ,CS ) - MLU ) ,MLU ) + MUM ) ) ) ) * ( MUR * Max( CS,( MLU - ( Max( ( DS - RRSe ),( ( RCSe + RCSe ) / DS ) ) / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - MRS ) - ( FirstVNF_CPU_Server * Max( CRS,( RRS / Min( FirstVNF_Mem_Server ,MRS ) ) ) ) ),Min( ARS ,FirstVNF_CPU ) )", "choosing": "Min( ( MUM + CS ) ,( RMSe / MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "Min( Min( Max( RRS,CRS ) ,Min( RRS ,( Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_CPU ) * DDR ) ) ) ,( Min( Max( MDR,DDR ) ,FirstVNF_Mem ) / ( BR - ( ACS / BR ) ) ) )", "choosing": "( ( ( MLU * Max( CS,MUR ) ) - ( DS + ( RRSe + ( Min( ( Min( MUC ,CS ) - MLU ) ,MLU ) + MUM ) ) ) ) * ( ( DS * Max( ( MLU / ( MUR * MUR ) ),RMSe ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,DDR ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "Min( Max( Max( MLU,( MUC - Min( DS ,Max( MUC,MUM ) ) ) ),Max( Min( ( MUM + ( CS - Min( MLU ,CS ) ) ) ,( ( MLU - Max( ( RRSe * RCSe ),( DS + RCSe ) ) ) * MUM ) ),RMSe ) ) ,( MLU - RRSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Min( FirstVNF_Mem ,FirstVNF_Mem ) + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( RCSe * MLU ) - MUM ) * Max( DS,DS ) ) )", "obj1": 0.6120857699805068, "obj2": 0.27973313001511163}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( ( MRS + FirstVNF_RAM ) * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( DS + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4484725741427886}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17599350029713523}, {"determining": "( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( FirstVNF_CPU / ARS ) )", "choosing": "Min( ( RCSe - MLU ) ,( Max( DS,( MUR - Max( RRSe,Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( RRSe - RCSe ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * CS ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.08567248953799}, {"determining": "Min( ( ( ( RRS - ( CRS - ACS ) ) + ( FirstVNF_Mem - Min( Min( Const ,FirstVNF_Mem ) ,Min( FirstVNF_CPU_Server ,MDR ) ) ) ) - ( Min( FirstVNF_RAM ,AMS ) + Max( RRS,Max( FirstVNF_Mem,ACS ) ) ) ) ,Max( FirstVNF_Mem_Server,Min( Const ,PN ) ) )", "choosing": "( ( MUM * CS ) - ( MUM / ( MLU - ( MUR + Max( ( Max( Max( RMSe,MUC ),RRSe ) + RCSe ),MUM ) ) ) ) )", "obj1": 0.7173489278752436, "obj2": 0.27277491028396683}, {"determining": "Min( ( ( PN - Max( ( Max( FirstVNF_RAM,BR ) - FirstVNF_CPU ),Min( ARS ,FirstVNF_Mem ) ) ) + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,Max( RCSe,Max( MUM,DS ) ) ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.09230390446004197}, {"determining": "( Min( PN ,ARS ) + ( FirstVNF_Mem / Min( Max( FirstVNF_CPU_Server,CRS ) ,CRS ) ) )", "choosing": "Min( ( DS * RCSe ) ,Min( Max( RCSe,( ( Min( MUR ,( ( RMSe * RCSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - ( RRSe - ( ( RCSe / MLU ) + MUR ) ) ) ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.2778293483415652}, {"determining": "( ( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) / Min( MDR ,AMS ) ) - ( FirstVNF_CPU / ( RRS * ( FirstVNF_RAM_Server + AMS ) ) ) )", "choosing": "Min( ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ,( Max( DS,( MUR - ( RRSe * Min( CS ,( ( MUM - CS ) / CS ) ) ) ) ) * ( CS - ( ( ( ( MLU - Max( MLU,RCSe ) ) - RMSe ) / Max( ( MLU - ( RMSe * CS ) ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + CS ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.1097251870351637}, {"determining": "Min( ( BR - Min( ( FirstVNF_Mem_Server + ACS ) ,MRS ) ) ,( ( ( RRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( MUR - MUC ) * ( ( DS * RRSe ) * ( ( ( Max( MLU,MUC ) + MUM ) * CS ) * MUR ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5047249725161022}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,Min( MDR ,RRS ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * ( MUR * MLU ) ) ) - MUC ) ,RRSe ) )", "obj1": 0.5984405458089669, "obj2": 0.32759795285132615}, {"determining": "( PN - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "Min( ( ( RRSe + ( ( MUR / Max( RRSe,Min( MUM ,MUR ) ) ) + Min( ( Min( DS ,MUC ) + MUC ) ,Min( MLU ,( MLU * DS ) ) ) ) ) - ( RMSe / CS ) ) ,( ( ( MUM / MUM ) * ( ( MLU - RCSe ) + Min( ( Max( MUR,( MUC + MUM ) ) - ( DS / DS ) ) ,( ( Min( MUM ,MLU ) + RMSe ) / ( ( MUM - RMSe ) * MLU ) ) ) ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.43031264731422175}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - ( RCSe * RRSe ) ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.9005847953216374, "obj2": 0.049222081460354235}, {"determining": "( ( ( ( ( FirstVNF_Mem + ACS ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( Const + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) - MUM ) * Max( DS,DS ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6074438764138901}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - Max( MRS,AMS ) ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,( Max( Const,DDR ) / AMS ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Min( MUM ,( ( DS * ( ( MLU + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) + Max( MUM,( MUM / Max( Max( MLU,( RCSe / RMSe ) ),RRSe ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5946334617210883}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( RMSe - ( CS / RRSe ) ) * ( ( ( ( ( ( CS - ( MUC + CS ) ) * RCSe ) * Max( MUC,MUM ) ) * RRSe ) * MUM ) * ( RCSe / DS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_Mem_Server ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Max( MUM,DS ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.5458089668615984, "obj2": 0.41677912740715073}, {"determining": "Min( ( BR - Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,( MDR - Const ) ) ) ,Min( FirstVNF_CPU_Server ,( ( FirstVNF_Mem_Server * MDR ) * Min( Const ,( CRS / ACS ) ) ) ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUM + Min( Min( ( MUC / Min( DS ,CS ) ) ,MLU ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.5555555555555556, "obj2": 0.4004578838735382}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * ( ( DS * MUR ) * ( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5772707709461078}, {"determining": "Min( ( Min( ARS ,MDR ) * ( ACS + ( Max( ARS,( FirstVNF_Mem / FirstVNF_Mem_Server ) ) / ACS ) ) ) ,( ( FirstVNF_Mem_Server - ( ( Max( Min( ( MDR / Const ) ,FirstVNF_Mem ),ACS ) * ( MDR / Const ) ) - PN ) ) * FirstVNF_Mem_Server ) )", "choosing": "( ( ( Min( ( MUM + DS ) ,DS ) + ( ( RMSe * MUR ) + MUM ) ) / MUM ) * ( MUM + DS ) )", "obj1": 0.5263157894736842, "obj2": 0.4258772667544525}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( Const - ( CRS - ACS ) ) ) ) ,( ARS * Min( ( PN - ( MDR / FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( Max( MUM,Min( RMSe ,RRSe ) ) / MUM ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) ) * ( RRSe / MUR ) )", "obj1": 0.9298245614035088, "obj2": 0.038308832201911426}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUR ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5564606426653586}, {"determining": "Min( ( ( BR / ( Const * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( Min( MDR ,FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MLU * ( Min( RCSe ,RCSe ) - CS ) ),Max( Max( RRSe,MUR ),( MLU + MUC ) ) ) * ( Max( RRSe,Min( ( RRSe + ( MUC / ( RRSe - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.5323710041501358}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( Min( Const ,( PN - FirstVNF_RAM ) ),Min( RRS ,( RRS / ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) * AMS ) ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,RCSe ) / ( ( ( ( DS + RRSe ) * RRSe ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6319886798774587}, {"determining": "Min( ( Min( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ,( ( ( MRS + DDR ) * FirstVNF_RAM_Server ) / ( Min( AMS ,Max( FirstVNF_Mem_Server,RRS ) ) + FirstVNF_Mem_Server ) ) ) - MDR ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( ( Min( ( RCSe * Max( RMSe,RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ),Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.5633528265107213, "obj2": 0.38153309166662625}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "Min( ( Max( ( MDR - ( ( FirstVNF_RAM_Server / MRS ) - ( ( Const * ACS ) / FirstVNF_Mem_Server ) ) ),CRS ) - ( ( Max( MDR,BR ) - PN ) - BR ) ) ,( ARS / FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( ( Max( Min( RCSe ,MUC ),( ( MUR * MLU ) + MUM ) ) * MUR ) + MUM ) ) / RRSe ) * ( RCSe - ( ( RRSe * RRSe ) * Min( Max( RCSe,Min( RRSe ,CS ) ) ,( CS * ( MUC / ( ( RMSe + MLU ) - ( RMSe * RMSe ) ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.3681926957520939}, {"determining": "Min( ( PN - ( BR / ( ( MDR + MDR ) / ( PN - PN ) ) ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) ,Min( ARS ,CRS ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.4580896686159844, "obj2": 0.5178998437256297}, {"determining": "( ( ( ( ( FirstVNF_RAM_Server + PN ) / Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( PN / MDR ) ) - ( FirstVNF_RAM + ARS ) ) / ( ( FirstVNF_RAM_Server + ARS ) / ( ARS - PN ) ) )", "choosing": "( ( MLU * CS ) * ( ( MUM / RCSe ) - Min( ( Max( ( RCSe + MLU ),DS ) / Max( ( RMSe / ( Min( MLU ,MUM ) * MUR ) ),MLU ) ) ,Min( ( CS - CS ) ,RCSe ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.12049589080229438}, {"determining": "Min( ( ( BR / ( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) * FirstVNF_Mem ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( RMSe * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( Max( ( ( ( DS + MLU ) + Max( RCSe,MUR ) ) * MUM ),Max( CS,MLU ) ) - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1577629493134978}, {"determining": "Min( ( ( ( DDR / ( FirstVNF_RAM + AMS ) ) * AMS ) - MDR ) ,( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( ( Min( ( Max( MUC,MLU ) * RMSe ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.46588693957115007, "obj2": 0.5074134005433926}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5692007797270955, "obj2": 0.3513770099583452}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,Min( MRS ,CRS ) ) + AMS ) )", "choosing": "( Min( ( ( Min( ( MUC * ( MLU * MUM ) ) ,MLU ) - MUM ) / ( ( ( ( DS + RRSe ) * ( ( MLU + MUM ) + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.4074074074074074, "obj2": 0.5692105462878742}, {"determining": "Min( ( ( BR / ( Const * ( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) - CRS ) ,Max( ARS,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RRSe,Min( ( RRSe + ( MUC / ( ( MUC / MUM ) - ( CS * RMSe ) ) ) ) ,( MUC + ( Max( RMSe,( RMSe - RRSe ) ) * RCSe ) ) ) ) / ( ( DS * RCSe ) * RCSe ) ) * Max( ( MLU * ( RMSe - CS ) ),Max( Max( RRSe,CS ),( MLU + MUC ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.16533764636133738}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / Max( RMSe,( MLU * RRSe ) ) ) * Max( ( RRSe * ( Max( ( RMSe / ( Min( RMSe ,MLU ) - ( MUC - MUR ) ) ),( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,Max( MUM,DS ) ) ,RRSe ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5397347259288159}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( DDR / Min( FirstVNF_Mem_Server ,Min( Min( FirstVNF_Mem_Server ,Min( Const ,FirstVNF_RAM ) ) ,FirstVNF_RAM ) ) ) ) + Max( PN,ARS ) )", "choosing": "Min( ( ( Max( ( CS * RMSe ),CS ) / ( ( RMSe + MUC ) - Min( ( Max( ( RMSe * DS ),Max( RRSe,RCSe ) ) / RRSe ) ,DS ) ) ) - CS ) ,Min( Max( ( ( Min( MUR ,( ( RCSe * RMSe ) / MLU ) ) + Min( ( RRSe * CS ) ,DS ) ) - RMSe ),RCSe ) ,Min( ( RMSe / RCSe ) ,( RCSe * CS ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6663611375698616}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( DS + RMSe ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "Min( ( Max( DS,( MUR / ( MUM * MUM ) ) ) * ( CS - ( ( ( ( MLU - ( MLU / RMSe ) ) - RMSe ) / Max( ( ( RMSe * CS ) / MLU ),( ( RMSe - DS ) + ( CS / MLU ) ) ) ) / ( MUC + Min( MUR ,Max( RMSe,( MLU * RRSe ) ) ) ) ) ) ) ,( ( MUR * CS ) - MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14288952748079442}, {"determining": "Min( ( ( BR / ARS ) * ARS ) ,( ( FirstVNF_CPU * ( Min( ( DDR - RRS ) ,ARS ) - MRS ) ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MLU - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * Max( ( RMSe * Min( RRSe ,MLU ) ),RMSe ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6430871394358892}, {"determining": "Min( Max( ARS,FirstVNF_RAM_Server ) ,( Max( ACS,FirstVNF_CPU ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( DS - MUM ) ) - ( RCSe - CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6700272928395368}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server + ( RRS - FirstVNF_CPU ) ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( RRSe ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.6998050682261209, "obj2": 0.276004211511485}, {"determining": "( Min( MDR ,RRS ) - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( MUC * MUR ) * MLU ) )", "obj1": 0.949317738791423, "obj2": 0.026370028403682508}, {"determining": "Min( ( PN - ( ( MDR - Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3381406365591243}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ,FirstVNF_Mem ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - ( MUC / RCSe ) ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - ( Max( Min( Min( CS ,RRSe ) ,( DS * CS ) ),( MUR / MUR ) ) * Max( RRSe,MUC ) ) ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9571150097465887, "obj2": 0.02060030881960175}, {"determining": "Min( ( PN - ( DDR - BR ) ) ,( ARS * FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( MUR / CS ) ) / RRSe ) * ( MUR * MUR ) )", "obj1": 0.9395711500974658, "obj2": 0.02883316763835638}, {"determining": "( ( ( CRS - Const ) + Max( CRS,PN ) ) * ( ( FirstVNF_RAM_Server - ( ( Const / FirstVNF_CPU_Server ) / Min( DDR ,( FirstVNF_CPU_Server + AMS ) ) ) ) - ( BR * AMS ) ) )", "choosing": "( ( RMSe - MUM ) / ( MUR - ( RMSe * ( ( RMSe / MUM ) * CS ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.27390166727527626}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( Min( Min( ARS ,FirstVNF_Mem ) ,Min( ARS ,FirstVNF_RAM ) ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),( Max( Min( DS ,MUC ),( ( MUR * MLU ) + MUM ) ) / ( ( MLU + ( MUR / RMSe ) ) - MUR ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.559688081894765}, {"determining": "Min( ( Min( FirstVNF_RAM ,Const ) - Min( FirstVNF_CPU ,( ( ( Max( ( ARS * FirstVNF_Mem_Server ),ACS ) / FirstVNF_RAM ) / ( ARS - CRS ) ) * DDR ) ) ) ,( CRS - BR ) )", "choosing": "( Max( Max( Max( ( MUC + RMSe ),( ( ( CS + ( DS - CS ) ) / ( ( RMSe - MLU ) * ( RCSe / RCSe ) ) ) + ( RCSe - MUM ) ) ),RCSe ),MUM ) * Min( MUM ,Min( RRSe ,MUR ) ) )", "obj1": 0.9922027290448343, "obj2": 0.003919540087859902}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,( DDR - CRS ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6502253049265873}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6379811691852236}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,FirstVNF_RAM_Server ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( ( DS + ( RRSe / RCSe ) ),( DS + ( RRSe / RCSe ) ) ) ) ,RRSe ) )", "obj1": 0.5925925925925926, "obj2": 0.3312185185943005}, {"determining": "Min( ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ,( PN - ( CRS + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( ( ( MUM / MUC ) / Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / MUM ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * Min( MUR ,RCSe ) ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14379069774274816}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( DDR - CRS ) + MDR ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( ( DS + RMSe ) + Max( RCSe,MUR ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.655336415297521}, {"determining": "Min( ( AMS - FirstVNF_Mem_Server ) ,( Max( MDR,Min( RRS ,Min( Const ,FirstVNF_Mem_Server ) ) ) + AMS ) )", "choosing": "( Min( ( Min( CS ,MUC ) / ( ( ( ( RRSe + DS ) * ( MLU + DS ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.3216374269005848, "obj2": 0.6742851627440337}, {"determining": "Min( ( PN - MDR ) ,( ARS * ( FirstVNF_RAM_Server * ( Max( Min( FirstVNF_CPU ,AMS ),FirstVNF_RAM_Server ) * Max( ( RRS * Min( ( MRS - ACS ) ,( MRS * DDR ) ) ),PN ) ) ) ) )", "choosing": "( Min( Max( Min( DS ,MUC ),( ( Max( Min( ( MLU - RCSe ) ,CS ),( ( MUR * MLU ) + MUM ) ) * MLU ) + MUM ) ) ,RRSe ) * ( DS * MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "( Max( ( ( ACS * RRS ) + ( ( ( AMS + ARS ) * PN ) - ACS ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( DDR - Const ) )", "choosing": "( ( ( ( MLU + MUR ) + Max( DS,MLU ) ) - ( Min( DS ,( MUC * MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017757527753661687}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + ( FirstVNF_Mem_Server * MDR ) ) ) )", "choosing": "( DS * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - Min( MUM ,MLU ) ) ) ,( ( ( DS + RMSe ) / ( RMSe - MUC ) ) * MUM ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.9083820662768031, "obj2": 0.045346244113360024}, {"determining": "Min( ( PN - ( Min( MDR ,Min( ( FirstVNF_CPU_Server - Const ) ,( AMS / FirstVNF_RAM_Server ) ) ) - BR ) ) ,Max( ( FirstVNF_RAM_Server - ( AMS / FirstVNF_RAM_Server ) ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( RRSe + MUC ) + Max( Max( ( DS + ( RRSe / RCSe ) ),DS ),DS ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.33470626215499283}, {"determining": "Min( ( PN - MDR ) ,Min( ( DDR * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,ACS ) )", "choosing": "( ( Max( ( DS + CS ),MLU ) - ( ( Min( RRSe ,MUC ) * MLU ) / ( ( Max( ( ( RMSe / MUC ) + ( MUR / MLU ) ),( ( MUC * RCSe ) / RRSe ) ) + ( MUC - ( MUC + ( RRSe / MUC ) ) ) ) + ( ( ( ( MUR - DS ) - MUR ) / MUR ) + MUC ) ) ) ) * Min( MUM ,Min( DS ,MUM ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( RRS - FirstVNF_CPU ) + ( ARS / ( DDR / Min( FirstVNF_RAM_Server ,( FirstVNF_RAM * PN ) ) ) ) )", "choosing": "Min( ( ( ( CS - MUR ) / ( ( RMSe + MUC ) / Min( ( Max( Min( RCSe ,CS ),Max( MUM,RMSe ) ) / RRSe ) ,DS ) ) ) * CS ) ,( MUC * ( Min( MUM ,MUC ) + RMSe ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Max( Min( CRS ,( Min( DDR ,( ARS - Max( CRS,FirstVNF_RAM ) ) ) * BR ) ),Max( ( MDR + FirstVNF_Mem ),FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( RCSe - CS ) - MUC ) ,MUR ) / Min( MUR ,( ( Min( MUM ,( ( CS / RCSe ) + Max( Max( RCSe,MLU ),Max( CS,RCSe ) ) ) ) - RRSe ) + MUM ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7043032786655907}, {"determining": "( ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( Const - MDR ) ) ) - ( FirstVNF_CPU_Server + ( ( DDR * FirstVNF_RAM ) * ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( ( CS * ( ( ( CS * DS ) * Min( MUC ,DS ) ) * CS ) ) - ( ( ( Max( MLU,RRSe ) - CS ) * ( ( MUR + RRSe ) + RMSe ) ) - ( MUM - ( CS * MLU ) ) ) ) - CS ) / Max( ( ( RCSe * ( Min( MUC ,( MUC / RCSe ) ) * MLU ) ) - ( ( MUC * Max( Max( RRSe,MUC ),( MUR - MLU ) ) ) / MUR ) ),CS ) ) ,( CS / RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.01319505593914231}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727369558110694}, {"determining": "Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + Min( ( MRS + FirstVNF_RAM ) ,( PN - ( ( FirstVNF_Mem_Server * MDR ) + RRS ) ) ) ) ) )", "choosing": "( ( ( MUM / MUC ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / Min( MUR ,RCSe ) ) ,( RMSe - MUC ) ) - CS ) ),Min( Max( MUM,RCSe ) ,RRSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7234300388163596}, {"determining": "Min( ( PN + ( FirstVNF_Mem_Server - ( MDR - Const ) ) ) ,( MDR * Min( ( PN - Min( FirstVNF_CPU ,Min( DDR ,FirstVNF_Mem ) ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( ( RMSe - ( ( Max( MUC,RRSe ) / DS ) + ( CS - RCSe ) ) ) * RMSe ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,( MLU + ( MLU * RCSe ) ) ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) ,( ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) / Const ) )", "choosing": "( Min( MLU ,( MUM + DS ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( DS * ( ( DS / RRSe ) + ( Max( DS,MUC ) * ( MUM * ( DS - MUR ) ) ) ) ) * ( ( ( ( MUC / ( RRSe + MUM ) ) + MUM ) * RRSe ) * MUR ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7012183351488323}, {"determining": "Min( ( PN - ( RRS * Const ) ) ,Min( ( ( ARS - ( FirstVNF_Mem_Server + MDR ) ) - ( FirstVNF_Mem_Server * ( Const - Min( PN ,( AMS / FirstVNF_Mem ) ) ) ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( Max( DS,CS ),( MLU / ( Min( MUC ,Min( ( RRSe + RMSe ) ,( MLU - DS ) ) ) + MUM ) ) ) / RRSe ) * Max( DS,Max( Max( RCSe,MUM ),RRSe ) ) )", "obj1": 0.9805068226120858, "obj2": 0.00926350768024368}, {"determining": "Min( ( ( PN + Min( MDR ,PN ) ) - BR ) ,( Const / CRS ) )", "choosing": "( ( RMSe / ( ( Min( Min( Max( MUC,Min( RCSe ,CS ) ) ,MUR ) ,( ( Min( CS ,RCSe ) - CS ) - RCSe ) ) / Max( ( ( ( MUM * RRSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RRSe ) * Min( RCSe ,MLU ) ) ) ) ) * ( ( DS * ( MUM / ( MUC + RRSe ) ) ) * MUR ) ) ) * ( RRSe / ( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( MUC,RCSe ) ) ) - MUM ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6779844614986119}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( ( AMS * DDR ) / ( Const - DDR ) ),Min( ( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ,RRS ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( MUM,( MUM / ( MUM * CS ) ) ) + Min( MUM ,( ( DS * ( ( CS + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.011305912612786958}, {"determining": "Min( ( PN - ( ( MDR - Min( ( FirstVNF_CPU_Server - Const ) ,MRS ) ) - BR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( CRS * ( MDR / ACS ) ) ) )", "choosing": "( Min( MUM ,RRSe ) - Min( ( ( ( ( RCSe + CS ) - Min( RCSe ,( Min( CS ,MUM ) / Max( DS,MLU ) ) ) ) * ( MUC * MUR ) ) - MUC ) ,RRSe ) )", "obj1": 0.5769980506822612, "obj2": 0.34779342575655775}, {"determining": "Min( ( ( FirstVNF_Mem_Server - RRS ) / ( ( FirstVNF_CPU + ARS ) + BR ) ) ,Max( Const,( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( RCSe / MUC ) * ( MUM - ( Max( ( ( RCSe / MUR ) * ( Max( RRSe,( MUC - MLU ) ) - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) * RMSe ) ) + ( ( MUC * MLU ) * ( ( DS - MUR ) - Min( ( CS * ( RRSe - RCSe ) ) ,Max( ( RRSe + MUC ),( MUR * MUC ) ) ) ) ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7095064595862004}, {"determining": "( Max( ( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ),( ( ( AMS + ARS ) * PN ) - ACS ) ) + ( AMS * RRS ) )", "choosing": "Max( Max( ( Max( CS,RMSe ) / ( MUC * RCSe ) ),( ( CS - DS ) + ( Min( CS ,( DS - Min( Min( RMSe ,MUR ) ,( RMSe + RRSe ) ) ) ) * RRSe ) ) ),( ( ( MUC * MUM ) / Max( RCSe,RMSe ) ) * MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Max( ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) * MDR ),( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MLU ,CS ) ) - Max( RCSe,( RMSe - ( ( RMSe + CS ) + ( RCSe * CS ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7308618048035621}, {"determining": "Min( ( Max( ( AMS + PN ),FirstVNF_CPU ) - BR ) ,Min( ( AMS + MRS ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - ( AMS + MRS ) ) ) ) + ( AMS + MRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / ( ( Min( RCSe ,( DS + ( MUR / Max( CS,RRSe ) ) ) ) / Max( ( ( ( MUM * RMSe ) - DS ) / RMSe ),( ( ( RRSe + CS ) / ( MUR * RRSe ) ) / ( ( MUC + RCSe ) * Min( CS ,MLU ) ) ) ) ) * ( ( ( MUM / ( MUC + RRSe ) ) * DS ) * MUR ) ) ) * ( RRSe / Max( Min( ( Max( RCSe,RCSe ) - MUC ) ,( ( MLU + CS ) * Max( RCSe,RCSe ) ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.7151206255302665}, {"determining": "Min( ( Min( CRS ,PN ) / MRS ) ,( ( Max( Const,FirstVNF_Mem ) / ( FirstVNF_RAM_Server + PN ) ) * PN ) )", "choosing": "( ( ( ( RCSe + MUR ) - ( RRSe - ( CS + RCSe ) ) ) / ( MUC + ( DS * ( MLU * CS ) ) ) ) * ( Min( ( ( MUR + CS ) * ( MLU * ( CS + RMSe ) ) ) ,( ( ( RRSe * CS ) / Max( RCSe,DS ) ) + RMSe ) ) * MUR ) )", "obj1": 0.3157894736842105, "obj2": 0.6840086139850144}, {"determining": "Min( ( Max( ( AMS + PN ),MDR ) - BR ) ,Min( ( ARS / BR ) ,( ( Max( FirstVNF_CPU,Max( ( MRS / FirstVNF_CPU_Server ),( BR - AMS ) ) ) + ( MRS + AMS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * DS ) - RMSe ) / RRSe ) * Max( ( RRSe / ( Min( ( RRSe / ( Min( RMSe ,RMSe ) - ( MUM + MLU ) ) ) ,( ( ( DS + RMSe ) + Max( RCSe,MUR ) ) * MUM ) ) - CS ) ),Min( Max( RCSe,MUM ) ,RRSe ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6821809857025908}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( FirstVNF_Mem_Server ,( RRS * ( ( ( ACS + MRS ) + ( PN / MRS ) ) * PN ) ) ) ) - BR ) ,( CRS / Const ) )", "choosing": "( ( MUM + ( CS - Min( MLU ,CS ) ) ) * ( RRSe * ( ( MUM - MUM ) - MUM ) ) )", "obj1": 0.30409356725146197, "obj2": 0.696616912744532}, {"determining": "Min( Max( ( ( RRS / MRS ) - FirstVNF_RAM_Server ),Const ) ,( ( FirstVNF_CPU * AMS ) - MDR ) )", "choosing": "( ( ( ( Min( Min( RCSe ,Max( ( MUC - CS ),RRSe ) ) ,Min( ( RRSe / MLU ) ,( RRSe * CS ) ) ) + ( MUR * ( RCSe * Min( RRSe ,CS ) ) ) ) - Min( DS ,MUC ) ) / RRSe ) * ( MUR * ( DS / MUM ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6864525032384103}, {"determining": "Min( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ,ACS ) ,( ARS - ( BR - ( ( FirstVNF_CPU - PN ) * FirstVNF_RAM_Server ) ) ) ) ) ) ,Max( FirstVNF_Mem_Server,( FirstVNF_CPU + Min( ( FirstVNF_RAM_Server / ARS ) ,Max( FirstVNF_Mem_Server,ACS ) ) ) ) )", "choosing": "( Min( RRSe ,CS ) * Min( RRSe ,RMSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7118256726040973}, {"determining": "Min( ( AMS - RRS ) ,( Min( ( ( FirstVNF_CPU + ( Min( ( ARS / Const ) ,ARS ) - PN ) ) + Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem_Server ) / Max( MDR,( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( MUM ,( MUC - ( MUC / MLU ) ) ) * Min( DS ,( MUM * MLU ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7183673280967685}, {"determining": "Min( ( PN - Min( CRS ,RRS ) ) ,Min( ( ( FirstVNF_Mem_Server - ( ( DDR - CRS ) + MDR ) ) - ( CRS * BR ) ) ,Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( Min( DS ,( ( CS + MLU ) * RCSe ) ) - ( ( ( Min( ( MUR * Min( MUC ,MLU ) ) ,( ( ( RCSe + RMSe ) / RCSe ) + Min( ( MUR - MLU ) ,( MUC + RCSe ) ) ) ) - Max( MUM,( Min( MUC ,DS ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.341130604288499, "obj2": 0.6529512323295659}, {"determining": "( Max( ( ( ACS * RRS ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,Const ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Min( ( ( ( RRS / ( ( FirstVNF_CPU / PN ) / Max( ARS,PN ) ) ) / DDR ) * FirstVNF_Mem ) ,ACS ) )", "choosing": "( ( ( ( MUR + MLU ) + ( DS / MLU ) ) - ( Min( DS ,Max( ( RRSe * MUR ),MUM ) ) - RMSe ) ) + Max( MUM,RCSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Max( ( ARS - ( Const / ( PN * Min( ( ( MRS / CRS ) + ( Const * Min( ACS ,MRS ) ) ) ,ARS ) ) ) ),( MRS - FirstVNF_Mem_Server ) )", "choosing": "( Min( MLU ,( RMSe - DS ) ) * ( ( MUC + ( ( RCSe + MUM ) - RMSe ) ) - MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "Min( ( FirstVNF_CPU - RRS ) ,Min( RRS ,Min( ( ( ( Max( Min( BR ,FirstVNF_RAM_Server ),PN ) + ( RRS - RRS ) ) - MDR ) / Const ) ,( ( ( FirstVNF_CPU - DDR ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( BR + ( Max( BR,MRS ) + Const ) ) * ( Min( DDR ,AMS ) * FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( ( ( RCSe / MUR ) * ( RRSe - ( MUM / MLU ) ) ),( Max( RCSe,MLU ) / MLU ) ) * ( CS - Max( MLU,( Max( MLU,Min( RCSe ,( ( CS - CS ) - RCSe ) ) ) * Max( RRSe,RCSe ) ) ) ) )", "obj1": 0.7270955165692008, "obj2": 0.16924760396627223}, {"determining": "( ( RRS - ( ARS / ( DDR / AMS ) ) ) + ( ARS / ( DDR / AMS ) ) )", "choosing": "Min( ( ( ( Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) / Min( ( Max( ( MLU * RMSe ),Min( MLU ,RMSe ) ) / RRSe ) ,DS ) ) / Max( Max( CS,RMSe ),CS ) ) * CS ) ,( MUR / ( MUR * MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7345933077652603}, {"determining": "Min( ( DDR * Min( ( FirstVNF_Mem * PN ) ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( DDR + Max( PN,BR ) ) ) ,( ARS - Max( BR,( RRS * DDR ) ) ) ) ) ) ,Max( ( FirstVNF_CPU_Server / BR ),Min( RRS ,( ( FirstVNF_CPU + ( ( AMS * DDR ) / ( Const - DDR ) ) ) + ( FirstVNF_RAM * MRS ) ) ) ) )", "choosing": "( Min( DS ,CS ) * ( ( MUR + RCSe ) * ( Max( CS,CS ) + Min( MUM ,( ( RMSe * ( ( RCSe + CS ) * MUR ) ) / Min( MUR ,( MUM / MUC ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981037325052922}, {"determining": "Min( Min( Max( DDR,CRS ) ,Min( RRS ,( Max( ( FirstVNF_RAM_Server / Const ),FirstVNF_CPU ) * DDR ) ) ) ,Min( Max( MDR,( MDR - Min( PN ,DDR ) ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU * Max( CS,MUR ) ) - ( DS + ( RRSe + ( Min( ( Min( MUC ,CS ) - MLU ) ,MLU ) + MUM ) ) ) ) * ( MUR * Max( CS,( MLU - ( Max( ( DS - Min( MUC ,CS ) ),( ( RCSe + RCSe ) / DS ) ) / MUR ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6923951895037475}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( ( Max( Min( DS ,MUC ),( Min( Min( ( MUC / Min( DS ,CS ) ) ,DS ) ,( ( Max( DS,MLU ) / ( MUC - CS ) ) - Min( MUM ,Min( MUR ,RCSe ) ) ) ) + MUM ) ) / MUC ) * ( DS * MUR ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}, {"determining": "Min( Min( Min( FirstVNF_Mem ,ARS ) ,( AMS - Const ) ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( MLU * Max( CS,MUR ) ) - ( DS + ( RRSe + ( Min( ( Min( MUC ,CS ) - MLU ) ,MLU ) + MUM ) ) ) ) * ( MUR * Max( CS,( MLU - ( Max( ( DS - RRSe ),( ( RCSe + RCSe ) / DS ) ) / MUR ) ) ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6923951895037475}, {"determining": "Min( ( CRS / MRS ) ,Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) + MRS ) + FirstVNF_CPU_Server ) + ( ( Max( ( MDR / FirstVNF_RAM ),ACS ) / AMS ) / MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Min( Max( CS,Max( ( ( MUC + ( MUC * Min( MLU ,RCSe ) ) ) * ( ( MLU - DS ) - RMSe ) ),RCSe ) ) ,( RCSe / ( CS + MLU ) ) ) - ( ( ( ( Max( MUR,Min( DS ,MLU ) ) * ( Min( ( MUR - MLU ) ,( MUC + RCSe ) ) + ( RCSe / ( RCSe + RMSe ) ) ) ) - Max( RCSe,( Min( Min( RCSe ,RCSe ) ,RRSe ) + Min( DS ,MUC ) ) ) ) / MUC ) * RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.687682818997566}, {"determining": "Min( ( PN * Min( FirstVNF_Mem ,Min( Min( ( FirstVNF_Mem_Server - CRS ) ,( Const / ( ( MDR - FirstVNF_RAM ) * PN ) ) ) ,( Min( ( ARS / Const ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ) - PN ) ) ) ) ,Max( ( MRS / BR ),Min( ( ( ( ( AMS * DDR ) / ( RRS - DDR ) ) + FirstVNF_CPU ) + ( ( CRS + ( Max( MDR,RRS ) + RRS ) ) * MRS ) ) ,RRS ) ) )", "choosing": "( Min( MUC ,( RMSe / Min( MLU ,Max( MUM,( RCSe * ( Max( RMSe,RMSe ) * MLU ) ) ) ) ) ) * ( RCSe - Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,FirstVNF_Mem_Server ) ,( ( FirstVNF_RAM_Server * ( CRS / PN ) ) - ( FirstVNF_CPU / ( ACS - MRS ) ) ) )", "choosing": "( Min( ( MUM + RRSe ) ,( MUC / RCSe ) ) * Max( RRSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_RAM + Const ) )", "choosing": "( ( RMSe / ( ( Max( Min( MLU ,( MLU * RMSe ) ),MUM ) - CS ) - RMSe ) ) * ( Min( MUR ,MUM ) / Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( CRS - FirstVNF_CPU_Server ) ,FirstVNF_RAM ) ,( FirstVNF_RAM + Const ) )", "choosing": "( ( Min( MUR ,MUM ) / ( ( Max( Min( ( MUR + MUM ) ,( MLU * RMSe ) ),MUM ) - CS ) - RMSe ) ) * ( Min( MUR ,MUM ) / Min( CS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN + ( MRS - ( Const - ( CRS - ACS ) ) ) ) ,( ARS * Min( ( PN - RRS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( ( Max( MUM,Min( RMSe ,RRSe ) ) / MUM ),Min( ( DS / CS ) ,( MUR * Min( ( RCSe + CS ) ,MUM ) ) ) ) / RRSe ) * ( RRSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}]}