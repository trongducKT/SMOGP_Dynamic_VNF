{"1": [{"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ARS / FirstVNF_Mem ) ,( PN / MDR ) ),( ( RRS / MRS ) + ( FirstVNF_Mem - MDR ) ) ) - ( Max( ( Const / FirstVNF_CPU ),( FirstVNF_CPU_Server * ACS ) ) / ( ( PN - FirstVNF_CPU_Server ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),( MUM - RMSe ) ) ) )", "obj1": 0.7267326732673267, "obj2": 0.23699730466694738}, {"determining": "Min( Min( ARS ,FirstVNF_CPU_Server ) ,Max( BR,FirstVNF_CPU ) )", "choosing": "( ( DS * MLU ) / Max( CS,MLU ) )", "obj1": 0.7663366336633664, "obj2": 0.1744937238054545}, {"determining": "Min( Max( Const,MDR ) ,Max( FirstVNF_Mem,MRS ) )", "choosing": "( Min( RMSe ,RCSe ) / ( CS - MUC ) )", "obj1": 0.7049504950495049, "obj2": 0.24310007538530187}, {"determining": "( ( FirstVNF_CPU * AMS ) + ( ACS / ARS ) )", "choosing": "( Min( RCSe ,RRSe ) * ( MUC / RMSe ) )", "obj1": 0.7306930693069307, "obj2": 0.2311279611233784}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "Max( Max( PN,AMS ),( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( MLU * RMSe ) / Min( DS ,MLU ) )", "obj1": 0.6633663366336634, "obj2": 0.28153267246592306}, {"determining": "( Max( PN,FirstVNF_RAM_Server ) - Min( PN ,BR ) )", "choosing": "( ( MLU - MUR ) - ( MUR * MUM ) )", "obj1": 0.7643564356435644, "obj2": 0.23254005658827614}, {"determining": "Max( ( BR / AMS ),Min( FirstVNF_RAM ,ACS ) )", "choosing": "( Min( RRSe ,RMSe ) + ( RCSe / CS ) )", "obj1": 0.7069306930693069, "obj2": 0.24750146787710664}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,ARS ) )", "choosing": "( Min( MLU ,RMSe ) / ( MUM + RMSe ) )", "obj1": 0.7227722772277227, "obj2": 0.24735594628820928}, {"determining": "Min( ( Const * MRS ) ,Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( MUM * MUM ) - Min( RMSe ,MLU ) )", "obj1": 0.7148514851485148, "obj2": 0.23936306974890637}, {"determining": "Min( ( Const / Const ) ,Min( BR ,Const ) )", "choosing": "Max( ( RCSe / MUM ),Min( MUR ,RRSe ) )", "obj1": 0.7247524752475247, "obj2": 0.253237116571118}, {"determining": "Min( Min( DDR ,BR ) ,( BR + FirstVNF_Mem_Server ) )", "choosing": "( ( CS + RMSe ) / ( RRSe * MUR ) )", "obj1": 0.7425742574257426, "obj2": 0.25669089720532623}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) / ( ARS * AMS ) )", "choosing": "( ( RMSe - MUM ) / ( RCSe - RMSe ) )", "obj1": 0.7188118811881188, "obj2": 0.2518643090025564}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "Min( Min( RRS ,DDR ) ,Max( RRS,ARS ) )", "choosing": "( Min( DS ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.7287128712871287, "obj2": 0.24166091091559894}, {"determining": "Min( Max( PN,PN ) ,Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( Min( RCSe ,MLU ) + ( MUR + MUM ) )", "obj1": 0.7128712871287128, "obj2": 0.24972715276077947}, {"determining": "( Max( RRS,MRS ) + ( FirstVNF_CPU - ARS ) )", "choosing": "( Max( CS,RCSe ) - ( MUM * MLU ) )", "obj1": 0.7445544554455445, "obj2": 0.2563687447126499}, {"determining": "( ( Max( CRS,MRS ) / Min( RRS ,AMS ) ) / Min( ( BR * RRS ) ,( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Max( RRSe,DS ) * Max( MLU,MLU ) ) ,( ( RRSe * CS ) - ( DS - RRSe ) ) )", "obj1": 0.7425742574257426, "obj2": 0.242167759279449}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server + MDR ),( DDR - MDR ) ) * ( Max( ACS,FirstVNF_Mem_Server ) + ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUR / MUR ) * ( MUM / MUC ) ) - Max( ( DS - MUC ),( MLU - MUM ) ) )", "obj1": 0.7425742574257426, "obj2": 0.2513173562173052}, {"determining": "( ( Max( RRS,Const ) * Max( AMS,MRS ) ) / Min( Max( DDR,ARS ) ,( FirstVNF_Mem - MRS ) ) )", "choosing": "( Min( ( RMSe + MUM ) ,MUC ) * Max( DS,RMSe ) )", "obj1": 0.7366336633663366, "obj2": 0.2539640195271544}, {"determining": "( ( ( AMS - Const ) - ( FirstVNF_Mem - ARS ) ) * ( ( CRS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MLU + RCSe ) + ( MLU / MLU ) ) + ( ( CS - CS ) * ( RMSe * MLU ) ) )", "obj1": 0.7405940594059406, "obj2": 0.2441239179596026}, {"determining": "( ( FirstVNF_RAM + FirstVNF_Mem_Server ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( MLU + MUM ) / Max( RRSe,MLU ) ) )", "obj1": 0.7306930693069307, "obj2": 0.23232056869842319}, {"determining": "( Min( ( MRS / AMS ) ,MDR ) * Max( Const,Min( FirstVNF_CPU ,ARS ) ) )", "choosing": "( ( ( DS - RMSe ) + ( MLU / DS ) ) + ( ( DS - MUM ) - ( CS + MUM ) ) )", "obj1": 0.6752475247524753, "obj2": 0.27913100753194087}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_RAM_Server / MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( ( DS + MUR ),Max( DS,MUM ) ) * ( ( MUR / MLU ) + ( RRSe - MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) * ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * MRS ) / ( FirstVNF_RAM * Const ) ) - Min( Min( FirstVNF_CPU ,CRS ) ,Max( MDR,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( MUR + MUC ) ,Max( RMSe,MUR ) ) ,( Min( MUM ,MUM ) / Max( RCSe,RCSe ) ) )", "obj1": 0.7485148514851485, "obj2": 0.22611955375204412}, {"determining": "( ( Min( FirstVNF_RAM ,CRS ) + ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) * ( Max( CRS,FirstVNF_RAM ) + Max( BR,MRS ) ) )", "choosing": "( ( ( MUR + MLU ) - ( MUM - RRSe ) ) * Max( ( RCSe + MLU ),Max( RRSe,DS ) ) )", "obj1": 0.7306930693069307, "obj2": 0.2486855959400029}, {"determining": "( ( Max( MRS,BR ) / ( Const + PN ) ) / ( Min( FirstVNF_RAM ,AMS ) + Min( ARS ,ARS ) ) )", "choosing": "( ( Max( RMSe,RCSe ) + ( MUR * MLU ) ) * Max( ( MUC / RMSe ),( MLU * RRSe ) ) )", "obj1": 0.7465346534653465, "obj2": 0.2549042986181216}, {"determining": "( ( ( CRS + DDR ) / ( MRS * BR ) ) + ( ( MDR + RRS ) * ( Const + MDR ) ) )", "choosing": "Min( ( ( MUC + CS ) / ( DS / RRSe ) ) ,( ( DS / RRSe ) - ( RRSe + RMSe ) ) )", "obj1": 0.7227722772277227, "obj2": 0.23573413354249018}, {"determining": "Min( ( ( FirstVNF_CPU + RRS ) + FirstVNF_CPU_Server ) ,( FirstVNF_CPU - RRS ) )", "choosing": "( Min( RMSe ,CS ) - ( ( RRSe - RCSe ) * RCSe ) )", "obj1": 0.7108910891089109, "obj2": 0.22822065616426912}, {"determining": "Max( Max( DDR,ACS ),( BR * PN ) )", "choosing": "Min( Max( Min( RCSe ,MUC ),( RMSe - MLU ) ) ,Max( Min( DS ,RRSe ),( DS / RCSe ) ) )", "obj1": 0.7445544554455445, "obj2": 0.23425884303001096}, {"determining": "Max( ( Min( Const ,AMS ) - Min( PN ,RRS ) ),( Max( AMS,FirstVNF_Mem_Server ) + Max( DDR,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( RCSe ,RCSe ),( RMSe + MUR ) ) - Max( Max( MLU,RCSe ),( DS + RCSe ) ) )", "obj1": 0.7049504950495049, "obj2": 0.25543918015190903}, {"determining": "Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) )", "choosing": "Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) )", "obj1": 0.7168316831683168, "obj2": 0.2526047875181536}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( RRSe / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( Max( MUC,CS ) * Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / ACS ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * RRSe ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.2635679065581331}, {"determining": "Min( ( AMS * ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU + DS ) ,RCSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.21003984383345806}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,Max( BR,( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - ( ( RMSe + RCSe ) - CS ) ) * ( RRSe + RRSe ) )", "obj1": 0.7306930693069307, "obj2": 0.26296942913452964}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,RRS ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS * Min( BR ,( FirstVNF_Mem_Server + RRS ) ) ),( RRS * PN ) )", "choosing": "( ( ( MUM / RMSe ) + MUM ) / Min( MUR ,MLU ) )", "obj1": 0.7425742574257426, "obj2": 0.24852561126879086}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Max( ARS,Max( FirstVNF_RAM,Const ) ) ,FirstVNF_Mem ),( FirstVNF_RAM_Server - DDR ) )", "choosing": "( ( ( ( RMSe - DS ) - ( MUR * MUR ) ) - Min( ( RCSe + DS ) ,( CS * MUM ) ) ) * ( ( Min( MLU ,RMSe ) + ( RCSe - RCSe ) ) * Min( Max( MLU,DS ) ,( MUC / MUM ) ) ) )", "obj1": 0.695049504950495, "obj2": 0.23527857456557888}, {"determining": "( ( CRS * ARS ) - ( MRS - FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( Min( MUC ,RMSe ) / ( DS - DS ) ) + ( ( CS - RRSe ) - ( MUC / RCSe ) ) ) ,( Max( ( RCSe - MUC ),( MUC / RCSe ) ) * Min( Max( RRSe,CS ) ,( MUR / RMSe ) ) ) )", "obj1": 0.7544554455445545, "obj2": 0.21966695635800298}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / DS ) / Min( DS ,MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS * ( PN / DDR ) ),( ARS / BR ) )", "choosing": "Max( Min( Max( ( CS - RCSe ),Min( MUM ,MUM ) ) ,Max( Max( MUC,DS ),( DS + RCSe ) ) ),( ( ( MUR * MUR ) + ( CS + RCSe ) ) / ( Max( MLU,MLU ) + ( MUC * MUC ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.24697954958176815}], "2": [{"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),( MUM - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( RRSe / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( Max( MUC,CS ) * Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "Min( Min( RRS ,DDR ) ,Max( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ),ARS ) )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7485148514851485, "obj2": 0.16346195780193848}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.0975308532568988}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) ,( DDR - ( ACS / ( ( ( Const / ( MDR + MRS ) ) / ( PN + BR ) ) + Min( ( AMS + MDR ) ,BR ) ) ) ) )", "choosing": "( ( Max( ( DS / MLU ),DS ) + MLU ) / Min( MLU ,Min( RMSe ,MUR ) ) )", "obj1": 0.8237623762376237, "obj2": 0.1438820787902498}, {"determining": "( Max( Min( Max( BR,RRS ) ,( Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) ) / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * Max( ( ( MUM - MUM ) - CS ),RMSe ) ) / MUM ) ) )", "obj1": 0.9524752475247524, "obj2": 0.04356616733216066}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - DDR )", "choosing": "( Max( MLU,DS ) / ( MUR - DS ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}, {"determining": "Min( Min( Max( Max( Max( Min( ( ( FirstVNF_RAM_Server + PN ) - Min( FirstVNF_RAM ,MRS ) ) ,Min( ( RRS / PN ) ,( BR / Const ) ) ),Min( ( Min( BR ,FirstVNF_Mem ) - ( AMS - MDR ) ) ,Min( ( ARS + FirstVNF_CPU_Server ) ,( PN / AMS ) ) ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * PN ) ) - ( ( ARS / AMS ) / Max( CRS,DDR ) ) ) / Max( ( ( MRS * Const ) * ( RRS * ACS ) ),( ( PN + AMS ) + ( ACS * CRS ) ) ) ) ),( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( BR / AMS ) ) ,( Min( CRS ,CRS ) / ( PN * BR ) ) ) / Max( ( ( PN * FirstVNF_RAM ) * ( ARS * ACS ) ),( ( BR * FirstVNF_Mem ) / Min( RRS ,CRS ) ) ) ) + Min( Min( ( ( FirstVNF_RAM + PN ) + ( ARS - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * ( CRS * MDR ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ARS * FirstVNF_RAM_Server ) ),Min( ( ARS / FirstVNF_RAM_Server ) ,Max( BR,BR ) ) ) ) ) ) ,Min( ( ( ( ( ( Const * AMS ) / ( FirstVNF_Mem_Server * ACS ) ) - Min( Max( AMS,ACS ) ,Min( DDR ,MDR ) ) ) / Min( ( ( ACS - FirstVNF_RAM ) / ( ARS * BR ) ) ,Max( Min( Const ,RRS ),Min( AMS ,AMS ) ) ) ) + ( ( ( ( PN - FirstVNF_CPU ) * ( FirstVNF_Mem - MDR ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) ) - ( ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM * MRS ) ) * ( ( FirstVNF_RAM + CRS ) * Max( FirstVNF_RAM,MDR ) ) ) ) ) ,( Max( Max( ( ( PN + PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( Min( MDR ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ),( Max( ( PN - Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * ( ( MRS + AMS ) / ( DDR + MDR ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server + CRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM - DDR ) / ( RRS * FirstVNF_RAM ) ) ) / ( ( ( MDR * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,Const ) ) * ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( MRS + FirstVNF_CPU ) * Max( Const,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU * PN ) * ( DDR - ARS ) ) ) / Min( ( ( ARS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( Min( MRS ,PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * ( ( Min( Max( DDR,MRS ) ,( PN / CRS ) ) - ( Min( MDR ,RRS ) + Max( PN,FirstVNF_RAM ) ) ) + Min( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,Max( Max( FirstVNF_RAM_Server,DDR ),( MDR / ARS ) ) ) ) ),Max( Max( ( ( ( Const + FirstVNF_RAM ) / ( BR / CRS ) ) / ( ( FirstVNF_RAM_Server * MDR ) - ( CRS - FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( AMS + FirstVNF_CPU_Server ) ) - ( ( MDR - ACS ) / ( FirstVNF_Mem_Server / ACS ) ) ) ),( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server + AMS ) ) / ( Min( MRS ,PN ) + ( CRS + MRS ) ) ) / ( ( ( Const * FirstVNF_CPU ) / Max( ACS,FirstVNF_Mem ) ) - Min( Max( Const,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ,( ( ( Min( Max( Min( FirstVNF_RAM ,DDR ),( FirstVNF_CPU_Server + RRS ) ) ,( ( ACS / RRS ) / ( ACS / CRS ) ) ) - Max( Min( ( CRS - CRS ) ,( DDR * BR ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( PN - ACS ) ) ) ) + ( ( Min( ( MDR + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_CPU ) * Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( ( Max( BR,DDR ) + ( MDR - FirstVNF_CPU ) ),Max( ( AMS - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) * ( Min( ( Min( Min( ACS ,Const ) ,( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Min( Const ,FirstVNF_Mem ) ) ) ,Max( Max( Max( DDR,FirstVNF_Mem ),Min( ACS ,FirstVNF_Mem_Server ) ),( Max( ACS,FirstVNF_CPU_Server ) / Max( MDR,ARS ) ) ) ) - Max( Min( ( Min( RRS ,ARS ) * Min( ACS ,DDR ) ) ,( Min( PN ,BR ) - ( FirstVNF_RAM * Const ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( AMS / Const ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( Min( Min( ( RCSe - MUC ) ,Max( MUM,MUC ) ) ,( ( MLU + MUR ) / Min( MLU ,CS ) ) ) ,Min( ( ( RMSe / MUR ) - ( RCSe * RMSe ) ) ,Max( ( RMSe * MUC ),( RRSe / DS ) ) ) ) ,( Max( ( ( RRSe + MLU ) + Max( CS,RMSe ) ),( ( RRSe * MLU ) + ( CS + MUM ) ) ) * ( Max( ( RRSe * RCSe ),( MUR + CS ) ) + ( ( MLU - MUR ) - Min( RRSe ,MUR ) ) ) ) ),( Max( Max( ( ( MLU * RCSe ) / ( RMSe - MUR ) ),Max( Min( MUC ,CS ),Max( MUC,CS ) ) ),Min( ( ( RRSe * MUC ) + Max( MUC,MUM ) ) ,( ( DS + RCSe ) + Max( CS,DS ) ) ) ) - ( ( ( ( RRSe - RRSe ) / Max( MUC,MUM ) ) * ( ( MLU / MLU ) + ( CS - DS ) ) ) - ( ( ( RRSe / MUM ) - ( MUR / RRSe ) ) + ( ( DS * RCSe ) * ( MUR * MLU ) ) ) ) ) ) + Min( Min( ( ( Max( ( MLU * RCSe ),( CS + MUR ) ) + Max( Min( DS ,CS ),Max( MLU,DS ) ) ) / Max( ( ( MLU - MUC ) * ( MUR + RRSe ) ),( ( RRSe / MLU ) + Max( DS,DS ) ) ) ) ,( ( ( ( MUM + MUM ) / ( MUM * DS ) ) + ( Max( MUR,DS ) + ( RCSe + RRSe ) ) ) / ( Min( ( RRSe / DS ) ,Min( DS ,DS ) ) - ( ( MUM * DS ) - Min( DS ,DS ) ) ) ) ) ,( ( Max( ( Max( MUM,RMSe ) - ( RMSe / RCSe ) ),( ( DS * CS ) + Max( MUR,DS ) ) ) - Max( Max( Min( CS ,RCSe ),Max( MUM,RMSe ) ),Min( ( RMSe + RRSe ) ,( MUM + MUC ) ) ) ) + Max( ( ( Max( RCSe,CS ) / ( RRSe * CS ) ) * ( ( RRSe / MLU ) * ( RMSe + RCSe ) ) ),Min( Min( Min( MUC ,MUR ) ,( MLU - MUR ) ) ,( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ) ) ) ),Min( ( ( ( ( ( Max( RCSe,RMSe ) + ( CS + MUM ) ) / Min( ( MUR + RMSe ) ,( CS / MUM ) ) ) * Min( Min( ( DS + MUC ) ,Min( MUC ,RCSe ) ) ,( ( MUR / RRSe ) * ( RMSe / MUC ) ) ) ) + ( ( ( ( RRSe - MUC ) * Max( RCSe,MUC ) ) + Min( ( RMSe + MUR ) ,Min( CS ,RCSe ) ) ) + Min( ( ( MLU + MUC ) + ( MUM - MUR ) ) ,( ( MUM / RCSe ) * ( RMSe - DS ) ) ) ) ) - Max( ( ( Min( ( DS / RCSe ) ,( RRSe - CS ) ) / ( ( MUC - MUM ) + Min( MLU ,MUM ) ) ) / Min( Min( ( MUM - MUR ) ,Max( MUC,MLU ) ) ,( ( MUC / CS ) + Min( MUC ,MUC ) ) ) ),( Min( Min( Min( RCSe ,RRSe ) ,Max( DS,MUR ) ) ,( ( RMSe + MUR ) - Min( RMSe ,RCSe ) ) ) * ( Max( ( MUC - MUR ),( MUC / MLU ) ) + ( ( DS / CS ) + ( RCSe * RMSe ) ) ) ) ) ) ,Min( ( Max( Min( ( ( RMSe / MUM ) + Max( MUC,DS ) ) ,Max( Min( MUC ,MUM ),( MUC * CS ) ) ),( Min( ( MUM + MUM ) ,( DS + CS ) ) - ( Max( MLU,MUC ) - ( MUM - DS ) ) ) ) / ( ( ( ( DS / RCSe ) / ( MUC - MLU ) ) * Min( ( MUM / MUM ) ,( MLU + RMSe ) ) ) + ( ( Max( MUM,RCSe ) / ( MUR - RCSe ) ) + ( ( RCSe / DS ) - Min( MUM ,MUM ) ) ) ) ) ,( ( ( Max( Min( RRSe ,CS ),Max( MUM,RRSe ) ) / Max( ( MUM * DS ),Min( RCSe ,DS ) ) ) / ( Max( ( RRSe - MUC ),( RMSe + RCSe ) ) * ( ( RMSe + CS ) + ( RCSe - RCSe ) ) ) ) * Min( ( Min( ( MUM * MUR ) ,( MUC / DS ) ) / ( Max( MUM,DS ) / ( MUC + RCSe ) ) ) ,( ( Max( CS,DS ) / Min( MUM ,MLU ) ) - Min( ( MUC * RCSe ) ,( MUR - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.2279941567498451}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2496529920206781}, {"determining": "Min( ( AMS * ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU + DS ) ,RCSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.21003984383345806}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( Min( DS ,MUM ) - Min( RRSe ,MUM ) )", "obj1": 0.9168316831683169, "obj2": 0.07111952047140249}, {"determining": "Min( ( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),( MUR * MUR ) ) )", "obj1": 0.9405940594059405, "obj2": 0.05713359309686106}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "Max( ( BR / AMS ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Min( RRSe ,RMSe ) + ( Min( DS ,MLU ) / CS ) )", "obj1": 0.7306930693069307, "obj2": 0.2144603491815426}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_RAM_Server / MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( ( DS + MUR ),Max( DS,MUM ) ) * ( ( MUR / MLU ) + ( RRSe - MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( MRS - Min( PN ,BR ) )", "choosing": "( ( ( RCSe * MUR ) - MUR ) - ( MUR * MUM ) )", "obj1": 0.9485148514851485, "obj2": 0.05498479183208837}, {"determining": "Min( Min( AMS ,ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU * DS ) ,RCSe ) ) )", "obj1": 0.7346534653465346, "obj2": 0.21003984383345806}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - Min( FirstVNF_RAM ,MRS ) )", "choosing": "( Max( MLU,RRSe ) * ( MUC / RMSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) * ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,RRS ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / DS ) / Min( DS ,MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( Min( PN ,AMS ) - MRS ) )", "choosing": "( ( MUC + MLU ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( PN ,BR ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MUC - MLU ) - ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( RRS ,DDR ) ,Max( RRS,ARS ) ),FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + Min( RRSe ,MUM ) ) * ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( CS - CS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / AMS ) ,MDR ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - Min( ( MRS / AMS ) ,MDR ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( DS - RMSe ) + ( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) )", "choosing": "( MUM + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,Min( ( AMS * ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( RCSe / MUC ) - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU + DS ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( CS,MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ),MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( Min( ( ARS / FirstVNF_Mem ) ,( PN / MDR ) ),( ( RRS / MRS ) + ( FirstVNF_Mem - MDR ) ) ) - ( ARS / BR ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),Max( Min( Max( ( CS - RCSe ),Min( MUM ,MUM ) ) ,Max( Max( MUC,DS ),( DS + RCSe ) ) ),( ( ( MUR * MUR ) + ( CS + RCSe ) ) / ( Max( MLU,MLU ) + ( MUC * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),( MUM - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( RRSe / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( Max( MUC,CS ) * Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( BR / AMS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( CS / ( MUR - DS ) )", "obj1": 0.9108910891089109, "obj2": 0.03932440804674421}, {"determining": "( ( PN * Const ) - BR )", "choosing": "( Max( DS,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7306930693069307, "obj2": 0.15127610090467908}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.0975308532568988}, {"determining": "( Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ) ,( ( ARS - FirstVNF_CPU_Server ) / ( BR / FirstVNF_Mem_Server ) ) ) / ( ( ( BR * FirstVNF_Mem_Server ) - ( AMS / AMS ) ) - Max( ( FirstVNF_Mem_Server / AMS ),( MRS + CRS ) ) ) )", "choosing": "Min( ( Max( ( DS / MLU ),( CS * MUC ) ) + ( Max( MUM,RRSe ) / ( MUM * DS ) ) ) ,( ( Max( MUM,CS ) - Max( RRSe,MLU ) ) * ( ( MUR * MLU ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.8316831683168316, "obj2": 0.12827975933877384}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - DDR )", "choosing": "( Max( MLU,DS ) / ( MUR - DS ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}, {"determining": "( Max( Min( ( Const / Const ) ,Max( FirstVNF_CPU_Server,AMS ) ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU - MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( ( RCSe / MUM ) / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7148514851485148, "obj2": 0.2135968724339274}, {"determining": "( ACS - ( FirstVNF_RAM + MRS ) )", "choosing": "( Min( MLU ,RRSe ) * ( ( MUM + RRSe ) + Max( RMSe,MUR ) ) )", "obj1": 0.807920792079208, "obj2": 0.14613291664997183}, {"determining": "Min( Min( Max( Max( Max( Min( ( ( FirstVNF_RAM_Server + PN ) - Min( FirstVNF_RAM ,MRS ) ) ,Min( ( RRS / PN ) ,( BR / Const ) ) ),Min( ( Min( BR ,FirstVNF_Mem ) - ( AMS - MDR ) ) ,Min( ( ARS + FirstVNF_CPU_Server ) ,( PN / AMS ) ) ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * PN ) ) - ( ( ARS / AMS ) / Max( CRS,DDR ) ) ) / Max( ( ( MRS * Const ) * ( RRS * ACS ) ),( ( PN + AMS ) + ( ACS * CRS ) ) ) ) ),( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( BR / AMS ) ) ,( Min( CRS ,CRS ) / ( PN * BR ) ) ) / Max( ( ( PN * FirstVNF_RAM ) * ( ARS * ACS ) ),( ( BR * FirstVNF_Mem ) / Min( RRS ,CRS ) ) ) ) + Min( Min( ( ( FirstVNF_RAM + PN ) + ( ARS - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * ( CRS * MDR ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ARS * FirstVNF_RAM_Server ) ),Min( ( ARS / FirstVNF_RAM_Server ) ,Max( BR,BR ) ) ) ) ) ) ,Min( ( ( ( ( ( Const * AMS ) / ( FirstVNF_Mem_Server * ACS ) ) - Min( Max( AMS,ACS ) ,Min( DDR ,MDR ) ) ) / Min( ( ( ACS - FirstVNF_RAM ) / ( ARS * BR ) ) ,Max( Min( Const ,RRS ),Min( AMS ,AMS ) ) ) ) + ( ( ( ( PN - FirstVNF_CPU ) * ( FirstVNF_Mem - MDR ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) ) - ( ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM * MRS ) ) * ( ( FirstVNF_RAM + CRS ) * Max( FirstVNF_RAM,MDR ) ) ) ) ) ,( Max( Max( ( ( PN + PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( Min( MDR ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ),( Max( ( PN - Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * ( ( MRS + AMS ) / ( DDR + MDR ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server + CRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM - DDR ) / ( RRS * FirstVNF_RAM ) ) ) / ( ( ( MDR * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,Const ) ) * ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( MRS + FirstVNF_CPU ) * Max( Const,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU * PN ) * ( DDR - ARS ) ) ) / Min( ( ( ARS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( Min( MRS ,PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * ( ( Min( Max( DDR,MRS ) ,( PN / CRS ) ) - ( Min( MDR ,RRS ) + Max( PN,FirstVNF_RAM ) ) ) + Min( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,Max( Max( FirstVNF_RAM_Server,DDR ),( MDR / ARS ) ) ) ) ),Max( Max( ( ( ( Const + FirstVNF_RAM ) / ( BR / CRS ) ) / ( ( FirstVNF_RAM_Server * MDR ) - ( CRS - FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( AMS + FirstVNF_CPU_Server ) ) - ( ( MDR - ACS ) / ( FirstVNF_Mem_Server / ACS ) ) ) ),( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server + AMS ) ) / ( Min( MRS ,PN ) + ( CRS + MRS ) ) ) / ( ( ( Const * FirstVNF_CPU ) / Max( ACS,FirstVNF_Mem ) ) - Min( Max( Const,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ,( ( ( Min( Max( Min( FirstVNF_RAM ,DDR ),( FirstVNF_CPU_Server + RRS ) ) ,( ( ACS / RRS ) / ( ACS / CRS ) ) ) - Max( Min( ( CRS - CRS ) ,( DDR * BR ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( PN - ACS ) ) ) ) + ( ( Min( ( MDR + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_CPU ) * Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( ( Max( BR,DDR ) + ( MDR - FirstVNF_CPU ) ),Max( ( AMS - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) * ( Min( ( Min( Min( ACS ,Const ) ,( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Min( Const ,FirstVNF_Mem ) ) ) ,Max( Max( Max( DDR,FirstVNF_Mem ),Min( ACS ,FirstVNF_Mem_Server ) ),( Max( ACS,FirstVNF_CPU_Server ) / Max( MDR,ARS ) ) ) ) - Max( Min( ( Min( RRS ,ARS ) * Min( ACS ,DDR ) ) ,( Min( PN ,BR ) - ( FirstVNF_RAM * Const ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( AMS / Const ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( Min( Min( ( RCSe - MUC ) ,Max( MUM,MUC ) ) ,( ( MLU + MUR ) / Min( MLU ,CS ) ) ) ,Min( ( ( RMSe / MUR ) - ( RCSe * RMSe ) ) ,Max( ( RMSe * MUC ),( RRSe / DS ) ) ) ) ,( Max( ( ( RRSe + MLU ) + Max( CS,RMSe ) ),( ( RRSe * MLU ) + ( CS + MUM ) ) ) * ( Max( ( RRSe * RCSe ),( MUR + CS ) ) + ( ( MLU - MUR ) - Min( RRSe ,MUR ) ) ) ) ),( Max( Max( ( ( MLU * RCSe ) / ( RMSe - MUR ) ),Max( Min( MUC ,CS ),Max( MUC,CS ) ) ),Min( ( ( RRSe * MUC ) + Max( MUC,MUM ) ) ,( ( DS + RCSe ) + Max( CS,DS ) ) ) ) - ( ( ( ( RRSe - RRSe ) / Max( MUC,MUM ) ) * ( ( MLU / MLU ) + ( CS - DS ) ) ) - ( ( ( RRSe / MUM ) - ( MUR / RRSe ) ) + ( ( DS * RCSe ) * ( MUR * MLU ) ) ) ) ) ) + Min( Min( ( ( Max( ( MLU * RCSe ),( CS + MUR ) ) + Max( Min( DS ,CS ),Max( MLU,DS ) ) ) / Max( ( ( MLU - MUC ) * ( MUR + RRSe ) ),( ( RRSe / MLU ) + Max( DS,DS ) ) ) ) ,( ( ( ( MUM + MUM ) / ( MUM * DS ) ) + ( Max( MUR,DS ) + ( RCSe + RRSe ) ) ) / ( Min( ( RRSe / DS ) ,Min( DS ,DS ) ) - ( ( MUM * DS ) - Min( DS ,DS ) ) ) ) ) ,( ( Max( ( Max( MUM,RMSe ) - ( RMSe / RCSe ) ),( ( DS * CS ) + Max( MUR,DS ) ) ) - Max( Max( Min( CS ,RCSe ),Max( MUM,RMSe ) ),Min( ( RMSe + RRSe ) ,( MUM + MUC ) ) ) ) + Max( ( ( Max( RCSe,CS ) / ( RRSe * CS ) ) * ( ( RRSe / MLU ) * ( RMSe + RCSe ) ) ),Min( Min( Min( MUC ,MUR ) ,( MLU - MUR ) ) ,( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ) ) ) ),Min( ( ( ( ( ( Max( RCSe,RMSe ) + ( CS + MUM ) ) / Min( ( MUR + RMSe ) ,( CS / MUM ) ) ) * Min( Min( ( DS + MUC ) ,Min( MUC ,RCSe ) ) ,( ( MUR / RRSe ) * ( RMSe / MUC ) ) ) ) + ( ( ( ( RRSe - MUC ) * Max( RCSe,MUC ) ) + Min( ( RMSe + MUR ) ,Min( CS ,RCSe ) ) ) + Min( ( ( MLU + MUC ) + ( MUM - MUR ) ) ,( ( MUM / RCSe ) * ( RMSe - DS ) ) ) ) ) - Max( ( ( Min( ( DS / RCSe ) ,( RRSe - CS ) ) / ( ( MUC - MUM ) + Min( MLU ,MUM ) ) ) / Min( Min( ( MUM - MUR ) ,Max( MUC,MLU ) ) ,( ( MUC / CS ) + Min( MUC ,MUC ) ) ) ),( Min( Min( Min( RCSe ,RRSe ) ,Max( DS,MUR ) ) ,( ( RMSe + MUR ) - Min( RMSe ,RCSe ) ) ) * ( Max( ( MUC - MUR ),( MUC / MLU ) ) + ( ( DS / CS ) + ( RCSe * RMSe ) ) ) ) ) ) ,Min( ( Max( Min( ( ( RMSe / MUM ) + Max( MUC,DS ) ) ,Max( Min( MUC ,MUM ),( MUC * CS ) ) ),( Min( ( MUM + MUM ) ,( DS + CS ) ) - ( Max( MLU,MUC ) - ( MUM - DS ) ) ) ) / ( ( ( ( DS / RCSe ) / ( MUC - MLU ) ) * Min( ( MUM / MUM ) ,( MLU + RMSe ) ) ) + ( ( Max( MUM,RCSe ) / ( MUR - RCSe ) ) + ( ( RCSe / DS ) - Min( MUM ,MUM ) ) ) ) ) ,( ( ( Max( Min( RRSe ,CS ),Max( MUM,RRSe ) ) / Max( ( MUM * DS ),Min( RCSe ,DS ) ) ) / ( Max( ( RRSe - MUC ),( RMSe + RCSe ) ) * ( ( RMSe + CS ) + ( RCSe - RCSe ) ) ) ) * Min( ( Min( ( MUM * MUR ) ,( MUC / DS ) ) / ( Max( MUM,DS ) / ( MUC + RCSe ) ) ) ,( ( Max( CS,DS ) / Min( MUM ,MLU ) ) - Min( ( MUC * RCSe ) ,( MUR - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.2279941567498451}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2496529920206781}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_RAM_Server / MRS ),( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( Max( ( DS + MUR ),Max( DS,MUM ) ) * ( ( MUR / MLU ) + ( RRSe - MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_RAM * ACS ) ) - FirstVNF_Mem ) ,( DDR - ( ACS / ( ( ( Const / ( MDR + MRS ) ) / ( PN + BR ) ) + Min( ( AMS + MDR ) ,BR ) ) ) ) )", "choosing": "( ( Max( ( DS / MLU ),DS ) + MLU ) / Min( MLU ,Min( RMSe ,MUR ) ) )", "obj1": 0.8237623762376237, "obj2": 0.1438820787902498}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( Const,( FirstVNF_RAM_Server + ACS ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( Min( MUR ,RRSe ) + Min( RRSe ,MUC ) ) )", "obj1": 0.7049504950495049, "obj2": 0.21473176570642627}, {"determining": "Min( ( Const * MRS ) ,Max( FirstVNF_CPU_Server,( Const / Const ) ) )", "choosing": "( ( ( DS + MUR ) * Max( DS,MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.697029702970297, "obj2": 0.2207295216943803}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( Const / Const ) - FirstVNF_RAM )", "choosing": "( RMSe * ( RCSe / RRSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) * ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,RRS ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / DS ) / Min( DS ,MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( Min( PN ,AMS ) - MRS ) )", "choosing": "( ( MUC + MLU ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( PN ,BR ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MUC - MLU ) - ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( RRS ,DDR ) ,Max( RRS,ARS ) ),FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + Min( RRSe ,MUM ) ) * ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( CS - CS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / AMS ) ,MDR ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - Min( ( MRS / AMS ) ,MDR ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( DS - RMSe ) + ( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) )", "choosing": "( MUM + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,Min( ( AMS * ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( RCSe / MUC ) - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU + DS ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( CS,MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( AMS / ARS ) ),MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( RMSe + RRSe ) + ( RMSe + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( PN * Const ) - Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ) )", "choosing": "( MUM - Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ARS / FirstVNF_Mem ) ,( PN / MDR ) ),( ( RRS / MRS ) + ( FirstVNF_Mem - MDR ) ) ) - ( ARS / BR ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),Max( Min( Max( ( CS - RCSe ),Min( MUM ,MUM ) ) ,Max( Max( MUC,DS ),( DS + RCSe ) ) ),( ( ( MUR * MUR ) + ( CS + RCSe ) ) / ( Max( MLU,MLU ) + ( MUC * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( RRSe / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( Max( MUC,CS ) * Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( BR / AMS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( CS / ( MUR - DS ) )", "obj1": 0.9108910891089109, "obj2": 0.03932440804674421}, {"determining": "( ( PN * Const ) - ( MRS + MRS ) )", "choosing": "( ( MUC - MLU ) - ( MUR * MUR ) )", "obj1": 0.7702970297029703, "obj2": 0.09289128390666382}, {"determining": "( ( PN * ( ARS * AMS ) ) - MRS )", "choosing": "( Min( ( RMSe - CS ) ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.693069306930693, "obj2": 0.2005650831425966}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - DDR )", "choosing": "( Max( MLU,DS ) / ( MUR - DS ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}, {"determining": "Min( Min( Max( Max( Max( Min( ( ( FirstVNF_RAM_Server + PN ) - Min( FirstVNF_RAM ,MRS ) ) ,Min( ( RRS / PN ) ,( BR / Const ) ) ),Min( ( Min( BR ,FirstVNF_Mem ) - ( AMS - MDR ) ) ,Min( ( ARS + FirstVNF_CPU_Server ) ,( PN / AMS ) ) ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * PN ) ) - ( ( ARS / AMS ) / Max( CRS,DDR ) ) ) / Max( ( ( MRS * Const ) * ( RRS * ACS ) ),( ( PN + AMS ) + ( ACS * CRS ) ) ) ) ),( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( BR / AMS ) ) ,( Min( CRS ,CRS ) / ( PN * BR ) ) ) / Max( ( ( PN * FirstVNF_RAM ) * ( ARS * ACS ) ),( ( BR * FirstVNF_Mem ) / Min( RRS ,CRS ) ) ) ) + Min( Min( ( ( FirstVNF_RAM + PN ) + ( ARS - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * ( CRS * MDR ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ARS * FirstVNF_RAM_Server ) ),Min( ( ARS / FirstVNF_RAM_Server ) ,Max( BR,BR ) ) ) ) ) ) ,Min( ( ( ( ( ( Const * AMS ) / ( FirstVNF_Mem_Server * ACS ) ) - Min( Max( AMS,ACS ) ,Min( DDR ,MDR ) ) ) / Min( ( ( ACS - FirstVNF_RAM ) / ( ARS * BR ) ) ,Max( Min( Const ,RRS ),Min( AMS ,AMS ) ) ) ) + ( ( ( ( PN - FirstVNF_CPU ) * ( FirstVNF_Mem - MDR ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) ) - ( ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM * MRS ) ) * ( ( FirstVNF_RAM + CRS ) * Max( FirstVNF_RAM,MDR ) ) ) ) ) ,( Max( Max( ( ( PN + PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( Min( MDR ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ),( Max( ( PN - Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * ( ( MRS + AMS ) / ( DDR + MDR ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server + CRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM - DDR ) / ( RRS * FirstVNF_RAM ) ) ) / ( ( ( MDR * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,Const ) ) * ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( MRS + FirstVNF_CPU ) * Max( Const,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU * PN ) * ( DDR - ARS ) ) ) / Min( ( ( ARS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( Min( MRS ,PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * ( ( Min( Max( DDR,MRS ) ,( PN / CRS ) ) - ( Min( MDR ,RRS ) + Max( PN,FirstVNF_RAM ) ) ) + Min( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,Max( Max( FirstVNF_RAM_Server,DDR ),( MDR / ARS ) ) ) ) ),Max( Max( ( ( ( Const + FirstVNF_RAM ) / ( BR / CRS ) ) / ( ( FirstVNF_RAM_Server * MDR ) - ( CRS - FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( AMS + FirstVNF_CPU_Server ) ) - ( ( MDR - ACS ) / ( FirstVNF_Mem_Server / ACS ) ) ) ),( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server + AMS ) ) / ( Min( MRS ,PN ) + ( CRS + MRS ) ) ) / ( ( ( Const * FirstVNF_CPU ) / Max( ACS,FirstVNF_Mem ) ) - Min( Max( Const,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ,( ( ( Min( Max( Min( FirstVNF_RAM ,DDR ),( FirstVNF_CPU_Server + RRS ) ) ,( ( ACS / RRS ) / ( ACS / CRS ) ) ) - Max( Min( ( CRS - CRS ) ,( DDR * BR ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( PN - ACS ) ) ) ) + ( ( Min( ( MDR + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_CPU ) * Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( ( Max( BR,DDR ) + ( MDR - FirstVNF_CPU ) ),Max( ( AMS - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) * ( Min( ( Min( Min( ACS ,Const ) ,( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Min( Const ,FirstVNF_Mem ) ) ) ,Max( Max( Max( DDR,FirstVNF_Mem ),Min( ACS ,FirstVNF_Mem_Server ) ),( Max( ACS,FirstVNF_CPU_Server ) / Max( MDR,ARS ) ) ) ) - Max( Min( ( Min( RRS ,ARS ) * Min( ACS ,DDR ) ) ,( Min( PN ,BR ) - ( FirstVNF_RAM * Const ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( AMS / Const ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( Min( Min( ( RCSe - MUC ) ,Max( MUM,MUC ) ) ,( ( MLU + MUR ) / Min( MLU ,CS ) ) ) ,Min( ( ( RMSe / MUR ) - ( RCSe * RMSe ) ) ,Max( ( RMSe * MUC ),( RRSe / DS ) ) ) ) ,( Max( ( ( RRSe + MLU ) + Max( CS,RMSe ) ),( ( RRSe * MLU ) + ( CS + MUM ) ) ) * ( Max( ( RRSe * RCSe ),( MUR + CS ) ) + ( ( MLU - MUR ) - Min( RRSe ,MUR ) ) ) ) ),( Max( Max( ( ( MLU * RCSe ) / ( RMSe - MUR ) ),Max( Min( MUC ,CS ),Max( MUC,CS ) ) ),Min( ( ( RRSe * MUC ) + Max( MUC,MUM ) ) ,( ( DS + RCSe ) + Max( CS,DS ) ) ) ) - ( ( ( ( RRSe - RRSe ) / Max( MUC,MUM ) ) * ( ( MLU / MLU ) + ( CS - DS ) ) ) - ( ( ( RRSe / MUM ) - ( MUR / RRSe ) ) + ( ( DS * RCSe ) * ( MUR * MLU ) ) ) ) ) ) + Min( Min( ( ( Max( ( MLU * RCSe ),( CS + MUR ) ) + Max( Min( DS ,CS ),Max( MLU,DS ) ) ) / Max( ( ( MLU - MUC ) * ( MUR + RRSe ) ),( ( RRSe / MLU ) + Max( DS,DS ) ) ) ) ,( ( ( ( MUM + MUM ) / ( MUM * DS ) ) + ( Max( MUR,DS ) + ( RCSe + RRSe ) ) ) / ( Min( ( RRSe / DS ) ,Min( DS ,DS ) ) - ( ( MUM * DS ) - Min( DS ,DS ) ) ) ) ) ,( ( Max( ( Max( MUM,RMSe ) - ( RMSe / RCSe ) ),( ( DS * CS ) + Max( MUR,DS ) ) ) - Max( Max( Min( CS ,RCSe ),Max( MUM,RMSe ) ),Min( ( RMSe + RRSe ) ,( MUM + MUC ) ) ) ) + Max( ( ( Max( RCSe,CS ) / ( RRSe * CS ) ) * ( ( RRSe / MLU ) * ( RMSe + RCSe ) ) ),Min( Min( Min( MUC ,MUR ) ,( MLU - MUR ) ) ,( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ) ) ) ),Min( ( ( ( ( ( Max( RCSe,RMSe ) + ( CS + MUM ) ) / Min( ( MUR + RMSe ) ,( CS / MUM ) ) ) * Min( Min( ( DS + MUC ) ,Min( MUC ,RCSe ) ) ,( ( MUR / RRSe ) * ( RMSe / MUC ) ) ) ) + ( ( ( ( RRSe - MUC ) * Max( RCSe,MUC ) ) + Min( ( RMSe + MUR ) ,Min( CS ,RCSe ) ) ) + Min( ( ( MLU + MUC ) + ( MUM - MUR ) ) ,( ( MUM / RCSe ) * ( RMSe - DS ) ) ) ) ) - Max( ( ( Min( ( DS / RCSe ) ,( RRSe - CS ) ) / ( ( MUC - MUM ) + Min( MLU ,MUM ) ) ) / Min( Min( ( MUM - MUR ) ,Max( MUC,MLU ) ) ,( ( MUC / CS ) + Min( MUC ,MUC ) ) ) ),( Min( Min( Min( RCSe ,RRSe ) ,Max( DS,MUR ) ) ,( ( RMSe + MUR ) - Min( RMSe ,RCSe ) ) ) * ( Max( ( MUC - MUR ),( MUC / MLU ) ) + ( ( DS / CS ) + ( RCSe * RMSe ) ) ) ) ) ) ,Min( ( Max( Min( ( ( RMSe / MUM ) + Max( MUC,DS ) ) ,Max( Min( MUC ,MUM ),( MUC * CS ) ) ),( Min( ( MUM + MUM ) ,( DS + CS ) ) - ( Max( MLU,MUC ) - ( MUM - DS ) ) ) ) / ( ( ( ( DS / RCSe ) / ( MUC - MLU ) ) * Min( ( MUM / MUM ) ,( MLU + RMSe ) ) ) + ( ( Max( MUM,RCSe ) / ( MUR - RCSe ) ) + ( ( RCSe / DS ) - Min( MUM ,MUM ) ) ) ) ) ,( ( ( Max( Min( RRSe ,CS ),Max( MUM,RRSe ) ) / Max( ( MUM * DS ),Min( RCSe ,DS ) ) ) / ( Max( ( RRSe - MUC ),( RMSe + RCSe ) ) * ( ( RMSe + CS ) + ( RCSe - RCSe ) ) ) ) * Min( ( Min( ( MUM * MUR ) ,( MUC / DS ) ) / ( Max( MUM,DS ) / ( MUC + RCSe ) ) ) ,( ( Max( CS,DS ) / Min( MUM ,MLU ) ) - Min( ( MUC * RCSe ) ,( MUR - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.2279941567498451}, {"determining": "Min( Min( ( ( PN * Const ) - MRS ) ,DDR ) ,Max( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ),ARS ) )", "choosing": "( ( Min( DS ,MLU ) - Min( DS ,MLU ) ) - ( RMSe - CS ) )", "obj1": 0.7029702970297029, "obj2": 0.15784627710362062}, {"determining": "( ( ( PN * Const ) - MRS ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7643564356435644, "obj2": 0.09638581727489405}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "Min( ( ( MUC + CS ) / ( DS / RRSe ) ) ,( ( DS / RRSe ) - ( RRSe + RMSe ) ) )", "obj1": 0.7485148514851485, "obj2": 0.14435226509609475}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2496529920206781}, {"determining": "( ( ( ( ( ( Min( ( PN + RRS ) ,Max( DDR,FirstVNF_CPU_Server ) ) * Max( ( ACS + RRS ),( CRS / DDR ) ) ) / ( ( ( MDR + FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU + Const ) / ( CRS / FirstVNF_CPU ) ) ) ) / ( ( ( ( AMS / Const ) / ( AMS * Const ) ) / ( ( FirstVNF_CPU * ACS ) / ( Const - FirstVNF_CPU ) ) ) + ( Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) * ( ( ARS + FirstVNF_RAM ) * ( MRS * FirstVNF_CPU ) ) ) ) ) * ( Min( ( ( ( FirstVNF_CPU * FirstVNF_Mem ) + Max( Const,RRS ) ) / ( ( AMS + Const ) * ( MRS + AMS ) ) ) ,( ( Min( MDR ,ARS ) - Min( DDR ,RRS ) ) / ( ( MRS * FirstVNF_CPU_Server ) * Max( CRS,AMS ) ) ) ) + ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_Mem * MDR ),( FirstVNF_RAM + ARS ) ) ) - ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_Mem_Server / CRS ) ) * ( Min( MRS ,MRS ) * ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) * ( Max( ( Max( Max( ( ACS + FirstVNF_CPU ),( Const * FirstVNF_Mem ) ),( ( ACS + CRS ) / ( FirstVNF_CPU - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( BR - PN ) ) ,( ( FirstVNF_RAM_Server + ACS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) ),( ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,Min( FirstVNF_CPU ,RRS ) ) + Max( ( ARS * FirstVNF_CPU_Server ),( RRS * ARS ) ) ) * ( ( ( AMS - FirstVNF_RAM ) - ( BR / Const ) ) * ( ( FirstVNF_Mem_Server * ARS ) - ( DDR / FirstVNF_CPU ) ) ) ) ) * ( ( ( Max( Max( ACS,AMS ),( FirstVNF_RAM_Server / PN ) ) - ( Min( AMS ,FirstVNF_CPU ) / ( Const + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server / BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) / ( Max( ( Min( PN ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) ),( ( FirstVNF_Mem * MDR ) / ( PN * FirstVNF_CPU ) ) ) - ( ( ( ACS / BR ) / Min( FirstVNF_RAM ,MRS ) ) / ( Min( DDR ,DDR ) / Min( Const ,RRS ) ) ) ) ) ) ) - ( Min( ( ( Min( Min( ( Const / RRS ) ,( MDR * ARS ) ) ,( Max( MRS,MRS ) + Max( MRS,FirstVNF_Mem_Server ) ) ) - ( ( Min( AMS ,AMS ) + ( CRS - FirstVNF_RAM ) ) - Min( Max( ARS,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) ) - ( ( ( ( Const - FirstVNF_Mem_Server ) - ( PN * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( PN + MRS ) ) ) - ( Min( ( CRS - FirstVNF_Mem ) ,( PN + MRS ) ) * ( Max( ACS,MDR ) * ( PN - PN ) ) ) ) ) ,Max( Max( Max( Min( ( FirstVNF_Mem - ARS ) ,( DDR / CRS ) ),Min( ( BR * CRS ) ,( MRS * MRS ) ) ),( Max( ( AMS * Const ),( CRS * FirstVNF_Mem ) ) - ( Min( PN ,ACS ) - ( FirstVNF_CPU_Server - CRS ) ) ) ),( ( ( ( PN / ARS ) + ( PN * ACS ) ) - ( Min( DDR ,FirstVNF_RAM_Server ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( Max( FirstVNF_CPU,ACS ) / ( FirstVNF_RAM_Server + CRS ) ) ) ) ) ) + ( ( ( ( Max( ( Const + ACS ),( PN * MRS ) ) + ( Min( ACS ,DDR ) / ( CRS - FirstVNF_CPU ) ) ) - Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( MRS / Const ) ) ,( Min( ARS ,CRS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) + ( ( ( ( CRS + ACS ) + ( ARS / FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU_Server ,RRS ) / ( MDR / DDR ) ) ) - Max( ( Min( ARS ,AMS ) / ( FirstVNF_Mem / FirstVNF_Mem ) ),( Min( MDR ,BR ) + ( Const + MRS ) ) ) ) ) + Min( ( ( Max( ( AMS - PN ),( MDR / DDR ) ) - ( ( AMS + CRS ) * ( ARS * ACS ) ) ) - ( ( ( PN / MRS ) * Min( MDR ,FirstVNF_Mem ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ARS ) ) ) ) ,Max( Max( Min( ( FirstVNF_CPU - ACS ) ,Min( FirstVNF_RAM ,MDR ) ),( ( Const * FirstVNF_RAM_Server ) * ( Const - MRS ) ) ),( Max( ( FirstVNF_CPU - CRS ),( FirstVNF_Mem + DDR ) ) / ( ( BR / MRS ) / ( RRS + MRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( Max( ( ( Min( RCSe ,RMSe ) * ( MUC + MLU ) ) * ( Max( MUM,RCSe ) / ( CS - MUC ) ) ),( ( Max( MUM,RMSe ) / ( RCSe - MLU ) ) / Min( ( RCSe / MUM ) ,Min( CS ,MUC ) ) ) ),Min( ( ( Max( RMSe,RCSe ) - ( DS - DS ) ) + ( Min( MUM ,RMSe ) - Min( MLU ,RMSe ) ) ) ,( Max( Max( RCSe,MLU ),( MUC + CS ) ) - Max( ( MLU / MUR ),Min( RMSe ,MUC ) ) ) ) ),( ( Min( Min( ( RRSe + MUR ) ,( RCSe + RCSe ) ) ,( ( CS + RMSe ) - ( DS - MUR ) ) ) * ( ( ( DS / MLU ) + Min( DS ,DS ) ) - Min( ( CS + MUR ) ,Min( MUM ,CS ) ) ) ) / ( Min( ( Max( RCSe,RCSe ) * Max( RRSe,DS ) ) ,Max( Max( RMSe,MLU ),( CS / MLU ) ) ) + ( ( ( MLU / MUR ) / Min( MUR ,MUR ) ) + ( ( RMSe - CS ) - ( DS - CS ) ) ) ) ) ),Max( ( ( Max( Max( Min( RCSe ,MUM ),( MUM / RCSe ) ),Max( ( RCSe - DS ),( DS * MLU ) ) ) + ( ( ( MUC * DS ) + Min( MUC ,CS ) ) - ( ( MUC - CS ) / ( DS + RRSe ) ) ) ) - Max( Max( ( Min( MUM ,MUC ) - Max( RCSe,MLU ) ),Max( Min( CS ,RMSe ),Max( MUR,RMSe ) ) ),( ( Min( CS ,DS ) / ( RMSe + RRSe ) ) - ( Min( RMSe ,CS ) / Max( MUM,DS ) ) ) ) ),Min( ( ( ( ( MUR * MLU ) / Min( MUC ,MUM ) ) + Max( ( CS / RMSe ),Min( MUM ,CS ) ) ) + Max( ( Min( RMSe ,RCSe ) - Min( RMSe ,MUC ) ),( ( CS - RMSe ) / ( CS - MLU ) ) ) ) ,Max( Max( ( ( MUR + CS ) + ( MUR * CS ) ),Min( ( MUR / MUR ) ,Max( MUM,CS ) ) ),( ( ( RMSe / CS ) - Max( CS,MUR ) ) * Max( ( RRSe * RMSe ),Max( CS,RCSe ) ) ) ) ) ) ) - ( Max( Max( Max( ( ( ( RMSe - DS ) + ( MLU * CS ) ) + Max( ( MUM + CS ),( MLU * DS ) ) ),( ( Max( MLU,RCSe ) * Min( CS ,CS ) ) + ( ( RCSe + RCSe ) / Min( MUM ,MUR ) ) ) ),( Min( ( ( RCSe - MUC ) - Max( DS,DS ) ) ,( ( RMSe - MLU ) + Min( MUR ,MLU ) ) ) * ( Max( ( RRSe / MUM ),Min( MLU ,MUR ) ) - ( ( RCSe / MUC ) - Min( RMSe ,MLU ) ) ) ) ),Min( Min( ( Min( ( CS - MLU ) ,Min( RMSe ,MUC ) ) / ( ( MLU / MLU ) * Max( RMSe,RMSe ) ) ) ,( Min( ( MLU + MUM ) ,Min( DS ,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + RMSe ) ) ) ) ,Min( ( ( ( RCSe * DS ) * Max( CS,MUC ) ) * ( Min( MUC ,RRSe ) - ( RCSe / DS ) ) ) ,( ( Max( MUC,RCSe ) / Max( MUM,MUR ) ) * ( ( MUR / MUM ) + ( DS + MUM ) ) ) ) ) ) / ( Min( ( Max( ( ( MUR + MUC ) * ( DS + MUC ) ),( ( DS / RMSe ) / Max( MUR,RMSe ) ) ) + ( Max( ( RRSe + RRSe ),( CS * MUC ) ) * ( ( RMSe + DS ) * ( RCSe / DS ) ) ) ) ,Max( Min( Min( ( DS - MUR ) ,( RMSe * CS ) ) ,Min( ( DS * CS ) ,( RCSe + DS ) ) ),( ( Max( MUC,DS ) - ( RRSe / RMSe ) ) + ( ( DS / RMSe ) * ( CS - RCSe ) ) ) ) ) - ( Max( ( ( ( DS - MUC ) / ( MUM / DS ) ) / ( Max( MUR,DS ) - ( MLU * CS ) ) ),( ( ( MUM + MUR ) + ( RRSe - CS ) ) * Min( ( RRSe / MLU ) ,Max( RRSe,DS ) ) ) ) - ( ( Max( ( RCSe * MUC ),( MLU - MUR ) ) * ( ( RRSe * RCSe ) * ( CS / RRSe ) ) ) * ( Min( Min( MLU ,MUM ) ,( RMSe - CS ) ) / ( ( MUC - MUR ) + Min( RCSe ,MLU ) ) ) ) ) ) ) )", "obj1": 0.7386138613861386, "obj2": 0.14902365915402055}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7207920792079208, "obj2": 0.1529711498679643}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7207920792079208, "obj2": 0.1529711498679643}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7425742574257426, "obj2": 0.14445240634290782}, {"determining": "( ( PN * Const ) - BR )", "choosing": "( Max( DS,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7306930693069307, "obj2": 0.15127610090467908}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7306930693069307, "obj2": 0.15127610090467908}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - FirstVNF_RAM )", "choosing": "( MUR * ( MUC / RMSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),( MUM - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) * ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,RRS ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / DS ) / Min( DS ,MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( Min( PN ,AMS ) - MRS ) )", "choosing": "( ( MUC + MLU ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( PN ,BR ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MUC - MLU ) - ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( RRS ,DDR ) ,Max( RRS,ARS ) ),FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + Min( RRSe ,MUM ) ) * ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( CS - CS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / AMS ) ,MDR ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - Min( ( MRS / AMS ) ,MDR ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( DS - RMSe ) + ( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) )", "choosing": "( MUM + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,Min( ( AMS * ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( RCSe / MUC ) - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU + DS ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,( FirstVNF_CPU / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( CS,MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,CRS ) )", "choosing": "( Max( ( Max( RRSe,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( PN * Min( PN ,BR ) ) - Max( ( DDR + FirstVNF_Mem_Server ),MRS ) )", "choosing": "( ( MUC - MLU ) - ( ( CS * RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ) )", "choosing": "( MUM - Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.601980198019802, "obj2": 0.2823133383968914}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( BR / AMS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( CS / ( MUR - DS ) )", "obj1": 0.9108910891089109, "obj2": 0.03932440804674421}, {"determining": "( ( PN * Const ) - ( MRS + MRS ) )", "choosing": "( ( MUC - MLU ) - ( MUR * MUR ) )", "obj1": 0.7702970297029703, "obj2": 0.09289128390666382}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - DDR )", "choosing": "( Max( MLU,DS ) / ( MUR - DS ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}, {"determining": "Min( Min( ( ( PN * Const ) - MRS ) ,DDR ) ,Max( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ),ARS ) )", "choosing": "( ( Min( DS ,MLU ) - Min( DS ,MLU ) ) - ( RMSe - CS ) )", "obj1": 0.7029702970297029, "obj2": 0.15784627710362062}, {"determining": "( ( PN * ( ARS * AMS ) ) - MRS )", "choosing": "( Min( ( RMSe - CS ) ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.693069306930693, "obj2": 0.2005650831425966}, {"determining": "Min( Min( Max( Max( Max( Min( ( ( FirstVNF_RAM_Server + PN ) - Min( FirstVNF_RAM ,MRS ) ) ,Min( ( RRS / PN ) ,( BR / Const ) ) ),Min( ( Min( BR ,FirstVNF_Mem ) - ( AMS - MDR ) ) ,Min( ( ARS + FirstVNF_CPU_Server ) ,( PN / AMS ) ) ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * PN ) ) - ( ( ARS / AMS ) / Max( CRS,DDR ) ) ) / Max( ( ( MRS * Const ) * ( RRS * ACS ) ),( ( PN + AMS ) + ( ACS * CRS ) ) ) ) ),( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( BR / AMS ) ) ,( Min( CRS ,CRS ) / ( PN * BR ) ) ) / Max( ( ( PN * FirstVNF_RAM ) * ( ARS * ACS ) ),( ( BR * FirstVNF_Mem ) / Min( RRS ,CRS ) ) ) ) + Min( Min( ( ( FirstVNF_RAM + PN ) + ( ARS - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * ( CRS * MDR ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ARS * FirstVNF_RAM_Server ) ),Min( ( ARS / FirstVNF_RAM_Server ) ,Max( BR,BR ) ) ) ) ) ) ,Min( ( ( ( ( ( Const * AMS ) / ( FirstVNF_Mem_Server * ACS ) ) - Min( Max( AMS,ACS ) ,Min( DDR ,MDR ) ) ) / Min( ( ( ACS - FirstVNF_RAM ) / ( ARS * BR ) ) ,Max( Min( Const ,RRS ),Min( AMS ,AMS ) ) ) ) + ( ( ( ( PN - FirstVNF_CPU ) * ( FirstVNF_Mem - MDR ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) ) - ( ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM * MRS ) ) * ( ( FirstVNF_RAM + CRS ) * Max( FirstVNF_RAM,MDR ) ) ) ) ) ,( Max( Max( ( ( PN + PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( Min( MDR ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ),( Max( ( PN - Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * ( ( MRS + AMS ) / ( DDR + MDR ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server + CRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM - DDR ) / ( RRS * FirstVNF_RAM ) ) ) / ( ( ( MDR * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,Const ) ) * ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( MRS + FirstVNF_CPU ) * Max( Const,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU * PN ) * ( DDR - ARS ) ) ) / Min( ( ( ARS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( Min( MRS ,PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * ( ( Min( Max( DDR,MRS ) ,( PN / CRS ) ) - ( Min( MDR ,RRS ) + Max( PN,FirstVNF_RAM ) ) ) + Min( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,Max( Max( FirstVNF_RAM_Server,DDR ),( MDR / ARS ) ) ) ) ),Max( Max( ( ( ( Const + FirstVNF_RAM ) / ( BR / CRS ) ) / ( ( FirstVNF_RAM_Server * MDR ) - ( CRS - FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( AMS + FirstVNF_CPU_Server ) ) - ( ( MDR - ACS ) / ( FirstVNF_Mem_Server / ACS ) ) ) ),( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server + AMS ) ) / ( Min( MRS ,PN ) + ( CRS + MRS ) ) ) / ( ( ( Const * FirstVNF_CPU ) / Max( ACS,FirstVNF_Mem ) ) - Min( Max( Const,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ,( ( ( Min( Max( Min( FirstVNF_RAM ,DDR ),( FirstVNF_CPU_Server + RRS ) ) ,( ( ACS / RRS ) / ( ACS / CRS ) ) ) - Max( Min( ( CRS - CRS ) ,( DDR * BR ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( PN - ACS ) ) ) ) + ( ( Min( ( MDR + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_CPU ) * Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( ( Max( BR,DDR ) + ( MDR - FirstVNF_CPU ) ),Max( ( AMS - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) * ( Min( ( Min( Min( ACS ,Const ) ,( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Min( Const ,FirstVNF_Mem ) ) ) ,Max( Max( Max( DDR,FirstVNF_Mem ),Min( ACS ,FirstVNF_Mem_Server ) ),( Max( ACS,FirstVNF_CPU_Server ) / Max( MDR,ARS ) ) ) ) - Max( Min( ( Min( RRS ,ARS ) * Min( ACS ,DDR ) ) ,( Min( PN ,BR ) - ( FirstVNF_RAM * Const ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( AMS / Const ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( Min( Min( ( RCSe - MUC ) ,Max( MUM,MUC ) ) ,( ( MLU + MUR ) / Min( MLU ,CS ) ) ) ,Min( ( ( RMSe / MUR ) - ( RCSe * RMSe ) ) ,Max( ( RMSe * MUC ),( RRSe / DS ) ) ) ) ,( Max( ( ( RRSe + MLU ) + Max( CS,RMSe ) ),( ( RRSe * MLU ) + ( CS + MUM ) ) ) * ( Max( ( RRSe * RCSe ),( MUR + CS ) ) + ( ( MLU - MUR ) - Min( RRSe ,MUR ) ) ) ) ),( Max( Max( ( ( MLU * RCSe ) / ( RMSe - MUR ) ),Max( Min( MUC ,CS ),Max( MUC,CS ) ) ),Min( ( ( RRSe * MUC ) + Max( MUC,MUM ) ) ,( ( DS + RCSe ) + Max( CS,DS ) ) ) ) - ( ( ( ( RRSe - RRSe ) / Max( MUC,MUM ) ) * ( ( MLU / MLU ) + ( CS - DS ) ) ) - ( ( ( RRSe / MUM ) - ( MUR / RRSe ) ) + ( ( DS * RCSe ) * ( MUR * MLU ) ) ) ) ) ) + Min( Min( ( ( Max( ( MLU * RCSe ),( CS + MUR ) ) + Max( Min( DS ,CS ),Max( MLU,DS ) ) ) / Max( ( ( MLU - MUC ) * ( MUR + RRSe ) ),( ( RRSe / MLU ) + Max( DS,DS ) ) ) ) ,( ( ( ( MUM + MUM ) / ( MUM * DS ) ) + ( Max( MUR,DS ) + ( RCSe + RRSe ) ) ) / ( Min( ( RRSe / DS ) ,Min( DS ,DS ) ) - ( ( MUM * DS ) - Min( DS ,DS ) ) ) ) ) ,( ( Max( ( Max( MUM,RMSe ) - ( RMSe / RCSe ) ),( ( DS * CS ) + Max( MUR,DS ) ) ) - Max( Max( Min( CS ,RCSe ),Max( MUM,RMSe ) ),Min( ( RMSe + RRSe ) ,( MUM + MUC ) ) ) ) + Max( ( ( Max( RCSe,CS ) / ( RRSe * CS ) ) * ( ( RRSe / MLU ) * ( RMSe + RCSe ) ) ),Min( Min( Min( MUC ,MUR ) ,( MLU - MUR ) ) ,( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ) ) ) ),Min( ( ( ( ( ( Max( RCSe,RMSe ) + ( CS + MUM ) ) / Min( ( MUR + RMSe ) ,( CS / MUM ) ) ) * Min( Min( ( DS + MUC ) ,Min( MUC ,RCSe ) ) ,( ( MUR / RRSe ) * ( RMSe / MUC ) ) ) ) + ( ( ( ( RRSe - MUC ) * Max( RCSe,MUC ) ) + Min( ( RMSe + MUR ) ,Min( CS ,RCSe ) ) ) + Min( ( ( MLU + MUC ) + ( MUM - MUR ) ) ,( ( MUM / RCSe ) * ( RMSe - DS ) ) ) ) ) - Max( ( ( Min( ( DS / RCSe ) ,( RRSe - CS ) ) / ( ( MUC - MUM ) + Min( MLU ,MUM ) ) ) / Min( Min( ( MUM - MUR ) ,Max( MUC,MLU ) ) ,( ( MUC / CS ) + Min( MUC ,MUC ) ) ) ),( Min( Min( Min( RCSe ,RRSe ) ,Max( DS,MUR ) ) ,( ( RMSe + MUR ) - Min( RMSe ,RCSe ) ) ) * ( Max( ( MUC - MUR ),( MUC / MLU ) ) + ( ( DS / CS ) + ( RCSe * RMSe ) ) ) ) ) ) ,Min( ( Max( Min( ( ( RMSe / MUM ) + Max( MUC,DS ) ) ,Max( Min( MUC ,MUM ),( MUC * CS ) ) ),( Min( ( MUM + MUM ) ,( DS + CS ) ) - ( Max( MLU,MUC ) - ( MUM - DS ) ) ) ) / ( ( ( ( DS / RCSe ) / ( MUC - MLU ) ) * Min( ( MUM / MUM ) ,( MLU + RMSe ) ) ) + ( ( Max( MUM,RCSe ) / ( MUR - RCSe ) ) + ( ( RCSe / DS ) - Min( MUM ,MUM ) ) ) ) ) ,( ( ( Max( Min( RRSe ,CS ),Max( MUM,RRSe ) ) / Max( ( MUM * DS ),Min( RCSe ,DS ) ) ) / ( Max( ( RRSe - MUC ),( RMSe + RCSe ) ) * ( ( RMSe + CS ) + ( RCSe - RCSe ) ) ) ) * Min( ( Min( ( MUM * MUR ) ,( MUC / DS ) ) / ( Max( MUM,DS ) / ( MUC + RCSe ) ) ) ,( ( Max( CS,DS ) / Min( MUM ,MLU ) ) - Min( ( MUC * RCSe ) ,( MUR - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.2279941567498451}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "Min( ( ( MUC + CS ) / ( DS / RRSe ) ) ,( ( DS / RRSe ) - ( RRSe + RMSe ) ) )", "obj1": 0.7485148514851485, "obj2": 0.14435226509609475}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( RRSe / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( Max( MUC,CS ) * Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2496529920206781}, {"determining": "( ( ( PN * Const ) - MRS ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7643564356435644, "obj2": 0.09638581727489405}, {"determining": "Min( Min( RRS ,DDR ) ,Max( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_CPU ) ) / ( Const + ARS ) ) * AMS ) ),ARS ) )", "choosing": "( Min( DS ,MUM ) - ( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.21891132188271678}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU / MRS ),( FirstVNF_RAM_Server + ( Const / Const ) ) ) )", "choosing": "( Max( ( DS + MUR ),Max( ( RCSe / MUM ),MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.21635652901013508}, {"determining": "( ( ( ( ( ( Min( ( PN + RRS ) ,Max( DDR,FirstVNF_CPU_Server ) ) * Max( ( ACS + RRS ),( CRS / DDR ) ) ) / ( ( ( MDR + FirstVNF_Mem_Server ) + ( DDR * FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU + Const ) / ( CRS / FirstVNF_CPU ) ) ) ) / ( ( ( ( AMS / Const ) / ( AMS * Const ) ) / ( ( FirstVNF_CPU * ACS ) / ( Const - FirstVNF_CPU ) ) ) + ( Max( ( FirstVNF_CPU + FirstVNF_Mem_Server ),( FirstVNF_Mem_Server * FirstVNF_RAM ) ) * ( ( ARS + FirstVNF_RAM ) * ( MRS * FirstVNF_CPU ) ) ) ) ) * ( Min( ( ( ( FirstVNF_CPU * FirstVNF_Mem ) + Max( Const,RRS ) ) / ( ( AMS + Const ) * ( MRS + AMS ) ) ) ,( ( Min( MDR ,ARS ) - Min( DDR ,RRS ) ) / ( ( MRS * FirstVNF_CPU_Server ) * Max( CRS,AMS ) ) ) ) + ( ( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) + Max( ( FirstVNF_Mem * MDR ),( FirstVNF_RAM + ARS ) ) ) - ( ( Min( FirstVNF_RAM ,RRS ) + ( FirstVNF_Mem_Server / CRS ) ) * ( Min( MRS ,MRS ) * ( Const / FirstVNF_RAM_Server ) ) ) ) ) ) * ( Max( ( Max( Max( ( ACS + FirstVNF_CPU ),( Const * FirstVNF_Mem ) ),( ( ACS + CRS ) / ( FirstVNF_CPU - ACS ) ) ) - Min( ( ( FirstVNF_Mem_Server - ACS ) / ( BR - PN ) ) ,( ( FirstVNF_RAM_Server + ACS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) ),( ( Min( ( FirstVNF_CPU_Server + FirstVNF_RAM ) ,Min( FirstVNF_CPU ,RRS ) ) + Max( ( ARS * FirstVNF_CPU_Server ),( RRS * ARS ) ) ) * ( ( ( AMS - FirstVNF_RAM ) - ( BR / Const ) ) * ( ( FirstVNF_Mem_Server * ARS ) - ( DDR / FirstVNF_CPU ) ) ) ) ) * ( ( ( Max( Max( ACS,AMS ),( FirstVNF_RAM_Server / PN ) ) - ( Min( AMS ,FirstVNF_CPU ) / ( Const + RRS ) ) ) + ( ( ( FirstVNF_CPU_Server / BR ) / ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + ( ( RRS - FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ) ) ) / ( Max( ( Min( PN ,FirstVNF_CPU_Server ) / ( FirstVNF_CPU * MDR ) ),( ( FirstVNF_Mem * MDR ) / ( PN * FirstVNF_CPU ) ) ) - ( ( ( ACS / BR ) / Min( FirstVNF_RAM ,MRS ) ) / ( Min( DDR ,DDR ) / Min( Const ,RRS ) ) ) ) ) ) ) - ( Min( ( ( Min( Min( ( Const / RRS ) ,( MDR * ARS ) ) ,( Max( MRS,MRS ) + Max( MRS,FirstVNF_Mem_Server ) ) ) - ( ( Min( AMS ,AMS ) + ( CRS - FirstVNF_RAM ) ) - Min( Max( ARS,FirstVNF_Mem ) ,( FirstVNF_RAM_Server / BR ) ) ) ) - ( ( ( ( Const - FirstVNF_Mem_Server ) - ( PN * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + ( PN + MRS ) ) ) - ( Min( ( CRS - FirstVNF_Mem ) ,( PN + MRS ) ) * ( Max( ACS,MDR ) * ( PN - PN ) ) ) ) ) ,Max( Max( Max( Min( ( FirstVNF_Mem - ARS ) ,( DDR / CRS ) ),Min( ( BR * CRS ) ,( MRS * MRS ) ) ),( Max( ( AMS * Const ),( CRS * FirstVNF_Mem ) ) - ( Min( PN ,ACS ) - ( FirstVNF_CPU_Server - CRS ) ) ) ),( ( ( ( PN / ARS ) + ( PN * ACS ) ) - ( Min( DDR ,FirstVNF_RAM_Server ) / ( FirstVNF_RAM / FirstVNF_RAM ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) - ( FirstVNF_RAM_Server - PN ) ),( Max( FirstVNF_CPU,ACS ) / ( FirstVNF_RAM_Server + CRS ) ) ) ) ) ) + ( ( ( ( Max( ( Const + ACS ),( PN * MRS ) ) + ( Min( ACS ,DDR ) / ( CRS - FirstVNF_CPU ) ) ) - Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) + ( MRS / Const ) ) ,( Min( ARS ,CRS ) - ( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ) + ( ( ( ( CRS + ACS ) + ( ARS / FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_CPU_Server ,RRS ) / ( MDR / DDR ) ) ) - Max( ( Min( ARS ,AMS ) / ( FirstVNF_Mem / FirstVNF_Mem ) ),( Min( MDR ,BR ) + ( Const + MRS ) ) ) ) ) + Min( ( ( Max( ( AMS - PN ),( MDR / DDR ) ) - ( ( AMS + CRS ) * ( ARS * ACS ) ) ) - ( ( ( PN / MRS ) * Min( MDR ,FirstVNF_Mem ) ) / ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ARS ) ) ) ) ,Max( Max( Min( ( FirstVNF_CPU - ACS ) ,Min( FirstVNF_RAM ,MDR ) ),( ( Const * FirstVNF_RAM_Server ) * ( Const - MRS ) ) ),( Max( ( FirstVNF_CPU - CRS ),( FirstVNF_Mem + DDR ) ) / ( ( BR / MRS ) / ( RRS + MRS ) ) ) ) ) ) ) )", "choosing": "( Max( Max( Max( Max( ( ( Min( RCSe ,RMSe ) * ( MUC + MLU ) ) * ( Max( MUM,RCSe ) / ( CS - MUC ) ) ),( ( Max( MUM,RMSe ) / ( RCSe - MLU ) ) / Min( ( RCSe / MUM ) ,Min( CS ,MUC ) ) ) ),Min( ( ( Max( RMSe,RCSe ) - ( DS - DS ) ) + ( Min( MUM ,RMSe ) - Min( MLU ,RMSe ) ) ) ,( Max( Max( RCSe,MLU ),( MUC + CS ) ) - Max( ( MLU / MUR ),Min( RMSe ,MUC ) ) ) ) ),( ( Min( Min( ( RRSe + MUR ) ,( RCSe + RCSe ) ) ,( ( CS + RMSe ) - ( DS - MUR ) ) ) * ( ( ( DS / MLU ) + Min( DS ,DS ) ) - Min( ( CS + MUR ) ,Min( MUM ,CS ) ) ) ) / ( Min( ( Max( RCSe,RCSe ) * Max( RRSe,DS ) ) ,Max( Max( RMSe,MLU ),( CS / MLU ) ) ) + ( ( ( MLU / MUR ) / Min( MUR ,MUR ) ) + ( ( RMSe - CS ) - ( DS - CS ) ) ) ) ) ),Max( ( ( Max( Max( Min( RCSe ,MUM ),( MUM / RCSe ) ),Max( ( RCSe - DS ),( DS * MLU ) ) ) + ( ( ( MUC * DS ) + Min( MUC ,CS ) ) - ( ( MUC - CS ) / ( DS + RRSe ) ) ) ) - Max( Max( ( Min( MUM ,MUC ) - Max( RCSe,MLU ) ),Max( Min( CS ,RMSe ),Max( MUR,RMSe ) ) ),( ( Min( CS ,DS ) / ( RMSe + RRSe ) ) - ( Min( RMSe ,CS ) / Max( MUM,DS ) ) ) ) ),Min( ( ( ( ( MUR * MLU ) / Min( MUC ,MUM ) ) + Max( ( CS / RMSe ),Min( MUM ,CS ) ) ) + Max( ( Min( RMSe ,RCSe ) - Min( RMSe ,MUC ) ),( ( CS - RMSe ) / ( CS - MLU ) ) ) ) ,Max( Max( ( ( MUR + CS ) + ( MUR * CS ) ),Min( ( MUR / MUR ) ,Max( MUM,CS ) ) ),( ( ( RMSe / CS ) - Max( CS,MUR ) ) * Max( ( RRSe * RMSe ),Max( CS,RCSe ) ) ) ) ) ) ) - ( Max( Max( Max( ( ( ( RMSe - DS ) + ( MLU * CS ) ) + Max( ( MUM + CS ),( MLU * DS ) ) ),( ( Max( MLU,RCSe ) * Min( CS ,CS ) ) + ( ( RCSe + RCSe ) / Min( MUM ,MUR ) ) ) ),( Min( ( ( RCSe - MUC ) - Max( DS,DS ) ) ,( ( RMSe - MLU ) + Min( MUR ,MLU ) ) ) * ( Max( ( RRSe / MUM ),Min( MLU ,MUR ) ) - ( ( RCSe / MUC ) - Min( RMSe ,MLU ) ) ) ) ),Min( Min( ( Min( ( CS - MLU ) ,Min( RMSe ,MUC ) ) / ( ( MLU / MLU ) * Max( RMSe,RMSe ) ) ) ,( Min( ( MLU + MUM ) ,Min( DS ,RCSe ) ) / Min( ( MUC * CS ) ,( RRSe + RMSe ) ) ) ) ,Min( ( ( ( RCSe * DS ) * Max( CS,MUC ) ) * ( Min( MUC ,RRSe ) - ( RCSe / DS ) ) ) ,( ( Max( MUC,RCSe ) / Max( MUM,MUR ) ) * ( ( MUR / MUM ) + ( DS + MUM ) ) ) ) ) ) / ( Min( ( Max( ( ( MUR + MUC ) * ( DS + MUC ) ),( ( DS / RMSe ) / Max( MUR,RMSe ) ) ) + ( Max( ( RRSe + RRSe ),( CS * MUC ) ) * ( ( RMSe + DS ) * ( RCSe / DS ) ) ) ) ,Max( Min( Min( ( DS - MUR ) ,( RMSe * CS ) ) ,Min( ( DS * CS ) ,( RCSe + DS ) ) ),( ( Max( MUC,DS ) - ( RRSe / RMSe ) ) + ( ( DS / RMSe ) * ( CS - RCSe ) ) ) ) ) - ( Max( ( ( ( DS - MUC ) / ( MUM / DS ) ) / ( Max( MUR,DS ) - ( MLU * CS ) ) ),( ( ( MUM + MUR ) + ( RRSe - CS ) ) * Min( ( RRSe / MLU ) ,Max( RRSe,DS ) ) ) ) - ( ( Max( ( RCSe * MUC ),( MLU - MUR ) ) * ( ( RRSe * RCSe ) * ( CS / RRSe ) ) ) * ( Min( Min( MLU ,MUM ) ,( RMSe - CS ) ) / ( ( MUC - MUR ) + Min( RCSe ,MLU ) ) ) ) ) ) ) )", "obj1": 0.7386138613861386, "obj2": 0.14902365915402055}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( RMSe * ( MUC / RRSe ) )", "obj1": 0.7247524752475247, "obj2": 0.15083552222880167}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7207920792079208, "obj2": 0.1529711498679643}, {"determining": "( ( ( PN * Const ) - MRS ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7643564356435644, "obj2": 0.09638581727489405}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7425742574257426, "obj2": 0.14445240634290782}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7207920792079208, "obj2": 0.1529711498679643}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - FirstVNF_RAM )", "choosing": "( MUR * ( MUC / RMSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( Max( Min( ( ARS / FirstVNF_Mem ) ,( PN / MDR ) ),( ( RRS / MRS ) + ( FirstVNF_Mem - MDR ) ) ) - ( ARS / BR ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),Max( Min( Max( ( CS - RCSe ),Min( MUM ,MUM ) ) ,Max( Max( MUC,DS ),( DS + RCSe ) ) ),( ( ( MUR * MUR ) + ( CS + RCSe ) ) / ( Max( MLU,MLU ) + ( MUC * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),( MUM - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) * ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,RRS ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / DS ) / Min( DS ,MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( Min( PN ,AMS ) - MRS ) )", "choosing": "( ( MUC + MLU ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( PN ,BR ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MUC - MLU ) - ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( RRS ,DDR ) ,Max( RRS,ARS ) ),FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + Min( RRSe ,MUM ) ) * ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - ( ( CS - CS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MRS / AMS ) ,MDR ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( ( RRSe / MLU ) / Max( MLU,RRSe ) ) - RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - Min( ( MRS / AMS ) ,MDR ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,RRS ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( DS - RMSe ) + ( RCSe / DS ) ) + ( ( DS - MUM ) - ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem + Min( FirstVNF_CPU_Server ,ACS ) ),Min( Const ,AMS ) ) ) )", "choosing": "( MUM + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "Min( ( MUR / CS ) ,( Min( RMSe ,MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,Min( ( AMS * ACS ) ,( ( FirstVNF_RAM * FirstVNF_Mem_Server ) + Max( Const,( AMS - RRS ) ) ) ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( ( RCSe / MUC ) - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( RCSe / MUC ) - ( CS - Min( ( MLU + DS ) ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( PN * Min( PN ,BR ) ) - ( ( ( PN * Min( PN ,BR ) ) - ( FirstVNF_CPU_Server + MRS ) ) + Max( ( DDR + FirstVNF_Mem_Server ),MRS ) ) )", "choosing": "( ( MUC - MLU ) - CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( PN ,BR ) ) - Max( ( DDR + FirstVNF_Mem_Server ),MRS ) )", "choosing": "( ( MUC - MLU ) - ( ( CS * RCSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_CPU ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.601980198019802, "obj2": 0.2823133383968914}, {"determining": "( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + CS ) * ( RCSe / RMSe ) )", "obj1": 0.906930693069307, "obj2": 0.07976091548729129}, {"determining": "( ( PN * Const ) - ( MRS + MRS ) )", "choosing": "( ( MUC - MLU ) - ( MUR * MUR ) )", "obj1": 0.7702970297029703, "obj2": 0.09289128390666382}, {"determining": "( ( Const / FirstVNF_RAM ) - FirstVNF_RAM )", "choosing": "( RMSe * RCSe )", "obj1": 0.9445544554455445, "obj2": 0.032910533377504686}, {"determining": "( ( ( ( PN * Const ) - MRS ) * Const ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,Min( DS ,MLU ) ) )", "obj1": 0.9801980198019802, "obj2": 0.007952762020110587}, {"determining": "Min( Min( Max( Max( Max( Min( ( ( FirstVNF_RAM_Server + PN ) - Min( FirstVNF_RAM ,MRS ) ) ,Min( ( RRS / PN ) ,( BR / Const ) ) ),Min( ( Min( BR ,FirstVNF_Mem ) - ( AMS - MDR ) ) ,Min( ( ARS + FirstVNF_CPU_Server ) ,( PN / AMS ) ) ) ),( ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * PN ) ) - ( ( ARS / AMS ) / Max( CRS,DDR ) ) ) / Max( ( ( MRS * Const ) * ( RRS * ACS ) ),( ( PN + AMS ) + ( ACS * CRS ) ) ) ) ),( ( Min( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) - ( BR / AMS ) ) ,( Min( CRS ,CRS ) / ( PN * BR ) ) ) / Max( ( ( PN * FirstVNF_RAM ) * ( ARS * ACS ) ),( ( BR * FirstVNF_Mem ) / Min( RRS ,CRS ) ) ) ) + Min( Min( ( ( FirstVNF_RAM + PN ) + ( ARS - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM + FirstVNF_Mem ) * ( CRS * MDR ) ) ) ,Max( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ARS * FirstVNF_RAM_Server ) ),Min( ( ARS / FirstVNF_RAM_Server ) ,Max( BR,BR ) ) ) ) ) ) ,Min( ( ( ( ( ( Const * AMS ) / ( FirstVNF_Mem_Server * ACS ) ) - Min( Max( AMS,ACS ) ,Min( DDR ,MDR ) ) ) / Min( ( ( ACS - FirstVNF_RAM ) / ( ARS * BR ) ) ,Max( Min( Const ,RRS ),Min( AMS ,AMS ) ) ) ) + ( ( ( ( PN - FirstVNF_CPU ) * ( FirstVNF_Mem - MDR ) ) / ( ( FirstVNF_Mem - FirstVNF_Mem ) - ( MRS / FirstVNF_CPU ) ) ) - ( ( ( BR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM * MRS ) ) * ( ( FirstVNF_RAM + CRS ) * Max( FirstVNF_RAM,MDR ) ) ) ) ) ,( Max( Max( ( ( PN + PN ) * ( FirstVNF_CPU_Server * FirstVNF_Mem ) ),( Min( MDR ,PN ) - ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ),( Max( ( PN - Const ),( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) * ( ( MRS + AMS ) / ( DDR + MDR ) ) ) ) + ( ( ( ( FirstVNF_Mem_Server + CRS ) / Min( MDR ,AMS ) ) * ( ( FirstVNF_RAM - DDR ) / ( RRS * FirstVNF_RAM ) ) ) / ( ( ( MDR * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU_Server,Const ) ) * ( ( CRS * ACS ) * ( FirstVNF_CPU_Server + PN ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( MRS + FirstVNF_CPU ) * Max( Const,FirstVNF_CPU_Server ) ) - ( ( FirstVNF_CPU * PN ) * ( DDR - ARS ) ) ) / Min( ( ( ARS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ,Min( Min( MRS ,PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ) ) ) * ( ( Min( Max( DDR,MRS ) ,( PN / CRS ) ) - ( Min( MDR ,RRS ) + Max( PN,FirstVNF_RAM ) ) ) + Min( Min( ( FirstVNF_RAM - FirstVNF_RAM ) ,( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ,Max( Max( FirstVNF_RAM_Server,DDR ),( MDR / ARS ) ) ) ) ),Max( Max( ( ( ( Const + FirstVNF_RAM ) / ( BR / CRS ) ) / ( ( FirstVNF_RAM_Server * MDR ) - ( CRS - FirstVNF_Mem_Server ) ) ),( ( ( FirstVNF_CPU / FirstVNF_CPU ) * ( AMS + FirstVNF_CPU_Server ) ) - ( ( MDR - ACS ) / ( FirstVNF_Mem_Server / ACS ) ) ) ),( ( ( Max( ACS,BR ) - ( FirstVNF_CPU_Server + AMS ) ) / ( Min( MRS ,PN ) + ( CRS + MRS ) ) ) / ( ( ( Const * FirstVNF_CPU ) / Max( ACS,FirstVNF_Mem ) ) - Min( Max( Const,Const ) ,( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ) ) ,( ( ( Min( Max( Min( FirstVNF_RAM ,DDR ),( FirstVNF_CPU_Server + RRS ) ) ,( ( ACS / RRS ) / ( ACS / CRS ) ) ) - Max( Min( ( CRS - CRS ) ,( DDR * BR ) ),Max( Min( FirstVNF_CPU ,FirstVNF_RAM ),( PN - ACS ) ) ) ) + ( ( Min( ( MDR + FirstVNF_RAM ) ,Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( MRS - FirstVNF_CPU ) * Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( ( Max( BR,DDR ) + ( MDR - FirstVNF_CPU ) ),Max( ( AMS - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ) ) ) * ( Min( ( Min( Min( ACS ,Const ) ,( BR * FirstVNF_Mem_Server ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * Min( Const ,FirstVNF_Mem ) ) ) ,Max( Max( Max( DDR,FirstVNF_Mem ),Min( ACS ,FirstVNF_Mem_Server ) ),( Max( ACS,FirstVNF_CPU_Server ) / Max( MDR,ARS ) ) ) ) - Max( Min( ( Min( RRS ,ARS ) * Min( ACS ,DDR ) ) ,( Min( PN ,BR ) - ( FirstVNF_RAM * Const ) ) ),( ( ( ARS / FirstVNF_Mem_Server ) + ( AMS / Const ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( Min( Min( Min( Min( ( RCSe - MUC ) ,Max( MUM,MUC ) ) ,( ( MLU + MUR ) / Min( MLU ,CS ) ) ) ,Min( ( ( RMSe / MUR ) - ( RCSe * RMSe ) ) ,Max( ( RMSe * MUC ),( RRSe / DS ) ) ) ) ,( Max( ( ( RRSe + MLU ) + Max( CS,RMSe ) ),( ( RRSe * MLU ) + ( CS + MUM ) ) ) * ( Max( ( RRSe * RCSe ),( MUR + CS ) ) + ( ( MLU - MUR ) - Min( RRSe ,MUR ) ) ) ) ),( Max( Max( ( ( MLU * RCSe ) / ( RMSe - MUR ) ),Max( Min( MUC ,CS ),Max( MUC,CS ) ) ),Min( ( ( RRSe * MUC ) + Max( MUC,MUM ) ) ,( ( DS + RCSe ) + Max( CS,DS ) ) ) ) - ( ( ( ( RRSe - RRSe ) / Max( MUC,MUM ) ) * ( ( MLU / MLU ) + ( CS - DS ) ) ) - ( ( ( RRSe / MUM ) - ( MUR / RRSe ) ) + ( ( DS * RCSe ) * ( MUR * MLU ) ) ) ) ) ) + Min( Min( ( ( Max( ( MLU * RCSe ),( CS + MUR ) ) + Max( Min( DS ,CS ),Max( MLU,DS ) ) ) / Max( ( ( MLU - MUC ) * ( MUR + RRSe ) ),( ( RRSe / MLU ) + Max( DS,DS ) ) ) ) ,( ( ( ( MUM + MUM ) / ( MUM * DS ) ) + ( Max( MUR,DS ) + ( RCSe + RRSe ) ) ) / ( Min( ( RRSe / DS ) ,Min( DS ,DS ) ) - ( ( MUM * DS ) - Min( DS ,DS ) ) ) ) ) ,( ( Max( ( Max( MUM,RMSe ) - ( RMSe / RCSe ) ),( ( DS * CS ) + Max( MUR,DS ) ) ) - Max( Max( Min( CS ,RCSe ),Max( MUM,RMSe ) ),Min( ( RMSe + RRSe ) ,( MUM + MUC ) ) ) ) + Max( ( ( Max( RCSe,CS ) / ( RRSe * CS ) ) * ( ( RRSe / MLU ) * ( RMSe + RCSe ) ) ),Min( Min( Min( MUC ,MUR ) ,( MLU - MUR ) ) ,( ( RCSe + MLU ) / ( CS - RRSe ) ) ) ) ) ) ),Min( ( ( ( ( ( Max( RCSe,RMSe ) + ( CS + MUM ) ) / Min( ( MUR + RMSe ) ,( CS / MUM ) ) ) * Min( Min( ( DS + MUC ) ,Min( MUC ,RCSe ) ) ,( ( MUR / RRSe ) * ( RMSe / MUC ) ) ) ) + ( ( ( ( RRSe - MUC ) * Max( RCSe,MUC ) ) + Min( ( RMSe + MUR ) ,Min( CS ,RCSe ) ) ) + Min( ( ( MLU + MUC ) + ( MUM - MUR ) ) ,( ( MUM / RCSe ) * ( RMSe - DS ) ) ) ) ) - Max( ( ( Min( ( DS / RCSe ) ,( RRSe - CS ) ) / ( ( MUC - MUM ) + Min( MLU ,MUM ) ) ) / Min( Min( ( MUM - MUR ) ,Max( MUC,MLU ) ) ,( ( MUC / CS ) + Min( MUC ,MUC ) ) ) ),( Min( Min( Min( RCSe ,RRSe ) ,Max( DS,MUR ) ) ,( ( RMSe + MUR ) - Min( RMSe ,RCSe ) ) ) * ( Max( ( MUC - MUR ),( MUC / MLU ) ) + ( ( DS / CS ) + ( RCSe * RMSe ) ) ) ) ) ) ,Min( ( Max( Min( ( ( RMSe / MUM ) + Max( MUC,DS ) ) ,Max( Min( MUC ,MUM ),( MUC * CS ) ) ),( Min( ( MUM + MUM ) ,( DS + CS ) ) - ( Max( MLU,MUC ) - ( MUM - DS ) ) ) ) / ( ( ( ( DS / RCSe ) / ( MUC - MLU ) ) * Min( ( MUM / MUM ) ,( MLU + RMSe ) ) ) + ( ( Max( MUM,RCSe ) / ( MUR - RCSe ) ) + ( ( RCSe / DS ) - Min( MUM ,MUM ) ) ) ) ) ,( ( ( Max( Min( RRSe ,CS ),Max( MUM,RRSe ) ) / Max( ( MUM * DS ),Min( RCSe ,DS ) ) ) / ( Max( ( RRSe - MUC ),( RMSe + RCSe ) ) * ( ( RMSe + CS ) + ( RCSe - RCSe ) ) ) ) * Min( ( Min( ( MUM * MUR ) ,( MUC / DS ) ) / ( Max( MUM,DS ) / ( MUC + RCSe ) ) ) ,( ( Max( CS,DS ) / Min( MUM ,MLU ) ) - Min( ( MUC * RCSe ) ,( MUR - RRSe ) ) ) ) ) ) ) )", "obj1": 0.6534653465346535, "obj2": 0.2279941567498451}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( Const + ARS ) )", "choosing": "( Max( ( ( RRSe / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - ( Max( MUC,CS ) * Min( MLU ,DS ) ) ) )", "obj1": 0.6237623762376238, "obj2": 0.2651749553597666}, {"determining": "( ( ( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( MRS / ACS ) + ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) ) * Const ) - Min( Const ,MRS ) )", "choosing": "( RMSe * ( MUM - MLU ) )", "obj1": 0.7623762376237624, "obj2": 0.1392972481519816}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( BR / AMS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( CS / ( MUR - DS ) )", "obj1": 0.9108910891089109, "obj2": 0.03932440804674421}, {"determining": "( ( ( ( BR - CRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) / ( ( Const * MDR ) + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) * ( ( ( DDR / ACS ) + ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) / Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_RAM_Server * ARS ) ) ) )", "choosing": "( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RCSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) )", "obj1": 0.6396039603960396, "obj2": 0.2496529920206781}, {"determining": "( ( PN * ( ARS * AMS ) ) - MRS )", "choosing": "( Min( ( RMSe - CS ) ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.693069306930693, "obj2": 0.2005650831425966}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "Max( Max( Max( ( CS - RCSe ),Max( MUM,MUR ) ),Max( Min( RCSe ,MUM ),( RMSe / DS ) ) ),Max( ( ( DS * RRSe ) - ( MLU * RRSe ) ),( ( MUM - MLU ) + ( MUM / MUR ) ) ) )", "obj1": 0.699009900990099, "obj2": 0.17088953083151376}, {"determining": "( ( ( PN * Const ) - MRS ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7643564356435644, "obj2": 0.09638581727489405}, {"determining": "( ( Min( Max( ( Max( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) - ( AMS * MRS ) ) ) - Min( Max( Max( BR,FirstVNF_Mem ),Max( FirstVNF_CPU,RRS ) ) ,( Min( FirstVNF_CPU ,MRS ) * ( PN * RRS ) ) ) ),( Min( Min( ( FirstVNF_CPU + CRS ) ,Min( FirstVNF_CPU_Server ,MRS ) ) ,( Min( FirstVNF_Mem ,RRS ) / ( CRS * ARS ) ) ) - ( ( ( FirstVNF_RAM_Server + AMS ) + ( MRS - ACS ) ) + ( Max( MRS,FirstVNF_CPU_Server ) + ( FirstVNF_RAM + FirstVNF_CPU ) ) ) ) ) ,( ( ( Max( ( AMS - FirstVNF_Mem_Server ),( ACS + BR ) ) + Min( ( CRS - FirstVNF_CPU ) ,( CRS / FirstVNF_RAM_Server ) ) ) / Min( Max( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / PN ) ) ,( ( DDR * CRS ) + ( FirstVNF_CPU_Server * CRS ) ) ) ) + Max( ( ( ( FirstVNF_Mem / CRS ) / ( ARS - DDR ) ) - ( ( FirstVNF_RAM_Server * ACS ) * Min( AMS ,AMS ) ) ),( ( Min( Const ,FirstVNF_Mem_Server ) - ( FirstVNF_Mem_Server * MRS ) ) * ( Min( ARS ,AMS ) + Min( RRS ,DDR ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_CPU / DDR ) - Min( FirstVNF_CPU ,CRS ) ) + Min( ( FirstVNF_CPU - FirstVNF_Mem_Server ) ,( DDR + FirstVNF_RAM ) ) ) + ( ( ( PN * Const ) * ( MDR - FirstVNF_RAM ) ) * ( ( CRS * MDR ) - Min( AMS ,ARS ) ) ) ) / ( ( ( ( ACS / DDR ) / Max( PN,FirstVNF_Mem_Server ) ) + ( ( ARS / DDR ) - ( DDR * CRS ) ) ) - ( ( ( FirstVNF_CPU * Const ) / ( FirstVNF_CPU_Server - MRS ) ) / ( ( Const - FirstVNF_RAM_Server ) - ( BR * FirstVNF_Mem ) ) ) ) ) + ( Max( Min( ( ( FirstVNF_Mem_Server + PN ) + ( RRS * ARS ) ) ,( ( FirstVNF_Mem_Server + PN ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ),( ( ( RRS / FirstVNF_CPU_Server ) * Min( RRS ,ACS ) ) - ( ( RRS * ARS ) + ( Const - FirstVNF_CPU ) ) ) ) / ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * ( RRS * FirstVNF_CPU ) ) + Max( Min( Const ,FirstVNF_Mem ),( FirstVNF_RAM_Server - RRS ) ) ) - ( Min( Max( FirstVNF_Mem_Server,BR ) ,( Const + MRS ) ) + ( ( FirstVNF_RAM - MRS ) * ( CRS / RRS ) ) ) ) ) ) ) + ( ( ( ( Max( Max( ( CRS - FirstVNF_CPU_Server ),( FirstVNF_RAM * FirstVNF_CPU_Server ) ),( ( DDR / FirstVNF_Mem_Server ) * ( ACS + PN ) ) ) + ( Max( ( Const + BR ),Max( FirstVNF_CPU_Server,ACS ) ) * ( ( AMS - FirstVNF_RAM ) - ( CRS + AMS ) ) ) ) / ( Min( ( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) + ( DDR + AMS ) ) ,( Min( MDR ,CRS ) - ( BR - FirstVNF_CPU ) ) ) * ( Max( ( ARS / PN ),( CRS / RRS ) ) / Max( ( DDR - Const ),( DDR + FirstVNF_RAM_Server ) ) ) ) ) * ( ( Max( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Max( Const,MDR ) ),Min( ( Const * BR ) ,( DDR - FirstVNF_RAM_Server ) ) ) + ( ( ( BR / FirstVNF_CPU_Server ) / ( FirstVNF_RAM * BR ) ) / Max( ( FirstVNF_Mem / BR ),( MDR - FirstVNF_CPU_Server ) ) ) ) * Max( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) - ( BR * CRS ) ) * ( Max( Const,DDR ) - ( CRS - FirstVNF_Mem ) ) ),Min( ( ( FirstVNF_CPU_Server - CRS ) + ( FirstVNF_CPU_Server / CRS ) ) ,( ( CRS * DDR ) - ( MDR + FirstVNF_CPU_Server ) ) ) ) ) ) * Max( Min( ( ( ( ( FirstVNF_RAM - ARS ) / Max( CRS,FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server / CRS ) ) ) + ( Min( ( RRS + FirstVNF_Mem ) ,Min( FirstVNF_CPU_Server ,RRS ) ) + ( Max( AMS,BR ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) ) ,Min( Max( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU ) ,( BR + DDR ) ),( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / Min( AMS ,MDR ) ) ) ,( Max( Max( MRS,PN ),Max( ACS,DDR ) ) * ( Max( AMS,FirstVNF_Mem ) * ( CRS / RRS ) ) ) ) ),( Min( Max( ( Min( BR ,MRS ) + ( FirstVNF_Mem / PN ) ),Min( Max( FirstVNF_CPU_Server,BR ) ,Max( DDR,RRS ) ) ) ,Max( Min( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM + FirstVNF_RAM_Server ) ),( ( MRS * DDR ) + Min( Const ,MDR ) ) ) ) + Min( ( Min( ( FirstVNF_Mem + AMS ) ,( MDR * MRS ) ) / ( ( FirstVNF_RAM / CRS ) * Min( PN ,AMS ) ) ) ,( Max( Max( AMS,PN ),( PN + PN ) ) / Min( Max( RRS,MDR ) ,( FirstVNF_CPU_Server * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( MUC * ( CS + Max( MUC,( RMSe + ( Min( RCSe ,MUR ) - CS ) ) ) ) ) + RMSe )", "obj1": 0.9089108910891089, "obj2": 0.06595816404733341}, {"determining": "Min( Min( RRS ,DDR ) ,Max( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server * ( FirstVNF_RAM * FirstVNF_CPU ) ) / ( Const + ARS ) ) * AMS ) ),ARS ) )", "choosing": "( Min( DS ,MUM ) - ( Max( ( ( MLU / RRSe ) * ( CS - DS ) ),( Min( RMSe ,MUC ) / ( DS / RCSe ) ) ) * ( Max( ( RRSe * MUC ),Max( CS,RMSe ) ) - Min( Max( MUC,CS ) ,Min( MLU ,DS ) ) ) ) )", "obj1": 0.689108910891089, "obj2": 0.21891132188271678}, {"determining": "Min( Min( ( ( PN * Const ) - MRS ) ,DDR ) ,Max( Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ),ARS ) )", "choosing": "( ( Min( DS ,MLU ) - Min( DS ,MLU ) ) - ( RMSe - CS ) )", "obj1": 0.7029702970297029, "obj2": 0.15784627710362062}, {"determining": "( Max( ( FirstVNF_RAM_Server - RRS ),Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) * Max( ( FirstVNF_CPU / MRS ),( FirstVNF_RAM_Server + ( Const / Const ) ) ) )", "choosing": "( Max( ( DS + MUR ),Max( ( RCSe / MUM ),MUM ) ) * ( ( MUR / MLU ) + Min( RRSe ,MUC ) ) )", "obj1": 0.691089108910891, "obj2": 0.21635652901013508}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - DDR )", "choosing": "( Max( MLU,DS ) / ( MUR - DS ) )", "obj1": 0.996039603960396, "obj2": 0.0009786430359895468}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "Min( ( ( MUC + CS ) / ( DS / RRSe ) ) ,( ( DS / RRSe ) - ( RRSe + RMSe ) ) )", "obj1": 0.7485148514851485, "obj2": 0.14435226509609475}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( ( MUC - MLU ) - ( CS * MLU ) )", "obj1": 0.7346534653465346, "obj2": 0.14881442873169712}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( RMSe * ( MUC / ( MUC / RRSe ) ) )", "obj1": 0.7168316831683168, "obj2": 0.15681814863805107}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7425742574257426, "obj2": 0.14445240634290782}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( RMSe * ( MUC / RRSe ) )", "obj1": 0.7247524752475247, "obj2": 0.15083552222880167}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7207920792079208, "obj2": 0.1529711498679643}, {"determining": "( ( PN * Const ) - MRS )", "choosing": "( Min( DS ,MUM ) - ( RMSe - CS ) )", "obj1": 0.7207920792079208, "obj2": 0.1529711498679643}, {"determining": "( ( ( PN * Const ) - MRS ) - MRS )", "choosing": "( Min( DS ,MLU ) - Min( DS ,MLU ) )", "obj1": 0.7643564356435644, "obj2": 0.09638581727489405}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( RMSe * ( MUC / RRSe ) )", "obj1": 0.7247524752475247, "obj2": 0.15083552222880167}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN / Const ) - FirstVNF_RAM )", "choosing": "( MUR * ( MUC / RMSe ) )", "obj1": 0.998019801980198, "obj2": 0.0005848110533002987}, {"determining": "( ( PN * Const ) - Min( Min( AMS ,FirstVNF_Mem_Server ) ,( ARS * AMS ) ) )", "choosing": "( MUM - Min( DS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ARS / FirstVNF_Mem ) ,( PN / MDR ) ),( ( RRS / MRS ) + ( FirstVNF_Mem - MDR ) ) ) - ( ARS / BR ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),Max( Min( Max( ( CS - RCSe ),Min( MUM ,MUM ) ) ,Max( Max( MUC,DS ),( DS + RCSe ) ) ),( ( ( MUR * MUR ) + ( CS + RCSe ) ) / ( Max( MLU,MLU ) + ( MUC * MUC ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "Min( Max( ( Max( RRSe,MUM ) / ( MUM * CS ) ),Max( ( DS - MLU ),( MLU - RRSe ) ) ) ,( ( ( MUC * DS ) / ( RCSe + MUR ) ) / Max( ( MUC - CS ),( MUM - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,AMS ) / ( Const - ACS ) )", "choosing": "( ( MUM + RRSe ) + Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,FirstVNF_Mem_Server ) / Min( PN ,DDR ) ) - ( ( FirstVNF_Mem - BR ) + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "Min( ( DS * MLU ) ,( ( MUC + MUC ) * ( DS - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * ( MDR / RRS ) ) - Max( ( FirstVNF_RAM_Server + Const ),( ACS + BR ) ) ) - ( Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / FirstVNF_CPU ) ) - ( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_RAM / ACS ) ) ) )", "choosing": "( Max( RRSe,( RCSe * ( DS - MLU ) ) ) + ( ( Max( DS,DS ) - CS ) - Max( MUM,( MLU + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - BR ) - Max( RRS,DDR ) ) - Min( ( ACS / FirstVNF_CPU ) ,( FirstVNF_CPU_Server * ACS ) ) ) * ( ( ( RRS + FirstVNF_CPU ) / Max( ACS,MRS ) ) + Max( ( RRS / ACS ),( FirstVNF_CPU_Server - PN ) ) ) )", "choosing": "( ( MLU - ( MUM / CS ) ) * Max( RRSe,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem - ACS ) * BR ) - Min( ARS ,RRS ) )", "choosing": "( Max( ( Max( MUM,MLU ) * ( RRSe - MUR ) ),MUR ) / Min( CS ,( CS * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( BR,RRS ) ,( ACS / CRS ) ),( ( FirstVNF_Mem * CRS ) + ( ARS + MRS ) ) ) - ( ( Max( FirstVNF_Mem_Server,Const ) + ( RRS * AMS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) * ( FirstVNF_CPU / RRS ) ) ) )", "choosing": "( ( ( MLU / MUR ) - RRSe ) * ( CS + ( ( MUR * MUR ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( PN,MDR ) ,( FirstVNF_RAM - BR ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / Max( ARS,CRS ) ) ) ,( ( Max( MDR,MDR ) / ( CRS / AMS ) ) * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,Min( MDR ,MRS ) ) ) )", "choosing": "( ( CS * Max( Max( RMSe,RMSe ),( MUR * CS ) ) ) / Max( ( ( MUM - MUM ) - CS ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - MDR ) + ( CRS - ACS ) )", "choosing": "( Min( MLU ,( ( RRSe + MLU ) * RMSe ) ) * ( CS + Min( CS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( RRS,Const ) ) / ( ( FirstVNF_RAM_Server - Const ) - Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( ( RCSe / DS ) / Min( DS ,MUM ) ) + ( Max( MUM,RMSe ) + ( RMSe - RMSe ) ) ) + ( Min( Max( RMSe,MLU ) ,( RMSe + MUM ) ) - ( Max( MLU,CS ) + Max( MUM,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( FirstVNF_RAM + RRS ) )", "choosing": "( ( MUC - MLU ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( Min( PN ,AMS ) - MRS ) )", "choosing": "( ( MUC + MLU ) - Min( RCSe ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( FirstVNF_RAM + MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Min( PN ,BR ) ) - Max( FirstVNF_CPU_Server,MRS ) )", "choosing": "( ( MUC - MLU ) - ( CS * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - Min( Const ,MRS ) )", "choosing": "( ( MUC - MLU ) - ( RCSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Min( RRS ,DDR ) ,Max( RRS,ARS ) ),FirstVNF_Mem ) - ( FirstVNF_Mem + Const ) )", "choosing": "( ( DS + Min( RRSe ,MUM ) ) * ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU * ACS ) ) - Max( ( DDR + MDR ),( PN * CRS ) ) )", "choosing": "( Max( MLU,MUR ) / ( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}]}