{"1": [{"determining": "( ( FirstVNF_Mem + FirstVNF_Mem ) / ( ARS - FirstVNF_RAM ) )", "choosing": "( ( CS - MUM ) + ( MUR / MUR ) )", "obj1": 0.7960396039603961, "obj2": 0.16319208589343978}, {"determining": "( ( ( Min( Const ,ARS ) * Max( MRS,RRS ) ) + Max( ( CRS / DDR ),( RRS + MRS ) ) ) / ( ( ( BR / FirstVNF_Mem_Server ) * Max( Const,DDR ) ) * ( Min( MRS ,Const ) + ( FirstVNF_RAM_Server - Const ) ) ) )", "choosing": "( Max( Min( ( MUR / CS ) ,( RMSe * DS ) ),( ( RCSe * MUR ) / Min( RCSe ,MUM ) ) ) - ( ( ( DS * MUR ) / Min( MUR ,MLU ) ) - Max( ( RCSe / MLU ),Min( RMSe ,MUC ) ) ) )", "obj1": 0.8534653465346534, "obj2": 0.11662825307494426}, {"determining": "( ( BR / PN ) / Max( RRS,DDR ) )", "choosing": "( Min( DS ,MUM ) * ( MUM / DS ) )", "obj1": 0.7089108910891089, "obj2": 0.24522233707387078}, {"determining": "Min( Max( RRS,MRS ) ,( PN * RRS ) )", "choosing": "( Max( MLU,MUR ) - ( MUM / MUC ) )", "obj1": 0.7207920792079208, "obj2": 0.23792930720480626}, {"determining": "( Max( FirstVNF_CPU,FirstVNF_Mem ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MUR ) + Max( MUC,RCSe ) )", "obj1": 0.7069306930693069, "obj2": 0.25343397291639663}, {"determining": "( ( AMS - RRS ) * ( PN * DDR ) )", "choosing": "( ( RRSe - MUR ) * ( RCSe / DS ) )", "obj1": 0.7445544554455445, "obj2": 0.23807663442066593}, {"determining": "( Max( MDR,DDR ) / ( FirstVNF_RAM_Server * PN ) )", "choosing": "Max( ( RCSe + RCSe ),Max( RCSe,CS ) )", "obj1": 0.7326732673267327, "obj2": 0.2574800635858731}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ),( FirstVNF_Mem_Server * AMS ) )", "choosing": "Max( Max( RMSe,RRSe ),( RCSe + RRSe ) )", "obj1": 0.7227722772277227, "obj2": 0.24444972228896594}, {"determining": "( Min( ARS ,FirstVNF_CPU ) * ( AMS - FirstVNF_Mem ) )", "choosing": "Max( ( DS + RRSe ),( MUM / MUC ) )", "obj1": 0.7920792079207921, "obj2": 0.17430927943760827}, {"determining": "( ( DDR / CRS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / ( DS / MUR ) )", "obj1": 0.7227722772277227, "obj2": 0.24682443447852143}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_RAM ) * ( ARS * FirstVNF_Mem ) )", "choosing": "( ( CS * MLU ) - ( MUR - CS ) )", "obj1": 0.6831683168316832, "obj2": 0.24032808341192158}, {"determining": "( ( FirstVNF_RAM / ACS ) + Max( ACS,( Max( AMS,FirstVNF_Mem_Server ) / PN ) ) )", "choosing": "( Max( RMSe,( Max( ( MUM * Min( RCSe ,RRSe ) ),( ( Max( ( MUR + MUC ),MUM ) - RMSe ) * ( RMSe / ( MUM + RRSe ) ) ) ) - MLU ) ) - ( RCSe / RCSe ) )", "obj1": 0.7346534653465346, "obj2": 0.24073225839162604}, {"determining": "( ( FirstVNF_CPU - FirstVNF_Mem ) * ( BR / BR ) )", "choosing": "( Min( MUC ,CS ) - ( Min( MUC ,Min( ( ( ( RRSe + MUC ) + ( MLU + ( MLU + RCSe ) ) ) / ( RCSe / ( RCSe + DS ) ) ) ,RMSe ) ) * MUC ) )", "obj1": 0.6693069306930693, "obj2": 0.2447285364629732}, {"determining": "Max( Min( FirstVNF_RAM ,BR ),Min( DDR ,ARS ) )", "choosing": "Max( Max( CS,DS ),Max( RMSe,RCSe ) )", "obj1": 0.7207920792079208, "obj2": 0.2546082085889436}, {"determining": "Min( ( PN * DDR ) ,Max( BR,PN ) )", "choosing": "( ( RCSe - RRSe ) * ( RMSe + MUR ) )", "obj1": 0.7346534653465346, "obj2": 0.24359785790145425}, {"determining": "( ( ARS / FirstVNF_CPU ) / Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MUM - MLU ),( RMSe * RMSe ) )", "obj1": 0.7168316831683168, "obj2": 0.2426146146001268}, {"determining": "( ( CRS * Const ) * ( ACS * FirstVNF_Mem ) )", "choosing": "( ( RCSe - CS ) * ( MUC + MLU ) )", "obj1": 0.697029702970297, "obj2": 0.2538604451156975}, {"determining": "Max( ( AMS * MRS ),( FirstVNF_Mem_Server / Const ) )", "choosing": "( Min( RMSe ,MUM ) * Min( RRSe ,MUR ) )", "obj1": 0.7168316831683168, "obj2": 0.24028454162601962}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - FirstVNF_RAM ) + ( PN + FirstVNF_CPU_Server ) )", "choosing": "( ( CS + RMSe ) * ( MUR * CS ) )", "obj1": 0.7445544554455445, "obj2": 0.24283949859365178}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem ) + ( FirstVNF_Mem + ACS ) )", "choosing": "( ( MUR / RRSe ) - ( RCSe * DS ) )", "obj1": 0.7029702970297029, "obj2": 0.24671190706027768}, {"determining": "Max( ( FirstVNF_Mem_Server + DDR ),( RRS - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,Max( ( Max( Max( ( ( MLU - MUM ) * MLU ),RRSe ),CS ) + RCSe ),RMSe ) ) + ( MUR * RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.25244220935508255}, {"determining": "( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU - ( ACS * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM - PN ) )", "choosing": "( Min( ( ( ( ( Max( MUC,DS ) - RMSe ) + ( ( CS * Max( MUC,DS ) ) / ( ( CS / MLU ) / Min( MLU ,DS ) ) ) ) - ( DS / Max( RRSe,RCSe ) ) ) - Min( ( RRSe * DS ) ,Min( RRSe ,DS ) ) ) ,RRSe ) - ( RRSe / RCSe ) )", "obj1": 0.7247524752475247, "obj2": 0.24543691870744494}, {"determining": "( Min( RRS ,DDR ) / ( FirstVNF_Mem + DDR ) )", "choosing": "( Max( MLU,DS ) / Min( DS ,RMSe ) )", "obj1": 0.7306930693069307, "obj2": 0.27653449888259474}, {"determining": "Min( ( FirstVNF_CPU_Server + DDR ) ,Min( PN ,Min( ( Max( MDR,FirstVNF_CPU_Server ) * DDR ) ,Const ) ) )", "choosing": "( ( CS / MUC ) / ( ( ( DS + ( Max( DS,CS ) - MUC ) ) + MUR ) * MLU ) )", "obj1": 0.7524752475247525, "obj2": 0.24319671682312338}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - ( MDR - FirstVNF_Mem ) )", "choosing": "Max( ( RCSe * MUM ),( MUM + MUM ) )", "obj1": 0.7465346534653465, "obj2": 0.23947996385772324}, {"determining": "( ( Const - Min( Const ,PN ) ) * Min( MRS ,ACS ) )", "choosing": "( ( Max( MUC,DS ) * MUR ) - ( RRSe / MUR ) )", "obj1": 0.7465346534653465, "obj2": 0.20446810424354625}, {"determining": "Min( Min( RRS ,( MRS + FirstVNF_CPU_Server ) ) ,( RRS * FirstVNF_CPU ) )", "choosing": "( ( MUR * RRSe ) / Min( MUM ,RCSe ) )", "obj1": 0.7227722772277227, "obj2": 0.1985404808361048}, {"determining": "( ( MDR / MDR ) / Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( CS + MUC ) + ( RMSe * DS ) )", "obj1": 0.7504950495049505, "obj2": 0.21865796560697195}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) + ( ARS + FirstVNF_Mem ) )", "choosing": "Max( ( MLU + MLU ),( CS * MLU ) )", "obj1": 0.7643564356435644, "obj2": 0.23261905530495644}, {"determining": "( ( CRS * CRS ) - ( RRS * MDR ) )", "choosing": "( ( RCSe + DS ) / Min( MLU ,MUM ) )", "obj1": 0.7306930693069307, "obj2": 0.22953592030946385}, {"determining": "Min( ( DDR + Const ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe * RMSe ) - ( RRSe + DS ) )", "obj1": 0.805940594059406, "obj2": 0.16834416421044737}, {"determining": "Max( ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) - Min( AMS ,RRS ) ),Min( ( CRS * BR ) ,( FirstVNF_Mem + DDR ) ) )", "choosing": "( ( ( MLU + CS ) + ( CS / RMSe ) ) / Max( Max( RMSe,MUM ),( RCSe * MUR ) ) )", "obj1": 0.7247524752475247, "obj2": 0.23791983468031586}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) + ( MRS + MDR ) ) / ( ( Const + MRS ) + ( PN + BR ) ) )", "choosing": "( ( DS / RRSe ) / ( ( MUR + MLU ) * MUC ) )", "obj1": 0.7148514851485148, "obj2": 0.23793547975685747}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( AMS + DDR ) ,( CRS / PN ) ) + ( Max( FirstVNF_Mem,DDR ) + ( MDR / CRS ) ) )", "choosing": "( ( ( CS + MUM ) / ( RMSe - RMSe ) ) * ( ( MLU + RCSe ) + ( MUM - RCSe ) ) )", "obj1": 0.7227722772277227, "obj2": 0.24104228571095887}, {"determining": "( Min( AMS ,PN ) + Min( BR ,BR ) )", "choosing": "( ( ( CS * MUC ) * ( MLU / RRSe ) ) + ( ( RCSe + RCSe ) - Min( MUM ,RRSe ) ) )", "obj1": 0.7247524752475247, "obj2": 0.23494535507097142}, {"determining": "( Min( ( FirstVNF_Mem + ( ( DDR * MDR ) - FirstVNF_RAM_Server ) ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) / Max( Min( Const ,MDR ),Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( MUC + ( DS * Min( Min( ( ( DS * RRSe ) + MUC ) ,MUM ) ,Min( RMSe ,( CS - Max( ( MUR / MUM ),MUR ) ) ) ) ) ) ,Max( ( CS + RRSe ),Max( MUC,MUC ) ) )", "obj1": 0.7029702970297029, "obj2": 0.24527698467084835}, {"determining": "( ( ( ( ( MDR * ( AMS * Const ) ) - FirstVNF_Mem_Server ) + Const ) / ( ARS * FirstVNF_Mem ) ) / ( ( AMS - RRS ) * Min( FirstVNF_RAM ,Const ) ) )", "choosing": "( ( DS - Min( RMSe ,( DS + MUC ) ) ) - ( MUC + MUC ) )", "obj1": 0.6871287128712872, "obj2": 0.24000753871231592}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,PN ),( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) - ( ( CRS / PN ) - Max( DDR,( AMS - ( PN * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS + Max( RRSe,( DS / RMSe ) ) ) + Min( ( DS * MUM ) ,Min( RRSe ,DS ) ) )", "obj1": 0.7584158415841584, "obj2": 0.19425163293627806}, {"determining": "Max( ( MRS - ACS ),( BR + ( DDR * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUM + RRSe ) + CS ) ,( DS * MLU ) )", "obj1": 0.7683168316831683, "obj2": 0.1777426416750072}, {"determining": "Max( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ),( DDR + FirstVNF_RAM ) )", "choosing": "Min( ( CS + ( MUR / MUM ) ) ,( Max( DS,MUR ) / RRSe ) )", "obj1": 0.7504950495049505, "obj2": 0.2547011121047953}, {"determining": "Max( ( FirstVNF_RAM_Server - ( ACS + FirstVNF_RAM_Server ) ),Min( DDR ,DDR ) )", "choosing": "( ( ( DS + MUC ) * Min( CS ,MUR ) ) * ( Max( DS,MUR ) + Min( DS ,DS ) ) )", "obj1": 0.7465346534653465, "obj2": 0.21319913691649423}, {"determining": "( ( ( MDR / Max( FirstVNF_Mem,CRS ) ) * Min( ARS ,ARS ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( Max( MUC,MLU ) + Min( DS ,CS ) ) + ( ( ( ( MUM / RCSe ) / MUC ) - ( MUR / ( MUM * ( MUC - Min( MUM ,MUM ) ) ) ) ) + ( CS + CS ) ) )", "obj1": 0.7366336633663366, "obj2": 0.2052684316062466}, {"determining": "( ( Min( FirstVNF_Mem ,AMS ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - MLU ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) )", "obj1": 0.7207920792079208, "obj2": 0.21309213076301906}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) / ( ACS - FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_CPU_Server,PN ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( RCSe,CS ) + ( Max( CS,RRSe ) - Min( RCSe ,RRSe ) ) )", "obj1": 0.6732673267326733, "obj2": 0.24127609621848203}, {"determining": "( ( Max( CRS,FirstVNF_RAM_Server ) - MDR ) + ( FirstVNF_Mem * DDR ) )", "choosing": "( Min( RRSe ,( MUM - RCSe ) ) / ( CS * MUR ) )", "obj1": 0.7346534653465346, "obj2": 0.25392886864015}, {"determining": "Max( Max( AMS,AMS ),Min( BR ,BR ) )", "choosing": "( Min( ( MUM / DS ) ,RCSe ) / Min( MUR ,Min( CS ,MUM ) ) )", "obj1": 0.7405940594059406, "obj2": 0.2364751968047032}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * MUC ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,Min( FirstVNF_Mem ,PN ) ) ,( ( DDR + FirstVNF_RAM_Server ) / ARS ) )", "choosing": "( ( ( MUM - RRSe ) * ( MUC - MLU ) ) - ( ( MUR - CS ) + ( RMSe / RCSe ) ) )", "obj1": 0.7188118811881188, "obj2": 0.24599820622464968}, {"determining": "( ( MDR + ( RRS * ( FirstVNF_CPU_Server - ( FirstVNF_CPU + MRS ) ) ) ) + Min( AMS ,DDR ) )", "choosing": "( ( ( MUC - ( RRSe / ( RMSe * MUR ) ) ) + Max( DS,CS ) ) * ( ( CS / MUR ) + ( MUM - MUR ) ) )", "obj1": 0.7207920792079208, "obj2": 0.23447702313011878}, {"determining": "( Min( ( ( DDR - ( AMS / CRS ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * Max( ( AMS + CRS ),( PN - CRS ) ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( MUR * CS ) ,( RMSe / CS ) ) )", "obj1": 0.8891089108910891, "obj2": 0.0983409402620279}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( Max( MUR,MUC ) - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU_Server + Min( ( FirstVNF_RAM + MRS ) ,( FirstVNF_RAM_Server + MRS ) ) ),( AMS - ( BR - MRS ) ) )", "choosing": "Min( ( ( MLU + MLU ) * MUM ) ,( RMSe / ( RRSe / MLU ) ) )", "obj1": 0.7188118811881188, "obj2": 0.2472442159411347}, {"determining": "( Min( ( PN + ARS ) ,Min( RRS ,FirstVNF_Mem_Server ) ) / ( ( RRS / FirstVNF_Mem_Server ) + Max( DDR,ACS ) ) )", "choosing": "Min( Min( ( RCSe - MUM ) ,( RCSe / CS ) ) ,( DS / MUC ) )", "obj1": 0.7346534653465346, "obj2": 0.2414649331597905}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) )", "choosing": "( Max( ( RMSe / MUC ),( MUM * MUR ) ) * Min( ( DS * MLU ) ,( MUM * RCSe ) ) )", "obj1": 0.7524752475247525, "obj2": 0.20898151349687616}, {"determining": "( ( ( FirstVNF_CPU_Server / PN ) * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( ( ( ( MUM / Min( MLU ,CS ) ) / Min( ( CS - RCSe ) ,MUR ) ) + MUM ) / RMSe ) ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ),( FirstVNF_Mem + ARS ) )", "choosing": "Min( ( ( MUR * RMSe ) / Max( DS,MUR ) ) ,( Max( DS,MUM ) * ( CS + MUM ) ) )", "obj1": 0.700990099009901, "obj2": 0.26147096200180825}, {"determining": "( ( RRS + FirstVNF_CPU_Server ) / Max( ( MDR / ( DDR / FirstVNF_Mem_Server ) ),DDR ) )", "choosing": "Max( ( ( ( Max( RRSe,RCSe ) / ( ( MUC * ( ( RMSe + MLU ) / MUM ) ) / ( CS / DS ) ) ) / ( MUR * ( Max( Min( MUR ,MUM ),CS ) / CS ) ) ) - ( CS - RCSe ) ),( RRSe * DS ) )", "obj1": 0.7207920792079208, "obj2": 0.22802688942981852}, {"determining": "Max( ( Min( FirstVNF_Mem_Server ,MRS ) / ( RRS * DDR ) ),Max( ( FirstVNF_Mem + RRS ),( Const * PN ) ) )", "choosing": "Min( ( RRSe / ( MUC / MUM ) ) ,Min( ( RMSe / MLU ) ,( RRSe - MUC ) ) )", "obj1": 0.7326732673267327, "obj2": 0.23053389480822564}, {"determining": "( ( FirstVNF_RAM - CRS ) + ( FirstVNF_CPU * CRS ) )", "choosing": "Min( ( Min( MLU ,RCSe ) + Max( MUR,RCSe ) ) ,( ( MUR - MUC ) / Max( RRSe,MLU ) ) )", "obj1": 0.7108910891089109, "obj2": 0.24374250303998943}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) / ( ACS / Max( MRS,BR ) ) )", "choosing": "( ( Max( Min( DS ,MLU ),( DS + MUM ) ) / ( ( MUC + RRSe ) - ( MLU + MUC ) ) ) / ( Max( ( RCSe + MUR ),( DS - RRSe ) ) + Min( ( RCSe / CS ) ,( MUR * RCSe ) ) ) )", "obj1": 0.7227722772277227, "obj2": 0.2377642722821759}, {"determining": "( ( ARS - DDR ) + ( ( ACS + AMS ) + ACS ) )", "choosing": "Min( ( MUC / ( MUM * Min( MLU ,MUM ) ) ) ,Max( DS,Min( RCSe ,( RMSe + MUR ) ) ) )", "obj1": 0.7306930693069307, "obj2": 0.24215464863818692}, {"determining": "( Max( FirstVNF_Mem_Server,( MRS + Max( CRS,ACS ) ) ) / Min( MRS ,FirstVNF_RAM ) )", "choosing": "Max( Max( ( Max( RCSe,RRSe ) / Min( RCSe ,MUR ) ),( Min( CS ,RCSe ) / Min( CS ,MUC ) ) ),Max( Min( Max( RCSe,MLU ) ,( MUR - MLU ) ),( ( RRSe * RCSe ) + ( CS / RCSe ) ) ) )", "obj1": 0.7128712871287128, "obj2": 0.25512006390940084}, {"determining": "( ( ARS + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + MRS ) ) / ( CRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( Max( MUC,MUR ) * Min( MUC ,MLU ) ) / ( ( RCSe - MUR ) / ( RMSe * RCSe ) ) ) ,Max( ( Min( MUC ,MUM ) * Min( MUM ,RCSe ) ),( ( MUR * MUC ) + Max( MUC,MUC ) ) ) )", "obj1": 0.7425742574257426, "obj2": 0.2450536330277464}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server - PN ) * Max( FirstVNF_Mem_Server,DDR ) ) / ( ( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) / ( ( FirstVNF_RAM * FirstVNF_Mem ) / Min( CRS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( CS + MLU ) * ( ( MUC / RCSe ) * Max( RCSe,RRSe ) ) ) ,( ( ( RRSe + RCSe ) + ( MUM + MUM ) ) * Max( ( MUR * MUC ),( RRSe / RMSe ) ) ) )", "obj1": 0.7306930693069307, "obj2": 0.240975086342084}, {"determining": "( Max( Const,Const ) + Min( ( ARS / MDR ) ,FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( RMSe * RMSe ) ,Max( RCSe,MUR ) ) + Min( ( MLU * MUR ) ,( MUC - MUR ) ) ) ,( ( Max( MUM,DS ) / ( RRSe - CS ) ) / Max( ( DS / MUC ),Min( MUM ,MUR ) ) ) )", "obj1": 0.6831683168316832, "obj2": 0.2504733391646968}, {"determining": "Max( ( FirstVNF_Mem - FirstVNF_RAM_Server ),( PN - MRS ) )", "choosing": "Max( ( ( RCSe + Max( RCSe,MUC ) ) / Min( Min( MUC ,RCSe ) ,( RMSe * MUC ) ) ),( ( ( RMSe / RMSe ) + Min( MLU ,DS ) ) * ( Max( RMSe,MLU ) / ( MLU + RMSe ) ) ) )", "obj1": 0.902970297029703, "obj2": 0.09032343018269536}, {"determining": "Min( Min( ( Min( CRS ,RRS ) + Min( ARS ,AMS ) ) ,Min( ( MRS / FirstVNF_RAM ) ,( ARS + MDR ) ) ) ,Max( Min( ( DDR + RRS ) ,Max( FirstVNF_Mem_Server,ARS ) ),( ( MDR - ARS ) * ( ARS * MDR ) ) ) )", "choosing": "( Min( ( Max( CS,RRSe ) / ( CS + RCSe ) ) ,( ( RRSe / MLU ) * ( MUM / ( ( MUC - MUR ) + ( Max( ( RMSe * RCSe ),RMSe ) + MUM ) ) ) ) ) - ( ( ( MUM * MUR ) - ( MUR + RMSe ) ) + ( Min( MLU ,MUR ) + ( RRSe - CS ) ) ) )", "obj1": 0.700990099009901, "obj2": 0.24032189793753517}, {"determining": "( Max( ( AMS * ( Const * FirstVNF_RAM ) ),BR ) + ( AMS + ( FirstVNF_CPU_Server * MRS ) ) )", "choosing": "Max( ( Min( ( RCSe / RRSe ) ,( MUR + DS ) ) + ( ( RMSe * RCSe ) * Min( RCSe ,RMSe ) ) ),( Min( ( MUC / RMSe ) ,( RMSe + RCSe ) ) * ( ( MUR / RMSe ) - ( RMSe - RCSe ) ) ) )", "obj1": 0.7287128712871287, "obj2": 0.23805546587042606}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MRS * MRS ) + BR ) ,Max( FirstVNF_CPU_Server,RRS ) )", "choosing": "( ( MLU + RCSe ) + ( MUC - RRSe ) )", "obj1": 0.7366336633663366, "obj2": 0.25693238185489975}, {"determining": "Min( ( PN * Max( ( MDR / ( ( DDR - DDR ) + ( PN / Max( Min( PN ,RRS ),( ACS - MDR ) ) ) ) ),Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ,( BR / PN ) )", "choosing": "( Min( MUM ,MUC ) - Min( ( ( MUC - ( MUC * RRSe ) ) / Min( DS ,( ( MUM + RMSe ) * MUC ) ) ) ,( RMSe / MLU ) ) )", "obj1": 0.7306930693069307, "obj2": 0.2630634830208255}, {"determining": "( ( ( BR - BR ) * FirstVNF_Mem ) - ( BR + RRS ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * Min( MUR ,Max( ( CS - Max( CS,MUM ) ),Min( ( CS * RMSe ) ,( MUC - RRSe ) ) ) ) ) ,( RCSe * MUC ) ),Min( RMSe ,( ( MUC - ( ( Min( RCSe ,MUR ) + RMSe ) * ( MLU - MUC ) ) ) / MUC ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.2445846006019251}, {"determining": "( ( ACS - Max( ( MDR - ( ( FirstVNF_RAM - MDR ) - ARS ) ),AMS ) ) - ( ( ( BR * FirstVNF_CPU ) / ( BR - MRS ) ) + ( Max( BR,FirstVNF_RAM_Server ) - ( MDR + ACS ) ) ) )", "choosing": "( Max( MUM,MUM ) - Min( MLU ,RMSe ) )", "obj1": 0.7445544554455445, "obj2": 0.17871802528905986}, {"determining": "Max( ( ARS / Max( ( ( FirstVNF_Mem - DDR ) / ( FirstVNF_Mem - MRS ) ),PN ) ),Max( ( ( Const + MDR ) - Min( DDR ,MDR ) ),( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( RRS,Const ) ) ) )", "choosing": "( ( ( Min( DS ,RRSe ) + DS ) + Min( ( MLU * MUM ) ,( RMSe / RRSe ) ) ) * ( MUR - MUR ) )", "obj1": 0.7405940594059406, "obj2": 0.24395599571899776}, {"determining": "Max( ( ( ( Const - DDR ) / ( FirstVNF_RAM - DDR ) ) * ( ( ( ARS / FirstVNF_CPU_Server ) * CRS ) - ( ( Const / PN ) + BR ) ) ),Min( ( ( FirstVNF_RAM / MRS ) - ( FirstVNF_RAM + Const ) ) ,( Max( CRS,FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe - MUR ) - ( MUR / DS ) ) / ( ( MLU - MUM ) / ( CS + CS ) ) ) * ( ( Min( RMSe ,MUR ) * ( MLU / MLU ) ) * ( ( MUC - Max( MUC,MLU ) ) - ( RMSe + MUM ) ) ) )", "obj1": 0.6851485148514852, "obj2": 0.24272685096515545}, {"determining": "Max( ( ( RRS / Min( CRS ,DDR ) ) - ( MDR * CRS ) ),( Max( FirstVNF_Mem_Server,ARS ) * DDR ) )", "choosing": "Max( Min( MLU ,MLU ),Max( ( DS * DS ),Min( MUM ,MUR ) ) )", "obj1": 0.7089108910891089, "obj2": 0.24226775950847682}, {"determining": "Min( Min( CRS ,ACS ) ,( ( FirstVNF_Mem - Min( FirstVNF_Mem ,CRS ) ) / ( Const * ( RRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Min( RMSe ,RCSe ) + ( RCSe + MUC ) ) - ( MLU * MUR ) ) * ( ( Max( RCSe,RMSe ) - ( RRSe / MUM ) ) / Max( ( RMSe / RCSe ),( MUM + MUR ) ) ) )", "obj1": 0.697029702970297, "obj2": 0.2442024308091124}, {"determining": "( Max( ACS,MRS ) * ( PN - ( ( FirstVNF_Mem * CRS ) / DDR ) ) )", "choosing": "( ( ( Max( CS,MUR ) + ( DS * MUM ) ) / Max( ( RCSe + RRSe ),( CS * MUC ) ) ) / Min( ( Min( MUM ,RRSe ) + Min( RCSe ,( ( RMSe * MUR ) / Max( ( CS - MUR ),( DS * MUC ) ) ) ) ) ,( ( MUC / DS ) / ( CS / MUM ) ) ) )", "obj1": 0.7168316831683168, "obj2": 0.24545729115334947}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),Min( FirstVNF_RAM ,Max( ( BR / Const ),FirstVNF_RAM ) ) ) ) )", "choosing": "Max( ( Max( RMSe,( ( MUR * MUR ) * Max( ( RMSe / DS ),DS ) ) ) * MUC ),( DS / MUM ) )", "obj1": 0.697029702970297, "obj2": 0.22515581387821473}, {"determining": "( Max( AMS,DDR ) + Min( MRS ,( ( ARS * FirstVNF_CPU_Server ) - PN ) ) )", "choosing": "( ( RMSe / ( ( RRSe / RCSe ) / Min( MLU ,RMSe ) ) ) - ( ( Max( CS,RCSe ) + Max( RRSe,RMSe ) ) + RMSe ) )", "obj1": 0.7306930693069307, "obj2": 0.23546891344233112}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( Min( Const ,PN ) * ( Max( FirstVNF_RAM_Server,MDR ) * Max( Max( FirstVNF_RAM_Server,ARS ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( CS * Min( MUC ,MUM ) ) - ( RCSe / MUM ) )", "obj1": 0.7227722772277227, "obj2": 0.2355801759481385}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( Min( Min( BR ,Max( FirstVNF_CPU_Server,DDR ) ) ,MDR ) - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( ( Min( RRSe ,( MLU / RMSe ) ) / ( RRSe / ( MUC / Max( RRSe,DS ) ) ) ),MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR - ( MDR * FirstVNF_RAM_Server ) ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) - Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,( ARS / Const ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( RCSe - RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + ( Min( MUC ,RCSe ) * ( RMSe + DS ) ) ) )", "obj1": 0.7821782178217822, "obj2": 0.16239188897462117}, {"determining": "( ( CRS / Const ) + Max( ARS,MDR ) )", "choosing": "Min( Max( ( ( MUM - RMSe ) / Min( MUR ,RMSe ) ),( ( RMSe + MUC ) - ( MUR + MUM ) ) ) ,( ( ( RRSe * MUR ) + ( MUR - MLU ) ) / Max( ( RCSe * MUM ),( RRSe + CS ) ) ) )", "obj1": 0.7306930693069307, "obj2": 0.24901272533399674}, {"determining": "( ( ARS - MRS ) - Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) / Min( DS ,( ( DS - RMSe ) / MUM ) ) )", "obj1": 0.6811881188118812, "obj2": 0.2688230553965489}, {"determining": "( ( Max( FirstVNF_Mem_Server,AMS ) + PN ) + ( PN + FirstVNF_Mem ) )", "choosing": "( ( ( ( DS + MUC ) + ( MUR / DS ) ) / ( ( MUC / MUM ) / Min( MLU ,CS ) ) ) + ( ( ( RCSe + MUR ) * Min( DS ,MUC ) ) + Min( Min( MLU ,CS ) ,( MUC / MUM ) ) ) )", "obj1": 0.693069306930693, "obj2": 0.26886932973537536}], "2": [{"determining": "( ( RRS - MRS ) - Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) / Min( RCSe ,( ( DS - RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - Min( RRS ,DDR ) )", "choosing": "Max( ( RCSe * ( Max( MLU,DS ) / Min( DS ,RMSe ) ) ),( MUM + MUM ) )", "obj1": 0.6237623762376238, "obj2": 0.26356333796434606}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + Max( MUR,MUC ) ) )", "obj1": 0.9188118811881189, "obj2": 0.03370946589213498}, {"determining": "( Min( ( ( DDR - ( RRS * ( FirstVNF_CPU_Server - ( FirstVNF_CPU + MRS ) ) ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( RMSe * MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 0.7029702970297029, "obj2": 0.1642106769722809}, {"determining": "( ( Min( FirstVNF_Mem ,Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - ( ( DS / MUM ) / ( MUR * MUC ) ) ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) )", "obj1": 0.9762376237623762, "obj2": 0.009453263859827643}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU - ( ACS * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM - PN ) )", "choosing": "( Min( ( ( ( ( Max( MUC,DS ) - RMSe ) + ( ( CS * Max( MUC,DS ) ) / ( ( CS / MLU ) / Min( MLU ,DS ) ) ) ) - ( DS / Max( RRSe,RCSe ) ) ) - Min( ( RRSe * DS ) ,Min( RRSe ,DS ) ) ) ,RRSe ) - ( RRSe / RCSe ) )", "obj1": 0.80990099009901, "obj2": 0.1400525617551855}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 0.9168316831683169, "obj2": 0.07138565323995955}, {"determining": "( ( FirstVNF_RAM - ( DDR / FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * CRS ) )", "choosing": "Min( ( Min( MLU ,RCSe ) + Max( MUR,RCSe ) ) ,( Max( Min( MUR ,MUM ),CS ) / CS ) )", "obj1": 0.7584158415841584, "obj2": 0.14727422493315973}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( Max( ACS,MRS ) * ( PN - Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),( DDR - DDR ) ) ) ) ) )", "choosing": "( ( ( Max( CS,MUR ) + ( DS * MUM ) ) / Max( ( RCSe + RRSe ),( CS * MUC ) ) ) / Min( ( DS + ( RMSe + RCSe ) ) ,( ( MUC / DS ) / ( MUC * RCSe ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.1494510878819981}, {"determining": "( ( ( BR - BR ) * FirstVNF_Mem ) - ( BR + RRS ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * Min( MUR ,Max( ( CS - Max( CS,MUM ) ),Min( ( CS * RMSe ) ,( MUC - RRSe ) ) ) ) ) ,( RCSe * MUC ) ),Min( RMSe ,( ( MUC - ( ( Min( RCSe ,MUR ) + RMSe ) * ( MLU - MUC ) ) ) / MUC ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.24189560398027649}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( Max( ( AMS * ( Const * FirstVNF_RAM ) ),BR ) + ( AMS + ( FirstVNF_CPU_Server * MRS ) ) ) ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( MUC * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.8455445544554455, "obj2": 0.11553117499336797}, {"determining": "Min( ( PN - BR ) ,( Min( ACS ,( ( FirstVNF_RAM_Server - CRS ) * FirstVNF_RAM ) ) * Min( MRS ,ACS ) ) )", "choosing": "( ( MUR * ( ( DS * MUR ) - ( Min( RRSe ,( ( RRSe / MUR ) + RRSe ) ) / MUR ) ) ) / ( RRSe + DS ) )", "obj1": 0.8198019801980198, "obj2": 0.11915494685151667}, {"determining": "( ( ( FirstVNF_RAM - MRS ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RCSe ,RRSe ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.8752475247524752, "obj2": 0.10659149848921458}, {"determining": "Min( ( DDR + Const ) ,( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe * RMSe ) - ( RRSe + RCSe ) )", "obj1": 0.8871287128712871, "obj2": 0.09552483630899643}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Max( MDR,AMS ) * ( ARS - CRS ) ) )", "choosing": "( Max( ( RMSe / MUC ),( MUM * MUR ) ) * Max( ( RCSe + MUM ),( RMSe * MUR ) ) )", "obj1": 0.6752475247524753, "obj2": 0.22737863719371315}, {"determining": "( ( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - ( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) ) ) ,RMSe ) )", "obj1": 0.693069306930693, "obj2": 0.21481390015000063}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "Max( ( FirstVNF_CPU * Min( FirstVNF_CPU_Server ,AMS ) ),( Min( MDR ,PN ) + CRS ) )", "choosing": "( ( ( MUM - RMSe ) / ( RRSe - CS ) ) * ( ( RRSe + RMSe ) - ( MLU / MUR ) ) )", "obj1": 0.6653465346534654, "obj2": 0.2376004310649183}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Max( ( CS - MLU ),Min( DS ,MUM ) ) ) )", "obj1": 0.900990099009901, "obj2": 0.08824188469188476}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) / ( ACS - FirstVNF_CPU_Server ) ),Max( Max( FirstVNF_CPU_Server,PN ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( RCSe,CS ) + ( Max( CS,RRSe ) - Min( RCSe ,RRSe ) ) )", "obj1": 0.6732673267326733, "obj2": 0.24127609621848203}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * MUC ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ( AMS / CRS ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( Max( MUR,MUC ) - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / PN ) * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( ( ( ( MUM / Min( MLU ,CS ) ) / Min( ( CS - RCSe ) ,MUR ) ) + MUM ) / RMSe ) ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( Min( Min( BR ,Max( FirstVNF_CPU_Server,DDR ) ) ,MDR ) - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( ( Min( RRSe ,( MLU / RMSe ) ) / ( RRSe / ( MUC / Max( RRSe,DS ) ) ) ),MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - ( MRS / ( PN * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( ( ( DS + DS ) - Max( MUC,CS ) ) + ( ( MUR / ( Min( RRSe ,RCSe ) + ( ( MUM * MUR ) / RMSe ) ) ) - ( Min( RCSe ,( ( MUM - MLU ) - MUC ) ) / DS ) ) ) ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( DS / ( CS * MUM ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe - MUR ) / Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - ( Const / MDR ) )", "choosing": "( ( ( Max( ( RCSe + CS ),( MUM + MUM ) ) + MUR ) - DS ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ACS / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( Max( MLU,DS ) / Min( DS ,RMSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,( ( MUR * RRSe ) / Min( MUM ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( AMS,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( ( ( ( CS * MUC ) * ( MLU / RRSe ) ) + ( ( RCSe + RCSe ) - Min( MUM ,RRSe ) ) ) / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) * Min( ARS ,ARS ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( MUM + Min( DS ,CS ) ) + Max( ( MUM * MUR ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( AMS,AMS ),Min( BR ,BR ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( Min( ( MUM / DS ) ,RCSe ) / Min( MUR ,Min( CS ,MUM ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS / RRS ) * ACS ) / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( CS * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ( AMS / CRS ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ( AMS / Const ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,( RMSe * CS ) ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( Max( ( Min( RRS ,FirstVNF_RAM_Server ) / ( AMS - DDR ) ),( AMS - ( BR - MRS ) ) ) + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( RMSe - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( Max( MUR,MUC ) - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_RAM_Server + MRS ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( MLU - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( RRS / FirstVNF_Mem_Server ) + Max( DDR,ACS ) ) )", "choosing": "Min( Min( ( CS - MUM ) ,( RCSe / CS ) ) ,( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ( PN + ARS ) ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( RCSe,( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - Min( FirstVNF_Mem ,DDR ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( ( DS * MLU ) ,( MUM * RCSe ) ) - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) )", "choosing": "( MUC * Min( ( DS * MLU ) ,( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) ) * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RMSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( Max( DS,MUM ) * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( Min( ( ( Max( MUC,MUR ) * Min( MUC ,MLU ) ) / ( ( RCSe - MUR ) / ( RMSe * RCSe ) ) ) ,Max( ( Min( MUC ,MUM ) * Min( MUM ,RCSe ) ),( ( MUR * MUC ) + Max( MUC,MUC ) ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( ARS + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + MRS ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( ( Max( MUC,MUR ) * Min( MUC ,MLU ) ) / ( ( RCSe - MUR ) / ( RMSe * RCSe ) ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( RRSe,Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ARS ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,( Max( MUM,DS ) / ( RRSe - CS ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( ( MUM / Max( Min( MLU ,MUM ),RMSe ) ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ARS,( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / ( MUM + RCSe ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( Min( Min( BR ,Max( FirstVNF_CPU_Server,DDR ) ) ,MDR ) - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( ( Min( RRSe ,( MLU / RMSe ) ) / ( RRSe / ( MUC / Max( RRSe,DS ) ) ) ),MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( Max( MLU,Max( MLU,( MUC / Min( ( RRSe - RRSe ) ,MUM ) ) ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( Const,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( Max( MLU,Max( MLU,( MUC / Min( ( RRSe - RCSe ) ,Max( MLU,RRSe ) ) ) ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - ( Max( FirstVNF_Mem_Server,AMS ) + PN ) ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * Min( MLU ,CS ) ) ) / Min( DS ,( ( DS - RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Max( ACS,MRS ) * ( PN - ( ( FirstVNF_Mem * ( ( ( MDR / FirstVNF_Mem ) * Min( ARS ,ARS ) ) - Min( FirstVNF_CPU_Server ,PN ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( CS,MUR ) + ( DS * MUM ) ) / Max( ( RCSe + RRSe ),( CS * MUC ) ) ) / Min( DS ,( ( MUC / DS ) / ( CS / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MRS ) - Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - BR ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * ( RRSe + MUC ) ) ) / Min( RCSe ,( ( DS - RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ARS,FirstVNF_Mem_Server ) - Min( RRS ,DDR ) )", "choosing": "Max( ( RCSe * ( Max( MLU,DS ) / Min( DS ,RMSe ) ) ),( MUM + MUM ) )", "obj1": 0.6237623762376238, "obj2": 0.26356333796434606}, {"determining": "( ( Max( ( DDR - CRS ),( Const + FirstVNF_Mem_Server ) ) - Max( ( PN + FirstVNF_RAM ),Max( RRS,Const ) ) ) + ( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) ) )", "choosing": "( Max( ( Max( MLU,RRSe ) * ( MUC - RRSe ) ),Min( ( DS / RCSe ) ,Min( RRSe ,CS ) ) ) + ( Min( ( DS * DS ) ,Min( CS ,MLU ) ) + Max( MUR,MUC ) ) )", "obj1": 0.9188118811881189, "obj2": 0.03370946589213498}, {"determining": "( ( Min( FirstVNF_Mem ,Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) ) - ( DDR - BR ) ) + ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( CS - ( ( DS / MUM ) / ( MUR * MUC ) ) ),Min( DS ,MUM ) ) ,( ( RMSe * MLU ) - Min( RRSe ,MUM ) ) )", "obj1": 0.9762376237623762, "obj2": 0.009453263859827643}, {"determining": "( Min( ( ( DDR - ( RRS * ( FirstVNF_CPU_Server - ( FirstVNF_CPU + MRS ) ) ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( ( RMSe * MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 0.7029702970297029, "obj2": 0.1642106769722809}, {"determining": "( Min( ( FirstVNF_CPU - Const ) ,( FirstVNF_RAM * CRS ) ) * ( Const / FirstVNF_RAM ) )", "choosing": "( ( ( MUC - DS ) + ( RMSe * CS ) ) * Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 0.9168316831683169, "obj2": 0.07138565323995955}, {"determining": "( Max( ACS,MRS ) * ( PN - Min( ( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) + Max( ( BR - ARS ),Max( AMS,BR ) ) ) ,( ( ( CRS / FirstVNF_RAM ) / ( FirstVNF_CPU + BR ) ) + Max( ( AMS * RRS ),( DDR - DDR ) ) ) ) ) )", "choosing": "( ( ( Max( CS,MUR ) + ( DS * MUM ) ) / Max( ( RCSe + RRSe ),( CS * MUC ) ) ) / Min( ( DS + ( RMSe + RCSe ) ) ,( ( MUC / DS ) / ( MUC * RCSe ) ) ) )", "obj1": 0.7326732673267327, "obj2": 0.1494510878819981}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( ( MDR / FirstVNF_Mem ) * Min( ARS ,ARS ) ) ) ) )", "choosing": "( Max( ( CS - MLU ),Min( DS ,MUM ) ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.693069306930693, "obj2": 0.1990146923404123}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - ( Max( ( AMS * ( Const * FirstVNF_RAM ) ),BR ) + ( AMS + ( FirstVNF_CPU_Server * MRS ) ) ) ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( MUC * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 0.8455445544554455, "obj2": 0.11553117499336797}, {"determining": "( ( ( FirstVNF_RAM - MRS ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( Min( RCSe ,RRSe ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.8752475247524752, "obj2": 0.10659149848921458}, {"determining": "( ( FirstVNF_RAM - ( DDR / FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU * CRS ) )", "choosing": "Min( ( Min( MLU ,RCSe ) + Max( MUR,RCSe ) ) ,( Max( Min( MUR ,MUM ),CS ) / CS ) )", "obj1": 0.7584158415841584, "obj2": 0.14727422493315973}, {"determining": "( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - PN ) ) * ( BR / BR ) )", "choosing": "( Min( MUC ,CS ) - Max( CS,( Max( MUC,DS ) - RMSe ) ) )", "obj1": 0.7960396039603961, "obj2": 0.14499161826720958}, {"determining": "( Min( FirstVNF_RAM ,( FirstVNF_CPU - ( ACS * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_RAM - PN ) )", "choosing": "( Min( ( ( ( ( Max( MUC,DS ) - RMSe ) + ( ( CS * Max( MUC,DS ) ) / ( ( CS / MLU ) / Min( MLU ,DS ) ) ) ) - ( DS / Max( RRSe,RCSe ) ) ) - Min( ( RRSe * DS ) ,Min( RRSe ,DS ) ) ) ,RRSe ) - ( RRSe / RCSe ) )", "obj1": 0.80990099009901, "obj2": 0.1400525617551855}, {"determining": "Min( ( PN - BR ) ,( Min( ACS ,( ( FirstVNF_RAM_Server - CRS ) * FirstVNF_RAM ) ) * Min( MRS ,ACS ) ) )", "choosing": "( ( MUR * ( ( DS * MUR ) - ( Min( RRSe ,( ( RRSe / MUR ) + RRSe ) ) / MUR ) ) ) / ( RRSe + DS ) )", "obj1": 0.8198019801980198, "obj2": 0.11915494685151667}, {"determining": "Max( ( ( ACS - FirstVNF_RAM ) / ( ACS - ( Max( CRS,FirstVNF_RAM_Server ) - MDR ) ) ),Max( Max( FirstVNF_CPU_Server,( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) ) ),( FirstVNF_RAM - MRS ) ) )", "choosing": "( Max( ( MUM - RCSe ),CS ) + ( ( Max( CS,RRSe ) - ( DS / MUM ) ) - Min( RCSe ,RRSe ) ) )", "obj1": 0.6297029702970297, "obj2": 0.25043621103079533}, {"determining": "Min( ( DDR + Const ) ,( FirstVNF_Mem - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe * RMSe ) - ( RRSe + RCSe ) )", "obj1": 0.8871287128712871, "obj2": 0.09552483630899643}, {"determining": "( ( ( FirstVNF_RAM / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) + Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - MUR ) / Max( RMSe,MUC ) ) - ( RCSe / RCSe ) )", "obj1": 0.6475247524752475, "obj2": 0.242435125734869}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( ( Max( FirstVNF_RAM_Server,AMS ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - CS ) ,RMSe ) )", "obj1": 0.6831683168316832, "obj2": 0.21434056837208337}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / CRS ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Min( DS ,MUM ) ) )", "obj1": 0.900990099009901, "obj2": 0.08777331037851119}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Max( MDR,AMS ) * ( ARS - CRS ) ) )", "choosing": "( Max( ( RMSe / MUC ),( MUM * MUR ) ) * Max( ( RCSe + MUM ),( RMSe * MUR ) ) )", "obj1": 0.6752475247524753, "obj2": 0.22737863719371315}, {"determining": "( ( Min( ( MDR * ACS ) ,( FirstVNF_CPU_Server * AMS ) ) * ( Max( CRS,FirstVNF_RAM ) - Min( DDR ,ARS ) ) ) * ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) * ( MDR + ARS ) ) ) )", "choosing": "( ( RRSe / RMSe ) / Min( ( RRSe - ( CS * Min( MUC ,MUM ) ) ) ,RMSe ) )", "obj1": 0.689108910891089, "obj2": 0.20956300812906362}, {"determining": "( Min( AMS ,PN ) + ( Min( ( AMS + DDR ) ,( ( CRS + Min( ( ARS / MDR ) ,FirstVNF_RAM ) ) / PN ) ) + ( Max( FirstVNF_Mem,DDR ) + ( MDR / CRS ) ) ) )", "choosing": "( ( ( CS * MUC ) * MUM ) + ( ( RCSe + RCSe ) - Min( MUM ,( CS - ( ( MUM - MUM ) / ( MUC / Min( Min( MUM ,MLU ) ,CS ) ) ) ) ) ) )", "obj1": 0.6613861386138614, "obj2": 0.23563785037545462}, {"determining": "( ( ( FirstVNF_CPU - PN ) - ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) * Min( ( BR / DDR ) ,( ACS - FirstVNF_Mem ) ) )", "choosing": "( ( ( DS / MUM ) / ( MUR * MUC ) ) + ( Min( MUM ,CS ) / Max( ( CS - MLU ),Min( DS ,MUM ) ) ) )", "obj1": 0.900990099009901, "obj2": 0.08824188469188476}, {"determining": "Max( ( ( RRS / Min( CRS ,Min( Const ,RRS ) ) ) - PN ),( Max( FirstVNF_Mem_Server,ARS ) * DDR ) )", "choosing": "Max( Min( MLU ,MLU ),Max( Min( DS ,RCSe ),( RRSe - MUR ) ) )", "obj1": 0.6712871287128713, "obj2": 0.23180683946200398}, {"determining": "( ( ( BR - BR ) * FirstVNF_Mem ) - ( BR + RRS ) )", "choosing": "( ( ( ( MUC - CS ) - ( CS + MUR ) ) + ( ( MLU * MUM ) / ( RMSe - MUR ) ) ) / Max( Min( ( RRSe * Min( MUR ,Max( ( CS - Max( CS,MUM ) ),Min( ( CS * RMSe ) ,( MUC - RRSe ) ) ) ) ) ,( RCSe * MUC ) ),Min( RMSe ,( ( MUC - ( ( Min( RCSe ,MUR ) + RMSe ) * ( MLU - MUC ) ) ) / MUC ) ) ) )", "obj1": 0.6574257425742575, "obj2": 0.24189560398027649}, {"determining": "Min( ( PN - BR ) ,( Min( ACS ,( ( FirstVNF_RAM_Server - CRS ) * FirstVNF_RAM ) ) * Min( MRS ,ACS ) ) )", "choosing": "( ( MUR * ( ( DS * MUR ) - ( Min( RRSe ,( ( RRSe / MUR ) + RRSe ) ) / MUR ) ) ) / ( RRSe + DS ) )", "obj1": 0.8198019801980198, "obj2": 0.11915494685151667}, {"determining": "( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ACS ) * ( CRS - AMS ) )", "choosing": "( ( RCSe / MLU ) - ( MUM * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( DDR,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( MLU / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( CS * MUC ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ( AMS / CRS ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( Max( MUR,MUC ) - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( MUC - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / PN ) * PN ) - ( ACS * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RCSe + ( ( ( ( MUM / Min( MLU ,CS ) ) / Min( ( CS - RCSe ) ,MUR ) ) + MUM ) / RMSe ) ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ( AMS / CRS ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server - AMS ) ) )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( Min( MUM ,RMSe ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / FirstVNF_RAM_Server ) - ( AMS - ACS ) ) / ( ( MDR * ARS ) * Min( ARS ,FirstVNF_CPU ) ) ) - ( ( ( AMS * CRS ) + Max( FirstVNF_CPU_Server,PN ) ) / ( ( FirstVNF_RAM / RRS ) * Max( FirstVNF_CPU,CRS ) ) ) )", "choosing": "( ( RMSe - MUM ) - ( RRSe / ( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( Min( Min( BR ,Max( FirstVNF_CPU_Server,DDR ) ) ,MDR ) - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( ( Min( RRSe ,( MLU / RMSe ) ) / ( RRSe / ( MUC / Max( RRSe,DS ) ) ) ),MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - ( MRS / ( PN * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( ( ( DS + DS ) - Max( MUC,CS ) ) + ( ( MUR / ( Min( RRSe ,RCSe ) + ( ( MUM * MUR ) / RMSe ) ) ) - ( Min( RCSe ,( ( MUM - MLU ) - MUC ) ) / DS ) ) ) ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - ( FirstVNF_CPU * MRS ) )", "choosing": "( ( ( DS / ( CS * MUM ) ) - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / ( ( RMSe - MUR ) / Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - ( Const / MDR ) )", "choosing": "( ( ( Max( ( RCSe + CS ),( MUM + MUM ) ) + MUR ) - DS ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR - ( ACS / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( Max( MLU,DS ) / Min( DS ,RMSe ) ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( MRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RRSe * RRSe ) + Max( MUR,( ( MUR * RRSe ) / Min( MUM ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,DDR ) ,Max( AMS,DDR ) ) ,Min( ( RRS - BR ) ,Min( ARS ,ARS ) ) )", "choosing": "( ( ( CS * CS ) / Max( MUR,MUC ) ) - ( ( ( ( ( CS * MUC ) * ( MLU / RRSe ) ) + ( ( RCSe + RCSe ) - Min( MUM ,RRSe ) ) ) / MUM ) + ( MUR + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( FirstVNF_CPU - AMS ) * ( AMS - FirstVNF_RAM_Server ) ) / FirstVNF_Mem ) * Min( ARS ,ARS ) ) - Min( FirstVNF_CPU_Server ,PN ) )", "choosing": "( ( MUM + Min( DS ,CS ) ) + Max( ( MUM * MUR ),Min( MUM ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( AMS,AMS ),Min( BR ,BR ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( ( Min( ( MUM / DS ) ,RCSe ) / Min( MUR ,Min( CS ,MUM ) ) ) * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS / RRS ) * ACS ) / ( Const / PN ) ) / ( ( ACS - FirstVNF_Mem_Server ) - BR ) )", "choosing": "( CS * Max( RMSe,( MUC - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ( AMS / CRS ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,RRSe ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ( AMS / Const ) ) / CRS ) ,( FirstVNF_CPU_Server / ACS ) ) / ( ( Const / FirstVNF_RAM ) * ( ACS - DDR ) ) )", "choosing": "( ( Max( DS,MUR ) - Max( RCSe,( RMSe * CS ) ) ) / Min( ( RMSe * DS ) ,( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ,( ( Max( ( Min( RRS ,FirstVNF_RAM_Server ) / ( AMS - DDR ) ),( AMS - ( BR - MRS ) ) ) + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( RMSe - RCSe ) * MLU ) ,( Min( CS ,RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_Mem_Server + ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( Max( MUR,MUC ) - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_CPU ,MRS ) - ( FirstVNF_RAM_Server + MRS ) ) ,( ( FirstVNF_Mem + AMS ) + Min( PN ,ARS ) ) )", "choosing": "Min( ( ( MLU - RCSe ) * MLU ) ,( ( CS * Min( RRSe ,( MLU - ( MUR * RRSe ) ) ) ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( RRS / FirstVNF_Mem_Server ) + Max( DDR,ACS ) ) )", "choosing": "Min( Min( ( CS - MUM ) ,( RCSe / CS ) ) ,( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ( PN + ARS ) ) ) ,Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( RCSe,( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MDR ,AMS ) * ( Const - ACS ) ) ,Min( ( CRS - Min( FirstVNF_Mem ,DDR ) ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) )", "choosing": "Max( ( ( Min( ( DS * MLU ) ,( MUM * RCSe ) ) - RCSe ) * DS ),( CS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( CRS - MDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) )", "choosing": "( MUC * Min( ( DS * MLU ) ,( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ( ( ( FirstVNF_Mem_Server * MRS ) + Max( ARS,DDR ) ) / ( Min( FirstVNF_Mem ,DDR ) * ( ARS - CRS ) ) ) * Max( MDR,AMS ) ) )", "choosing": "Min( Max( ( RMSe + MUM ),( RMSe * MUR ) ) ,( CS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS * PN ) - ( ACS * Max( MDR,Min( FirstVNF_CPU_Server ,Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( RCSe + MUM ),( RMSe * MUR ) ) ,( Max( DS,MUM ) * ( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,Min( MDR ,ACS ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + MRS ) ) ) )", "choosing": "Max( Max( ( DS - DS ),RCSe ),Min( Min( ( ( Max( MUC,MUR ) * Min( MUC ,MLU ) ) / ( ( RCSe - MUR ) / ( RMSe * RCSe ) ) ) ,Max( ( Min( MUC ,MUM ) * Min( MUM ,RCSe ) ),( ( MUR * MUC ) + Max( MUC,MUC ) ) ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( ARS + ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + MRS ) ) / ( CRS + FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( ( Max( MUC,MUR ) * Min( MUC ,MLU ) ) / ( ( RCSe - MUR ) / ( RMSe * RCSe ) ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,MUC ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN / FirstVNF_Mem_Server ) ,Max( BR,RRS ) ) / Min( ( RRS + FirstVNF_CPU ) ,( ( PN - FirstVNF_CPU_Server ) + Max( FirstVNF_CPU_Server,ACS ) ) ) ) - ( ( Max( FirstVNF_CPU,MDR ) / ( FirstVNF_Mem_Server * BR ) ) / ( Max( CRS,BR ) / Max( MDR,MRS ) ) ) )", "choosing": "Max( RRSe,Min( MUC ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS - DDR ) ,Max( FirstVNF_RAM,( ( FirstVNF_RAM + FirstVNF_RAM_Server ) - ARS ) ) )", "choosing": "( ( ( Max( MUR,MUM ) * CS ) + ( RMSe * Min( RCSe ,MLU ) ) ) / ( ( Min( RCSe ,RCSe ) / Max( MLU,( Max( MUM,DS ) / ( RRSe - CS ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * FirstVNF_RAM_Server ) * ( BR + DDR ) ) ,FirstVNF_Mem ) - FirstVNF_CPU )", "choosing": "( ( ( Max( RMSe,DS ) * ( RCSe * RCSe ) ) * ( ( RCSe + DS ) + Max( MLU,MUC ) ) ) + ( ( ( MUM / Max( Min( MLU ,MUM ),RMSe ) ) + Min( RMSe ,RCSe ) ) + ( ( MUM - MUR ) + Max( MUR,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ARS,( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe / ( MUM + RCSe ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),Min( FirstVNF_CPU_Server ,Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( ARS - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) ) ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + Min( ( Max( MUM,MUM ) / Max( RRSe,MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) ),( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( ARS,MRS ) * ( RRS - PN ) ) ,Max( Max( MDR,Const ),Max( BR,FirstVNF_Mem_Server ) ) ) ,( Max( ( Min( Min( BR ,Max( FirstVNF_CPU_Server,DDR ) ) ,MDR ) - FirstVNF_RAM_Server ),( Const - MRS ) ) - Min( ( ARS * Const ) ,( BR * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( Max( MUM,MUM ) / Max( ( Min( RRSe ,( MLU / RMSe ) ) / ( RRSe / ( MUC / Max( RRSe,DS ) ) ) ),MLU ) ) ,Min( Max( MLU,MUM ) ,( RMSe - MUR ) ) ) / ( Max( ( RCSe * RRSe ),( DS + MUC ) ) * ( ( MUM / CS ) - Min( RCSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - ( ( DDR + RRS ) / ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( Max( MLU,Max( MLU,( MUC / Min( ( RRSe - RRSe ) ,MUM ) ) ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( Const,Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Max( ( RRS / RRS ),( FirstVNF_RAM - CRS ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( Max( MLU,Max( MLU,( MUC / Min( ( RRSe - RCSe ) ,Max( MLU,RRSe ) ) ) ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Const * ACS ) ,( RRS - FirstVNF_CPU ) ) - Max( ( ACS - FirstVNF_RAM_Server ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_RAM_Server * Const ) / Min( DDR ,ARS ) ),Min( FirstVNF_RAM_Server ,( MDR * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) )", "choosing": "Max( ( RCSe + MLU ),( RCSe - ( ( Max( ( ( ( RCSe * CS ) + MLU ) - MUR ),( MUM - Min( MUC ,RRSe ) ) ) + ( Min( RMSe ,RMSe ) + CS ) ) / Max( MUR,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - MRS ) - Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) - ( MRS - ( Max( FirstVNF_Mem_Server,AMS ) + PN ) ) ) ) )", "choosing": "( Min( ( DS / RMSe ) ,( Min( CS ,DS ) * Min( MLU ,CS ) ) ) / Min( DS ,( ( DS - RMSe ) / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Min( ARS ,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - MUR ) / Min( RCSe ,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_CPU_Server ) * ( ( AMS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe + RRSe ) + RRSe ),( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - AMS )", "choosing": "( Min( DS ,MUM ) / ( ( ( MUM - DS ) + CS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( Max( Const,MDR ) * ( BR / BR ) ) )", "choosing": "( Min( MUC ,CS ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( PN + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUM ) / Min( DS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( FirstVNF_Mem + ( CRS - PN ) ) )", "choosing": "( Min( DS ,MUM ) / ( ( ( DS / MUR ) - MUR ) / Min( MUC ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - Max( DDR,FirstVNF_RAM ) ) - ( ( CRS - PN ) - CRS ) )", "choosing": "( Min( DS ,MUM ) / ( RMSe - ( ( DS / MUR ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - PN ) - ( MRS / ( PN * FirstVNF_Mem_Server ) ) ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,( ( ( DS + DS ) - Max( MUC,CS ) ) + ( ( MUR / ( Min( RRSe ,RCSe ) + ( ( MUM * MUR ) / RMSe ) ) ) - ( Min( RCSe ,( ( MUM - MLU ) - MUC ) ) / DS ) ) ) ) / ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_RAM / ACS ) ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "( ( RMSe - MUR ) / Min( MUC ,Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM / ACS ) - PN ) - Max( DDR,( ( FirstVNF_RAM / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe - MUR ) / Max( ( ( RMSe - MUR ) / Max( RMSe,MUC ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,( Max( DDR,( ( FirstVNF_RAM / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) ) + Max( ACS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe - MUR ) / ( ( RMSe - MUR ) / Max( RMSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( ( ( ARS / FirstVNF_RAM ) / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) ) - Max( DDR,( ( FirstVNF_RAM / ACS ) + Max( ACS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe - MUR ) / ( ( ( CS * MLU ) - ( MUR - CS ) ) - ( RCSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( ACS,FirstVNF_CPU_Server ) ,PN ) / DDR ) - ( ACS / FirstVNF_Mem ) )", "choosing": "( Min( MUC ,( Min( RMSe ,MLU ) + RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - Max( DDR,( ( ACS / FirstVNF_Mem ) + Max( ACS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RMSe - MUR ) / ( Min( RMSe ,MLU ) + ( RCSe + Max( DS,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - PN ) - ( Const / MDR ) )", "choosing": "( ( ( Max( ( RCSe + CS ),( MUM + MUM ) ) + MUR ) - DS ) / Max( RMSe,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Min( PN ,PN ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) ) ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - PN ) )", "choosing": "( Min( ( ( ( ( Max( Max( RCSe,RCSe ),Max( MUR,RMSe ) ) * ( MUR / MUR ) ) + ( ( CS * Max( MUC,DS ) ) / ( ( CS / MLU ) / RRSe ) ) ) - ( DS / Max( RRSe,RCSe ) ) ) - Min( ( RRSe * DS ) ,Min( RRSe ,DS ) ) ) ,RRSe ) - ( RRSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - PN ) ) / DDR ) - ( ( CRS + ARS ) / FirstVNF_Mem ) )", "choosing": "( ( RRSe * DS ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "( ( RRSe * RRSe ) + ( ( CS + MUC ) + ( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}]}