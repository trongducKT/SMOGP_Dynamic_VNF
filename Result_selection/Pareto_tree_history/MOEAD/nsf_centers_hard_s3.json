{"1": [{"determining": "Min( Max( FirstVNF_CPU,Const ) ,( FirstVNF_CPU * DDR ) )", "choosing": "( Min( RMSe ,RRSe ) - Min( MUM ,MUR ) )", "obj1": 0.734475374732334, "obj2": 0.2797601350697974}, {"determining": "( Min( ( ( RRS / FirstVNF_Mem ) / ( FirstVNF_Mem / DDR ) ) ,( Min( BR ,MDR ) + Min( MDR ,RRS ) ) ) * Max( ( ( MDR / MDR ) + Min( ACS ,FirstVNF_CPU_Server ) ),( ( RRS - FirstVNF_RAM ) / ( BR + FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( Min( MUR ,MUC ) * ( MUC / CS ) ) - ( Min( CS ,MUM ) + ( RMSe / DS ) ) ),Max( Min( ( RCSe + MUC ) ,( RMSe + MUR ) ),Max( ( RRSe - MUC ),( MUR / DS ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.2593643574641196}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( CS * MLU ) ,( MLU - RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.27960355287847616}, {"determining": "( ( ( AMS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + MRS ) / ( ( ( FirstVNF_RAM_Server + PN ) - ARS ) * ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "Min( Min( ( RCSe * MUC ) ,Max( ( Min( Min( MUM ,RMSe ) ,CS ) - ( MUM - DS ) ),MUC ) ) ,( ( DS / DS ) * CS ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "Min( ( MDR / FirstVNF_RAM ) ,Max( FirstVNF_Mem,CRS ) )", "choosing": "( ( RRSe + MLU ) / Max( RRSe,RMSe ) )", "obj1": 0.7516059957173448, "obj2": 0.2719853644860528}, {"determining": "( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,RMSe ) )", "obj1": 0.7451820128479657, "obj2": 0.2812556724517459}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ,Max( Const,MRS ) )", "choosing": "Min( ( MUC / RRSe ) ,( RRSe - MUC ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,ACS ) )", "choosing": "Min( Max( CS,RRSe ) ,( MUR / DS ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,MRS ) )", "choosing": "( Min( RRSe ,MLU ) * ( RMSe / DS ) )", "obj1": 0.7580299785867237, "obj2": 0.2653959391412411}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),( BR / FirstVNF_RAM ) )", "choosing": "Min( ( MUC + RRSe ) ,( MLU * RMSe ) )", "obj1": 0.7066381156316917, "obj2": 0.2790257840237408}, {"determining": "( ( AMS * CRS ) / ( FirstVNF_Mem / FirstVNF_CPU ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.7880085653104925, "obj2": 0.27264253738205096}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + ( ARS / AMS ) )", "choosing": "( ( MUR / RCSe ) + Min( MUM ,MUC ) )", "obj1": 0.708779443254818, "obj2": 0.28532908656798817}, {"determining": "( ( ARS + PN ) / ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "( ( MUC / RMSe ) / ( RMSe + RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.28178077708410065}, {"determining": "Max( Max( FirstVNF_RAM,FirstVNF_Mem ),Min( ARS ,AMS ) )", "choosing": "( ( RCSe * DS ) + ( MUC / RCSe ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) )", "choosing": "( ( MUC + MLU ) - Min( RMSe ,MUM ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Min( Max( FirstVNF_RAM_Server,Const ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( CS / RCSe ) + ( RCSe + CS ) )", "obj1": 0.7109207708779444, "obj2": 0.28108891864106667}, {"determining": "( ( FirstVNF_Mem_Server + CRS ) + ( AMS / PN ) )", "choosing": "( Max( MUM,RRSe ) / ( RRSe * CS ) )", "obj1": 0.7109207708779444, "obj2": 0.28587843151047365}, {"determining": "Min( Max( Const,FirstVNF_RAM_Server ) ,Min( MDR ,ACS ) )", "choosing": "( ( DS - RMSe ) + ( MUR + MUR ) )", "obj1": 0.6980728051391863, "obj2": 0.25285117455524936}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ACS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS * RRSe ),Max( RMSe,RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( DDR - FirstVNF_RAM ) / Min( MRS ,DDR ) )", "choosing": "Max( ( RCSe + RRSe ),( RCSe + RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.09877732805034736}, {"determining": "( ( FirstVNF_RAM_Server + FirstVNF_Mem ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 0.7366167023554604, "obj2": 0.28042908783559917}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,BR ) / ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MUR + RCSe ) ,Min( RCSe ,CS ) )", "obj1": 0.7858672376873662, "obj2": 0.26572644858077216}, {"determining": "Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.272169218460159}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( FirstVNF_Mem - Const ) * ( CRS * Const ) )", "choosing": "Min( ( RCSe - CS ) ,( MUC - Max( MUR,MLU ) ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "( ( DDR - DDR ) * ( PN / RRS ) )", "choosing": "Min( Min( MUM ,MUM ) ,( CS + RCSe ) )", "obj1": 0.7922912205567452, "obj2": 0.2742844925623814}, {"determining": "Max( Max( FirstVNF_CPU,MDR ),( Max( FirstVNF_Mem_Server,AMS ) + Min( Max( CRS,FirstVNF_RAM_Server ) ,MRS ) ) )", "choosing": "Max( ( RRSe - RCSe ),Min( MUR ,( Max( Min( Min( Min( ( MUM - MLU ) ,Max( RMSe,MUR ) ) ,DS ) ,( ( Min( CS ,RCSe ) * Min( RRSe ,MUR ) ) + ( MUM + ( DS / RRSe ) ) ) ),RCSe ) / MUC ) ) )", "obj1": 0.7537473233404711, "obj2": 0.2608726541828435}, {"determining": "Max( ( FirstVNF_Mem + Const ),Max( ARS,Min( MRS ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,( ( ( ( Min( ( MUM + RCSe ) ,( MUC + MUC ) ) / RMSe ) * MUC ) / Min( RCSe ,RMSe ) ) - MUC ) ) / ( RRSe + RRSe ) )", "obj1": 0.7451820128479657, "obj2": 0.27960355287847616}, {"determining": "( Max( MRS,FirstVNF_CPU_Server ) - ( ARS * BR ) )", "choosing": "( ( CS + RCSe ) / Min( MUC ,MUM ) )", "obj1": 0.7387580299785867, "obj2": 0.2748340060090757}, {"determining": "Min( ( AMS - FirstVNF_Mem ) ,( RRS / AMS ) )", "choosing": "( ( RCSe + MUC ) / Max( RCSe,RCSe ) )", "obj1": 0.880085653104925, "obj2": 0.13183483705735644}, {"determining": "Min( Min( AMS ,BR ) ,( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( CS - MUM ) * Min( RRSe ,RCSe ) )", "obj1": 0.7387580299785867, "obj2": 0.28036979742998974}, {"determining": "Max( ( CRS / MDR ),Min( MDR ,FirstVNF_RAM ) )", "choosing": "Max( ( MUR * DS ),Max( RMSe,RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.26499021329686157}, {"determining": "Max( Min( ( AMS / MRS ) ,RRS ),Min( MRS ,AMS ) )", "choosing": "( ( MUM + ( RMSe * RMSe ) ) + Min( Min( MLU ,MLU ) ,DS ) )", "obj1": 0.6980728051391863, "obj2": 0.27923592668919506}, {"determining": "Max( Min( Max( FirstVNF_Mem,MDR ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ),( Min( FirstVNF_CPU ,MDR ) - Const ) )", "choosing": "( ( MLU / Max( MUC,RRSe ) ) * Max( MUM,DS ) )", "obj1": 0.7387580299785867, "obj2": 0.28036979742998974}, {"determining": "Max( Min( ACS ,RRS ),Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 0.708779443254818, "obj2": 0.28693291987048836}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS / FirstVNF_CPU ),( ACS - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RRSe + DS ),( DS + MUM ) ) / ( Min( MUC ,MUR ) + ( MUM - DS ) ) )", "obj1": 0.7751605995717344, "obj2": 0.2769222612265222}, {"determining": "Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Max( ( ( MRS * ARS ) + ( DDR + DDR ) ),( Max( ACS,BR ) + ( PN - ACS ) ) )", "choosing": "( ( CS * RRSe ) + ( DS + DS ) )", "obj1": 0.7901498929336188, "obj2": 0.2662094143093093}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) / Max( ( MRS + BR ),( DDR - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Max( RRSe,( ( Max( RMSe,RMSe ) * ( RRSe + MUM ) ) - ( DS - MLU ) ) ) + ( DS / Min( CS ,MUM ) ) ) + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "Min( Min( RRS ,ARS ) ,( ARS / ARS ) )", "choosing": "Min( ( ( RMSe + DS ) - Min( DS ,DS ) ) ,( MLU + ( MUR + RRSe ) ) )", "obj1": 0.7965738758029979, "obj2": 0.266241059568191}, {"determining": "Max( Max( ( FirstVNF_Mem_Server * ARS ),( Const - CRS ) ),Min( ( BR + RRS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - DS ) - ( RCSe + RCSe ) ) / ( Min( RMSe ,MUR ) * Min( MUR ,RRSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.2550369668949188}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU ,AMS ) ) - ( RRS - Max( ( PN - MRS ),MRS ) ) )", "choosing": "( ( ( CS + CS ) + Max( MUC,MUC ) ) + ( Max( RCSe,RRSe ) / ( DS * MUC ) ) )", "obj1": 0.7259100642398287, "obj2": 0.27756824014206327}, {"determining": "Max( ( ARS / PN ),Min( ACS ,( PN / FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( RMSe * MUM ),( DS * DS ) ) ,Min( Min( MUR ,MUC ) ,( MUR * DS ) ) )", "obj1": 0.7858672376873662, "obj2": 0.2802181660818542}, {"determining": "( ( RRS / ( FirstVNF_CPU_Server * ACS ) ) - ( PN * FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe / RMSe ) ,Min( RRSe ,MUM ) ) * ( ( DS + RRSe ) / ( RMSe + RMSe ) ) )", "obj1": 0.7323340471092077, "obj2": 0.2777841705661705}, {"determining": "( ( ( MDR / FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - FirstVNF_RAM ) + ( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS + DS ) - ( CS - ( MUM * CS ) ) )", "obj1": 0.8329764453961456, "obj2": 0.16497502721071144}, {"determining": "Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) )", "choosing": "( ( MUC / RRSe ) + ( CS / CS ) )", "obj1": 0.7880085653104925, "obj2": 0.2704518784500176}, {"determining": "( ( DDR * FirstVNF_CPU ) * ( ( MDR - MDR ) / Min( ACS ,MDR ) ) )", "choosing": "Min( Max( MUR,CS ) ,( ( ( RRSe / MUM ) - RCSe ) + Min( RMSe ,DS ) ) )", "obj1": 0.7751605995717344, "obj2": 0.26251630626338457}, {"determining": "Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,( AMS + ( Max( MRS,ACS ) * CRS ) ) )", "choosing": "( Max( Min( MUC ,CS ),MUM ) * ( MUR - MLU ) )", "obj1": 0.7430406852248393, "obj2": 0.2828889833584056}, {"determining": "Max( Max( ( FirstVNF_RAM + Const ),( FirstVNF_RAM_Server - FirstVNF_RAM ) ),Max( Max( RRS,MRS ),( ACS + AMS ) ) )", "choosing": "( ( Max( MUC,RMSe ) + ( MUM / CS ) ) - Min( ( DS * DS ) ,( RRSe - CS ) ) )", "obj1": 0.7516059957173448, "obj2": 0.2774401890773007}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( FirstVNF_CPU_Server * CRS ) ) / Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU ),( PN + FirstVNF_RAM ) ) )", "choosing": "( ( Min( RRSe ,MUR ) + Min( DS ,CS ) ) / ( Min( RCSe ,DS ) * Min( MUC ,MLU ) ) )", "obj1": 0.7708779443254818, "obj2": 0.24921736631896146}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - MRS ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * MUC ) - CS ) )", "obj1": 0.6980728051391863, "obj2": 0.2808340787976199}, {"determining": "( ( FirstVNF_CPU + Min( DDR ,Const ) ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RRSe + MUM ),( MUC + RRSe ) ) + ( Max( MUM,( MLU / MUM ) ) - MUM ) )", "obj1": 0.683083511777302, "obj2": 0.26652661315602033}, {"determining": "( ( MDR / ( FirstVNF_CPU + RRS ) ) - ( BR + MRS ) )", "choosing": "( ( RCSe - MUR ) / Max( Min( MUC ,CS ),RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.2699894386613105}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * ( FirstVNF_RAM - MDR ) ) * Max( PN,BR ) )", "choosing": "Min( ( ( RMSe / MLU ) - RMSe ) ,( ( RCSe + MUR ) / ( RMSe + DS ) ) )", "obj1": 0.7601713062098501, "obj2": 0.27599766148293947}, {"determining": "Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),Max( MDR,FirstVNF_RAM ) ),Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM * DDR ) ) )", "choosing": "Min( ( Min( MUR ,RRSe ) - Max( MUR,RMSe ) ) ,( ( RCSe + RMSe ) / ( MUM * RRSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.27412849491866303}, {"determining": "( ( FirstVNF_CPU + Min( RRS ,AMS ) ) + ( Max( BR,FirstVNF_RAM ) - FirstVNF_CPU ) )", "choosing": "Min( ( ( CS * RCSe ) * Max( DS,MLU ) ) ,( ( DS / MLU ) / Max( DS,MLU ) ) )", "obj1": 0.7623126338329764, "obj2": 0.28144701694295543}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) - ( Const - DDR ) )", "choosing": "Min( ( MUR + RMSe ) ,Max( RRSe,DS ) )", "obj1": 0.7708779443254818, "obj2": 0.2801906016678214}, {"determining": "( ( ( AMS * DDR ) * ( BR * FirstVNF_RAM ) ) * Max( ( CRS * Const ),( DDR + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( CS * Min( RCSe ,MUR ) ) ,( RRSe - ( MUC / RCSe ) ) )", "obj1": 0.715203426124197, "obj2": 0.26633129246625137}, {"determining": "( ( ( PN * FirstVNF_RAM ) + MDR ) / ( FirstVNF_RAM_Server * BR ) )", "choosing": "( ( MUM - MUM ) / ( RRSe * DS ) )", "obj1": 0.8008565310492506, "obj2": 0.26342026784413625}, {"determining": "( ( ( MRS + MDR ) - ( FirstVNF_Mem_Server * BR ) ) / ( ( FirstVNF_Mem_Server + ARS ) * ( FirstVNF_CPU - MRS ) ) )", "choosing": "( ( Max( RCSe,RRSe ) * DS ) - ( MUM * MLU ) )", "obj1": 0.7109207708779444, "obj2": 0.2812816687064808}, {"determining": "( ( Max( DDR,FirstVNF_Mem_Server ) / BR ) * ( ( CRS / CRS ) - ( ACS - BR ) ) )", "choosing": "Min( ( MUC - MLU ) ,( MLU - Min( RCSe ,RMSe ) ) )", "obj1": 0.7901498929336188, "obj2": 0.2746464226118907}, {"determining": "( ( FirstVNF_Mem_Server / ( Min( ( ( FirstVNF_CPU + ACS ) * ( DDR - FirstVNF_Mem_Server ) ) ,MDR ) * Min( ( FirstVNF_RAM - ( FirstVNF_CPU_Server / CRS ) ) ,RRS ) ) ) / ( FirstVNF_CPU_Server / ( ( FirstVNF_RAM_Server / Const ) - MDR ) ) )", "choosing": "( ( MLU - Min( Max( ( ( RRSe / Min( CS ,Min( MLU ,MLU ) ) ) - Min( ( RRSe - ( CS * RMSe ) ) ,CS ) ),MUM ) ,MUC ) ) - ( Max( DS,RRSe ) + MLU ) )", "obj1": 0.6980728051391863, "obj2": 0.25666122516960754}, {"determining": "Max( Max( ( ( CRS - BR ) + ( Const / DDR ) ),( Min( AMS ,RRS ) * Max( ARS,FirstVNF_RAM ) ) ),Max( ( ( BR * MDR ) * Max( ACS,DDR ) ),( Max( FirstVNF_CPU_Server,RRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( ( ( DS + RRSe ) - Max( RCSe,MLU ) ) ,( ( DS * RRSe ) * Max( CS,MUM ) ) ) / ( ( ( MUR / CS ) / ( CS + MUR ) ) / Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "( Min( AMS ,FirstVNF_Mem ) + ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( DS - MUM ) * MUR ) - RRSe ) - ( MUC - RRSe ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "( ( AMS + Const ) * ( BR / AMS ) )", "choosing": "( Min( ( ( CS * MUR ) - ( MUC + RCSe ) ) ,( Min( RCSe ,MUM ) / ( RCSe / RCSe ) ) ) - ( Min( ( MLU * CS ) ,Max( MUM,MLU ) ) * Min( ( MUR - RRSe ) ,( MUM - RMSe ) ) ) )", "obj1": 0.7558886509635975, "obj2": 0.26869606358854986}, {"determining": "( Min( AMS ,ACS ) + ( RRS + FirstVNF_Mem_Server ) )", "choosing": "( ( ( DS + ( CS - RCSe ) ) / MUC ) - Min( RCSe ,( MLU * DS ) ) )", "obj1": 0.7858672376873662, "obj2": 0.2878558687743697}, {"determining": "( ( PN * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 0.7259100642398287, "obj2": 0.26943911267440646}, {"determining": "( ( ( ( Const * BR ) + ( MRS * DDR ) ) + Max( ( Const - PN ),( CRS - BR ) ) ) * Max( ( Max( FirstVNF_RAM_Server,DDR ) * ( RRS + FirstVNF_RAM_Server ) ),( ( MDR - FirstVNF_RAM_Server ) / ( DDR - FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( ( CS + RRSe ) ,( MUR - MUM ) ) / ( ( MUC / MUC ) / Min( MUC ,CS ) ) ) * ( ( Max( MUR,RRSe ) * ( MUC * RMSe ) ) + ( Max( RCSe,DS ) + ( CS - MUM ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.23169979242603722}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * FirstVNF_Mem_Server ) / Min( RRS ,PN ) ) / ( ( ARS - CRS ) * ( ACS - ACS ) ) ) + Min( ( ( AMS + BR ) / ( FirstVNF_RAM * ARS ) ) ,Max( ( FirstVNF_Mem / CRS ),( ACS - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.28182898571393006}, {"determining": "( Max( Max( ( DDR - ARS ),Min( BR ,ACS ) ),( ( MRS * MDR ) * ( MRS + RRS ) ) ) / ( Min( ( AMS + ACS ) ,( Const / ACS ) ) / Max( ( MRS + MRS ),Min( DDR ,CRS ) ) ) )", "choosing": "( ( ( Max( MUC,MUC ) / Max( RRSe,RRSe ) ) * ( Max( MUM,CS ) - Min( DS ,CS ) ) ) * ( ( ( MUR * RMSe ) - ( RRSe * RCSe ) ) + ( ( MUC + MUR ) + Min( MUM ,CS ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.28036979742998974}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + ( FirstVNF_RAM_Server / PN ) ) / AMS ) ) )", "choosing": "( ( Min( ( RMSe + MUM ) ,( MLU + RCSe ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + Max( RRSe,( ( Min( RRSe ,MLU ) - MUM ) * RMSe ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25204731463681707}, {"determining": "( ( ( ( PN / BR ) - ( Const * FirstVNF_CPU_Server ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / Min( ( CS * RMSe ) ,( RRSe - RMSe ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.26442756133300926}, {"determining": "( Max( FirstVNF_Mem_Server,Max( RRS,CRS ) ) + ( DDR * Min( ARS ,RRS ) ) )", "choosing": "( Min( ( Min( RRSe ,( RMSe * RRSe ) ) * MLU ) ,( MUR + RCSe ) ) / ( Max( RMSe,RRSe ) + MUC ) )", "obj1": 0.683083511777302, "obj2": 0.26652661315602033}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( Max( Min( AMS ,FirstVNF_RAM_Server ),Max( CRS,DDR ) ),Min( ( FirstVNF_RAM / Const ) ,Max( FirstVNF_CPU,DDR ) ) ),( ( ( FirstVNF_RAM / MDR ) * ( DDR * RRS ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( ( Min( DS ,RMSe ) - RMSe ) + MUM ),( MUM / Max( MUR,RCSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.2614169448142151}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( AMS - FirstVNF_RAM ) ) / ( ( ( AMS - ( ( RRS + FirstVNF_RAM_Server ) * FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) - ( FirstVNF_CPU_Server / BR ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( ( DS / Min( ( MUM - ( RCSe + MUR ) ) ,MUR ) ) * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.26652661315602033}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + Max( Max( Min( ACS ,MDR ),( MRS / ACS ) ),Max( ( FirstVNF_CPU_Server * RRS ),Min( ACS ,PN ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 0.721627408993576, "obj2": 0.26972347785031664}, {"determining": "( ( PN * PN ) + ( AMS + Min( ( PN - Const ) ,( RRS / RRS ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( RRSe / Max( MUM,MUM ) ) )", "obj1": 0.6895074946466809, "obj2": 0.2694841692909662}, {"determining": "Min( ( ( ( ARS * Const ) / ( FirstVNF_RAM - Const ) ) - Max( Min( RRS ,MRS ),( Const * BR ) ) ) ,Min( DDR ,PN ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,RCSe ) / CS ) ) * ( Min( MLU ,RMSe ) * ( ( DS - Min( RCSe ,MLU ) ) * MUR ) ) )", "obj1": 0.8222698072805139, "obj2": 0.22931455336137124}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( ( ( Min( MDR ,( PN * Min( RRS ,( FirstVNF_CPU + Const ) ) ) ) - AMS ) / ( MRS - MRS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( Max( ( DS - Max( ( MLU + MUC ),RMSe ) ),CS ) / Min( ( DS / ( CS / MUR ) ) ,( ( ( MUC + MUC ) / RRSe ) / ( RCSe - MUR ) ) ) ) + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 0.828693790149893, "obj2": 0.2077980985199875}, {"determining": "( ( FirstVNF_Mem_Server + ( PN + ( FirstVNF_CPU_Server + DDR ) ) ) * Min( PN ,BR ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe * MLU ) * Max( CS,CS ) ) ) ,Min( ( RCSe + ( Min( MUC ,( Max( DS,CS ) * MUM ) ) / MUC ) ) ,CS ) )", "obj1": 0.6852248394004282, "obj2": 0.2614482418308811}, {"determining": "( Max( Max( Max( FirstVNF_Mem_Server,MDR ),( BR - CRS ) ),( Max( FirstVNF_RAM_Server,DDR ) * ( MDR + CRS ) ) ) / Max( Min( ( FirstVNF_Mem_Server / ARS ) ,( DDR / FirstVNF_RAM_Server ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) * ( ARS + MRS ) ) ) )", "choosing": "( ( ( ( CS / DS ) * ( MUM / MUC ) ) - Min( ( CS - DS ) ,Max( MUC,MUR ) ) ) / ( ( Max( RMSe,DS ) / Min( RCSe ,RMSe ) ) - ( ( MUR * MUM ) - ( RCSe * RRSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.27884306638160705}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 0.8115631691648822, "obj2": 0.14841449199260082}, {"determining": "Max( Min( ( FirstVNF_CPU_Server / Max( BR,MDR ) ) ,DDR ),( MDR / MDR ) )", "choosing": "Min( ( ( ( RCSe - CS ) * ( RCSe + MLU ) ) * ( ( MUM + MUM ) - ( CS * MUC ) ) ) ,Max( ( ( RMSe / RCSe ) + ( MUR / RMSe ) ),( ( MUC * Min( RCSe ,( ( ( RRSe * MLU ) - ( DS / CS ) ) - RMSe ) ) ) / RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.26754163567691547}, {"determining": "Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( MLU ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.721627408993576, "obj2": 0.279700849333026}, {"determining": "( Min( Max( Max( FirstVNF_CPU,FirstVNF_Mem_Server ),Max( FirstVNF_CPU,FirstVNF_CPU ) ) ,( ( ACS / ARS ) * ( PN * FirstVNF_CPU ) ) ) + ( Max( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ),Min( BR ,ARS ) ) * ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Max( Min( MUC ,DS ),( RMSe - CS ) ) * ( ( CS * RRSe ) * Max( MLU,CS ) ) ) / ( ( ( MLU - RRSe ) - ( CS - RRSe ) ) * ( ( RRSe - CS ) * ( RMSe + RCSe ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.27116771912957705}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR * FirstVNF_RAM ) / ( PN * AMS ) ),( ( FirstVNF_Mem + ARS ) - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) - ( ( ( Const + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) + ( ( CRS + FirstVNF_Mem ) - Max( FirstVNF_Mem,DDR ) ) ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 0.8715203426124197, "obj2": 0.1635649760064273}, {"determining": "( ( Max( ( FirstVNF_RAM - Const ),( DDR / FirstVNF_RAM ) ) - ( Max( DDR,FirstVNF_CPU ) * ( Const * MRS ) ) ) / Max( ( ( FirstVNF_Mem_Server - BR ) * ( FirstVNF_Mem + FirstVNF_CPU ) ),( Max( ACS,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server * AMS ) ) ) )", "choosing": "Max( ( ( ( DS - RCSe ) - Max( CS,CS ) ) - ( Min( RRSe ,CS ) + ( MLU + DS ) ) ),( ( ( MUM + MUM ) + ( MLU * MUC ) ) + Min( Max( RMSe,RMSe ) ,( RCSe + RCSe ) ) ) )", "obj1": 0.7922912205567452, "obj2": 0.27128501997600507}, {"determining": "Min( ( Max( BR,PN ) - CRS ) ,( RRS * MRS ) )", "choosing": "( Max( RMSe,( ( RRSe - MLU ) * CS ) ) * ( ( ( MUM / RMSe ) * MLU ) / RCSe ) )", "obj1": 0.7109207708779444, "obj2": 0.25433514511739613}, {"determining": "Max( ( FirstVNF_RAM / ( ( DDR + FirstVNF_RAM_Server ) * FirstVNF_RAM ) ),( FirstVNF_CPU / Const ) )", "choosing": "Max( Min( MLU ,( DS * MUR ) ),( ( ( MLU / DS ) * Min( DS ,MLU ) ) - DS ) )", "obj1": 0.7922912205567452, "obj2": 0.27567746553943406}], "2": [{"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM - ( MDR * FirstVNF_CPU_Server ) ) - BR ) + ( ( MDR / MRS ) - PN ) ) + ( Max( ( MRS * AMS ),( PN + BR ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,( DS - ( ( RRSe - MUC ) * Max( CS,RMSe ) ) ) ) + ( ( DS + CS ) - ( Max( MLU,RRSe ) / MUM ) ) ),Min( RMSe ,MLU ) ) ,Min( Min( RRSe ,( MUR / CS ) ) ,( ( ( ( RCSe + Min( RRSe ,RMSe ) ) * MUM ) + Min( ( RCSe * MUC ) ,Max( MLU,RRSe ) ) ) - MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( MDR / ( FirstVNF_CPU + RRS ) ) - ( BR + Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),Max( MDR,FirstVNF_RAM ) ),Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM * DDR ) ) ) ) )", "choosing": "( ( RCSe - MUR ) / MUM )", "obj1": 0.9486081370449678, "obj2": 0.06273171662660548}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "Min( ( ( RMSe + DS ) - Min( DS ,DS ) ) ,( MLU + ( MUR + RRSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "( ( Min( AMS ,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( MRS ,DDR ) )", "choosing": "Max( ( RCSe + ( CS * RRSe ) ),( RCSe + RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.08563991912231869}, {"determining": "( Min( Max( FirstVNF_Mem,MDR ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.8179871520342612, "obj2": 0.1308925423226817}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe * MLU ) * Max( CS,CS ) ) ) ,Min( ( RCSe + ( Min( MUC ,( Max( DS,CS ) * MUM ) ) / MUC ) ) ,CS ) )", "obj1": 0.8072805139186295, "obj2": 0.14323037569640382}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 0.8008565310492506, "obj2": 0.18387115597684653}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + FirstVNF_CPU ) - ( AMS * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS * ( Max( MUC,( RMSe / Min( ( MUC / RMSe ) ,( RMSe + RMSe ) ) ) ) + DS ) ),( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( ( ( Min( MDR ,( PN * Min( RRS ,( FirstVNF_CPU + Const ) ) ) ) - AMS ) / ( MRS - MRS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( Max( ( DS - Max( ( MLU + MUC ),RMSe ) ),CS ) / Min( ( DS / ( CS / MUR ) ) ,( ( ( MUC + MUC ) / RRSe ) / ( RCSe - MUR ) ) ) ) + ( DS / RCSe ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / ( FirstVNF_CPU * ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) ) ) / Max( ( MRS + BR ),( DDR - MDR ) ) )", "choosing": "( ( DS - DS ) + ( MUM + ( ( Max( RRSe,( ( Max( RMSe,RMSe ) * ( RRSe + MUM ) ) - ( DS - MLU ) ) ) + ( DS / Min( CS ,MUM ) ) ) + RCSe ) ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401057}, {"determining": "( Min( ( FirstVNF_CPU + Max( Max( FirstVNF_RAM,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) - DDR ) ) ),( MDR + FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) * Min( ( RRS + FirstVNF_CPU_Server ) ,BR ) )", "choosing": "Max( Min( MUM ,( MUM + MUR ) ),( MUC + MUC ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Max( BR,FirstVNF_RAM ) ) * Max( PN,BR ) )", "choosing": "Min( ( ( RMSe / MLU ) - RMSe ) ,( ( RCSe + MUR ) / Max( DS,MLU ) ) )", "obj1": 0.6852248394004282, "obj2": 0.26060485548927326}, {"determining": "( ( MRS * FirstVNF_Mem ) / ( Min( AMS ,RRS ) * Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.25095619247061157}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( FirstVNF_CPU_Server - BR ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) * ( ( FirstVNF_RAM - FirstVNF_RAM_Server ) * Max( Min( ( Min( Min( RRS ,FirstVNF_RAM_Server ) ,FirstVNF_Mem ) - MDR ) ,( ( ( FirstVNF_Mem + BR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) + FirstVNF_CPU ) ),ACS ) ) )", "choosing": "Min( ( MUM + ( ( MUC * CS ) - MUR ) ) ,Max( ( ( MUM / MUM ) / MLU ),Max( DS,Max( ( MUM / ( DS / ( RRSe - ( RCSe * RRSe ) ) ) ),MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + FirstVNF_CPU_Server ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( Min( RCSe ,( ( ( RRSe * MLU ) - ( DS / CS ) ) - RMSe ) ) * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) ) + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( ( ( DS / Min( MLU ,DS ) ) + CS ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * FirstVNF_CPU ) - ( PN + ( ( FirstVNF_Mem_Server + ( Max( ( BR * ARS ),BR ) + MRS ) ) - ( FirstVNF_CPU * DDR ) ) ) )", "choosing": "Max( ( MUR * ( CS + DS ) ),( RCSe - Max( CS,( MUC * RCSe ) ) ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( MRS + ACS ) ) )", "choosing": "( Max( ( MUC + ( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( FirstVNF_RAM + BR ) / ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,Max( ( RMSe - ( ( ( RRSe - MUM ) / MUC ) + ( CS * MLU ) ) ),RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "Max( ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ),( MRS / ACS ) )", "choosing": "Max( Min( RMSe ,DS ),Min( MUR ,RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_Mem ) ,( Const - ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - ACS ) ) ) ,( Min( ( ( BR - FirstVNF_CPU ) - RRS ) ,BR ) * Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( Min( Max( MUR,( CS - ( RCSe + ( RMSe + RRSe ) ) ) ) ,Max( ( ( MUM * MUR ) - ( MLU - RRSe ) ),( RRSe + MLU ) ) ) - ( MUM + DS ) ) + Min( ( ( ( RMSe + MLU ) - MLU ) / Max( ( MLU + ( CS * ( RRSe / Min( RMSe ,DS ) ) ) ),DS ) ) ,( ( MUM - RMSe ) - ( RCSe * ( ( Max( MUC,MLU ) / MUR ) + CS ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Min( DDR ,( MRS * ARS ) ) + ( ( CRS + PN ) / Const ) )", "choosing": "( Max( ( ( RCSe + MUM ) - RMSe ),Max( CS,DS ) ) / ( RRSe + MUR ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}], "3": [{"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ) ) / ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "( ( DS / RMSe ) / ( ( CS * RRSe ) + RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26905342750245864}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( MDR / ( FirstVNF_CPU + RRS ) ) - ( BR + Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),Max( MDR,FirstVNF_RAM ) ),Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM * DDR ) ) ) ) )", "choosing": "( ( RCSe - MUR ) / MUM )", "obj1": 0.9486081370449678, "obj2": 0.06273171662660548}, {"determining": "( ( Min( AMS ,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( MRS ,DDR ) )", "choosing": "Max( ( RCSe + ( CS * RRSe ) ),( RCSe + RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.08563991912231869}, {"determining": "( Min( Max( FirstVNF_Mem,MDR ) ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( MUC,RRSe ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 0.8179871520342612, "obj2": 0.1308925423226817}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) + ( Min( ARS ,FirstVNF_Mem_Server ) + ( DDR / Const ) ) ) / ( Max( ( FirstVNF_Mem_Server + ARS ),( AMS + RRS ) ) * Min( ( ARS - MDR ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Max( ( MUR * MUC ),( ( RMSe * MLU ) * Max( CS,CS ) ) ) ,Min( ( RCSe + ( Min( MUC ,( Max( DS,CS ) * MUM ) ) / MUC ) ) ,CS ) )", "obj1": 0.8072805139186295, "obj2": 0.14323037569640382}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 0.8008565310492506, "obj2": 0.18387115597684653}, {"determining": "( ( ARS + PN ) / ( Const - CRS ) )", "choosing": "( ( MUC / RMSe ) / ( Min( RMSe ,MUR ) + RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.24130821262764268}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 0.7858672376873662, "obj2": 0.19027661882600927}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ( Min( RRS ,DDR ) + CRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( DS / RCSe ) )", "obj1": 0.9271948608137045, "obj2": 0.07530743001144816}, {"determining": "( FirstVNF_CPU_Server - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( ( MLU * RMSe ) * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 0.9336188436830836, "obj2": 0.0686905693785935}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( MRS * FirstVNF_Mem ) / ( Min( AMS ,RRS ) * Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.25095619247061157}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_Mem ) * Max( BR,FirstVNF_RAM ) ) * Max( PN,BR ) )", "choosing": "Min( ( ( RMSe / MLU ) - RMSe ) ,( ( RCSe + MUR ) / Max( DS,MLU ) ) )", "obj1": 0.6852248394004282, "obj2": 0.26060485548927326}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.8008565310492506, "obj2": 0.18387115597684653}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) * ( ACS * FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS * RRSe ),Max( RMSe,RCSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,( Min( MLU ,MUM ) / ( MUR + MUM ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2616468287504279}, {"determining": "( Min( ( FirstVNF_CPU + Max( Max( FirstVNF_RAM,( FirstVNF_CPU / ( ( BR / FirstVNF_Mem_Server ) - DDR ) ) ),( MDR + FirstVNF_Mem ) ) ) ,FirstVNF_Mem_Server ) * Min( ( RRS + FirstVNF_CPU_Server ) ,BR ) )", "choosing": "Max( Min( MUM ,( MUM + MUR ) ),( MUC + MUC ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( DS - RMSe ) + ( MUR + MUR ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( DDR - DDR ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + FirstVNF_CPU ) - ( AMS * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS * ( Max( MUC,( RMSe / Min( ( MUC / RMSe ) ,( RMSe + RMSe ) ) ) ) + DS ) ),( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + FirstVNF_CPU_Server ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( Min( RCSe ,( ( ( RRSe * MLU ) - ( DS / CS ) ) - RMSe ) ) * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) ) + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( ( ( DS / Min( MLU ,DS ) ) + CS ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_CPU ) ,( Min( BR ,RRS ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) - Const ) - Min( DDR ,RRS ) )", "choosing": "Max( ( CS * DS ),Min( MUC ,( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( Max( MDR,MDR ) * AMS ) ) - Max( ( BR + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( MRS * PN ) ) ),MRS ) )", "choosing": "Max( ( RCSe / ( ( RMSe + RRSe ) * ( MUM + ( MLU + MUR ) ) ) ),Min( Min( MUM ,( MLU - RMSe ) ) ,( Max( ( Max( Min( ( DS - CS ) ,( RRSe + MUM ) ),MUM ) - Min( CS ,( ( CS / RCSe ) / MLU ) ) ),MUC ) + ( RMSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR / FirstVNF_RAM ) ,Max( FirstVNF_Mem,CRS ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,CRS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,CRS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,CRS ) - Max( Const,FirstVNF_RAM_Server ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( ( MUR + MUR ) - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,CRS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM_Server ) / Const ) * Min( FirstVNF_CPU ,DDR ) ) + Max( RRS,ARS ) )", "choosing": "Max( ( ( RRSe / RRSe ) * MUR ),( ( ( MLU + RCSe ) + ( DS * MLU ) ) + MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.26663496702898787}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( AMS + MRS ) - ( ( RRS + ( ( ARS - RRS ) + Const ) ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.03190735564196136}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( Min( AMS ,FirstVNF_Mem_Server ) - FirstVNF_RAM ) / Min( MRS ,DDR ) )", "choosing": "Max( ( RCSe + ( CS * RRSe ) ),( RCSe + RMSe ) )", "obj1": 0.9122055674518201, "obj2": 0.08563991912231869}, {"determining": "( ( MDR / ( FirstVNF_CPU + RRS ) ) - ( BR + Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),Max( MDR,FirstVNF_RAM ) ),Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM * DDR ) ) ) ) )", "choosing": "( ( RCSe - MUR ) / MUM )", "obj1": 0.9486081370449678, "obj2": 0.06273171662660548}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.7730192719486081, "obj2": 0.17480051844584701}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( ARS + PN ) / ( Const - CRS ) )", "choosing": "( ( MUC / RMSe ) / ( Min( RMSe ,MUR ) + RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.24130821262764268}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( ( DS / RCSe ) * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( MUM,( DS / RCSe ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( Min( ( DS * ( ( MLU - ( MUM * ( CS + DS ) ) ) * CS ) ) ,( MUM * CS ) ) / RCSe ) )", "obj1": 0.9336188436830836, "obj2": 0.06848440028554408}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ( ( Min( RRS ,DDR ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( ( MLU - ( MUM * ( CS + DS ) ) ) * CS ) )", "obj1": 0.9229122055674518, "obj2": 0.08200749880292203}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUC - DS ) - ( RCSe + RCSe ) ) / ( Min( RMSe ,MUR ) * Min( MUR ,RRSe ) ) )", "obj1": 0.7730192719486081, "obj2": 0.17480051844584701}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ( Min( RRS ,DDR ) + CRS ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( DS / RCSe ) )", "obj1": 0.9271948608137045, "obj2": 0.07530743001144816}, {"determining": "( ( MRS * FirstVNF_Mem ) / ( Min( AMS ,RRS ) * Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.25095619247061157}, {"determining": "( ( ( Max( AMS,( Const * CRS ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( DDR / FirstVNF_RAM_Server ) + ( ( ( AMS + ( ( Max( MRS,( BR / CRS ) ) - ( ( MDR - AMS ) / Max( CRS,FirstVNF_RAM_Server ) ) ) * Const ) ) + MDR ) - ( BR - ( FirstVNF_RAM / ( Max( ( FirstVNF_CPU_Server / ARS ),PN ) - Min( Max( ( ACS + FirstVNF_Mem ),DDR ) ,Min( ARS ,Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( MUC ,( ( ( MUR / MLU ) - Min( CS ,RRSe ) ) - RMSe ) ) - ( ( MUC + DS ) + MUC ) ) - RMSe ) / ( MUC / RRSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,( Min( MLU ,MUM ) / ( MUR + MUM ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2616468287504279}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM_Server ) / Const ) * Min( FirstVNF_CPU ,DDR ) ) + Max( RRS,ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) * ( RMSe / MUM ) ) * ( CS / ( RMSe - MUR ) ) ) / ( Min( MLU ,( ( Max( ( Max( DS,MLU ) * CS ),( CS + DS ) ) / Max( ( ( MLU - MUC ) * RCSe ),MUC ) ) / MUC ) ) + ( ( MLU - Max( DS,( ( MUC - ( RRSe * RCSe ) ) + RRSe ) ) ) * RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "Max( Max( ( FirstVNF_Mem_Server * ARS ),( Const - CRS ) ),Min( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( ( Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) - ( RCSe + RCSe ) ) / ( Min( RMSe ,MUR ) * Min( MUR ,RRSe ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) )", "choosing": "( ( MUR * ( RRSe / RRSe ) ) / ( ( ( MLU + RCSe ) + ( DS * MLU ) ) + MUM ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( DS - RMSe ) + ( MUR + MUR ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + FirstVNF_CPU_Server ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( Min( RCSe ,( ( ( RRSe * MLU ) - ( DS / CS ) ) - RMSe ) ) * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( MRS,MRS ),Max( ACS,PN ) ) - ( ( DDR / Const ) + Min( ARS ,FirstVNF_Mem_Server ) ) ) / ( MDR + FirstVNF_RAM ) )", "choosing": "Max( Max( Max( ( DS / RCSe ),Max( RCSe,MUM ) ),( ( RRSe + CS ) + Min( MLU ,MLU ) ) ),( ( ( RRSe - MUC ) * ( MUM * RMSe ) ) + ( Min( RRSe ,MUM ) / ( CS / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( Max( Min( Max( ( DDR / ACS ),( AMS - RRS ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) ) + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( ( ( DS / Min( MLU ,DS ) ) + CS ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_CPU ) ,( Min( BR ,RRS ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) - Const ) - Min( DDR ,RRS ) )", "choosing": "Max( ( CS * DS ),Min( MUC ,( MUM - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( Max( MDR,MDR ) * AMS ) ) - Max( ( BR + ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) / ( MRS * PN ) ) ),MRS ) )", "choosing": "Max( ( RCSe / ( ( RMSe + RRSe ) * ( MUM + ( MLU + MUR ) ) ) ),Min( Min( MUM ,( MLU - RMSe ) ) ,( Max( ( Max( Min( ( DS - CS ) ,( RRSe + MUM ) ),MUM ) - Min( CS ,( ( CS / RCSe ) / MLU ) ) ),MUC ) + ( RMSe - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MDR / FirstVNF_RAM ) ,Max( FirstVNF_Mem,CRS ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,Max( RRSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * Const ) + ( Max( MDR,AMS ) - ( Min( FirstVNF_Mem ,( ( ARS - RRS ) + ( FirstVNF_RAM * FirstVNF_RAM ) ) ) + DDR ) ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( Min( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) ,RCSe ) ,( DS / ( ( Max( ( CS * CS ),( MUR + Max( RCSe,MUR ) ) ) + MUM ) * CS ) ) ),( ( DS + RRSe ) + Min( ( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) + MRS ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - ( MLU / RMSe ) ) ) / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ( ( Min( RRS ,DDR ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( ( MLU - ( MUM * ( CS + DS ) ) ) * CS ) )", "obj1": 0.9229122055674518, "obj2": 0.08200749880292203}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( AMS + MRS ) - ( ( RRS + ( ( ARS - RRS ) + Const ) ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.03190735564196136}, {"determining": "( Max( MRS,Const ) + ( FirstVNF_Mem - Max( ( ACS * FirstVNF_Mem_Server ),( Min( FirstVNF_CPU ,Max( FirstVNF_CPU,( FirstVNF_RAM_Server + Max( ACS,FirstVNF_Mem ) ) ) ) * BR ) ) ) )", "choosing": "( Min( DS ,RMSe ) + RMSe )", "obj1": 0.721627408993576, "obj2": 0.2388284933993656}, {"determining": "( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( RCSe,( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.16273831309586884}, {"determining": "( Min( Min( FirstVNF_RAM ,CRS ) ,Max( MDR,ARS ) ) - ( CRS + ( MRS * DDR ) ) )", "choosing": "Min( Max( ( DS * MUR ),RRSe ) ,( Min( Min( DS ,Min( ( ( Max( MUM,CS ) / RCSe ) - Max( ( RRSe / RCSe ),Max( MUR,RMSe ) ) ) ,( Min( ( MUC - MUR ) ,MUC ) + MUM ) ) ) ,( Max( MLU,( ( RCSe / Max( MLU,RRSe ) ) * Min( ( RRSe - RRSe ) ,MLU ) ) ) - MUR ) ) * Max( RMSe,MUM ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( ( DS / RCSe ) * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( MDR / ( FirstVNF_CPU + RRS ) ) - ( BR + Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU ),Max( MDR,FirstVNF_RAM ) ),Min( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ,( FirstVNF_RAM * DDR ) ) ) ) )", "choosing": "( ( RCSe - MUR ) / MUM )", "obj1": 0.9486081370449678, "obj2": 0.06273171662660548}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( CRS * FirstVNF_RAM ) / Max( PN,BR ) ) - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 0.9593147751605996, "obj2": 0.06211364729901527}, {"determining": "( ( ( Min( ( PN * FirstVNF_CPU ) ,( Min( BR ,RRS ) / FirstVNF_RAM ) ) + FirstVNF_RAM ) - Const ) - Min( DDR ,RRS ) )", "choosing": "Max( ( CS * DS ),Min( MUC ,( MUM - MUR ) ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ARS + PN ) / ( Const - CRS ) )", "choosing": "( ( MUC / RMSe ) / ( Min( RMSe ,MUR ) + RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.24130821262764268}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.961456102783726, "obj2": 0.049215831932119564}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.7730192719486081, "obj2": 0.17480051844584701}, {"determining": "( ( AMS + MRS ) - MDR )", "choosing": "Min( Max( MUC,RMSe ) ,( MUM * CS ) )", "obj1": 0.7794432548179872, "obj2": 0.1692170471343484}, {"determining": "( ( ( ( MDR + FirstVNF_CPU ) + MRS ) + MRS ) - ( ( CRS * AMS ) / Max( PN,BR ) ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + Min( ( ( RMSe + ( RRSe * MLU ) ) - ( MUM + Min( MUM ,( MUM / MLU ) ) ) ) ,( MUM - ( RMSe + RCSe ) ) ) ) ,Max( MUM,Min( MUM ,CS ) ) ) )", "obj1": 0.9721627408993576, "obj2": 0.04286800567498442}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RMSe,( DS / RCSe ) )", "obj1": 0.9336188436830836, "obj2": 0.06848440028554408}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( FirstVNF_RAM_Server + MRS ) - ( AMS / FirstVNF_RAM ) )", "choosing": "( Max( ( RCSe + MUC ),( RCSe + RMSe ) ) * ( RMSe - MUC ) )", "obj1": 0.9700214132762313, "obj2": 0.04359111567677731}, {"determining": "( ( MRS * FirstVNF_Mem ) / ( Min( AMS ,RRS ) * Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.25095619247061157}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 0.7751605995717344, "obj2": 0.1727111058870027}, {"determining": "( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) )", "obj1": 0.7858672376873662, "obj2": 0.16273831309586884}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),( Min( ( DS * ( ( MLU - ( MUM * ( CS + DS ) ) ) * CS ) ) ,( MUM * CS ) ) / RCSe ) )", "obj1": 0.9336188436830836, "obj2": 0.06848440028554408}, {"determining": "( ( ( Max( AMS,( Const * CRS ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.7730192719486081, "obj2": 0.17480051844584701}, {"determining": "( ( ( AMS + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) + MRS ) / ( ( ( FirstVNF_RAM_Server + PN ) - ARS ) * ( FirstVNF_Mem_Server / AMS ) ) )", "choosing": "Min( Min( ( RCSe * MUC ) ,Max( ( Min( Min( MUM ,RMSe ) ,CS ) - ( MUM - DS ) ),MUC ) ) ,( ( DS / DS ) * CS ) )", "obj1": 0.961456102783726, "obj2": 0.049215831932119564}, {"determining": "( ( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,( Min( MLU ,MUM ) / ( MUR + MUM ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2616468287504279}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM_Server ) / Const ) * Min( FirstVNF_CPU ,DDR ) ) + Max( RRS,ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) * ( RMSe / MUM ) ) * ( CS / ( RMSe - MUR ) ) ) / ( Min( MLU ,( ( Max( ( Max( DS,MLU ) * CS ),( CS + DS ) ) / Max( ( ( MLU - MUC ) * RCSe ),MUC ) ) / MUC ) ) + ( ( MLU - Max( DS,( ( MUC - ( RRSe * RCSe ) ) + RRSe ) ) ) * RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MLU / RMSe ),( DS / RCSe ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "Max( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ),Min( ( BR + RRS ) ,( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC - DS ) - ( RCSe + ( MLU / RMSe ) ) ) / ( Min( RMSe ,MUR ) * Min( MUR ,RRSe ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( Max( AMS,( Const * CRS ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( MUR * ( RRSe / RRSe ) ) / ( ( ( MLU + RCSe ) + ( DS * MLU ) ) + MUM ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( ( MLU + RCSe ) + ( DS * MLU ) ) + MUM ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const + Max( ( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) ),DDR ) )", "choosing": "( ( RRSe / RRSe ) / ( DS - RMSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2689929563840595}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( AMS + MRS ) - ( ( RRS + ( ( ARS - RRS ) + Const ) ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.03190735564196136}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( Max( MRS,Const ) + ( FirstVNF_Mem - Max( ( ACS * FirstVNF_Mem_Server ),( Min( FirstVNF_CPU ,Max( FirstVNF_CPU,( FirstVNF_RAM_Server + Max( ACS,FirstVNF_Mem ) ) ) ) * BR ) ) ) )", "choosing": "( Min( DS ,RMSe ) + RMSe )", "obj1": 0.721627408993576, "obj2": 0.2388284933993656}, {"determining": "( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "Max( RCSe,( DS / RCSe ) )", "obj1": 0.7858672376873662, "obj2": 0.16273831309586884}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( Min( Min( FirstVNF_RAM ,CRS ) ,Max( MDR,ARS ) ) - ( CRS + ( MRS * DDR ) ) )", "choosing": "Min( Max( ( DS * MUR ),RRSe ) ,( Min( Min( DS ,Min( ( ( Max( MUM,CS ) / RCSe ) - Max( ( RRSe / RCSe ),Max( MUR,RMSe ) ) ) ,( Min( ( MUC - MUR ) ,MUC ) + MUM ) ) ) ,( Max( MLU,( ( RCSe / Max( MLU,RRSe ) ) * Min( ( RRSe - RRSe ) ,MLU ) ) ) - MUR ) ) * Max( RMSe,MUM ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ARS + PN ) / ( Const - CRS ) )", "choosing": "( ( MUC / RMSe ) / ( Min( RMSe ,MUR ) + RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.24130821262764268}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.7730192719486081, "obj2": 0.17480051844584701}, {"determining": "( ( AMS + MRS ) - MDR )", "choosing": "Min( Max( MUC,RMSe ) ,( MUM * CS ) )", "obj1": 0.7794432548179872, "obj2": 0.1692170471343484}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( CRS * FirstVNF_RAM ) / Max( PN,BR ) ) - ( ( ( ( AMS + MRS ) + MRS ) + MRS ) + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - CS ) + RCSe ) ,Max( MLU,Min( MUM ,CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.026603509148645666}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( ( MRS * FirstVNF_Mem ) / ( Min( AMS ,RRS ) * Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( RRSe * CS ) ,( RRSe * RMSe ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.69593147751606, "obj2": 0.25095619247061157}, {"determining": "( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * CS ) )", "obj1": 0.7751605995717344, "obj2": 0.1727111058870027}, {"determining": "( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUM ,RRSe ) - Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) )", "obj1": 0.7858672376873662, "obj2": 0.16273831309586884}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( RRS + FirstVNF_Mem_Server ) / ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.7730192719486081, "obj2": 0.17480051844584701}, {"determining": "( ( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,( Min( MLU ,MUM ) / ( MUR + MUM ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2616468287504279}, {"determining": "( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM_Server ) / Const ) * Min( FirstVNF_CPU ,DDR ) ) + Max( RRS,ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) * ( RMSe / MUM ) ) * ( CS / ( RMSe - MUR ) ) ) / ( Min( MLU ,( ( Max( ( Max( DS,MLU ) * CS ),( CS + DS ) ) / Max( ( ( MLU - MUC ) * RCSe ),MUC ) ) / MUC ) ) + ( ( MLU - Max( DS,( ( MUC - ( RRSe * RCSe ) ) + RRSe ) ) ) * RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( DDR + FirstVNF_RAM ) + ( FirstVNF_RAM + DDR ) )", "choosing": "( ( DS * RRSe ) * ( MUR - DS ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( Max( AMS,( Const * CRS ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( ( MUR * ( RRSe / RRSe ) ) / ( ( ( MLU + RCSe ) + ( DS * MLU ) ) + MUM ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( FirstVNF_Mem / Min( MRS ,( MRS / FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe + MUC ),( RCSe + MUR ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Const + Max( ( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) ),DDR ) )", "choosing": "( ( RRSe / RRSe ) / ( DS - RMSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2689929563840595}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( Max( MRS,Const ) + ( ( Const / Min( ( FirstVNF_CPU_Server - DDR ) ,AMS ) ) - BR ) )", "choosing": "( ( ( Max( MUR,RMSe ) - MUR ) / Max( ( MUR + MLU ),( MUC + MUC ) ) ) + Min( ( MUR / DS ) ,RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( AMS + MRS ) - ( ( RRS + ( ( ARS - RRS ) + Const ) ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUM * CS ),Max( Min( ( ( ( ( MUR + MUM ) * RMSe ) + Max( ( MUR - ( DS / RCSe ) ),RRSe ) ) - RCSe ) ,( DS / Max( DS,( RCSe / MUR ) ) ) ),( ( DS + RRSe ) + Min( MLU ,( RCSe - ( Max( Min( RMSe ,MUR ),MLU ) + MUC ) ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.03190735564196136}, {"determining": "( Max( MRS,Const ) + ( FirstVNF_Mem - Max( ( ACS * FirstVNF_Mem_Server ),( Min( FirstVNF_CPU ,Max( FirstVNF_CPU,( FirstVNF_RAM_Server + Max( ACS,FirstVNF_Mem ) ) ) ) * BR ) ) ) )", "choosing": "( Min( DS ,RMSe ) + RMSe )", "obj1": 0.721627408993576, "obj2": 0.2388284933993656}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( ( ACS / AMS ) / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( ( MUC + MLU ) * MUM ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) - DDR )", "choosing": "Max( ( MUC / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.6916488222698073, "obj2": 0.24771602050370406}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( ARS + PN ) / ( Const - CRS ) )", "choosing": "( ( MUC / RMSe ) / ( Min( RMSe ,MUR ) + RRSe ) )", "obj1": 0.708779443254818, "obj2": 0.24130821262764268}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,( Min( MLU ,MUM ) / ( MUR + MUM ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2616468287504279}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( ( Max( ARS,FirstVNF_RAM_Server ) / Const ) * Min( FirstVNF_CPU ,DDR ) ) + Max( RRS,ARS ) )", "choosing": "( ( ( ( RCSe - RMSe ) * ( RMSe / MUM ) ) * ( CS / ( RMSe - MUR ) ) ) / ( Min( MLU ,( ( Max( ( Max( DS,MLU ) * CS ),( CS + DS ) ) / Max( ( ( MLU - MUC ) * RCSe ),MUC ) ) / MUC ) ) + ( ( MLU - Max( DS,( ( MUC - ( RRSe * RCSe ) ) + RRSe ) ) ) * RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( MRS - Const ) + Max( ( Const + FirstVNF_RAM ),( Min( FirstVNF_RAM_Server ,MRS ) * MDR ) ) )", "choosing": "( ( MUR * ( RRSe / RRSe ) ) / ( ( ( CS / ( RRSe - ( DS + CS ) ) ) / Max( CS,DS ) ) + Max( Max( MUM,RRSe ),( DS * MLU ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2599642637920695}, {"determining": "( ( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / PN ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( MUC - RMSe ) ) / RCSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( MRS - Const ) + Max( ( Const + FirstVNF_RAM ),( Min( MDR ,MRS ) * MDR ) ) )", "choosing": "( ( MUR * ( RRSe / RRSe ) ) / ( MUM + Max( Max( MUM,RRSe ),( DS * MLU ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ARS ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / Max( PN,BR ) ) - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),( ( MUM - ( CS + RCSe ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + FirstVNF_CPU ) - ( AMS * FirstVNF_CPU_Server ) )", "choosing": "Max( ( CS * ( Max( MUC,( RMSe / Min( ( MUC / RMSe ) ,( RMSe + RMSe ) ) ) ) + DS ) ),( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( Max( MRS,Const ) + ( ( Const / Min( ( FirstVNF_CPU_Server - DDR ) ,AMS ) ) - BR ) )", "choosing": "( ( ( Max( MUR,RMSe ) - MUR ) / Max( ( MUR + MLU ),( MUC + MUC ) ) ) + Min( ( MUR / DS ) ,RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( ( ACS / AMS ) / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( ( MUC + MLU ) * MUM ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) - DDR )", "choosing": "Max( ( MUC / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.6916488222698073, "obj2": 0.24771602050370406}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( Max( Max( Min( MRS ,DDR ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( Max( ( RCSe + MUC ),( RCSe + RMSe ) ),MUR ) + MUM ) )", "obj1": 0.683083511777302, "obj2": 0.25946605423499486}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( FirstVNF_CPU + Min( ( Min( ( ( ( DDR - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,BR ) * FirstVNF_CPU_Server ) ,Const ) ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RRSe + MUM ),( MUC + RRSe ) ) + ( Max( MUM,Max( CS,RCSe ) ) - MUM ) )", "obj1": 0.6895074946466809, "obj2": 0.25382893718006005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( Max( MRS,Const ) + Max( FirstVNF_Mem,DDR ) ) + ( CRS - Const ) )", "choosing": "( ( RRSe - MUM ) + Max( MUR,( Min( MLU ,MUM ) / ( MUR + MUM ) ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2616468287504279}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( ( FirstVNF_RAM + DDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( MUR + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / PN ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( MUC - RMSe ) ) / RCSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( Max( Max( ( FirstVNF_Mem / Min( MRS ,DDR ) ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( RCSe + MUM ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ARS ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( Max( MRS,Const ) + ( ( Const / Min( ( FirstVNF_CPU_Server - DDR ) ,AMS ) ) - BR ) )", "choosing": "( ( ( Max( MUR,RMSe ) - MUR ) / Max( ( MUR + MLU ),( MUC + MUC ) ) ) + Min( ( MUR / DS ) ,RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "( ( Max( ( MRS + ACS ),( FirstVNF_CPU_Server - CRS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( MUC + Max( MUR,MUR ) ),MUR ) + ( MLU / DS ) )", "obj1": 0.7066381156316917, "obj2": 0.2475060504879198}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( ( ACS / AMS ) / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( ( MUC + MLU ) * MUM ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) - DDR )", "choosing": "Max( ( MUC / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.6916488222698073, "obj2": 0.24771602050370406}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( FirstVNF_CPU + Min( ( Min( ( ( ( DDR - FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,BR ) * FirstVNF_CPU_Server ) ,Const ) ) + ( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RRSe + MUM ),( MUC + RRSe ) ) + ( Max( MUM,Max( CS,RCSe ) ) - MUM ) )", "obj1": 0.6895074946466809, "obj2": 0.25382893718006005}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Const - MRS ) + Max( ( Const + FirstVNF_RAM ),Min( MRS ,Const ) ) )", "choosing": "( Min( Min( ( ( RCSe - RCSe ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25519468902435155}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ARS ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + ( FirstVNF_CPU_Server * Min( ( ARS + ( RRS - ACS ) ) ,RRS ) ) ),BR ) / ( ( ( ( ACS * ACS ) + FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) * ARS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( MUM * CS ),Min( ( ( MUM - Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,( MUC - MUR ) ) ) + RCSe ) ,( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( Max( MRS,Const ) + ( ( Const / Min( ( FirstVNF_CPU_Server - DDR ) ,AMS ) ) - BR ) )", "choosing": "( ( ( Max( MUR,RMSe ) - MUR ) / Max( ( MUR + MLU ),( MUC + MUC ) ) ) + Min( ( MUR / DS ) ,RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( ( ACS / AMS ) / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( ( MUC + MLU ) * MUM ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.20047953827613096}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ARS ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + ( FirstVNF_CPU_Server * Min( ( ARS + ( RRS - ACS ) ) ,RRS ) ) ),BR ) / ( ( ( ( ACS * ACS ) + FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) * ARS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( MUM * CS ),Min( ( ( MUM - Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,( MUC - MUR ) ) ) + RCSe ) ,( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_RAM_Server - ( FirstVNF_CPU / AMS ) ),BR ) / ( ARS * ( ( ( ACS * ACS ) - FirstVNF_Mem ) * ( RRS / ACS ) ) ) ) - ( BR / ( ACS - AMS ) ) )", "choosing": "Max( Min( ( RCSe / ( Max( ( MLU - ( ( MUM + MUM ) - CS ) ),Min( MUM ,Max( CS,MUC ) ) ) / MUR ) ) ,MLU ),( CS + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU_Server * Min( ( ARS + ( RRS - ACS ) ) ,RRS ) ) ),BR ) / ( ( ( ( ACS * ACS ) + FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) * ARS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( MUM * CS ),Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU_Server * Min( ( ARS + ( RRS - ACS ) ) ,RRS ) ) ),BR ) / ( ( ( ( ACS * ACS ) + FirstVNF_Mem ) * ( Min( ACS ,BR ) - FirstVNF_CPU ) ) * ARS ) ) - ( AMS + MRS ) )", "choosing": "Max( Max( RCSe,Max( DS,MLU ) ),Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),Max( RRS,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + ( AMS + ( ( PN - ( ( MDR - MRS ) / Max( CRS,FirstVNF_RAM_Server ) ) ) * Const ) ) )", "choosing": "( ( Max( ( ( ( MUR * ( ( MUM - RCSe ) - ( RRSe / RRSe ) ) ) + CS ) / RMSe ),( CS / ( RRSe - ( DS + CS ) ) ) ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( Max( MRS,Const ) + ( ( Const / Min( ( FirstVNF_CPU_Server - DDR ) ,AMS ) ) - BR ) )", "choosing": "( ( ( Max( MUR,RMSe ) - MUR ) / Max( ( MUR + MLU ),( MUC + MUC ) ) ) + Min( ( MUR / DS ) ,RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "Min( Max( ( Min( FirstVNF_CPU ,ARS ) - Max( ( Max( ( CRS / RRS ),DDR ) * ( BR * MDR ) ),FirstVNF_RAM_Server ) ),Min( Const ,( ACS - FirstVNF_Mem ) ) ) ,Min( Const ,( FirstVNF_CPU / ( AMS - RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( MUR + ( ( ( Min( RRSe ,MUM ) + ( MUM / ( CS - MUM ) ) ) - MUM ) - CS ) ) ) / ( MUR + MUM ) )", "obj1": 0.7387580299785867, "obj2": 0.2001369489881229}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( Min( ( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) ) ,( ( CRS / AMS ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ),( Min( ( MDR - FirstVNF_RAM ) ,( ACS - PN ) ) * ( ( ACS - MDR ) / ( Const + MRS ) ) ) )", "choosing": "( ( ( DS / Min( ( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) ) ,DS ) ) + CS ) - ( RCSe * CS ) )", "obj1": 0.9892933618843683, "obj2": 0.0157058284537371}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( AMS * ARS ) ) ),MRS ),BR ) ) / Max( Max( ( FirstVNF_Mem_Server / RRS ),FirstVNF_Mem_Server ),BR ) ) )", "choosing": "Max( Max( Min( Max( RRSe,Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ARS ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( ARS + ( FirstVNF_CPU_Server * Min( ( ARS + ( RRS - ACS ) ) ,RRS ) ) ),BR ) / ( ( ( ( ACS * ACS ) + FirstVNF_Mem ) * ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) * ARS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( MUM * CS ),Min( ( ( MUM - Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,( MUC - MUR ) ) ) + RCSe ) ,( MUC - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),Max( RRS,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ),FirstVNF_Mem_Server ) + ( AMS + ( ( PN - ( ( MDR - MRS ) / Max( CRS,FirstVNF_RAM_Server ) ) ) * Const ) ) )", "choosing": "( ( Max( ( ( ( MUR * ( ( MUM - RCSe ) - ( RRSe / RRSe ) ) ) + CS ) / RMSe ),( CS / ( RRSe - ( DS + CS ) ) ) ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( Max( MRS,Const ) + ( ( Const / Min( ( FirstVNF_CPU_Server - DDR ) ,AMS ) ) - BR ) )", "choosing": "( ( ( Max( MUR,RMSe ) - MUR ) / Max( ( MUR + MLU ),( MUC + MUC ) ) ) + Min( ( MUR / DS ) ,RRSe ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "Min( Max( ( Min( FirstVNF_CPU ,ARS ) - Max( ( Max( ( CRS / RRS ),DDR ) * ( BR * MDR ) ),FirstVNF_RAM_Server ) ),Min( Const ,( ACS - FirstVNF_Mem ) ) ) ,Min( Const ,( FirstVNF_CPU / ( AMS - RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( MUR + ( ( ( Min( RRSe ,MUM ) + ( MUM / ( CS - MUM ) ) ) - MUM ) - CS ) ) ) / ( MUR + MUM ) )", "obj1": 0.7387580299785867, "obj2": 0.2001369489881229}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU_Server * Max( Min( ( MRS / FirstVNF_RAM ) ,DDR ),( ( AMS / RRS ) * PN ) ) ) ),FirstVNF_Mem_Server ) - ( MDR * RRS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( RRSe / ( MLU * RCSe ) ) * ( MUC / ( RRSe + MUM ) ) ),Min( ( ( ( CS + DS ) - MUM ) + CS ) ,( MUC - MUR ) ) )", "obj1": 0.7044967880085653, "obj2": 0.23834718281949382}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( Min( RCSe ,Max( MUC,MUC ) ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server / MDR ) + RRS ) ) * FirstVNF_Mem ) + ( FirstVNF_Mem_Server / CRS ) )", "choosing": "( ( RMSe - Max( MLU,RMSe ) ) / ( DS - RMSe ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( ( ( MUC - ( MUR + RMSe ) ) / DS ),MLU ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( ARS + FirstVNF_CPU_Server ) ) ) ) ) ) + CRS ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUC + MLU ) * ( DS / RCSe ) ) ) ,( MUM * CS ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "Min( Max( ( Min( FirstVNF_CPU ,ARS ) - Max( ( Max( ( CRS / RRS ),DDR ) * ( BR * MDR ) ),FirstVNF_RAM_Server ) ),Min( Const ,( ACS - FirstVNF_Mem ) ) ) ,Min( Const ,( FirstVNF_CPU / ( AMS - RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( MUR + ( ( ( Min( RRSe ,MUM ) + ( MUM / ( CS - MUM ) ) ) - MUM ) - CS ) ) ) / ( MUR + MUM ) )", "obj1": 0.7387580299785867, "obj2": 0.2001369489881229}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU_Server * Max( Min( ( MRS / FirstVNF_RAM ) ,DDR ),( ( AMS / RRS ) * PN ) ) ) ),FirstVNF_Mem_Server ) - ( MDR * RRS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( RRSe / ( MLU * RCSe ) ) * ( MUC / ( RRSe + MUM ) ) ),Min( ( ( ( CS + DS ) - MUM ) + CS ) ,( MUC - MUR ) ) )", "obj1": 0.7044967880085653, "obj2": 0.23834718281949382}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( MUC,Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + ( RMSe * CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server / MDR ) + RRS ) ) * FirstVNF_Mem ) + ( FirstVNF_Mem_Server / CRS ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),( RRSe * MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( Min( RCSe ,Max( MUC,MUC ) ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( AMS + MRS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( Min( ( ( MUM - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) - ( CS + RCSe ) ) + RCSe ) ,Max( MLU,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( BR / Const ) - FirstVNF_CPU ) ) / Max( PN,( Max( FirstVNF_CPU,MDR ) - ( AMS + ( Min( CRS ,( RRS * MRS ) ) / ( ( RRS * ARS ) / Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) ) ) ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( Min( Min( ( RCSe + RRSe ) ,( DS - ( RRSe * Max( CS,CS ) ) ) ) ,MLU ) + ( RCSe * ( MUM + DS ) ) ) + MUR ),Min( ( ( MUM - Min( ( RCSe * ( CS + MUC ) ) ,MUM ) ) + RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( ( Const - ARS ),( FirstVNF_CPU_Server / DDR ) ) ) ,( FirstVNF_CPU_Server - MDR ) )", "choosing": "( ( Min( RMSe ,MUM ) / RCSe ) + ( MUM * CS ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "Min( Max( ( Min( FirstVNF_CPU ,ARS ) - Max( ( Max( ( CRS / RRS ),DDR ) * ( BR * MDR ) ),FirstVNF_RAM_Server ) ),Min( Const ,( ACS - FirstVNF_Mem ) ) ) ,Min( Const ,( FirstVNF_CPU / ( AMS - RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( MUR + ( ( ( Min( RRSe ,MUM ) + ( MUM / ( CS - MUM ) ) ) - MUM ) - CS ) ) ) / ( MUR + MUM ) )", "obj1": 0.7387580299785867, "obj2": 0.2001369489881229}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( Max( ( FirstVNF_CPU + ( FirstVNF_CPU_Server * Max( Min( ( MRS / FirstVNF_RAM ) ,DDR ),( ( AMS / RRS ) * PN ) ) ) ),FirstVNF_Mem_Server ) - ( MDR * RRS ) ) - ( AMS + MRS ) )", "choosing": "Max( ( ( RRSe / ( MLU * RCSe ) ) * ( MUC / ( RRSe + MUM ) ) ),Min( ( ( ( CS + DS ) - MUM ) + CS ) ,( MUC - MUR ) ) )", "obj1": 0.7044967880085653, "obj2": 0.23834718281949382}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( AMS + MRS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( ( FirstVNF_CPU_Server / MRS ) ,Max( Max( ( CRS - Max( FirstVNF_RAM,( FirstVNF_Mem * ARS ) ) ),MRS ),BR ) ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( Min( Max( RCSe,Max( ( ( DS - ( MUR + RMSe ) ) / DS ),MLU ) ) ,( DS + RMSe ) ),RMSe ),( DS / RCSe ) )", "obj1": 0.9807280513918629, "obj2": 0.02544142594251482}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( RCSe,( DS / Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),RRSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.01805993365667566}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,MLU ) ),( DS / RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( FirstVNF_Mem_Server - FirstVNF_Mem ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) ) - ( Min( MRS ,FirstVNF_CPU_Server ) / Min( ARS ,( FirstVNF_Mem - ( ACS / ( ( AMS + MRS ) - ( CRS - BR ) ) ) ) ) ) )", "choosing": "Max( ( MUM * CS ),( ( MUC - ( ( ( ( MLU + ( DS / MUC ) ) / RMSe ) + RCSe ) + ( MUM - DS ) ) ) / RMSe ) )", "obj1": 0.9828693790149893, "obj2": 0.021362039092760302}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( ARS ,( FirstVNF_Mem - ( ACS / AMS ) ) ) + ( FirstVNF_Mem - ( ACS / AMS ) ) ) / ( MRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( DS * ( ( MUM + MLU ) * MUM ) ) ,( MUM * CS ) )", "obj1": 0.9850107066381156, "obj2": 0.01917235682540151}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "( ( RMSe - Max( MLU,RMSe ) ) / ( DS - RMSe ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( MUC,Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + ( RMSe * CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( PN + ( FirstVNF_CPU - ( FirstVNF_CPU / FirstVNF_Mem ) ) ) - MRS )", "choosing": "Max( ( Min( ( MUC / ( ( RCSe / CS ) + RRSe ) ) ,Min( RRSe ,RMSe ) ) / RCSe ),( Min( Max( MUC,MUC ) ,( MUM * CS ) ) / RMSe ) )", "obj1": 0.9143468950749465, "obj2": 0.07983998241674453}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( Min( Min( FirstVNF_Mem ,( ( ARS - RRS ) + Const ) ) ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( ( MLU + RCSe ) - ( RMSe + MUM ) ) * ( Max( MUC,MUM ) - Min( CS ,RMSe ) ) ) + ( RMSe + ( ( RCSe / MLU ) / ( MUC * MUC ) ) ) )", "obj1": 0.9250535331905781, "obj2": 0.07481817009005584}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "Min( Max( ( Min( FirstVNF_CPU ,ARS ) - Max( ( Max( ( CRS / RRS ),DDR ) * ( BR * MDR ) ),FirstVNF_RAM_Server ) ),Min( Const ,( ACS - FirstVNF_Mem ) ) ) ,Min( Const ,( FirstVNF_CPU / ( AMS - RRS ) ) ) )", "choosing": "( ( ( DS - RMSe ) / ( MUR + ( ( ( Min( RRSe ,MUM ) + ( MUM / ( CS - MUM ) ) ) - MUM ) - CS ) ) ) / ( MUR + MUM ) )", "obj1": 0.7387580299785867, "obj2": 0.2001369489881229}, {"determining": "( ( ( BR - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) ),( DS / RCSe ) )", "obj1": 0.9657387580299786, "obj2": 0.02078159688744608}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( BR - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( MUM + MUC ) )", "obj1": 0.7044967880085653, "obj2": 0.22463940240043104}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( Min( MUM ,CS ),Min( Max( MLU,CS ) ,( ( ( ( MUR - DS ) + MUC ) - Max( ( MUM - ( RMSe + ( MUR / MLU ) ) ),RCSe ) ) + ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.014656387525857819}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( ( MDR / ( FirstVNF_CPU - PN ) ) * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Max( BR,( ( FirstVNF_RAM * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) + ARS ) )", "choosing": "Max( ( RCSe - ( RRSe + RCSe ) ),Max( ( RCSe - ( RRSe + RCSe ) ),( MLU / RMSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.22031445645756034}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( Max( ( CRS + MDR ),( ACS - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( ( Max( ( CRS + MDR ),AMS ) * FirstVNF_RAM ) - ACS ) ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,Max( Max( MUM,( Max( CS,MUM ) * RRSe ) ),RCSe ) ),CS ) ),( RRSe * MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( PN - CRS ) + ( BR * AMS ) ) / Max( Max( ARS,ARS ),( FirstVNF_CPU_Server * CRS ) ) ) * Max( Max( ( PN - ACS ),Max( FirstVNF_RAM,AMS ) ),( ( RRS * PN ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( RRSe * Max( MUR,MUR ) ) ,( Min( MUC ,DS ) / CS ) ) * ( Max( MLU,RCSe ) + CS ) )", "obj1": 0.7259100642398287, "obj2": 0.21747752702529358}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),( RCSe / RCSe ) )", "obj1": 0.728051391862955, "obj2": 0.20259472846493026}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,MLU ) ),( DS / RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + MUM ) / DS ) + DS ) ),Min( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( BR - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) ),( DS / RCSe ) )", "obj1": 0.9657387580299786, "obj2": 0.02078159688744608}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( Min( MUM ,CS ),Min( Max( MLU,CS ) ,( ( ( ( MUR - DS ) + MUC ) - Max( ( MUM - ( RMSe + ( MUR / MLU ) ) ),RCSe ) ) + ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.014656387525857819}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( ( RRS - ( AMS + ( Max( FirstVNF_RAM_Server,Max( ( RRS / Const ),FirstVNF_RAM_Server ) ) * DDR ) ) ) + AMS ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,Max( Max( MUM,( Max( CS,MUM ) * RRSe ) ),RCSe ) ),CS ) ),( RRSe * MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + MUM ) / DS ) + DS ) ),Min( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( ( Const + BR ) + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * CS ),Min( ( ( MUM - Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) )", "choosing": "Min( Min( MLU ,( Max( ( Min( RCSe ,( MUR + ( MUM + MUR ) ) ) / CS ),Max( RRSe,CS ) ) / ( CS / RMSe ) ) ) ,MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_RAM ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + ( Min( Min( CS ,MUM ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),Min( ( ( MUM / Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( ( ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_RAM ) * ( FirstVNF_Mem + RRS ) ) + DDR ) / FirstVNF_RAM ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "Max( ( CS * ( ( ( Min( Min( Min( CS ,MUM ) ,MLU ) ,( RRSe * Min( RMSe ,MUM ) ) ) + ( Min( Min( CS ,MUM ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),Min( ( ( MUM / Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_RAM ) ) / FirstVNF_RAM ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + ( Min( Min( CS ,MUM ) ,Min( RMSe ,MUM ) ) + RRSe ) ) / DS ) + DS ) ),Min( ( ( MUM / Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( BR - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) ),( DS / RCSe ) )", "obj1": 0.9657387580299786, "obj2": 0.02078159688744608}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( Min( MUM ,CS ),Min( Max( MLU,CS ) ,( ( ( ( MUR - DS ) + MUC ) - Max( ( MUM - ( RMSe + ( MUR / MLU ) ) ),RCSe ) ) + ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.014656387525857819}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( RRS + ( ( AMS - MDR ) - ( Min( FirstVNF_RAM ,AMS ) - FirstVNF_Mem_Server ) ) ) - ( ( RRS + FirstVNF_Mem_Server ) / ( MRS + FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( ( ( MLU / Min( DS ,RMSe ) ) * CS ),RRSe ) * Max( MUM,Max( ( MUC * MUC ),CS ) ) ),( DS / RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( ( FirstVNF_RAM_Server / MDR ) + ( ( CRS * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) * ACS ) ) ) + FirstVNF_Mem ) + ( FirstVNF_Mem_Server / CRS ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + MUM ) / DS ) + DS ) ),Min( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( ( Const + BR ) + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * CS ),Min( ( ( MUM - Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) )", "choosing": "Min( Min( MLU ,( Max( ( Min( RCSe ,( MUR + ( MUM + MUR ) ) ) / CS ),Max( RRSe,CS ) ) / ( CS / RMSe ) ) ) ,MUR )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / FirstVNF_RAM ) * ( FirstVNF_Mem + RRS ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + ( Min( Min( CS ,MUM ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),Min( ( ( MUM / Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( Min( MUM ,CS ),Min( Max( MLU,CS ) ,( ( ( ( MUR - DS ) + MUC ) - Max( ( MUM - ( RMSe + ( MUR / MLU ) ) ),RCSe ) ) + ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.014656387525857819}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR - FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,ACS ) ) - Min( Max( ACS,FirstVNF_Mem ) ,Max( FirstVNF_RAM,ARS ) ) ) + ( ( ( FirstVNF_Mem_Server * CRS ) / ( FirstVNF_RAM / MDR ) ) + Min( ( ACS / FirstVNF_RAM_Server ) ,( ARS / FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( MUM / RMSe ) * ( Max( ( MLU - Max( ( ( MUR * MUC ) + Min( RMSe ,RMSe ) ),RRSe ) ),MUM ) - Max( DS,( MUM * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( ( ( PN + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( CS * ( ( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + MUM ) / DS ) + DS ) ),Min( ( Min( RCSe ,( RRSe * Min( RMSe ,MUM ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + RRS ) - ( ( ( ( Const + BR ) + DDR ) / FirstVNF_RAM ) * ( AMS + FirstVNF_Mem ) ) )", "choosing": "Max( ( CS * CS ),Min( ( ( MUM - Min( MUR ,Max( Max( MLU,( MLU * MLU ) ),RRSe ) ) ) + RCSe ) ,Min( MLU ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( Min( ( CRS - ACS ) ,MDR ) - ( ( Max( Min( ACS ,( ( FirstVNF_CPU_Server - ( ACS * RRS ) ) / CRS ) ),BR ) / Max( Max( FirstVNF_RAM_Server,MDR ),( FirstVNF_RAM_Server + CRS ) ) ) + ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( ( CS + ( DS + MUM ) ),Max( RCSe,( ( DS / MUM ) + RCSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.01996675144857915}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( Min( MUM ,CS ),Min( Max( MLU,CS ) ,( ( ( ( MUR - DS ) + MUC ) - Max( ( MUM - ( RMSe + ( MUR / MLU ) ) ),RCSe ) ) + ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.014656387525857819}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),( ACS - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - ( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ) - RCSe ) ) ) ,Max( Min( Max( RCSe,( RMSe - RCSe ) ) ,Max( Max( MUM,( Max( CS,MUM ) * RRSe ) ),RCSe ) ),( RRSe + MUR ) ) ),( RRSe * MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( ( DDR * DDR ) - ( ( FirstVNF_RAM_Server + ACS ) - AMS ) ) ) ) )", "choosing": "Max( ( ( DS / ( MUR * MUM ) ) / ( Max( ( DS * MLU ),RCSe ) / Max( MUR,( Max( ( MUC - RRSe ),( RMSe / MUC ) ) - MUM ) ) ) ),( MLU - Max( RRSe,MUR ) ) )", "obj1": 0.9828693790149893, "obj2": 0.01996675144857915}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( ( ( ( RRS + FirstVNF_RAM_Server ) * ( ACS - PN ) ) * ( ( MDR + FirstVNF_RAM ) * ( PN * MDR ) ) ) + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( MUC ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "( Min( ( CRS - ACS ) ,MDR ) - ( ( Max( Min( ACS ,( ( FirstVNF_CPU_Server - ( ACS * RRS ) ) / CRS ) ),BR ) / Max( Max( FirstVNF_RAM_Server,MDR ),( FirstVNF_RAM_Server + CRS ) ) ) + ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "Max( ( CS + ( DS + MUM ) ),Max( RCSe,( ( DS / MUM ) + RCSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.01996675144857915}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( Max( RRS,( FirstVNF_RAM_Server * FirstVNF_RAM ) ) - Max( FirstVNF_Mem_Server,BR ) )", "choosing": "Max( Min( MUM ,CS ),Min( Max( MLU,CS ) ,( ( ( ( MUR - DS ) + MUC ) - Max( ( MUM - ( RMSe + ( MUR / MLU ) ) ),RCSe ) ) + ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ) ) )", "obj1": 0.9850107066381156, "obj2": 0.014656387525857819}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( ( DDR * DDR ) - ( ( FirstVNF_RAM_Server + ACS ) - AMS ) ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.9828693790149893, "obj2": 0.01996675144857915}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( MUC + RCSe ) * Max( MUC,MUR ) ) + ( ( MUC * RCSe ) - Min( MUM ,MUM ) ) ) / Min( Max( Max( DS,RRSe ),( RCSe + RRSe ) ) ,( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM_Server - MRS ) ,FirstVNF_CPU ) + Max( ARS,DDR ) )", "choosing": "( ( Max( ( Min( ( MUM + DS ) ,MUR ) / RMSe ),MUR ) + MUM ) / Min( MLU ,MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),( ACS - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( RCSe * RRSe ) - Min( MLU ,MUC ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),( ACS - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RRSe * MUR ),( RRSe / MUC ) ) / Max( Max( RMSe,RCSe ),( RMSe + MUC ) ) ) * ( Max( Max( MUC,MLU ),( RMSe + RCSe ) ) * ( ( CS / CS ) / ( MLU / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / BR ) - ( Max( RRS,BR ) + ( DDR / MRS ) ) ) + Max( ( MDR / RRS ),( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) * Min( Max( ( DDR + FirstVNF_RAM_Server ),( FirstVNF_Mem - ARS ) ) ,( Min( ACS ,FirstVNF_Mem ) / ( ARS * ARS ) ) ) )", "choosing": "( ( Min( Min( DS ,CS ) ,( MUC * RCSe ) ) + ( ( CS / MUM ) / ( MUR * RRSe ) ) ) + ( ( Min( MLU ,MUC ) / Max( CS,DS ) ) / ( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( FirstVNF_RAM - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) ),Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + Max( MUM,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + ( FirstVNF_CPU_Server + ARS ) ) + Min( ( MDR - ARS ) ,( BR / FirstVNF_Mem ) ) ) - ( ( ( FirstVNF_Mem - CRS ) * ( ( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) ) - AMS ) ) / ( ( BR - FirstVNF_CPU ) - Min( FirstVNF_CPU_Server ,BR ) ) ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( ( ( ( RCSe - MUR ) - Max( MUM,RMSe ) ) - Max( ( RCSe - DS ),Max( MUM,RCSe ) ) ) * ( Max( Max( DS,RMSe ),( RRSe - MUC ) ) * ( ( RCSe * CS ) / ( RMSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( FirstVNF_CPU_Server / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,( ( RCSe - MUR ) - Max( MUM,RMSe ) ) ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "Min( ( Min( ( FirstVNF_Mem - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) ) - Min( MDR ,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( RMSe - MUM ) + RCSe )", "obj1": 0.8501070663811563, "obj2": 0.08358029366083196}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( ( RRSe * RRSe ) * Max( RCSe,MUC ) ) / ( ( RRSe - MUC ) * ( MUR * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( ( Const / Max( ACS,BR ) ) + ( Min( ( ( FirstVNF_RAM_Server / MDR ) + ( ( CRS * ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) + ( RRS * MRS ) ) ) * ACS ) ) ,( ( FirstVNF_Mem_Server + RRS ) * Max( ( AMS - ( ACS * Min( MDR ,FirstVNF_RAM_Server ) ) ),ACS ) ) ) + FirstVNF_Mem ) )", "choosing": "( ( RMSe * MLU ) / ( MUC - ( ( ( Min( RCSe ,Min( ( DS - RRSe ) ,CS ) ) - RMSe ) + DS ) / ( ( RCSe / Min( ( Max( DS,MUM ) - ( MUM / DS ) ) ,RRSe ) ) - Min( ( RRSe * Min( ( MUM + RRSe ) ,RRSe ) ) ,CS ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS - FirstVNF_CPU ) * DDR ) / ( FirstVNF_CPU + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( RRSe * DS ) * ( MUC + RRSe ) ) ,Min( ( MUM + MUM ) ,( MLU - MUC ) ) ) ,( ( RRSe - RRSe ) * Max( MUM,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ( PN * DDR ) * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( Max( RCSe,MUC ) + CS ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( DDR / FirstVNF_RAM_Server ) ) / ( ( BR + MRS ) / ( DDR - MDR ) ) )", "choosing": "( ( CS * RRSe ) - Min( RRSe ,DS ) )", "obj1": 0.841541755888651, "obj2": 0.08963712987401054}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "( ( ( Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( RRSe + ( MLU * MUM ) ),MLU ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),( ACS - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - ( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ) - RCSe ) ) ) ,Max( Min( Max( RCSe,( RMSe - RCSe ) ) ,Max( Max( MUM,( Max( CS,MUM ) * RRSe ) ),RCSe ) ),( RRSe + MUR ) ) ),( RRSe * MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( CRS,FirstVNF_Mem_Server ) ,( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "( Max( MUR,( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem_Server ) * Min( Max( CRS,FirstVNF_Mem_Server ) ,( AMS + Const ) ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( MUR + Min( RMSe ,( Max( ( MUR / MUM ),( RMSe * MLU ) ) * Max( Min( MUC ,CS ),MUM ) ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( Const - ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),RRS ) * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * Max( ( Min( CS ,CS ) * MUM ),( MUM + ( ( RRSe * CS ) + RCSe ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07948556397780153}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( RRSe + ( MLU * MUM ) ),MLU ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) - ( Max( DDR,( ARS * ACS ) ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.7858672376873662, "obj2": 0.13530771542966105}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( ( MRS + ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( ( MLU / RMSe ),( ( ( RRSe + MLU ) / Max( RRSe,Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) ) ) ) / RCSe ) )", "obj1": 0.7901498929336188, "obj2": 0.1301767719663706}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( CS ,( MUM * CS ) )", "obj1": 0.7965738758029979, "obj2": 0.12088424810930892}, {"determining": "( ( FirstVNF_Mem_Server + ( ( MDR / FirstVNF_Mem_Server ) - PN ) ) + ( Max( CRS,( PN + BR ) ) - ( MDR / Min( FirstVNF_Mem_Server ,Max( CRS,( PN + BR ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,CS ) + ( ( DS + CS ) + ( Max( MLU,RRSe ) / ( Max( MLU,RRSe ) / MUM ) ) ) ),Min( RMSe ,MLU ) ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.020550943693017035}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MUM * CS ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.8029978586723768, "obj2": 0.11660199042670416}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) + MRS ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( MUC,MUC ) ,( MUM * Min( Max( MUC,MUC ) ,( MUM * CS ) ) ) )", "obj1": 0.7987152034261242, "obj2": 0.11971045786185565}, {"determining": "( ( ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) * ( ARS - ( BR * DDR ) ) ) - ( ( MDR * ( ( ( AMS / RRS ) + ( AMS / BR ) ) - FirstVNF_Mem ) ) + BR ) )", "choosing": "Max( ( MLU * CS ),( RRSe * RCSe ) )", "obj1": 0.9914346895074947, "obj2": 0.004108187864304035}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( AMS,( AMS + ( Min( ARS ,MDR ) / ( ( ( FirstVNF_RAM_Server / Const ) / MDR ) + ARS ) ) ) ),FirstVNF_RAM ) - ( MDR * ACS ) )", "choosing": "Max( ( ( MUM * ( RMSe + ( ( ( MUR - DS ) * DS ) / ( DS * RMSe ) ) ) ) * ( CS * Min( DS ,( MUR - MUR ) ) ) ),( RRSe * ( ( RCSe - ( ( MUM - ( MUR * Min( MUM ,MLU ) ) ) - MLU ) ) / ( ( ( ( ( MUM * MLU ) * ( MUM - CS ) ) - MLU ) + MUC ) / RRSe ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ACS - DDR ) / DDR ) - ( MDR * ACS ) )", "choosing": "Max( ( ( MUM * ( RMSe + ( ( ( ( DS + MUM ) - DS ) * DS ) / ( DS * RMSe ) ) ) ) * ( CS * Min( DS ,( MUR - MUR ) ) ) ),( RRSe * ( ( RCSe - ( ( MUM - ( MUR * Min( MUM ,MLU ) ) ) - MLU ) ) / ( ( ( ( ( MUM * MLU ) * ( MUM - CS ) ) - MLU ) + MUC ) / RRSe ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10994581026946135}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( PN - BR ) - Const )", "choosing": "Max( ( MUR + MLU ),( Min( ( RMSe * ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) ) ,Min( RCSe ,MUR ) ) + Min( ( CS * MUR ) ,( ( ( ( RMSe + RRSe ) * CS ) + ( ( MUC / Min( RMSe ,MUR ) ) / MUR ) ) - MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.05329056552771795}, {"determining": "( ( ( Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( RRSe + ( MLU * MUM ) ),MLU ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( Const - ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),RRS ) * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * Max( ( Min( CS ,CS ) * MUM ),( MUM + ( ( RRSe * CS ) + RCSe ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07948556397780153}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( ( Min( AMS ,Const ) / Const ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) + Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( ( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.7751605995717344, "obj2": 0.1363487096334846}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ( Min( FirstVNF_Mem ,Max( ( ( FirstVNF_RAM + Max( FirstVNF_CPU,MRS ) ) + FirstVNF_Mem ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,MDR ) ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( Min( Max( ( MUC - RRSe ),( RMSe / MUC ) ) ,Min( Min( CS ,CS ) ,CS ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011770247018427063}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( FirstVNF_Mem_Server + ( ( MDR / FirstVNF_Mem_Server ) - PN ) ) + ( Max( CRS,( PN + BR ) ) - ( MDR / Min( FirstVNF_Mem_Server ,Max( CRS,( PN + BR ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,CS ) + ( ( DS + CS ) + ( Max( MLU,RRSe ) / ( Max( MLU,RRSe ) / MUM ) ) ) ),Min( RMSe ,MLU ) ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.020550943693017035}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ( AMS / MDR ) * DDR ) + ( Min( Min( ACS ,DDR ) ,FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server * Min( PN ,PN ) ) ,Min( Max( ( ACS + DDR ),FirstVNF_Mem_Server ) ,DDR ) ) ) ) - ( Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + ( ACS + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( CS,RCSe ),( ( ( ( DS / RCSe ) + RMSe ) / RCSe ) + RMSe ) )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - MRS ) - FirstVNF_RAM_Server )", "choosing": "Max( ( CS * ( MLU - ( RCSe / MUR ) ) ),( RRSe / ( ( Min( CS ,MUC ) * RMSe ) * ( ( RRSe + MUC ) + Min( MLU ,Min( MUR ,MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Min( ( BR - Min( MDR ,( ( Const * Const ) - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + ( MUR * CS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ACS - DDR ) / DDR ) - ( MDR * ACS ) )", "choosing": "Max( ( ( MUM * ( RMSe + ( ( ( ( DS + MUM ) - DS ) * DS ) / ( DS * RMSe ) ) ) ) * ( CS * Min( DS ,( MUR - MUR ) ) ) ),( RRSe * ( ( RCSe - ( ( MUM - ( MUR * Min( MUM ,MLU ) ) ) - MLU ) ) / ( ( ( ( ( MUM * MLU ) * ( MUM - CS ) ) - MLU ) + MUC ) / RRSe ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10994581026946135}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( PN - BR ) - Const )", "choosing": "Max( ( MUR + MLU ),( Min( ( RMSe * ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) ) ,Min( RCSe ,MUR ) ) + Min( ( CS * MUR ) ,( ( ( ( RMSe + RRSe ) * CS ) + ( ( MUC / Min( RMSe ,MUR ) ) / MUR ) ) - MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.05329056552771795}, {"determining": "( ( ( Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( RRSe + ( MLU * MUM ) ),MLU ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( Const - ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),RRS ) * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * Max( ( Min( CS ,CS ) * MUM ),( MUM + ( ( RRSe * CS ) + RCSe ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07948556397780153}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( ( Min( AMS ,Const ) / Const ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) + Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( ( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.7751605995717344, "obj2": 0.1363487096334846}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ( Min( FirstVNF_Mem ,Max( ( ( FirstVNF_RAM + Max( FirstVNF_CPU,MRS ) ) + FirstVNF_Mem ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,MDR ) ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( Min( Max( ( MUC - RRSe ),( RMSe / MUC ) ) ,Min( Min( CS ,CS ) ,CS ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011770247018427063}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( FirstVNF_Mem_Server + ( ( MDR / FirstVNF_Mem_Server ) - PN ) ) + ( Max( CRS,( PN + BR ) ) - ( MDR / Min( FirstVNF_Mem_Server ,Max( CRS,( PN + BR ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,CS ) + ( ( DS + CS ) + ( Max( MLU,RRSe ) / ( Max( MLU,RRSe ) / MUM ) ) ) ),Min( RMSe ,MLU ) ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.020550943693017035}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ( AMS / MDR ) * DDR ) + ( Min( Min( ACS ,DDR ) ,FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server * Min( PN ,PN ) ) ,Min( Max( ( ACS + DDR ),FirstVNF_Mem_Server ) ,DDR ) ) ) ) - ( Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + ( ACS + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( CS,RCSe ),( ( ( ( DS / RCSe ) + RMSe ) / RCSe ) + RMSe ) )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),( ACS - FirstVNF_RAM_Server ) ),FirstVNF_RAM ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( Min( Max( RCSe,( ( MUM + DS ) - Max( ( ( CS / MUM ) - ( Min( CS ,MUM ) / RRSe ) ),RCSe ) ) ) ,Max( Min( Max( RCSe,Min( RRSe ,MUM ) ) ,RRSe ),CS ) ),CS )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( Min( ( DDR - MRS ) ,Max( FirstVNF_RAM,RRS ) ),Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( MLU + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe / DS ) / MLU ) + ( MUM - ( MLU - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( CS,( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Min( MRS ,MDR ) ) - ( ( PN / MRS ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( RRSe / CS ) ),( Max( RRSe,CS ) / Min( MUC ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( CRS - MRS ) + ACS ),( DDR / FirstVNF_CPU ) ) * ( ( MDR - AMS ) / Min( ACS ,MDR ) ) )", "choosing": "Min( ( ( MUC / RRSe ) + ( CS / CS ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( Const * Const ) - ( ACS * BR ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( ( MUM + ( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( CS / RMSe ) ,Max( MUR,MLU ) ),( ( MUR * CS ) + RMSe ) ) ) * DS ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Min( ( BR - Min( MDR ,( ( Const * Const ) - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + ( MUR * CS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ACS - DDR ) / DDR ) - ( MDR * ACS ) )", "choosing": "Max( ( ( MUM * ( RMSe + ( ( ( ( DS + MUM ) - DS ) * DS ) / ( DS * RMSe ) ) ) ) * ( CS * Min( DS ,( MUR - MUR ) ) ) ),( RRSe * ( ( RCSe - ( ( MUM - ( MUR * Min( MUM ,MLU ) ) ) - MLU ) ) / ( ( ( ( ( MUM * MLU ) * ( MUM - CS ) ) - MLU ) + MUC ) / RRSe ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10994581026946135}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( PN - BR ) - Const )", "choosing": "Max( ( MUR + MLU ),( Min( ( RMSe * ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) ) ,Min( RCSe ,MUR ) ) + Min( ( CS * MUR ) ,( ( ( ( RMSe + RRSe ) * CS ) + ( ( MUC / Min( RMSe ,MUR ) ) / MUR ) ) - MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.05329056552771795}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( ( FirstVNF_RAM + Min( CRS ,( ACS - AMS ) ) ) - ( ( FirstVNF_CPU_Server / ( FirstVNF_CPU_Server / DDR ) ) / Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server + ( ( AMS + CRS ) / ARS ) ) / BR ) ,Max( Const,FirstVNF_Mem ) ) ) ) )", "choosing": "Max( ( DS * RCSe ),( RRSe * ( Max( Max( DS,MUM ),RRSe ) - RRSe ) ) )", "obj1": 0.828693790149893, "obj2": 0.10247337456005896}, {"determining": "( Const - ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),RRS ) * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * Max( ( Min( CS ,CS ) * MUM ),( MUM + ( ( RRSe * CS ) + RCSe ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07948556397780153}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( ( Min( AMS ,Const ) / Const ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) + Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( ( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.7751605995717344, "obj2": 0.1363487096334846}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( RRSe + ( MLU * MUM ) ),MLU ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ( Min( FirstVNF_Mem ,Max( ( ( FirstVNF_RAM + Max( FirstVNF_CPU,MRS ) ) + FirstVNF_Mem ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,MDR ) ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( Min( Max( ( MUC - RRSe ),( RMSe / MUC ) ) ,Min( Min( CS ,CS ) ,CS ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011770247018427063}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( FirstVNF_Mem_Server + ( ( MDR / FirstVNF_Mem_Server ) - PN ) ) + ( Max( CRS,( PN + BR ) ) - ( MDR / Min( FirstVNF_Mem_Server ,Max( CRS,( PN + BR ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,CS ) + ( ( DS + CS ) + ( Max( MLU,RRSe ) / ( Max( MLU,RRSe ) / MUM ) ) ) ),Min( RMSe ,MLU ) ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.020550943693017035}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( ( MLU * MUM ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8222698072805139, "obj2": 0.1037258479906498}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( Min( RCSe ,Max( MUC,MUC ) ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( ( ( AMS / MDR ) * DDR ) + ( Min( Min( ACS ,DDR ) ,FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server * Min( PN ,PN ) ) ,Min( Max( ( ACS + DDR ),FirstVNF_Mem_Server ) ,DDR ) ) ) ) - ( Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + ( ACS + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( CS,RCSe ),( ( ( ( DS / RCSe ) + RMSe ) / RCSe ) + RMSe ) )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( ( MLU + ( RCSe * CS ) ),( RRSe + MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( ( ARS + ARS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * BR ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( ( MLU + ( ( MUC - MUR ) * RCSe ) ),( RRSe + MLU ) )", "obj1": 0.9850107066381156, "obj2": 0.007458534057822496}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( ARS + ARS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * BR ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( ( MLU + ( ( MUC - MUR ) * RCSe ) ),( RRSe + MLU ) )", "obj1": 0.9850107066381156, "obj2": 0.007458534057822496}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( MUR - ( ( DS * RRSe ) + MLU ) ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) )", "choosing": "( ( ( DS * MUM ) * Max( MUC,MUM ) ) / Min( ( RMSe / DS ) ,( RCSe + MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "( ( Min( MRS ,Max( CRS,FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / Min( Const ,MRS ) ) ),DDR ) ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "Max( Max( ( RRSe + Max( MLU,CS ) ),DS ),Max( ( ( ( CS + Max( MUR,( MUM + DS ) ) ) + RCSe ) - Max( MUR,( RCSe * MUC ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( Const * Const ) - ( ACS * BR ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( ( MUM + ( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( CS / RMSe ) ,Max( MUR,MLU ) ),( ( MUR * CS ) + RMSe ) ) ) * DS ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ACS - DDR ) / DDR ) - ( MDR * ACS ) )", "choosing": "Max( ( ( MUM * ( RMSe + ( ( ( ( DS + MUM ) - DS ) * DS ) / ( DS * RMSe ) ) ) ) * ( CS * Min( DS ,( MUR - MUR ) ) ) ),( RRSe * ( ( RCSe - ( ( MUM - ( MUR * Min( MUM ,MLU ) ) ) - MLU ) ) / ( ( ( ( ( MUM * MLU ) * ( MUM - CS ) ) - MLU ) + MUC ) / RRSe ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10994581026946135}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( PN - BR ) - Const )", "choosing": "Max( ( MUR + MLU ),( Min( ( RMSe * ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) ) ,Min( RCSe ,MUR ) ) + Min( ( CS * MUR ) ,( ( ( ( RMSe + RRSe ) * CS ) + ( ( MUC / Min( RMSe ,MUR ) ) / MUR ) ) - MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.05329056552771795}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( Const - ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),RRS ) * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * Max( ( Min( CS ,CS ) * MUM ),( MUM + ( ( RRSe * CS ) + RCSe ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07948556397780153}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( ( Min( AMS ,Const ) / Const ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) + Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( ( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.7751605995717344, "obj2": 0.1363487096334846}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( Min( RCSe ,Max( MUC,MUC ) ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8265524625267666, "obj2": 0.10138355365179066}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MDR ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( ( Max( MUM,CS ) / RCSe ) - Max( ( RRSe / RCSe ),Max( MUR,RMSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.815845824411135, "obj2": 0.10697436901120237}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ( Min( FirstVNF_Mem ,Max( ( ( FirstVNF_RAM + Max( FirstVNF_CPU,MRS ) ) + FirstVNF_Mem ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,MDR ) ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( Min( Max( ( MUC - RRSe ),( RMSe / MUC ) ) ,Min( Min( CS ,CS ) ,CS ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011770247018427063}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( FirstVNF_Mem_Server + ( ( MDR / FirstVNF_Mem_Server ) - PN ) ) + ( Max( CRS,( PN + BR ) ) - ( MDR / Min( FirstVNF_Mem_Server ,Max( CRS,( PN + BR ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,CS ) + ( ( DS + CS ) + ( Max( MLU,RRSe ) / ( Max( MLU,RRSe ) / MUM ) ) ) ),Min( RMSe ,MLU ) ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.020550943693017035}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( ( MLU * MUM ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8222698072805139, "obj2": 0.1037258479906498}, {"determining": "( ( ( ( AMS / MDR ) * DDR ) + ( Min( Min( ACS ,DDR ) ,FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server * Min( PN ,PN ) ) ,Min( Max( ( ACS + DDR ),FirstVNF_Mem_Server ) ,DDR ) ) ) ) - ( Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + ( ACS + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( CS,RCSe ),( ( ( ( DS / RCSe ) + RMSe ) / RCSe ) + RMSe ) )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( ( MLU + ( RCSe * CS ) ),( RRSe + MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( ( MUM * ( MUR * RMSe ) ),( ( ( RRSe + DS ) - MUM ) * ( ( MUM + RCSe ) - ( CS - CS ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.1016042230565983}, {"determining": "( ( ( ( ARS + ARS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * BR ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( ( MLU + ( ( MUC - MUR ) * RCSe ) ),( RRSe + MLU ) )", "obj1": 0.9850107066381156, "obj2": 0.007458534057822496}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Min( Max( ( DS * MUR ),RRSe ) ,( Min( Min( DS ,Min( ( ( Max( MUM,CS ) / RCSe ) - Max( ( RRSe / RCSe ),Max( MUR,RMSe ) ) ) ,( Min( ( MUC - MUR ) ,MUC ) + MUM ) ) ) ,( Max( MLU,( ( RCSe / Max( MLU,RRSe ) ) * Min( ( RRSe - RRSe ) ,MLU ) ) ) - MUR ) ) * Max( RMSe,MUM ) ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( ( Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,FirstVNF_RAM_Server ) - RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( RRSe + ( MLU * MUM ) ),MLU ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( AMS ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server * ( ( MRS + FirstVNF_CPU ) + ( ( PN + ( MDR + MDR ) ) - ( MDR * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( MUR - ( ( ( RCSe + Min( MUM ,MLU ) ) - Max( CS,RMSe ) ) * ( MUC * Min( MLU ,( RCSe - MUR ) ) ) ) ) ),MUM ) ,Min( RMSe ,Min( Max( MUC,MUC ) ,( ( Max( RRSe,MUM ) + Max( CS,( ( CS + MUC ) * MUR ) ) ) - DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( ARS + ARS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * BR ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( ( MLU + ( ( MUC - MUR ) * RCSe ) ),( RRSe + MLU ) )", "obj1": 0.9850107066381156, "obj2": 0.007458534057822496}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Min( ( BR - Min( MDR ,( ( Const * Const ) - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + ( MUR * CS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( ( ( BR * Min( DDR ,DDR ) ) - Max( FirstVNF_Mem_Server,( MRS + FirstVNF_CPU ) ) ) / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( RCSe + MLU ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( ACS * BR ) - ( Const * ( DDR / Min( ( ACS / PN ) ,CRS ) ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( MRS / FirstVNF_RAM_Server ),( AMS + ( ( ( DDR / Max( CRS,FirstVNF_RAM_Server ) ) - PN ) * Const ) ) ),FirstVNF_Mem_Server ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( MLU ,MUM ) / ( Max( ( MLU - ( RCSe - RCSe ) ),MUR ) + MUM ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( Min( MRS ,Max( CRS,FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / Min( Const ,MRS ) ) ),DDR ) ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "Max( Max( ( RRSe + Max( MLU,CS ) ),DS ),Max( ( ( ( CS + Max( MUR,( MUM + DS ) ) ) + RCSe ) - Max( MUR,( RCSe * MUC ) ) ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( DDR / DDR ),FirstVNF_Mem ) + AMS ) - Max( ( DDR / DDR ),FirstVNF_Mem ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( RMSe - MLU ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6723768736616702, "obj2": 0.26774136199172965}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( BR - ( BR * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( MLU * CS ),( CS + Max( ( MLU * CS ),( CS + RCSe ) ) ) )", "obj1": 0.7044967880085653, "obj2": 0.19557207642174945}, {"determining": "( ( ( ACS - DDR ) / DDR ) - ( MDR * ACS ) )", "choosing": "Max( ( ( MUM * ( RMSe + ( ( ( ( DS + MUM ) - DS ) * DS ) / ( DS * RMSe ) ) ) ) * ( CS * Min( DS ,( MUR - MUR ) ) ) ),( RRSe * ( ( RCSe - ( ( MUM - ( MUR * Min( MUM ,MLU ) ) ) - MLU ) ) / ( ( ( ( ( MUM * MLU ) * ( MUM - CS ) ) - MLU ) + MUC ) / RRSe ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10994581026946135}, {"determining": "( ( FirstVNF_RAM - ( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) / FirstVNF_CPU_Server ) ) - Min( AMS ,MRS ) )", "choosing": "Max( ( CS + RCSe ),Min( RRSe ,Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ) )", "obj1": 0.7408993576017131, "obj2": 0.18028350844695842}, {"determining": "( ( PN - BR ) - Min( PN ,Const ) )", "choosing": "Max( ( MUR + MLU ),( Min( ( RMSe * ( ( ( Max( DS,RMSe ) / MUR ) + RMSe ) + MLU ) ) ,Min( RCSe ,MUR ) ) + Min( ( CS * MUR ) ,( ( ( ( RMSe + RRSe ) * CS ) + ( ( ( RRSe + CS ) / Min( RMSe ,MUR ) ) / MUR ) ) - MUC ) ) ) )", "obj1": 0.9122055674518201, "obj2": 0.05329056552771794}, {"determining": "( ( ( ( ( AMS + MRS ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( Max( Max( ( MLU / RMSe ),( DS / RCSe ) ),MUC ) ,( MLU * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.03363906566118416}, {"determining": "( ( ( FirstVNF_CPU_Server + DDR ) * ( ARS - ( ( ( FirstVNF_Mem_Server + ARS ) + ( Min( Const ,RRS ) + Min( MRS ,ACS ) ) ) * DDR ) ) ) - Min( AMS ,MRS ) )", "choosing": "Max( RMSe,( CS + RCSe ) )", "obj1": 0.8715203426124197, "obj2": 0.06450870284329681}, {"determining": "( Const - ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),RRS ) * MDR ) - FirstVNF_RAM_Server ) )", "choosing": "Max( ( CS + ( MUM - DS ) ),( Min( ( ( ( Min( MUR ,( MUR - RMSe ) ) + RMSe ) + MLU ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * Max( ( Min( CS ,CS ) * MUM ),( MUM + ( ( RRSe * CS ) + RCSe ) ) ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.07948556397780153}, {"determining": "( ( PN + Max( AMS,DDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Min( MUM ,Min( RCSe ,DS ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.8458244111349036, "obj2": 0.07695217233079733}, {"determining": "( ( ( ( Min( AMS ,Const ) / Const ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) + Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) - RRS ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( ( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ),RCSe ),Min( Max( RCSe,( RRSe + ( MLU * MUM ) ) ) ,MUM ) )", "obj1": 0.7751605995717344, "obj2": 0.1363487096334846}, {"determining": "( ( AMS + Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) - ( ( DDR + FirstVNF_CPU_Server ) * ( ( Max( Max( ( DDR + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),FirstVNF_CPU ) + MDR ) - Max( Const,AMS ) ) ) )", "choosing": "Max( ( CS + Max( RMSe,( RMSe + Min( Max( MUR,RCSe ) ,RCSe ) ) ) ),( Min( ( ( ( Min( ( MUR - MUR ) ,MUR ) + RMSe ) + ( Min( ( RRSe - CS ) ,CS ) / RRSe ) ) + RMSe ) ,Min( MLU ,MUR ) ) + ( MLU * RMSe ) ) )", "obj1": 0.7623126338329764, "obj2": 0.1615574127824395}, {"determining": "( ( MRS + FirstVNF_CPU ) - ( Min( ( FirstVNF_CPU_Server / Min( Max( FirstVNF_RAM_Server,PN ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ,MDR ) / Max( ACS,BR ) ) )", "choosing": "Max( Max( RMSe,Min( ( DS + CS ) ,( RRSe / Min( CS ,MUM ) ) ) ),( DS / ( Min( MUR ,RRSe ) - RCSe ) ) )", "obj1": 0.7451820128479657, "obj2": 0.1700781679937888}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( Min( RCSe ,Max( MUC,MUC ) ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8265524625267666, "obj2": 0.10138355365179066}, {"determining": "( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( DS + Max( ( DS * CS ),( DS + RCSe ) ) ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.892933618843683, "obj2": 0.05916969719772203}, {"determining": "( ( PN * ( ( MDR / ( FirstVNF_CPU - PN ) ) / Const ) ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( RMSe * ( MUC - RMSe ) ) ) ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.23903363955953133}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MDR ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( ( Max( MUM,CS ) / RCSe ) - Max( ( RRSe / RCSe ),Max( MUR,RMSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.815845824411135, "obj2": 0.10697436901120237}, {"determining": "( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) / Max( CRS,( FirstVNF_RAM / ARS ) ) ) - ( ( ( ( FirstVNF_Mem * Min( MRS ,( ( MDR * FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ) ) ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.702355460385439, "obj2": 0.21737799305358532}, {"determining": "( ( ( ( RRS / RRS ) - ( ( ( RRS / RRS ) - Const ) + AMS ) ) + AMS ) - ( CRS / AMS ) )", "choosing": "Max( Min( MUM ,CS ),Min( ( ( MUM - ( CS + RCSe ) ) + ( MUC + MLU ) ) ,Max( ( ( ( ( CS / Max( MUC,MUR ) ) / MLU ) / Max( MUC,MUR ) ) / MLU ),Max( RCSe,Min( CS ,( Max( CS,MUM ) - Min( MUC ,( MLU + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7665952890792291, "obj2": 0.1485192598329635}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - FirstVNF_RAM ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + CS ),( ( RCSe / ( MUC * MLU ) ) + ( MLU * RMSe ) ) )", "obj1": 0.6916488222698073, "obj2": 0.22890050787277305}, {"determining": "( ( ( RRS - ( ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,Max( DS,Max( RCSe,Max( DS,MLU ) ) ) ),( DS / RCSe ) )", "obj1": 0.9507494646680942, "obj2": 0.028363970748991236}, {"determining": "( ( FirstVNF_CPU + Const ) - ( CRS + ( Min( FirstVNF_Mem ,Max( ( ( FirstVNF_RAM + Max( FirstVNF_CPU,MRS ) ) + FirstVNF_Mem ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,MDR ) ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( Min( Max( ( MUC - RRSe ),( RMSe / MUC ) ) ,Min( Min( CS ,CS ) ,CS ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / RMSe ) ,RRSe ) ) ) ) )", "obj1": 0.9785867237687366, "obj2": 0.011770247018427063}, {"determining": "Min( ( FirstVNF_CPU - ( MDR + Min( Min( FirstVNF_RAM_Server ,( MDR + Min( Min( FirstVNF_RAM_Server ,MDR ) ,AMS ) ) ) ,AMS ) ) ) ,Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( ( ( CS * RRSe ) + ( ( CS * RRSe ) + CS ) ) + ( RMSe - MUM ) )", "obj1": 0.9400428265524625, "obj2": 0.03137901431593063}, {"determining": "( ( AMS * ( AMS / AMS ) ) - ( ( ( RRS + FirstVNF_RAM ) / ( FirstVNF_RAM_Server / ( ( FirstVNF_CPU_Server * RRS ) * Min( CRS ,AMS ) ) ) ) * ( FirstVNF_RAM_Server + MDR ) ) )", "choosing": "Max( Max( Max( ( Max( MLU,( MUC / ( DS * Max( RCSe,RMSe ) ) ) ) - RMSe ),MLU ),( DS * MLU ) ),( MUC / ( MUM - MUR ) ) )", "obj1": 0.9635974304068522, "obj2": 0.019785137372844597}, {"determining": "( BR - Min( AMS ,( ( Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) * MDR ) * Const ) ) )", "choosing": "Max( ( MUC * RCSe ),Min( RRSe ,( ( ( MLU * RMSe ) / ( CS * MUR ) ) + ( Min( CS ,MLU ) / MUR ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2243066721393884}, {"determining": "( ( FirstVNF_Mem / Max( ( AMS / FirstVNF_CPU_Server ),BR ) ) - Min( Const ,FirstVNF_CPU ) )", "choosing": "Max( ( ( ( MUR / Min( Max( ( ( RMSe + MUR ) * MUR ),( RRSe - DS ) ) ,RMSe ) ) - RCSe ) * Min( MLU ,MUR ) ),( Min( RRSe ,Min( MUC ,MUM ) ) - ( RMSe + RRSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( FirstVNF_Mem * ( FirstVNF_CPU / FirstVNF_Mem ) ) / ( FirstVNF_Mem_Server / ( Min( MDR ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM - ( Max( ( CRS - RRS ),DDR ) / FirstVNF_CPU_Server ) ) ,RRS ) ) ) )", "choosing": "( ( MLU - Min( Min( ( MUR / MUM ) ,Min( CS ,MUM ) ) ,MUC ) ) - ( MUM + Max( DS,RRSe ) ) )", "obj1": 0.7687366167023555, "obj2": 0.13874913090025798}, {"determining": "( ( FirstVNF_Mem_Server + ( ( MDR / FirstVNF_Mem_Server ) - PN ) ) + ( Max( CRS,( PN + BR ) ) - ( MDR / Min( FirstVNF_Mem_Server ,Max( CRS,( PN + BR ) ) ) ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + Min( Max( ( Min( ( RCSe * RCSe ) ,CS ) + ( ( DS + CS ) + ( Max( MLU,RRSe ) / ( Max( MLU,RRSe ) / MUM ) ) ) ),Min( RMSe ,MLU ) ) ,RRSe ) )", "obj1": 0.9571734475374732, "obj2": 0.020550943693017035}, {"determining": "Max( ( ( BR * ARS ) * ( Const + PN ) ),Max( ( ( MRS - FirstVNF_CPU_Server ) + ACS ),( BR + RRS ) ) )", "choosing": "( Min( RMSe ,CS ) / ( ( RMSe * ( ( ( MUR - RMSe ) - ( MLU - MLU ) ) / Min( RRSe ,RCSe ) ) ) - CS ) )", "obj1": 0.6788008565310493, "obj2": 0.2583775232274221}, {"determining": "( ( ( RRS - ( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( ( DS + RCSe ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( Max( AMS,( Const * Max( Max( ( MRS / FirstVNF_RAM_Server ),MRS ),FirstVNF_Mem_Server ) ) ) + MDR ) + ( CRS - Const ) ) + Max( FirstVNF_Mem,DDR ) )", "choosing": "( Min( Min( ( ( Min( MLU ,MUM ) / ( Max( ( DS - MUR ),MUR ) + MUM ) ) - MLU ) ,( MUC * Min( MUR ,CS ) ) ) ,MUM ) / ( RRSe - MUM ) )", "obj1": 0.6766595289079229, "obj2": 0.2650519394909282}, {"determining": "( ( ( RRS - Min( ( PN + Max( AMS,DDR ) ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Min( MUM ,Min( RCSe ,DS ) ) / MUM ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.880085653104925, "obj2": 0.06207719065536662}, {"determining": "( ( ( ACS / FirstVNF_CPU ) + MRS ) - ( ( ( FirstVNF_RAM_Server + DDR ) / ( AMS - ( Max( ( PN - FirstVNF_Mem_Server ),ARS ) * FirstVNF_CPU_Server ) ) ) * ( FirstVNF_RAM_Server + DDR ) ) )", "choosing": "Max( ( RMSe * ( ( ( Min( RCSe ,( RRSe * Min( MUM ,RMSe ) ) ) + ( Min( Min( MUM ,CS ) ,MLU ) + RRSe ) ) / DS ) + DS ) ),( RRSe / ( RRSe / Max( Max( DS,( MUM / Min( MLU ,RCSe ) ) ),CS ) ) ) )", "obj1": 0.9828693790149893, "obj2": 0.010870456405685756}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Min( FirstVNF_CPU ,AMS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8222698072805139, "obj2": 0.10262668736416428}, {"determining": "( ( ( ( AMS / MDR ) * DDR ) + ( Min( Min( ACS ,DDR ) ,FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server * Min( PN ,PN ) ) ,Min( Max( ( ACS + DDR ),FirstVNF_Mem_Server ) ,DDR ) ) ) ) - ( Min( ( MDR / FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + ( ACS + ( FirstVNF_Mem + FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( CS,RCSe ),( ( ( ( DS / RCSe ) + RMSe ) / RCSe ) + RMSe ) )", "obj1": 0.9914346895074947, "obj2": 0.00384509975237769}, {"determining": "( ( ( ARS / ( ( Max( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),FirstVNF_Mem ) * MDR ) * Const ) ) / Max( CRS,( ARS / FirstVNF_RAM ) ) ) - ( ( ( ( ( FirstVNF_RAM / ACS ) / MDR ) - PN ) / PN ) + DDR ) )", "choosing": "Max( ( ( MUM + ( RRSe + CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( DS ,RCSe ) ) ),( ( Max( ( MLU - MUM ),RMSe ) * ( ( RCSe * ( MUC * MUC ) ) - MLU ) ) + ( ( ( MLU - MUM ) + MLU ) - RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.006649653389643129}, {"determining": "( ( ( DDR + FirstVNF_CPU_Server ) * ( FirstVNF_RAM - ( Min( DDR ,DDR ) - Max( ( ( FirstVNF_CPU_Server + CRS ) + Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ),PN ) ) ) ) - Min( AMS ,Min( ( DDR / DDR ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RRSe - CS ) ) + Max( ( ( RCSe / Min( RRSe ,( ( MLU * RMSe ) / ( CS * MUR ) ) ) ) - Min( RCSe ,RRSe ) ),Min( ( CS + Min( RMSe ,CS ) ) ,MUC ) ) ),( MLU + ( ( ( ( RMSe / MUR ) + RMSe ) + MLU ) - RMSe ) ) )", "obj1": 0.6745182012847966, "obj2": 0.26688408960858867}, {"determining": "( Max( Max( ( CRS + MDR ),AMS ),FirstVNF_RAM ) - ( AMS + ( RRS - ( AMS + ( Min( ( ( MDR + ACS ) + ACS ) ,( DDR / RRS ) ) - ACS ) ) ) ) )", "choosing": "Max( ( MLU + ( RCSe * CS ) ),( RRSe + MLU ) )", "obj1": 0.683083511777302, "obj2": 0.25574139861506734}, {"determining": "( ( ( ( RRS - Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,AMS ) ) + FirstVNF_RAM ) - ( DDR + MDR ) ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( Max( ( DS * CS ),( DS + RCSe ) ) - Max( ( DS * CS ),( DS + RCSe ) ) ),MLU ) ),( RRSe / RCSe ) )", "obj1": 0.961456102783726, "obj2": 0.020178429338989314}, {"determining": "( ( ( ( ARS + ARS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * BR ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( ( MLU + ( ( MUC - MUR ) * RCSe ) ),( RRSe + MLU ) )", "obj1": 0.9850107066381156, "obj2": 0.007458534057822496}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Min( Max( ( DS * MUR ),RRSe ) ,( Min( Min( DS ,Min( ( ( Max( MUM,CS ) / RCSe ) - Max( ( RRSe / RCSe ),Max( MUR,RMSe ) ) ) ,( Min( ( MUC - MUR ) ,MUC ) + MUM ) ) ) ,( Max( MLU,( ( RCSe / Max( MLU,RRSe ) ) * Min( ( RRSe - RRSe ) ,MLU ) ) ) - MUR ) ) * Max( RMSe,MUM ) ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( Min( Max( RRS,Const ) ,Min( Const ,DDR ) ) - ( ( Const + ( FirstVNF_Mem - ( ACS - Min( DDR ,DDR ) ) ) ) + PN ) )", "choosing": "( ( Max( MUM,( ( ( CS - MUM ) - MUR ) / ( MUR - ( MLU * ( Max( RMSe,MLU ) * RRSe ) ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RCSe ,( MUR * ( ( DS + MUR ) / Max( RCSe,( ( MUC - RMSe ) * ( MUR + RMSe ) ) ) ) ) ) + ( RRSe * RRSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( ( MUM * ( MUR * RMSe ) ),( ( ( RRSe + DS ) - MUM ) * ( ( MUM + RCSe ) - ( CS - CS ) ) ) )", "obj1": 0.8244111349036403, "obj2": 0.1016042230565983}, {"determining": "( ( ( Min( ACS ,( RRS * ( Min( AMS ,Max( FirstVNF_Mem,ACS ) ) * MDR ) ) ) - Min( ( FirstVNF_Mem / Min( MRS ,FirstVNF_CPU ) ) ,Min( Min( DDR ,( RRS / FirstVNF_CPU_Server ) ) ,RRS ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( Max( Max( Min( RCSe ,Max( MUC,MUC ) ),( ( MLU / CS ) * ( Max( MUM,MLU ) + RCSe ) ) ),MLU ),RCSe ),Min( Max( RCSe,( ( MLU * MUM ) + RRSe ) ) ,MUM ) )", "obj1": 0.8179871520342612, "obj2": 0.10585705436082261}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( FirstVNF_CPU + Const ) - ( Min( FirstVNF_Mem ,Max( ( MDR * ( MRS / RRS ) ),ACS ) ) + Min( ( FirstVNF_CPU * ACS ) ,DDR ) ) )", "choosing": "Max( Min( MUM ,CS ),( ( RCSe + ( ( CS + ( ( ( RRSe + RRSe ) + CS ) / MLU ) ) - MUM ) ) / Min( RRSe ,( Max( ( RCSe + MUC ),MLU ) - Min( ( Min( DS ,RMSe ) / DS ) ,RRSe ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0023561710550543077}, {"determining": "( ( ( ( FirstVNF_RAM - ( MDR * FirstVNF_CPU_Server ) ) - BR ) + Min( Min( ( FirstVNF_CPU * FirstVNF_Mem ) ,( Const - ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) - ACS ) ) ) ,( Min( ( ( BR - FirstVNF_CPU ) - RRS ) ,BR ) * Max( FirstVNF_RAM_Server,RRS ) ) ) ) + ( Max( ( MRS * AMS ),( PN + BR ) ) - Min( FirstVNF_CPU_Server ,MDR ) ) )", "choosing": "( ( ( ( MUR - RMSe ) - RCSe ) / RMSe ) + ( RCSe * ( ( Max( MUC,MLU ) / MUR ) + CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( RRS - ( AMS / ( ( FirstVNF_Mem_Server + Max( FirstVNF_RAM,( PN - DDR ) ) ) - FirstVNF_CPU ) ) ) + FirstVNF_RAM ) - ( MDR * FirstVNF_CPU ) )", "choosing": "Max( Min( RMSe ,( Min( ( Max( ( CS - ( MUR - MUC ) ),MUM ) * Max( RCSe,DS ) ) ,Max( ( Max( MUR,CS ) - RMSe ),Min( RCSe ,( CS - CS ) ) ) ) + ( Max( MUC,Max( ( MUR + Min( RMSe ,CS ) ),MLU ) ) / DS ) ) ),( DS / RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( ( Min( DDR ,FirstVNF_RAM_Server ) - FirstVNF_CPU ) ,( Const / Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM ) - ( DDR + MDR ) )", "choosing": "Max( Max( RCSe,Max( ( MUC - Max( ( DS * CS ),( Max( ( DS * CS ),( DS + RCSe ) ) + RCSe ) ) ),MLU ) ),Min( DS ,MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( ARS + ARS ) * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) * BR ) - ( RRS + ( ( AMS * Min( FirstVNF_RAM ,MDR ) ) * Max( DDR,ACS ) ) ) )", "choosing": "Max( ( MLU + ( ( MUC - MUR ) * RCSe ) ),( RRSe + MLU ) )", "obj1": 0.9850107066381156, "obj2": 0.007458534057822496}, {"determining": "( ( Const * Const ) - ( ACS * BR ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( ( MUM + ( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( CS / RMSe ) ,Max( MUR,MLU ) ),( ( MUR * CS ) + RMSe ) ) ) * DS ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Min( ( BR - Min( MDR ,( ( Const * Const ) - FirstVNF_CPU_Server ) ) ) ,FirstVNF_CPU ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + ( MUR * CS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + Max( RCSe,MUM ) ) ) / MUR ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,Min( Max( ( FirstVNF_RAM * ACS ),RRS ) ,FirstVNF_CPU ) ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( RMSe - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RMSe + MUC ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( ( MLU * MLU ) ,( RCSe / RRSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( ( BR / CRS ),AMS ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,Max( MUR,MLU ) ),( RRSe + Max( RMSe,DS ) ) ) ) * DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( RCSe / MUR ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * Const ) - Max( ( Max( MRS,RRS ) + BR ),Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( Min( ( RMSe / MUM ) ,RMSe ),( RRSe + Max( RMSe,DS ) ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( DS - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( Max( MUM,( RMSe + MUM ) ) - ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( ( ( DS - CS ) * ( ( ( MLU / Max( ( ( RMSe / MUM ) + RMSe ),( ( MUR / MUM ) - MUM ) ) ) + DS ) / RCSe ) ),( RRSe * Min( ( MUR * ( RMSe - ( Min( Max( MLU,MLU ) ,( MUR / RCSe ) ) + ( RCSe * MUC ) ) ) ) ,( ( ( DS * ( ( MLU + MUR ) - DS ) ) + DS ) - ( ( RMSe * RMSe ) - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * PN ) - Min( Max( MDR,Max( RRS,RRS ) ) ,AMS ) )", "choosing": "Max( Max( ( DS + RRSe ),DS ),( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,PN ) * ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,( RRS - DDR ) ) + BR ) ) / RRS ) ) )", "choosing": "Max( ( RRSe * Min( ( CS * ( ( MLU + ( ( MUM + MUR ) + ( RCSe * MUM ) ) ) / MUR ) ) ,( ( ( MUM + RMSe ) + ( ( Min( DS ,CS ) - RCSe ) - RRSe ) ) - ( ( DS * ( Min( MLU ,MUR ) - DS ) ) + Min( MUC ,RMSe ) ) ) ) ),Max( MLU,Max( ( Min( MUM ,RRSe ) / RCSe ),Min( RMSe ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ( BR - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) ) )", "choosing": "Max( ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ),( Max( ( MUR * ( RMSe - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) - ( MRS - ( ( FirstVNF_Mem / ( Max( FirstVNF_Mem_Server,PN ) + BR ) ) - RRS ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) - ( Min( Max( MLU,RCSe ) ,( MUR / RCSe ) ) + ( RCSe - MUC ) ) ) ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - ( ( FirstVNF_RAM + FirstVNF_Mem ) - DDR ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( ( MUM + MUC ) + ( MUC - MUM ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( Max( ( MUR * RMSe ),( MLU - ( DS - ( DS + ( MUM - MUC ) ) ) ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem_Server ) - ( ARS - Min( Min( PN ,Const ) ,( ARS + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( MUC - RMSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) + FirstVNF_RAM ) - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM ) - ( ARS + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( Min( ( DS - MLU ) ,MLU ) / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( DS - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + ( PN * ( ( MDR / ( DDR * ( ( MDR / CRS ) + FirstVNF_CPU_Server ) ) ) / Const ) ) ) - ( Min( FirstVNF_RAM_Server ,( PN * ( ( MDR / ( FirstVNF_RAM * BR ) ) / Const ) ) ) + ARS ) )", "choosing": "Max( ( MLU / RMSe ),Min( ( DS * MUR ) ,Max( ( ( ( CS / RMSe ) + Min( RCSe ,( ( RCSe - MLU ) - ( MUM * CS ) ) ) ) * MUR ),( RRSe + DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM - ( ARS + Min( FirstVNF_RAM_Server ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MLU / RMSe ),( ( RMSe * ( ( RMSe * ( RCSe - RMSe ) ) / ( Min( ( RMSe - MLU ) ,MLU ) - RMSe ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( FirstVNF_CPU_Server ,( ( ARS + FirstVNF_RAM ) / AMS ) ) )", "choosing": "( ( ( MUR + RCSe ) * ( Min( RRSe ,MLU ) * MLU ) ) / ( MLU - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUC - Max( Max( MLU,MUR ),( RCSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + FirstVNF_Mem ) - ( AMS / ( Const / ( ARS / ARS ) ) ) )", "choosing": "( ( DS + ( RMSe - RMSe ) ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ARS ) * Max( ARS,ARS ) )", "choosing": "Min( Min( RMSe ,DS ) ,Max( MUM,( RCSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( MUM + RRSe ) - ( MUC + ( RMSe - Min( MLU ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / ( BR / FirstVNF_Mem_Server ) ),RRS ) )", "choosing": "( ( ( MUC - ( ( Min( Max( ( RCSe + DS ),Max( RMSe,MUR ) ) ,CS ) + ( CS - RRSe ) ) + RRSe ) ) + MUM ) - ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * ( DDR / ( MDR * FirstVNF_CPU ) ) ) - ( FirstVNF_CPU * Min( ( Min( Max( PN,( PN + ( RRS + MDR ) ) ) ,Const ) + ( Min( FirstVNF_CPU ,AMS ) / MRS ) ) ,BR ) ) )", "choosing": "( ( Min( RRSe ,Max( Max( ( Max( CS,( RCSe / MUC ) ) / RRSe ),RRSe ),( ( ( Min( MUM ,RRSe ) - RMSe ) * ( RCSe * MUR ) ) / MUM ) ) ) - ( ( ( RMSe - ( ( RMSe + RMSe ) - Min( RRSe ,( MUM * MUC ) ) ) ) / MUC ) + CS ) ) / Min( Max( RRSe,( MUR - ( ( MLU + ( ( MUR + MUC ) / ( RRSe * RRSe ) ) ) / DS ) ) ) ,Min( RMSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) + Min( ( BR + ( ( PN - AMS ) / ACS ) ) ,MDR ) ) - ( ( FirstVNF_RAM * PN ) + ACS ) )", "choosing": "Max( Max( ( CS / CS ),( DS / CS ) ),( MUC / ( MUR * Max( MLU,Min( MUM ,( RCSe + RMSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( MRS - AMS ) * ( AMS * PN ) ) * Min( ( PN / FirstVNF_Mem_Server ) ,( FirstVNF_RAM * AMS ) ) ),( ( Min( FirstVNF_Mem_Server ,PN ) + ( MRS - FirstVNF_CPU ) ) - ( ( ARS * MRS ) + ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( RRSe - RRSe ) * Max( MUM,CS ) ) + ( RRSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Const,Max( ARS,( MDR + ACS ) ) ) - ( FirstVNF_Mem / MRS ) )", "choosing": "( Max( ( MUM / ( MUR / DS ) ),MUM ) + ( MLU / Max( Max( RCSe,RMSe ),Max( CS,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( Max( CRS,ARS ) ,( FirstVNF_RAM + MDR ) ),Min( Max( ACS,RRS ) ,( PN + CRS ) ) ) - ( Min( Max( AMS,DDR ) ,Max( FirstVNF_RAM_Server,CRS ) ) / Min( ( BR / FirstVNF_RAM ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( Min( Max( MUM,RMSe ) ,( MUC * MLU ) ) ,( Max( MUR,MUC ) / Max( MUC,MLU ) ) ) ,( ( Max( MUM,RMSe ) + Max( MUM,RMSe ) ) + ( Max( RCSe,RCSe ) * ( MUC * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ( FirstVNF_RAM_Server - CRS ) ) / ( ( CRS + DDR ) + Const ) )", "choosing": "( ( DS - ( RCSe / RRSe ) ) * Min( Min( RRSe ,( MUR / MUR ) ) ,( MLU + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - ARS ) ,( FirstVNF_CPU_Server - AMS ) )", "choosing": "( ( ( ( MUC + MLU ) - Min( RMSe ,MUM ) ) / RCSe ) + ( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "( ( MUR - DS ) * ( RMSe - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_CPU ),( MRS / ACS ) ) - ( AMS - MDR ) )", "choosing": "( Min( MUM ,RRSe ) - Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_Mem_Server ) - ( AMS - MDR ) )", "choosing": "Max( ( MLU * RCSe ),Min( MUR ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - ( Min( AMS ,FirstVNF_RAM_Server ) + ( FirstVNF_RAM + DDR ) ) ) * Max( ARS,ARS ) )", "choosing": "Min( RMSe ,( RCSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - Max( Max( MRS,BR ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RCSe,CS ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( MUR * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,RRS ) - Min( FirstVNF_RAM_Server ,Max( PN,MRS ) ) )", "choosing": "( ( RMSe / ( ( ( RCSe - RCSe ) / MUM ) + Min( RRSe ,MLU ) ) ) + Min( MLU ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,( ACS / Max( MDR,( Max( FirstVNF_CPU_Server,Max( AMS,FirstVNF_RAM_Server ) ) * CRS ) ) ) ) - ( ARS - PN ) )", "choosing": "( ( ( MUM / RRSe ) / Max( RCSe,( ( MUR - Max( CS,MUM ) ) / ( RRSe - ( MLU * ( ( MLU * RCSe ) * RRSe ) ) ) ) ) ) - ( Min( ( MUR * ( Max( Max( MLU,MUM ),DS ) + ( MLU * Max( DS,( MLU * DS ) ) ) ) ) ,RCSe ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( RRS,Const ) ,Max( Const,DDR ) ) - ( CRS / ( Min( Min( Const ,RRS ) ,( Min( AMS ,MDR ) / Min( ( ( BR + ARS ) + PN ) ,ARS ) ) ) * ( MDR * ( FirstVNF_RAM_Server + ( ( Max( FirstVNF_CPU,PN ) + FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - Min( MRS ,AMS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,( ( ( CS - MUM ) - MUR ) + ( MUR - ( ( DS * RRSe ) + MLU ) ) ) ) / ( MUM / RRSe ) ) - ( Min( RMSe ,MUR ) + ( RRSe * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}