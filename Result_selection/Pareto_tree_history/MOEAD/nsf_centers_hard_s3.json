{"1": [{"determining": "( ( CRS / PN ) - ( MRS / FirstVNF_CPU_Server ) )", "choosing": "( ( CS - RMSe ) * ( MUR + MUM ) )", "obj1": 0.7366167023554604, "obj2": 0.26652069692501806}, {"determining": "( ( ( Max( FirstVNF_CPU,RRS ) + Max( ACS,DDR ) ) / ( ( DDR / FirstVNF_RAM ) / ( ACS - BR ) ) ) - Min( ( ( FirstVNF_RAM - FirstVNF_CPU_Server ) - Min( FirstVNF_RAM ,ACS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / ( CRS / BR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MLU ) / CS ) * DS ),( Max( ( MUM / MUR ),Max( RCSe,MLU ) ) + ( RCSe - Min( MUC ,RMSe ) ) ) )", "obj1": 0.708779443254818, "obj2": 0.25280122975218655}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9293361884368309, "obj2": 0.07199986127629344}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( BR / CRS ),Max( Const,MRS ) )", "choosing": "( ( CS + CS ) + Max( CS,CS ) )", "obj1": 0.7516059957173448, "obj2": 0.2688016075791364}, {"determining": "Max( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ),( FirstVNF_CPU_Server * FirstVNF_RAM ) )", "choosing": "( Min( RRSe ,MUM ) - Max( MUM,MUC ) )", "obj1": 0.7387580299785867, "obj2": 0.27656232311531626}, {"determining": "Max( Min( MDR ,FirstVNF_Mem ),( FirstVNF_CPU_Server - ARS ) )", "choosing": "( ( MUR * RCSe ) * ( MUC - CS ) )", "obj1": 0.7601713062098501, "obj2": 0.2529419579358154}, {"determining": "( ( FirstVNF_CPU_Server * AMS ) * ( DDR - PN ) )", "choosing": "Max( ( DS / MUC ),( CS / RCSe ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Max( ( RRS - FirstVNF_Mem ),Max( FirstVNF_Mem,MDR ) )", "choosing": "Max( Max( DS,MUR ),Min( RCSe ,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Min( ( ARS / DDR ) ,( AMS - BR ) )", "choosing": "( Min( DS ,MLU ) * ( MUM + MUC ) )", "obj1": 0.7687366167023555, "obj2": 0.27848910077934835}, {"determining": "( ( AMS - ACS ) * ( FirstVNF_RAM - FirstVNF_CPU ) )", "choosing": "( ( MUM - RMSe ) + ( MUC - RRSe ) )", "obj1": 0.7773019271948608, "obj2": 0.22785547770544778}, {"determining": "Min( Max( CRS,PN ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / MUR ) ,( RMSe * MUR ) )", "obj1": 0.7516059957173448, "obj2": 0.2719853644860528}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / BR ) )", "choosing": "( Min( MUC ,MUR ) * ( MUM - MUM ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( MDR + RRS ) / ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RCSe * RRSe ) * Max( DS,MUM ) )", "obj1": 0.7944325481798715, "obj2": 0.2756025552131105}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,DDR ) * Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( MUC + MUC ) - ( MUR + RRSe ) )", "obj1": 0.7687366167023555, "obj2": 0.28338379211652465}, {"determining": "( Min( FirstVNF_RAM_Server ,MRS ) * ( ARS - FirstVNF_Mem ) )", "choosing": "( ( DS / DS ) - Min( RCSe ,CS ) )", "obj1": 0.8993576017130621, "obj2": 0.1041488699162599}, {"determining": "Max( Min( PN ,FirstVNF_RAM ),( FirstVNF_Mem + MRS ) )", "choosing": "( ( CS - MLU ) / Min( MUC ,RMSe ) )", "obj1": 0.7922912205567452, "obj2": 0.27128501997600507}, {"determining": "Min( Max( AMS,ACS ) ,Max( FirstVNF_Mem_Server,Const ) )", "choosing": "Min( Min( Max( CS,MUM ) ,( MUR / MUM ) ) ,Min( ( MUM + RCSe ) ,Min( MUR ,MUM ) ) )", "obj1": 0.7408993576017131, "obj2": 0.28476011628657877}, {"determining": "( ( BR * ( DDR / RRS ) ) * Max( ARS,DDR ) )", "choosing": "( ( ( RRSe / MUC ) + ( MUR + DS ) ) - ( ( CS / RMSe ) + ( MUC + RMSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "Max( Max( RRS,FirstVNF_RAM_Server ),( MRS * ( PN + PN ) ) )", "choosing": "Max( ( Min( MUC ,CS ) * MUR ),( RRSe * ( MUM - DS ) ) )", "obj1": 0.7922912205567452, "obj2": 0.2676100127070186}, {"determining": "Max( ( ( PN * FirstVNF_CPU_Server ) * Min( MDR ,MDR ) ),( ( AMS + FirstVNF_CPU ) / ( ACS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( RMSe - MLU ) ,( MUR / RCSe ) ) + Min( Min( CS ,MUM ) ,( RMSe - CS ) ) )", "obj1": 0.7430406852248393, "obj2": 0.2824266032748747}, {"determining": "Max( ( ( DDR / ARS ) / ( CRS * MDR ) ),Max( ( FirstVNF_CPU_Server * Const ),Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU / RCSe ) / ( MUR / MUC ) )", "obj1": 0.7880085653104925, "obj2": 0.2804626439067728}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7623126338329764, "obj2": 0.22386997794733554}, {"determining": "( Min( CRS ,MRS ) / ( FirstVNF_RAM - FirstVNF_RAM_Server ) )", "choosing": "( ( MUM + MUR ) + Min( Min( CS ,RCSe ) ,RRSe ) )", "obj1": 0.7987152034261242, "obj2": 0.23213947551522837}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server + PN ) + ( DDR + MDR ) ),Max( ( PN * MRS ),( CRS * MDR ) ) )", "choosing": "( ( Min( DS ,MUC ) - ( MUR / RRSe ) ) + ( Min( CS ,RMSe ) * ( MLU * RMSe ) ) )", "obj1": 0.7558886509635975, "obj2": 0.2604913270303557}, {"determining": "( ( FirstVNF_RAM - ( PN + RRS ) ) + Min( MRS ,FirstVNF_Mem ) )", "choosing": "( ( ( RCSe - MUM ) - ( MUC + MLU ) ) * ( Min( RMSe ,RRSe ) - ( CS - DS ) ) )", "obj1": 0.7066381156316917, "obj2": 0.26838783246084563}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "Min( ( AMS - AMS ) ,( MDR * Const ) )", "choosing": "( ( MUC * RRSe ) * ( MUR * RRSe ) )", "obj1": 0.6852248394004282, "obj2": 0.2706575059108971}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Const,FirstVNF_CPU ) - FirstVNF_Mem_Server ) * Min( ( BR * FirstVNF_Mem_Server ) ,DDR ) )", "choosing": "( ( MUC / ( DS / MLU ) ) + ( ( RRSe + RCSe ) / ( RMSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ( RRS / MDR ) / FirstVNF_CPU ) + Max( Max( CRS,FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / RMSe ) * Min( RRSe ,MUR ) ) ,Max( ( RMSe * MLU ),( MUC + MUM ) ) )", "obj1": 0.7558886509635975, "obj2": 0.27642330078957866}, {"determining": "Min( ( FirstVNF_RAM_Server * PN ) ,( FirstVNF_CPU_Server + DDR ) )", "choosing": "Min( ( ( Min( RMSe ,RCSe ) * RMSe ) - Max( CS,( MUC * MLU ) ) ) ,Min( ( ( MUR - MUM ) + RRSe ) ,MUC ) )", "obj1": 0.7430406852248393, "obj2": 0.26759074235448704}, {"determining": "Max( ( Min( ( CRS * FirstVNF_RAM_Server ) ,( ACS + AMS ) ) / Max( Min( FirstVNF_CPU_Server ,PN ),( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( RRS + FirstVNF_Mem_Server ) ) / ( ( ARS + FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "Max( Max( DS,( CS + ( MLU + MUR ) ) ),( DS + ( RRSe + Max( RCSe,MUC ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.2584553955150316}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( FirstVNF_RAM ,MDR ) + Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) + Min( AMS ,FirstVNF_CPU_Server ) ) ),( ( Max( ARS,BR ) * ( FirstVNF_RAM_Server * ARS ) ) - Max( Max( CRS,DDR ),( PN + ARS ) ) ) )", "choosing": "( ( RRSe * ( MUR / ( MUC * RMSe ) ) ) / ( RMSe - Max( RCSe,MUM ) ) )", "obj1": 0.7558886509635975, "obj2": 0.2772601476264403}, {"determining": "( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) )", "choosing": "( ( MUC / Min( RMSe ,RCSe ) ) * Max( Min( MUR ,RCSe ),Min( MUM ,RMSe ) ) )", "obj1": 0.7880085653104925, "obj2": 0.27384265613724873}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + CS ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.8115631691648822, "obj2": 0.19070764244433278}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) - Max( DDR,FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - ARS ) - Min( DDR ,DDR ) ) ) - ( ( ( ACS - FirstVNF_Mem ) - Max( ACS,DDR ) ) / Max( ( PN * BR ),( MDR / Const ) ) ) )", "choosing": "( Max( ( ( CS * MUR ) * ( CS - MUC ) ),Min( ( RMSe - MUR ) ,Min( RCSe ,DS ) ) ) + ( ( ( RCSe + MUM ) * ( RRSe + MUC ) ) + ( Min( MLU ,RCSe ) - Max( DS,DS ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.21346458481197475}, {"determining": "Max( ( AMS + RRS ),( FirstVNF_RAM_Server + ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * ( ARS + MRS ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) / ( MUC - CS ) ) / Min( ( DS * CS ) ,Min( MUC ,RRSe ) ) ) * Max( ( ( MUM * RRSe ) / Max( CS,RRSe ) ),Min( ( CS / MUC ) ,( RRSe + RCSe ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.28018594468634656}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( ( DDR + CRS ) ,( RRS - FirstVNF_RAM ) ) * Min( ( FirstVNF_CPU * FirstVNF_Mem_Server ) ,( ARS / MDR ) ) ),Max( ( ( Const * FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / AMS ) ),( Max( FirstVNF_Mem,Const ) / Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe - RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.7194860813704497, "obj2": 0.27711857415960445}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.26638314640986566}, {"determining": "Min( ( FirstVNF_Mem / ARS ) ,Max( ( FirstVNF_CPU + CRS ),RRS ) )", "choosing": "( ( ( MLU + MUR ) + RRSe ) + Min( MLU ,RMSe ) )", "obj1": 0.7109207708779444, "obj2": 0.28108891864106667}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,CRS ) ) ) * ( Max( Max( RRS,FirstVNF_CPU_Server ),( BR * MRS ) ) * Min( ( PN - BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,RCSe ) ) * ( ( RMSe * ( CS / CS ) ) + RMSe ) )", "obj1": 0.7965738758029979, "obj2": 0.22192059527999775}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - ( BR - ACS ) ) ) )", "choosing": "( ( Min( ( MUC / DS ) ,( MUM + RRSe ) ) + ( Max( RMSe,MUC ) / ( MUM - RMSe ) ) ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.25507767154687916}], "2": [{"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ),( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) + ( RRS + FirstVNF_Mem_Server ) ) / ( ( ARS + FirstVNF_Mem_Server ) + ( FirstVNF_CPU * ARS ) ) ) )", "choosing": "Max( Max( DS,( CS + ( MLU + MUR ) ) ),( DS + ( RRSe + Max( RCSe,DS ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.26542508114029967}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem_Server ) - Max( DDR,FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - ARS ) - Min( DDR ,DDR ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( ( CS * MUR ) * ( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) ) ),Min( ( RMSe - MUR ) ,Min( RCSe ,DS ) ) ) + ( ( ( RCSe + MUM ) * ( RRSe + MUC ) ) + ( Min( MLU ,RCSe ) - Max( DS,DS ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.18019334233741197}, {"determining": "( Min( Max( AMS,ACS ) ,Max( FirstVNF_Mem_Server,Const ) ) * ( ARS - FirstVNF_Mem ) )", "choosing": "( ( DS / DS ) - Min( RCSe ,MUM ) )", "obj1": 0.8779443254817987, "obj2": 0.13363009419458532}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7580299785867237, "obj2": 0.24365424249103515}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( ( RCSe + MUR ) / ( MUC - CS ) ) / Min( ( DS * CS ) ,Min( MUC ,RRSe ) ) ) * Max( ( ( MUM * RRSe ) / Max( CS,RRSe ) ),Min( ( CS / MUC ) ,( RRSe + RCSe ) ) ) )", "obj1": 0.8072805139186295, "obj2": 0.18466733059531645}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( ( AMS + RRS ) * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + ( ( RCSe + MUR ) / ( MUC - CS ) ) ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.7944325481798715, "obj2": 0.1936158557131283}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( RRS / MDR ) / FirstVNF_CPU ) + Max( Max( CRS,FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / RMSe ) * Min( RRSe ,MUR ) ) ,Max( ( RMSe * MLU ),( MUC + MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,CRS ) ) ) * ( Max( Max( RRS,FirstVNF_CPU_Server ),( ACS * MRS ) ) * Min( ( PN - BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,RCSe ) ) * ( ( Min( ( MUC / DS ) ,( MUM + RRSe ) ) * ( CS / CS ) ) + RMSe ) )", "obj1": 0.7815845824411135, "obj2": 0.2125375455525818}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9293361884368309, "obj2": 0.07199986127629344}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 0.6916488222698073, "obj2": 0.25609735994040467}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( MUM + MUR ) + Min( Min( CS ,RCSe ) ,RRSe ) )", "obj1": 0.7623126338329764, "obj2": 0.22386997794733554}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9293361884368309, "obj2": 0.07199986127629344}, {"determining": "( ( Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( Max( PN,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,CRS ) ) ) * ( Max( Max( RRS,FirstVNF_CPU_Server ),( BR * MRS ) ) * Min( ( PN - BR ) ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( MUR ,Max( RRSe,RCSe ) ) * ( ( RMSe * ( CS / CS ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.21621682663389719}, {"determining": "Min( Max( CRS,PN ) ,( ( AMS - ACS ) * ( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "Min( RMSe ,( RMSe * MUR ) )", "obj1": 0.7730192719486081, "obj2": 0.21310293176874176}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7623126338329764, "obj2": 0.22386997794733554}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.07159286772069554}, {"determining": "( ( Max( Const,FirstVNF_CPU ) - FirstVNF_Mem_Server ) * Min( ( BR * FirstVNF_Mem_Server ) ,DDR ) )", "choosing": "( ( MUC / ( DS / MLU ) ) + ( ( RRSe + RCSe ) / ( RMSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MRS / PN ) )", "choosing": "Min( ( MLU - MUR ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / DDR ) ,( AMS - ( FirstVNF_RAM / Const ) ) )", "choosing": "( Min( DS ,MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * Max( RRSe,MLU ) ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,Max( ( FirstVNF_CPU_Server * Const ),Min( RRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RCSe ) / ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Max( Min( ( ( MDR / MDR ) + ( ACS + BR ) ) ,Max( ( ARS + FirstVNF_CPU ),( RRS - ARS ) ) ),( Min( Min( MDR ,AMS ) ,( CRS * Const ) ) * ( ( ARS / BR ) - Max( RRS,FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server * Const ) - ( ACS * PN ) ),( ( AMS + PN ) / ( Const * Const ) ) ) + ( Max( ( Const / MDR ),Min( DDR ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM * Const ) + Max( FirstVNF_Mem,MRS ) ) ) ) ),( ( ( Max( ( ACS / Const ),( PN + CRS ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_Mem_Server - PN ) ) ) - Max( ( ( FirstVNF_RAM / PN ) + Min( ACS ,DDR ) ),Max( Min( FirstVNF_CPU_Server ,ARS ),( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) + ( ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( Min( FirstVNF_CPU ,PN ) / ( RRS * ARS ) ) ) * ( ( ( DDR + AMS ) - Max( Const,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server - AMS ) - Max( FirstVNF_CPU,PN ) ) ) ) ) ) ,( Max( ( Max( ( ( RRS + PN ) + ( ACS * BR ) ),Min( Min( FirstVNF_RAM_Server ,DDR ) ,( PN / DDR ) ) ) / ( Min( ( ACS / ARS ) ,Max( ARS,CRS ) ) + ( ( ACS / FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_Mem ) ) ) ),Min( ( ( ( ARS + Const ) / ( ARS * CRS ) ) * ( ( FirstVNF_RAM / BR ) / ( ARS - FirstVNF_RAM_Server ) ) ) ,Max( Max( ( BR / FirstVNF_RAM ),( FirstVNF_Mem * FirstVNF_Mem ) ),( ( MDR + CRS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) + Min( ( ( ( Min( AMS ,Const ) + Min( FirstVNF_CPU ,CRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ARS * ACS ) ) ) - ( ( ( CRS - DDR ) - Min( FirstVNF_Mem ,DDR ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) + ( DDR * MDR ) ) ) ) ,Max( ( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_CPU_Server / AMS ) ) - ( ( Const - ARS ) + ( FirstVNF_Mem * MRS ) ) ),( Max( Min( FirstVNF_RAM ,AMS ),Max( BR,FirstVNF_RAM_Server ) ) - Max( Max( RRS,AMS ),( RRS + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( FirstVNF_RAM * PN ) / Min( FirstVNF_Mem_Server ,AMS ) ) - ( ( Const * BR ) * ( RRS + ARS ) ) ) + ( ( ( RRS * ACS ) - Max( PN,Const ) ) / ( Max( CRS,CRS ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) / Max( ( Min( ( FirstVNF_RAM - AMS ) ,( BR * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( ARS ,AMS ) ) ),( ( Max( FirstVNF_RAM_Server,ARS ) + ( ARS + FirstVNF_RAM ) ) * ( ( MDR - MDR ) - ( CRS / FirstVNF_CPU_Server ) ) ) ) ),( Min( ( Max( ( FirstVNF_Mem / BR ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) * ( Max( PN,Const ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server * BR ) * Min( BR ,PN ) ) - ( Min( RRS ,FirstVNF_CPU_Server ) + ( RRS - FirstVNF_CPU ) ) ) ) - Max( ( ( Max( MDR,FirstVNF_CPU ) + ( FirstVNF_CPU * Const ) ) * ( ( BR + Const ) - ( ACS / FirstVNF_RAM ) ) ),( Min( ( ACS / FirstVNF_CPU ) ,( ARS + MRS ) ) - Max( ( FirstVNF_Mem_Server - CRS ),( MRS * RRS ) ) ) ) ) ) / Min( ( ( ( ( ( FirstVNF_Mem_Server + CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( MDR - FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_Mem_Server / PN ) / ( Const * Const ) ),( ( FirstVNF_RAM - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) + ( ( ( ( PN + FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( AMS * ARS ) * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( BR * FirstVNF_CPU ) / ( AMS - BR ) ) ) ) ) ,( Max( ( ( Min( FirstVNF_Mem_Server ,RRS ) / ( ACS / RRS ) ) / ( Min( ACS ,BR ) / Min( ARS ,PN ) ) ),( ( ( FirstVNF_Mem_Server - AMS ) + ( MDR * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( CRS - ACS ) ) ) ) + ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) + ( RRS * FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + RRS ) * Min( FirstVNF_RAM ,ARS ) ) ) + ( ( ( DDR / FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( PN * MRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( MUC ,( ( Min( ( MUC - MUC ) ,Min( ( RCSe * MUC ) ,CS ) ) * ( MLU - DS ) ) * MUR ) ) ,Max( Min( ( DS * RCSe ) ,( ( CS / CS ) + RCSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) ) - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,Max( ( DS / DS ),Min( RRSe ,MLU ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) ) ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( Min( MLU ,MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( ( RRS + FirstVNF_Mem_Server ) - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Max( DS,( CS + ( MLU + MUR ) ) ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / AMS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUR - MUC ) * ( RRSe * RRSe ) )", "obj1": 0.683083511777302, "obj2": 0.2604293690038136}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( MUM + MUR ) + Min( Min( CS ,RCSe ) ,RRSe ) )", "obj1": 0.7623126338329764, "obj2": 0.22386997794733554}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * Max( RRSe,RCSe ) ) ,( RMSe / RMSe ) )", "obj1": 0.9250535331905781, "obj2": 0.08857596255927852}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( CS + CS ) + Max( CS,CS ) )", "obj1": 0.7558886509635975, "obj2": 0.22735824597901255}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7558886509635975, "obj2": 0.22735824597901255}, {"determining": "( ( ( RRS / MDR ) / FirstVNF_CPU ) + Max( Max( CRS,FirstVNF_CPU ),FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / RMSe ) * Min( RRSe ,MUR ) ) ,Max( ( RMSe * MLU ),( MUC + MUM ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( CS,MUC ) / ( RCSe * CS ) )", "obj1": 0.9293361884368309, "obj2": 0.07199986127629344}, {"determining": "Min( RRS ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( RMSe / MUR ) ) ,RRSe )", "obj1": 0.69593147751606, "obj2": 0.252812158049559}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 0.6916488222698073, "obj2": 0.25609735994040467}, {"determining": "Min( RRS ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / MUR ) ,RRSe )", "obj1": 0.6916488222698073, "obj2": 0.25609735994040467}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.07159286772069554}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( DS + CS ) + Max( CS,CS ) )", "obj1": 0.7623126338329764, "obj2": 0.22386997794733554}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9293361884368309, "obj2": 0.07199986127629344}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.07159286772069554}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MRS / PN ) )", "choosing": "Min( ( MLU - MUR ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / DDR ) ,( AMS - ( FirstVNF_RAM / Const ) ) )", "choosing": "( Min( DS ,MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * Max( RRSe,MLU ) ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,Max( ( FirstVNF_CPU_Server * Const ),Min( RRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RCSe ) / ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( Max( Min( ( ( MDR / MDR ) + ( ACS + BR ) ) ,Max( ( ARS + FirstVNF_CPU ),( RRS - ARS ) ) ),( Min( Min( MDR ,AMS ) ,( CRS * Const ) ) * ( ( ARS / BR ) - Max( RRS,FirstVNF_RAM ) ) ) ) / ( Max( ( ( FirstVNF_RAM_Server * Const ) - ( ACS * PN ) ),( ( AMS + PN ) / ( Const * Const ) ) ) + ( Max( ( Const / MDR ),Min( DDR ,FirstVNF_Mem ) ) / ( ( FirstVNF_RAM * Const ) + Max( FirstVNF_Mem,MRS ) ) ) ) ),( ( ( Max( ( ACS / Const ),( PN + CRS ) ) * ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_Mem_Server - PN ) ) ) - Max( ( ( FirstVNF_RAM / PN ) + Min( ACS ,DDR ) ),Max( Min( FirstVNF_CPU_Server ,ARS ),( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) + ( ( ( Min( ACS ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * ( Min( FirstVNF_CPU ,PN ) / ( RRS * ARS ) ) ) * ( ( ( DDR + AMS ) - Max( Const,FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server - AMS ) - Max( FirstVNF_CPU,PN ) ) ) ) ) ) ,( Max( ( Max( ( ( RRS + PN ) + ( ACS * BR ) ),Min( Min( FirstVNF_RAM_Server ,DDR ) ,( PN / DDR ) ) ) / ( Min( ( ACS / ARS ) ,Max( ARS,CRS ) ) + ( ( ACS / FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_Mem ) ) ) ),Min( ( ( ( ARS + Const ) / ( ARS * CRS ) ) * ( ( FirstVNF_RAM / BR ) / ( ARS - FirstVNF_RAM_Server ) ) ) ,Max( Max( ( BR / FirstVNF_RAM ),( FirstVNF_Mem * FirstVNF_Mem ) ),( ( MDR + CRS ) - Min( FirstVNF_Mem ,FirstVNF_RAM ) ) ) ) ) + Min( ( ( ( Min( AMS ,Const ) + Min( FirstVNF_CPU ,CRS ) ) - ( Min( FirstVNF_Mem ,FirstVNF_RAM ) / ( ARS * ACS ) ) ) - ( ( ( CRS - DDR ) - Min( FirstVNF_Mem ,DDR ) ) / ( ( FirstVNF_CPU / FirstVNF_Mem ) + ( DDR * MDR ) ) ) ) ,Max( ( ( ( CRS - FirstVNF_Mem ) / ( FirstVNF_CPU_Server / AMS ) ) - ( ( Const - ARS ) + ( FirstVNF_Mem * MRS ) ) ),( Max( Min( FirstVNF_RAM ,AMS ),Max( BR,FirstVNF_RAM_Server ) ) - Max( Max( RRS,AMS ),( RRS + FirstVNF_RAM_Server ) ) ) ) ) ) ) / ( Max( ( ( ( ( ( FirstVNF_RAM * PN ) / Min( FirstVNF_Mem_Server ,AMS ) ) - ( ( Const * BR ) * ( RRS + ARS ) ) ) + ( ( ( RRS * ACS ) - Max( PN,Const ) ) / ( Max( CRS,CRS ) / ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) / Max( ( Min( ( FirstVNF_RAM - AMS ) ,( BR * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_Mem_Server / CRS ) - Min( ARS ,AMS ) ) ),( ( Max( FirstVNF_RAM_Server,ARS ) + ( ARS + FirstVNF_RAM ) ) * ( ( MDR - MDR ) - ( CRS / FirstVNF_CPU_Server ) ) ) ) ),( Min( ( Max( ( FirstVNF_Mem / BR ),Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) * ( Max( PN,Const ) + ( FirstVNF_CPU * FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU_Server * BR ) * Min( BR ,PN ) ) - ( Min( RRS ,FirstVNF_CPU_Server ) + ( RRS - FirstVNF_CPU ) ) ) ) - Max( ( ( Max( MDR,FirstVNF_CPU ) + ( FirstVNF_CPU * Const ) ) * ( ( BR + Const ) - ( ACS / FirstVNF_RAM ) ) ),( Min( ( ACS / FirstVNF_CPU ) ,( ARS + MRS ) ) - Max( ( FirstVNF_Mem_Server - CRS ),( MRS * RRS ) ) ) ) ) ) / Min( ( ( ( ( ( FirstVNF_Mem_Server + CRS ) - Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) * ( MDR - FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_Mem_Server / PN ) / ( Const * Const ) ),( ( FirstVNF_RAM - FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) + ( ( ( ( PN + FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) + ( ( AMS * ARS ) * ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( BR * FirstVNF_CPU ) / ( AMS - BR ) ) ) ) ) ,( Max( ( ( Min( FirstVNF_Mem_Server ,RRS ) / ( ACS / RRS ) ) / ( Min( ACS ,BR ) / Min( ARS ,PN ) ) ),( ( ( FirstVNF_Mem_Server - AMS ) + ( MDR * FirstVNF_Mem_Server ) ) - ( ( FirstVNF_CPU / FirstVNF_CPU ) - ( CRS - ACS ) ) ) ) + ( ( ( ( FirstVNF_CPU - FirstVNF_CPU ) + ( RRS * FirstVNF_Mem ) ) * ( ( FirstVNF_RAM_Server + RRS ) * Min( FirstVNF_RAM ,ARS ) ) ) + ( ( ( DDR / FirstVNF_RAM_Server ) + ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( PN * MRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( MUC ,( ( Min( ( MUC - MUC ) ,Min( ( RCSe * MUC ) ,CS ) ) * ( MLU - DS ) ) * MUR ) ) ,Max( Min( ( DS * RCSe ) ,( ( CS / CS ) + RCSe ) ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) ) - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,Max( ( DS / DS ),Min( RRSe ,MLU ) ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) ) ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( Min( MLU ,MUM ) ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU / AMS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUR - MUC ) * ( RRSe * RRSe ) )", "obj1": 0.683083511777302, "obj2": 0.2604293690038136}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( CS + CS ) + Max( CS,CS ) )", "obj1": 0.7558886509635975, "obj2": 0.22735824597901255}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "Min( Min( ( BR / DDR ) ,( Min( ( BR / DDR ) ,( AMS - BR ) ) - BR ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.7194860813704497, "obj2": 0.2321512260433513}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUR ) * ( DS / CS ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Min( RRS ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( RMSe / MUR ) ) ,RRSe )", "obj1": 0.69593147751606, "obj2": 0.252812158049559}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 0.6916488222698073, "obj2": 0.25609735994040467}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "Min( ( ( Min( RMSe ,CS ) * RMSe ) - Max( CS,( RRSe * MLU ) ) ) ,Min( ( Max( RRSe,MUM ) + RRSe ) ,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7558886509635975, "obj2": 0.22735824597901255}, {"determining": "Min( RRS ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / MUR ) ,RRSe )", "obj1": 0.6916488222698073, "obj2": 0.25609735994040467}, {"determining": "( ( MRS - DDR ) / ( FirstVNF_CPU_Server - ARS ) )", "choosing": "( Max( MLU,RCSe ) / Max( MUM,RRSe ) )", "obj1": 0.9314775160599572, "obj2": 0.07159286772069554}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - Min( ( Min( RRS ,DDR ) - ( ( ( MRS - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - ARS ) ) * Const ) ) ,PN ) )", "choosing": "Min( ( DS * MUR ) ,( RMSe / ( RCSe * CS ) ) )", "obj1": 0.9314775160599572, "obj2": 0.07159286772069554}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MRS / PN ) )", "choosing": "Min( ( MLU - MUR ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / DDR ) ,( AMS - ( FirstVNF_RAM / Const ) ) )", "choosing": "( Min( DS ,MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * Max( RRSe,MLU ) ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,Max( ( FirstVNF_CPU_Server * Const ),Min( RRS ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MLU / RCSe ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU / RCSe ) / ( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ) )", "choosing": "( ( Min( DS ,MUR ) * ( DS - MUR ) ) * ( DS - MUR ) )", "obj1": 0.6788008565310493, "obj2": 0.26192822473046146}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( ( CS + CS ) + Max( CS,CS ) )", "obj1": 0.7558886509635975, "obj2": 0.22735824597901255}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "Min( Min( ( BR / DDR ) ,( Min( ( BR / DDR ) ,( AMS - BR ) ) - BR ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.7194860813704497, "obj2": 0.2321512260433513}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUR ) * ( DS / CS ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( FirstVNF_CPU / AMS ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUR - MUC ) * ( RRSe * RRSe ) )", "obj1": 0.683083511777302, "obj2": 0.2604293690038136}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - ARS ) ) * Const ) - ( CRS * Const ) )", "choosing": "( Max( CS,MUC ) / Max( MLU,MUC ) )", "obj1": 0.9314775160599572, "obj2": 0.0687191256362735}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MLU * MUR ) / ( RCSe * CS ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7558886509635975, "obj2": 0.22735824597901255}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MRS / PN ) )", "choosing": "Min( ( MLU - MUR ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / DDR ) ,( AMS - ( FirstVNF_RAM / Const ) ) )", "choosing": "( Min( DS ,MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * Max( RRSe,MLU ) ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - Min( RRS ,DDR ) )", "choosing": "Min( ( DS * MUR ) ,( RMSe / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.22366341562123976}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "Min( Min( ( BR / DDR ) ,( Min( ( BR / DDR ) ,( AMS - BR ) ) - BR ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.7194860813704497, "obj2": 0.2321512260433513}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUR ) * ( DS / CS ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - ARS ) ) * Const ) - ( CRS * Const ) )", "choosing": "( Max( CS,MUC ) / Max( MLU,MUC ) )", "obj1": 0.9314775160599572, "obj2": 0.0687191256362735}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MRS / PN ) )", "choosing": "Min( ( MLU - MUR ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / DDR ) ,( AMS - ( FirstVNF_RAM / Const ) ) )", "choosing": "( Min( DS ,MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) ,Min( ( RRS / AMS ) ,( BR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe * Max( RRSe,MLU ) ) + ( MUC / ( MUC * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( CRS * Const ) )", "choosing": "( Max( CS,RCSe ) / ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - Min( RRS ,DDR ) )", "choosing": "Min( ( DS * MUR ) ,( RMSe / RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.22366341562123976}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "Min( Min( ( BR / DDR ) ,( Min( ( BR / DDR ) ,( AMS - BR ) ) - BR ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.7194860813704497, "obj2": 0.2321512260433513}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( Min( MLU ,MUM ),MUR ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUR ) * ( DS / CS ) )", "obj1": 0.9293361884368309, "obj2": 0.0718484446177723}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( FirstVNF_RAM ,( RRS / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) )", "obj1": 0.9336188436830836, "obj2": 0.06637745489297739}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ( ( MRS - FirstVNF_RAM ) / ( FirstVNF_CPU_Server - ARS ) ) * Const ) - ( CRS * Const ) )", "choosing": "( Max( CS,MUC ) / Max( MLU,MUC ) )", "obj1": 0.9314775160599572, "obj2": 0.0687191256362735}, {"determining": "Min( ( AMS * PN ) ,( CRS + DDR ) )", "choosing": "Min( ( ( Min( RMSe ,CS ) * RMSe ) - Max( CS,( RRSe * MLU ) ) ) ,Min( ( Max( RRSe,MUM ) + RRSe ) ,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + FirstVNF_RAM ) - ( MRS / PN ) )", "choosing": "Min( ( MLU - MUR ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ARS / DDR ) ,( AMS - ( FirstVNF_RAM / Const ) ) )", "choosing": "( Min( DS ,MLU ) * RMSe )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( CRS * Const ) )", "choosing": "( MLU / ( RCSe - CS ) )", "obj1": 0.7323340471092077, "obj2": 0.22173151258663856}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( BR / DDR ) ,( Min( ( BR / DDR ) ,( AMS - BR ) ) - BR ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.7194860813704497, "obj2": 0.2321512260433513}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,( FirstVNF_RAM_Server - ARS ) ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( FirstVNF_CPU_Server + ARS ) - ARS ) - ( ( FirstVNF_CPU_Server + ARS ) - ARS ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) )", "choosing": "( ( DS + MUC ) / ( MUC * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) / FirstVNF_Mem_Server ) - ( PN + AMS ) )", "choosing": "Min( ( MUC / RMSe ) ,( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,FirstVNF_RAM ) - ( CRS - RRS ) )", "choosing": "Min( ( MUM - CS ) ,Max( RCSe,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( CRS * Const ) )", "choosing": "( MLU / ( RCSe - CS ) )", "obj1": 0.7323340471092077, "obj2": 0.22173151258663856}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( BR / DDR ) ,( Min( ( BR / DDR ) ,( AMS - BR ) ) - BR ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.7194860813704497, "obj2": 0.2321512260433513}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / MUR ) ,( MUM + CS ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( FirstVNF_CPU_Server + ARS ) - ARS ) - ( ( FirstVNF_CPU_Server + ARS ) - ARS ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,DDR ) - ( CRS / AMS ) )", "choosing": "( ( RRSe - RRSe ) / ( CS * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,DDR ) - ( ( ( MRS + Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( MLU,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( RRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.22038813630755114}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( CRS * Const ) )", "choosing": "( MLU / ( RCSe - CS ) )", "obj1": 0.7323340471092077, "obj2": 0.22173151258663856}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( Max( CS,MUC ) / ( RCSe * CS ) ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( FirstVNF_CPU_Server + ARS ) - ARS ) - ( ( FirstVNF_CPU_Server + ARS ) - ARS ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / MUR ) ,( MUM + CS ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Max( ( FirstVNF_CPU + MDR ),PN ) / PN ) )", "choosing": "Max( ( MUC - ( MUR - RRSe ) ),Max( Max( CS,RMSe ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( MRS - FirstVNF_Mem ) * ( FirstVNF_Mem_Server / MRS ) ) ,( ( FirstVNF_RAM / CRS ) + ( CRS - FirstVNF_CPU_Server ) ) ) - Min( ( ( ACS - ACS ) / Max( BR,ACS ) ) ,Max( Min( BR ,MRS ),Max( RRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUM + Min( MUC ,RCSe ) ) - ( ( MUC - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR - FirstVNF_CPU ) * ( Const - DDR ) ) ,( ( PN + FirstVNF_Mem ) * Min( CRS ,CRS ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) - Min( RRS ,FirstVNF_CPU_Server ) ) / ( ( MDR / FirstVNF_Mem ) * ( Const - ACS ) ) ) )", "choosing": "Max( ( Min( Max( MUC,RCSe ) ,( MUC * MUR ) ) - Max( ( RRSe * RRSe ),Min( MUC ,MLU ) ) ),Max( ( ( MUR + RMSe ) * Max( DS,DS ) ),( Min( RRSe ,RRSe ) * ( MUM * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * ( RCSe / MLU ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.21308162340367884}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( CRS * Const ) )", "choosing": "( MLU / ( RCSe - CS ) )", "obj1": 0.7323340471092077, "obj2": 0.22173151258663856}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,( RMSe / RMSe ) )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( ARS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe - ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) - Max( FirstVNF_RAM_Server,MDR ) ) * ( ( ACS + FirstVNF_CPU ) - ( CRS + BR ) ) )", "choosing": "Min( Max( Max( CS,MUM ),MLU ) ,( ( MUM + MUC ) + ( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) + MRS ) - ( DDR * ( FirstVNF_CPU / FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC - RCSe ) - ( CS - RCSe ) ) + Max( ( DS / DS ),Min( RRSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( PN,( MDR - MRS ) ) - ( ( RRS + ( FirstVNF_RAM + FirstVNF_RAM ) ) * ARS ) )", "choosing": "( Min( ( ( RRSe / RCSe ) + ( RRSe * RCSe ) ) ,( ( MUR * MUC ) - ( RRSe * MUM ) ) ) + Min( Min( Min( MUC ,CS ) ,( MUC * DS ) ) ,( ( DS * RCSe ) / ( MUR + RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( FirstVNF_RAM_Server * PN ) - ( CRS * Const ) )", "choosing": "( MLU / ( RCSe - CS ) )", "obj1": 0.7323340471092077, "obj2": 0.22173151258663856}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * ( RCSe / MLU ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.21308162340367884}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.20552377645862469}, {"determining": "Min( AMS ,( FirstVNF_RAM - ARS ) )", "choosing": "Min( ( RMSe - MLU ) ,RRSe )", "obj1": 0.7601713062098501, "obj2": 0.1968014671415884}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7558886509635975, "obj2": 0.20552377645862469}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * FirstVNF_CPU ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * ( RCSe / MLU ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7494646680942184, "obj2": 0.21308162340367884}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( Min( RRS ,DDR ) - ( PN - Min( MRS ,PN ) ) )", "choosing": "( MUR / ( CS - CS ) )", "obj1": 0.9935760171306209, "obj2": 0.00987828802074835}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( ( RRS - DDR ) - ( CRS * Const ) ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,( Max( RMSe,MUC ) / ( RCSe - CS ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "Min( Min( MUM ,MUR ) ,( RMSe - RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * ARS ) - Min( ARS ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUC ) - ( DS * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( ( RRS - DDR ) - ( CRS * Const ) ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,( Max( RMSe,MUC ) / ( RCSe - CS ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( RRS ,DDR ) - ( PN - Min( MRS ,PN ) ) )", "choosing": "( MUR / ( CS - CS ) )", "obj1": 0.9935760171306209, "obj2": 0.00987828802074835}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Max( Const,FirstVNF_CPU ) - FirstVNF_Mem_Server ) * Min( ( BR * FirstVNF_Mem_Server ) ,DDR ) )", "choosing": "( ( MUC / ( DS / MLU ) ) + ( ( RRSe + RCSe ) / ( RMSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - ( PN / AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( CS + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( FirstVNF_RAM_Server - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + CS )", "obj1": 0.8458244111349036, "obj2": 0.12099623280231825}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( ( RRS - DDR ) - ( CRS * Const ) ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,( Max( RMSe,MUC ) / ( RCSe - CS ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( RRS ,DDR ) - ( PN - Min( MRS ,PN ) ) )", "choosing": "( MUR / ( CS - CS ) )", "obj1": 0.9935760171306209, "obj2": 0.00987828802074835}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "Min( Min( MUM ,DS ) ,( RMSe - RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( AMS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( Min( ( MLU * MUR ) ,CS ) - Max( RRSe,RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ARS - FirstVNF_RAM ) - Max( ( BR / CRS ),Max( Const,MRS ) ) )", "choosing": "( ( MUC * MUC ) - ( MLU + RCSe ) )", "obj1": 0.9957173447537473, "obj2": 0.006491755885057708}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) - AMS ) ,( MDR * Const ) )", "choosing": "( ( MLU * DS ) * ( MUR * DS ) )", "obj1": 0.9935760171306209, "obj2": 0.0058706231974553205}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( Const * Const ) - Max( FirstVNF_CPU,FirstVNF_CPU ) )", "choosing": "( ( RCSe / RRSe ) + ( RMSe + MUC ) )", "obj1": 0.8458244111349036, "obj2": 0.11891013895609893}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( ( RRS - DDR ) - ( CRS * Const ) ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,( Max( RMSe,MUC ) / ( RCSe - CS ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_CPU * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( RMSe + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.6980728051391863, "obj2": 0.25089120009749777}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * RRS ) * ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * DDR ) )", "choosing": "( ( MUC + ( RCSe / MLU ) ) + ( Max( RRSe,RCSe ) / ( RCSe * MLU ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,DDR ) )", "choosing": "Min( Min( MUM ,DS ) ,( RMSe - RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2506629764249897}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_RAM_Server / DDR ) )", "choosing": "( ( MUR - RCSe ) / Min( MUC ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( ( RRS - DDR ) - ( CRS * Const ) ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,( Max( RMSe,MUC ) / ( RCSe - CS ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem * BR ) ,( Min( ACS ,PN ) - FirstVNF_Mem ) )", "choosing": "( ( ( RCSe + MLU ) / RRSe ) + ( MUR + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( AMS ,( Min( AMS ,( FirstVNF_RAM - ARS ) ) - ARS ) )", "choosing": "Min( ( ( RMSe - MLU ) - MLU ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * Const ) - ( Max( ( FirstVNF_Mem_Server + FirstVNF_Mem ),( Max( DDR,ACS ) + Min( FirstVNF_CPU_Server ,Min( ARS ,CRS ) ) ) ) / ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RRSe + DS ) * ( MUM / Min( Max( RCSe,( MUM - RMSe ) ) ,( Max( RRSe,MLU ) - ( RRSe / ( RMSe - RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) * ( Const + ( AMS - Max( ( FirstVNF_Mem * BR ),( FirstVNF_Mem + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( CS / CS ) * Min( Min( ( RRSe * RCSe ) ,Max( RRSe,RRSe ) ) ,( Max( DS,MUC ) - ( RRSe - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - FirstVNF_RAM ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( DS ,MLU ) * ( MUM + MUC ) ) ) ,Max( ( MUM + MUC ),MUR ) )", "obj1": 0.9164882226980728, "obj2": 0.08095168183650692}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( FirstVNF_RAM_Server - ACS ) + Min( BR ,Min( PN ,PN ) ) )", "choosing": "Min( ( MUC + MUR ) ,Max( ( ( ( CS - RCSe ) - ( MUC + MUR ) ) * ( ( RMSe / RRSe ) + ( CS - MUC ) ) ),MUR ) )", "obj1": 0.8886509635974305, "obj2": 0.09373009128568878}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS - FirstVNF_RAM ) - ( ( FirstVNF_RAM_Server - ARS ) / BR ) )", "choosing": "( ( MUC * MUC ) - ( MLU * MUR ) )", "obj1": 0.9143468950749465, "obj2": 0.08263120293324308}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Min( CS ,RCSe ) )", "obj1": 0.8822269807280514, "obj2": 0.09740121695652866}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8629550321199143, "obj2": 0.10032399494738001}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe * CS ) + MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( BR / CRS ) - ARS ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( MLU * MUR ) ,( MLU * MUR ) )", "obj1": 0.6852248394004282, "obj2": 0.25505189087884705}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - DDR )", "choosing": "( Max( MLU,( CS + RCSe ) ) / ( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( Const - ( CRS * MDR ) ) )", "choosing": "( ( CS + RCSe ) / ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( Const - ( ( Min( RRS ,DDR ) - ( Const - ( CRS * MDR ) ) ) * MDR ) ) )", "choosing": "( Max( MLU,RCSe ) / ( MUR - ( MUR - CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ARS - Max( DDR,PN ) )", "choosing": "( ( RMSe / RMSe ) + ( MUM / CS ) )", "obj1": 0.8501070663811563, "obj2": 0.11786333260969198}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - ( AMS - BR ) )", "choosing": "Min( ( RMSe / RMSe ) ,( RMSe / ( Min( DS ,RMSe ) * ( DS * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),Min( ( DDR + CRS ) ,( RRS - CRS ) ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( ( Min( RMSe ,DS ) / Min( RMSe ,RCSe ) ) + Max( Min( MUM ,RCSe ),( MUR / DS ) ) ) - ( Min( ( RMSe - MUM ) ,( MLU / MUC ) ) - ( ( RMSe + RMSe ) / ( MLU / RMSe ) ) ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Max( Max( ( ( ( FirstVNF_RAM * BR ) * Min( Const ,AMS ) ) / ( ( ARS - MRS ) * ( DDR - CRS ) ) ),Max( ( ( ARS * RRS ) / ( ACS * ACS ) ),( ( CRS * BR ) / Min( FirstVNF_CPU_Server ,ARS ) ) ) ),( ( Min( ( MRS / DDR ) ,( FirstVNF_RAM * FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server - Const ) + ( FirstVNF_RAM * AMS ) ) ) - ( ( ( CRS + DDR ) + ( FirstVNF_CPU_Server + RRS ) ) * ( Min( DDR ,BR ) * ( ACS / MDR ) ) ) ) ) ,Max( ( ( ( ( ARS * BR ) + ( AMS + CRS ) ) / Min( Max( RRS,Const ) ,( CRS - RRS ) ) ) + ( ( ( AMS + ACS ) * Max( BR,MRS ) ) - ( ( Const / FirstVNF_Mem_Server ) - ( Const + BR ) ) ) ),Max( ( ( Min( MDR ,FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) * Min( ( PN + CRS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ),( ( Max( FirstVNF_RAM,BR ) - Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - ( ( BR * FirstVNF_RAM ) + Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) ) + ( ( ( ( ( ( FirstVNF_RAM - Const ) / Max( Const,FirstVNF_CPU ) ) * ( Max( ACS,RRS ) / ( ARS * AMS ) ) ) - ( ( ( FirstVNF_Mem_Server / MRS ) / Min( ACS ,FirstVNF_Mem ) ) + ( Max( ARS,DDR ) / ( CRS * FirstVNF_CPU ) ) ) ) + ( ( ( ( MRS + CRS ) * ( BR * AMS ) ) * Max( ( Const - RRS ),( FirstVNF_Mem + Const ) ) ) + ( ( Max( AMS,MRS ) - Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,CRS ) * ( PN + FirstVNF_Mem_Server ) ) ) ) ) / ( Max( Max( ( ( BR * ARS ) + ( FirstVNF_CPU_Server - Const ) ),( ( DDR + MDR ) / Max( DDR,BR ) ) ),Max( Max( Max( FirstVNF_CPU,ACS ),( BR - ARS ) ),( ( Const - AMS ) * ( PN / FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server / RRS ) / ( FirstVNF_Mem_Server + ARS ) ) - Min( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ,( MDR * BR ) ) ) / ( Max( Min( AMS ,FirstVNF_Mem ),( Const * FirstVNF_CPU_Server ) ) / ( ( Const / FirstVNF_Mem_Server ) + Min( MRS ,FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Min( ( ( ( BR - ACS ) - ( Const - CRS ) ) + Max( ( FirstVNF_RAM * FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ARS ) ) ) ,( Min( ( FirstVNF_RAM - DDR ) ,( FirstVNF_RAM_Server / MRS ) ) / ( Min( FirstVNF_Mem ,AMS ) / ( RRS * Const ) ) ) ) * Min( ( ( ( FirstVNF_RAM * MRS ) + ( FirstVNF_Mem * ARS ) ) * ( Min( AMS ,PN ) * ( BR - BR ) ) ) ,Max( ( Min( RRS ,FirstVNF_CPU ) * ( ARS - DDR ) ),( ( RRS / AMS ) - Max( AMS,RRS ) ) ) ) ) ,Min( ( ( Max( ( FirstVNF_CPU_Server * MDR ),( ACS - BR ) ) + Max( ( RRS / ARS ),( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) - ( Max( Min( Const ,BR ),Max( PN,Const ) ) - ( ( Const * FirstVNF_Mem_Server ) + ( BR + FirstVNF_Mem_Server ) ) ) ) ,( Max( Min( ( FirstVNF_RAM * Const ) ,( MRS / FirstVNF_RAM ) ),Min( ( ACS * BR ) ,( PN / FirstVNF_Mem_Server ) ) ) / ( Max( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ),( FirstVNF_RAM_Server * FirstVNF_RAM ) ) / Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),Min( DDR ,AMS ) ) ) ) ) ) - ( Min( ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( BR / PN ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * Max( ACS,FirstVNF_RAM_Server ) ) ) / ( Max( ( BR * FirstVNF_RAM_Server ),( ARS * AMS ) ) - ( ( CRS - FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,ARS ) ) ) ) ,( ( ( ( AMS + PN ) - ( ACS - FirstVNF_CPU_Server ) ) / ( ( ACS - DDR ) - ( MRS / FirstVNF_RAM_Server ) ) ) * ( ( Min( ACS ,Const ) * ( BR - DDR ) ) + ( Min( RRS ,AMS ) - ( Const / DDR ) ) ) ) ) * ( ( ( ( ( ACS + MRS ) + ( MRS - CRS ) ) / ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * Const ) ) ) - ( Min( ( FirstVNF_CPU * CRS ) ,( RRS / ACS ) ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( BR - FirstVNF_RAM_Server ) ) ) ) / ( ( ( Max( FirstVNF_Mem,DDR ) / Min( Const ,AMS ) ) + Min( ( ACS / BR ) ,( MDR / FirstVNF_CPU_Server ) ) ) * ( ( Max( FirstVNF_Mem,ARS ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) / ( ( FirstVNF_CPU - DDR ) * ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( ( DS - RRSe ) - ( MUM / MUC ) ) / ( Max( CS,RMSe ) * ( MLU + MUM ) ) ) * Max( Min( ( MUR - MUM ) ,Max( MUM,RCSe ) ),Max( ( RMSe - DS ),( MUR / RCSe ) ) ) ) + ( ( ( Min( MUR ,DS ) + ( MUM + MUM ) ) + ( Max( RRSe,CS ) - ( MUR / MUM ) ) ) / Min( ( ( MUM + CS ) + ( RCSe + MUC ) ) ,( ( CS * DS ) + ( MUM - MLU ) ) ) ) ) + ( ( Min( Max( ( DS * MLU ),( RRSe + RMSe ) ) ,( Max( DS,RCSe ) - ( RCSe + MUR ) ) ) * ( ( ( RRSe - MUC ) * ( CS / RCSe ) ) - Max( ( MLU + MUM ),Min( MUC ,MLU ) ) ) ) / Min( ( ( ( MUR / MLU ) / ( MUR - RMSe ) ) - ( Max( MUC,MUM ) * Min( RMSe ,RCSe ) ) ) ,( ( ( RMSe / MUM ) / ( MUR - DS ) ) * ( ( CS - MUC ) / ( MUC / MLU ) ) ) ) ) ) * Max( Max( Max( Max( ( Max( RRSe,MUC ) + ( DS + MLU ) ),( ( CS - MLU ) - Min( MLU ,RRSe ) ) ),( ( Max( MUM,DS ) - ( MUM / MLU ) ) / ( ( MLU - MLU ) + ( MLU + MUR ) ) ) ),( Min( ( ( RMSe + RMSe ) * ( MUM / CS ) ) ,Min( ( DS + CS ) ,( MLU * CS ) ) ) - ( ( Min( MUR ,MUC ) - ( MLU * RRSe ) ) * ( ( MUR / MLU ) * ( MUM * RMSe ) ) ) ) ),( Max( ( Max( Max( MUR,RRSe ),Min( RMSe ,CS ) ) - Max( Min( MUM ,MUM ),( RCSe - RCSe ) ) ),Max( ( ( CS + MUM ) / ( RCSe * RRSe ) ),Max( Min( RCSe ,MUC ),( CS * RMSe ) ) ) ) + Min( ( ( ( RCSe * MUR ) - ( MUR + RCSe ) ) + Max( Max( DS,DS ),( RMSe * MUC ) ) ) ,Min( Max( ( RRSe + RCSe ),( MLU * DS ) ) ,( Min( MUM ,RCSe ) - ( MUC / CS ) ) ) ) ) ) ) - ( ( ( Max( Min( Min( ( MUC * MUR ) ,Max( RRSe,MUR ) ) ,( ( CS + MUR ) - ( RMSe / CS ) ) ),( Min( ( MUC * RCSe ) ,( MUR - MUM ) ) / ( Max( MLU,MUC ) - Max( MUR,DS ) ) ) ) + ( ( Max( ( RCSe - CS ),Max( CS,MUC ) ) - Min( ( CS - MUR ) ,Max( MLU,RRSe ) ) ) / ( ( Max( RCSe,MUC ) + ( RRSe * CS ) ) + ( ( RMSe / MUM ) / ( RCSe * RCSe ) ) ) ) ) - ( ( ( ( Max( DS,RRSe ) - ( RRSe * RRSe ) ) / ( Max( MUR,MLU ) - ( MUM - RRSe ) ) ) * ( Min( Max( RCSe,RCSe ) ,Max( MUC,CS ) ) + ( ( RMSe + MUC ) + ( MLU - RRSe ) ) ) ) * ( ( Max( ( CS * RMSe ),( RRSe + CS ) ) * Max( Min( RCSe ,RRSe ),( MUC / CS ) ) ) - ( ( Min( MUM ,CS ) * Max( RRSe,MLU ) ) / Min( Max( RMSe,RRSe ) ,( DS * RMSe ) ) ) ) ) ) + ( ( Min( ( ( ( DS * MUC ) * Max( MUR,MUM ) ) * Max( Min( RMSe ,RCSe ),( RMSe / MUR ) ) ) ,( ( ( RCSe / MLU ) / ( MUM / RMSe ) ) / Max( Min( MLU ,CS ),( RCSe - DS ) ) ) ) / ( ( Max( Min( MUC ,DS ),( MUC - RCSe ) ) * ( ( MUM + MUR ) - ( CS + MLU ) ) ) - ( ( Min( MUR ,DS ) + Min( MUC ,MLU ) ) + ( ( MUC * RRSe ) / Min( MLU ,MLU ) ) ) ) ) - ( ( Max( ( ( RMSe / MUC ) - Max( MUM,MLU ) ),( ( CS * CS ) / ( MLU + MUC ) ) ) - ( ( ( MUC * MLU ) / ( MUC + MUR ) ) + ( ( MLU + MUR ) * Max( RCSe,RRSe ) ) ) ) * ( ( ( ( RRSe - MUR ) / Max( RRSe,RCSe ) ) * ( Min( MUR ,MLU ) / ( MUM - RRSe ) ) ) + ( ( ( MLU / MUC ) - Min( CS ,RMSe ) ) - ( ( DS * CS ) * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - DDR )", "choosing": "( Max( MLU,( CS + RCSe ) ) / ( MUR - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( Const - ( CRS * MDR ) ) )", "choosing": "( ( CS + RCSe ) / ( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( RRSe * MUR ) ,( ( RMSe + CS ) + Min( CS ,RMSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.1068767708257885}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( ( MUC * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ARS - Min( FirstVNF_RAM_Server ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( Min( ( RMSe / RMSe ) ,( RMSe / RCSe ) ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ACS ,PN ) - FirstVNF_Mem ) ,( FirstVNF_RAM - Const ) )", "choosing": "Min( ( RMSe / MUR ) ,Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( RRSe * MUR ) ,( ( RMSe + CS ) + Min( CS ,RMSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.1068767708257885}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( ( MUC * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "( ( Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( RRS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) ) / RRS ) - ( DDR / ARS ) )", "choosing": "( ( ( RRSe * ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) ) + Min( CS ,RMSe ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - ( ( FirstVNF_RAM_Server - MRS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( MUR ,( RMSe + ( RMSe / RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - ( FirstVNF_RAM_Server * PN ) )", "choosing": "Min( ( RRSe * MUR ) ,( ( RMSe + CS ) + Min( CS ,RMSe ) ) )", "obj1": 0.8436830835117773, "obj2": 0.1068767708257885}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( DDR / RRS ) - ( DDR / FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MUC ) / ( RCSe - CS ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( Max( ( BR / CRS ),Max( Const,MRS ) ) ,PN ) )", "choosing": "Min( ( MLU * MUR ) ,MUM )", "obj1": 0.8522483940042827, "obj2": 0.1024244794703159}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( ( MUC * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "( ( Min( ( ( BR * AMS ) - ( FirstVNF_Mem * BR ) ) ,Min( ( RRS / AMS ) ,( BR * FirstVNF_RAM_Server ) ) ) / RRS ) - ( DDR / ARS ) )", "choosing": "( ( ( RRSe * ( RRSe * RCSe ) ) + ( DS / ( MLU * RRSe ) ) ) + Min( CS ,RMSe ) )", "obj1": 0.841541755888651, "obj2": 0.11840022903849971}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) / Max( FirstVNF_CPU,AMS ) )", "choosing": "( ( MUC * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,DDR ) - ( FirstVNF_Mem_Server - ( CRS * MDR ) ) ) + DDR ) - ( ARS * RRS ) )", "choosing": "( ( CS / RCSe ) / ( Max( MLU,RCSe ) * CS ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) - ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server + MDR ) - ( ( FirstVNF_CPU_Server + MDR ) - MDR ) ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( Min( MUM ,RMSe ) ,( RMSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - ( FirstVNF_Mem / BR ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),( MLU + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262004}, {"determining": "( ( ( ( CRS * FirstVNF_RAM ) + Min( FirstVNF_CPU ,ACS ) ) / CRS ) - ( Const / ARS ) )", "choosing": "Min( ( MUM + MLU ) ,MLU )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262004}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MRS - ARS ) * ( FirstVNF_RAM_Server * PN ) ) * Const ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * Max( CS,RMSe ) ) ,MUC )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( RMSe / RMSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RMSe * CS ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) )", "choosing": "Min( ( RMSe * CS ) ,( RMSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,Min( RRSe ,MUR ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_RAM_Server - ARS ) ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( ( ( RMSe / CS ) / RCSe ) / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Min( FirstVNF_Mem_Server ,MDR ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / ( ( RMSe / CS ) / RCSe ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( ( Max( ( ( RRS / AMS ) - Max( ARS,ACS ) ),( ( FirstVNF_Mem / CRS ) + ( RRS + RRS ) ) ) / ( ( Max( Const,FirstVNF_CPU ) * ( FirstVNF_Mem / PN ) ) / ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - Min( AMS ,AMS ) ) ) ) ,( ( ( Min( BR ,BR ) + ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM * ACS ) * ( AMS / AMS ) ) ) * ( Max( ( FirstVNF_RAM / MDR ),( CRS + PN ) ) - Max( ( DDR - Const ),( FirstVNF_Mem_Server / RRS ) ) ) ) ) + ( ( ( ( ( MRS / FirstVNF_CPU ) * Max( ACS,DDR ) ) - Min( ( PN * ARS ) ,( AMS / MRS ) ) ) / ( ( ( FirstVNF_Mem_Server + DDR ) - Min( FirstVNF_CPU_Server ,AMS ) ) + ( ( FirstVNF_CPU_Server * PN ) - ( ACS + PN ) ) ) ) * Max( Max( Min( Max( PN,MRS ) ,( Const / ACS ) ),Min( Min( DDR ,ACS ) ,Min( MRS ,DDR ) ) ),Max( ( ( Const + FirstVNF_Mem ) * Max( PN,MDR ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( PN - RRS ) ) ) ) ) ) ,Min( ( ( ( ( ( FirstVNF_RAM_Server + RRS ) - Min( ACS ,Const ) ) - ( ( FirstVNF_Mem * RRS ) - ( FirstVNF_RAM * DDR ) ) ) / ( ( ( ACS * PN ) + ( FirstVNF_Mem_Server * PN ) ) - ( ( BR + ACS ) - ( Const - DDR ) ) ) ) * ( Max( Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ),Min( ( CRS - BR ) ,Max( ARS,ARS ) ) ) - ( Max( ( FirstVNF_Mem - AMS ),( DDR + PN ) ) - ( ( DDR * FirstVNF_Mem_Server ) / ( DDR * FirstVNF_Mem_Server ) ) ) ) ) ,( ( ( ( ( FirstVNF_CPU_Server - RRS ) / Min( RRS ,FirstVNF_RAM_Server ) ) + ( Max( BR,DDR ) * ( FirstVNF_RAM / RRS ) ) ) + Min( ( ( AMS - AMS ) * ( PN - FirstVNF_Mem_Server ) ) ,( ( FirstVNF_Mem_Server * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ) ) - ( ( Min( ( FirstVNF_Mem_Server + DDR ) ,( DDR * PN ) ) - ( Min( FirstVNF_RAM ,FirstVNF_RAM ) + ( FirstVNF_RAM_Server * CRS ) ) ) / ( ( Min( DDR ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + Max( Max( Const,FirstVNF_CPU_Server ),( RRS * FirstVNF_Mem ) ) ) ) ) ) ) - Min( Min( Max( ( ( ( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) / Max( PN,FirstVNF_Mem_Server ) ) * Min( ( FirstVNF_RAM_Server * CRS ) ,( AMS - ACS ) ) ) - ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) + ( ( FirstVNF_Mem * RRS ) + Min( Const ,FirstVNF_RAM ) ) ) ),( Max( ( ( MRS * FirstVNF_Mem_Server ) * Max( BR,ACS ) ),Min( ( MDR + Const ) ,( FirstVNF_Mem - RRS ) ) ) * Min( ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) + ( FirstVNF_RAM - MDR ) ) ,Min( Min( AMS ,AMS ) ,Min( BR ,RRS ) ) ) ) ) ,Max( ( Max( ( ( RRS + MDR ) - ( BR / CRS ) ),Min( ( FirstVNF_Mem - MRS ) ,( FirstVNF_Mem / ARS ) ) ) * ( ( Max( ARS,AMS ) + Max( FirstVNF_RAM,ARS ) ) / Min( Max( PN,PN ) ,Min( FirstVNF_CPU_Server ,ACS ) ) ) ),( Min( ( ( FirstVNF_CPU_Server / PN ) * Max( AMS,FirstVNF_RAM_Server ) ) ,( ( BR + FirstVNF_Mem ) / ( CRS * FirstVNF_CPU ) ) ) / Min( Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,Max( ACS,FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( FirstVNF_Mem,AMS ) ) ) ) ) ) ,( Max( ( ( Min( ( DDR * CRS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( ( FirstVNF_CPU + MDR ) + Max( AMS,BR ) ) ) + ( ( Max( ACS,MRS ) / ( ARS / FirstVNF_CPU ) ) + ( ( ARS + ARS ) * ( BR / FirstVNF_CPU ) ) ) ),Max( ( ( ( RRS * RRS ) - ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) - Min( ( AMS - FirstVNF_RAM_Server ) ,( CRS + PN ) ) ),Min( Max( ( BR / FirstVNF_RAM_Server ),( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ,Max( ( DDR * MDR ),( MRS - ARS ) ) ) ) ) * Min( Min( Max( ( Max( DDR,ARS ) + Max( FirstVNF_CPU,FirstVNF_Mem ) ),( Min( DDR ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * Const ) ) ) ,( ( ( FirstVNF_CPU_Server + AMS ) + Max( Const,DDR ) ) - ( ( FirstVNF_CPU / ACS ) + ( FirstVNF_RAM_Server - RRS ) ) ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) * ( ( AMS * CRS ) * ( RRS / MDR ) ) ) * ( ( ( MDR * Const ) - Min( MRS ,Const ) ) / Min( Max( MDR,FirstVNF_RAM ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,( DS + MUC ) ) ,Max( RMSe,CS ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( Min( ( Min( ( ( DDR / PN ) * Max( Const,MDR ) ) ,FirstVNF_Mem ) * Max( Const,MDR ) ) ,FirstVNF_Mem ) - ( MRS / PN ) )", "choosing": "Min( ( Min( ( RMSe * MUR ) ,CS ) * MUR ) ,CS )", "obj1": 0.7558886509635975, "obj2": 0.17303120188762877}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( MUC ,( RCSe * DS ) ) / ( Min( ( DS * MUC ) ,( MUR / RCSe ) ) - DS ) )", "obj1": 0.715203426124197, "obj2": 0.22649364272309544}, {"determining": "( Const - ( MRS / PN ) )", "choosing": "Min( ( RMSe * RMSe ) ,CS )", "obj1": 0.987152034261242, "obj2": 0.00660166972191445}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) - Max( ARS,MRS ) )", "choosing": "Min( Min( ( RMSe / RRSe ) ,RMSe ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "33": [{"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( Min( ( Min( ( ( DDR / PN ) * Max( Const,MDR ) ) ,FirstVNF_Mem ) * Max( Const,MDR ) ) ,FirstVNF_Mem ) - ( MRS / PN ) )", "choosing": "Min( ( Min( ( RMSe * MUR ) ,CS ) * MUR ) ,CS )", "obj1": 0.7558886509635975, "obj2": 0.17303120188762877}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( MUC ,( RCSe * DS ) ) / ( Min( ( DS * MUC ) ,( MUR / RCSe ) ) - DS ) )", "obj1": 0.715203426124197, "obj2": 0.22649364272309544}, {"determining": "( Const - ( MRS / PN ) )", "choosing": "Min( ( RMSe * RMSe ) ,CS )", "obj1": 0.987152034261242, "obj2": 0.00660166972191445}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( CRS * Const ),PN ) )", "choosing": "Min( ( MUM / MUR ) ,Max( CS,( Max( MLU,RCSe ) / Max( MUM,RRSe ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( FirstVNF_RAM_Server - ARS ) - ( ( ( MDR + MDR ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) ) )", "choosing": "Min( MUR ,Min( Min( MUM ,DS ) ,( RMSe - MUC ) ) )", "obj1": 0.7516059957173448, "obj2": 0.18073432315389495}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "( ( ( FirstVNF_CPU_Server + PN ) - MDR ) - Max( ( Min( BR ,Min( PN ,PN ) ) + Min( MRS ,FirstVNF_Mem ) ),PN ) )", "choosing": "Min( ( ( ( MUC - RCSe ) - ( MUC + MUR ) ) * ( Min( RMSe ,RRSe ) + ( CS - DS ) ) ) ,( RMSe - RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.17699348405133172}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( ( Const * FirstVNF_RAM_Server ) + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( ( RMSe - MUM ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( Max( ( DDR * FirstVNF_RAM ),( FirstVNF_Mem + MRS ) ) ,( BR - ( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,MDR ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) ) )", "choosing": "( Min( MLU ,MLU ) * ( RMSe - RCSe ) )", "obj1": 0.9978586723768736, "obj2": 0.0011780855275271538}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "34": [{"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( Max( BR,RRS ) - ( CRS + BR ) )", "choosing": "Min( Max( MLU,MUC ) ,Min( MUR ,RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_RAM_Server,MDR ) ) )", "choosing": "( Min( ( RRSe * MUC ) ,( MLU + CS ) ) / Max( CS,CS ) )", "obj1": 0.7644539614561028, "obj2": 0.1653840971625053}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( MUC ,( RCSe * DS ) ) / ( Min( ( DS * MUC ) ,( MUR / RCSe ) ) - DS ) )", "obj1": 0.715203426124197, "obj2": 0.22649364272309544}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ARS - FirstVNF_Mem ) - FirstVNF_Mem ) )", "choosing": "Min( Max( RMSe,Max( RMSe,MLU ) ) ,RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - FirstVNF_CPU_Server ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( MUR + RCSe ) / CS ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( MRS ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_Mem_Server ,MDR ) - MDR ) ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM_Server,DDR ) - ( FirstVNF_Mem_Server - ( ( DDR + RRS ) - ( ARS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,RRSe ) / ( ( MLU / MUC ) - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + RRS ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / MUC ) / ( MLU * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "35": [{"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Min( ( ( FirstVNF_RAM_Server - ARS ) - ( FirstVNF_RAM_Server * PN ) ) ,PN ) )", "choosing": "Min( ( Min( ( MLU * MUR ) ,( RMSe / RMSe ) ) * MUR ) ,MUM )", "obj1": 0.8265524625267666, "obj2": 0.12388887939010826}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( Max( ( ( ( ( BR - RRS ) + Max( MDR,FirstVNF_Mem_Server ) ) * ( ( ACS + MRS ) - Min( AMS ,FirstVNF_CPU_Server ) ) ) / Max( ( ( FirstVNF_CPU + AMS ) / ( BR / FirstVNF_RAM ) ),( ( ACS / MRS ) * ( MRS / ARS ) ) ) ),Min( ( Min( ( FirstVNF_Mem / ARS ) ,( BR * CRS ) ) * ( Max( AMS,ARS ) + Min( PN ,CRS ) ) ) ,( ( ( MDR + MDR ) - ( ACS / FirstVNF_RAM_Server ) ) / ( Min( AMS ,RRS ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) * ( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) / ( CRS * ACS ) ) * ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( FirstVNF_Mem_Server + Const ) ) ) - Min( Max( Min( DDR ,FirstVNF_RAM ),( MDR - RRS ) ) ,( Max( PN,ACS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ) ) + ( Max( ( ( ACS / FirstVNF_RAM ) / ( AMS - MDR ) ),( Min( FirstVNF_RAM_Server ,ACS ) - Min( CRS ,CRS ) ) ) + ( ( ( DDR / MRS ) * ( CRS - Const ) ) + ( ( MDR / FirstVNF_RAM ) + Max( MDR,MRS ) ) ) ) ) ),( ( Max( Max( Min( ( FirstVNF_RAM / BR ) ,( FirstVNF_RAM * MDR ) ),Min( ( MRS - MDR ) ,Min( Const ,FirstVNF_Mem ) ) ),Min( Max( ( PN - FirstVNF_Mem_Server ),( BR * Const ) ) ,( Max( Const,Const ) - ( FirstVNF_CPU_Server - ARS ) ) ) ) * Max( ( ( ( Const * FirstVNF_CPU ) - Min( ARS ,FirstVNF_RAM ) ) * ( ( MDR * RRS ) - ( BR + PN ) ) ),Min( Max( Min( MDR ,FirstVNF_CPU ),Max( DDR,MDR ) ) ,Min( Max( FirstVNF_RAM,FirstVNF_RAM ) ,( FirstVNF_CPU * DDR ) ) ) ) ) - ( ( ( ( ( Const - FirstVNF_Mem ) * ( ACS / MRS ) ) + ( ( FirstVNF_RAM + FirstVNF_RAM ) + Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - ( ( Min( FirstVNF_CPU_Server ,CRS ) - ( FirstVNF_RAM * ARS ) ) / ( Min( PN ,ARS ) + ( MRS + FirstVNF_Mem_Server ) ) ) ) - ( ( ( ( FirstVNF_CPU_Server * MDR ) + ( BR + DDR ) ) + Max( ( FirstVNF_RAM + Const ),Max( Const,FirstVNF_CPU ) ) ) + ( ( Max( RRS,AMS ) * ( FirstVNF_Mem + MRS ) ) * Min( Max( ACS,PN ) ,( FirstVNF_Mem_Server * Const ) ) ) ) ) ) ) + Min( ( ( Max( ( Min( ( FirstVNF_CPU_Server * AMS ) ,Min( RRS ,Const ) ) * ( ( PN * FirstVNF_Mem ) / Max( DDR,AMS ) ) ),Min( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + Max( ARS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + RRS ) / Min( MDR ,BR ) ) ) ) / Min( ( ( ( CRS * CRS ) * ( DDR * AMS ) ) / Max( ( MDR * FirstVNF_RAM_Server ),Max( FirstVNF_RAM_Server,CRS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) + Max( CRS,FirstVNF_Mem_Server ) ) * Min( Max( CRS,FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) - Max( ( ( Min( ( MRS * ACS ) ,Min( BR ,FirstVNF_CPU ) ) / Min( Min( RRS ,FirstVNF_CPU_Server ) ,( CRS - ARS ) ) ) * ( ( Max( FirstVNF_CPU,MRS ) / ( FirstVNF_Mem_Server + RRS ) ) / ( ( DDR / RRS ) * ( ARS - PN ) ) ) ),Max( ( Max( ( BR + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( ( FirstVNF_RAM_Server - ARS ) + Min( AMS ,BR ) ) ),( Max( Min( ACS ,ARS ),Min( FirstVNF_CPU_Server ,MDR ) ) - Min( ( CRS / FirstVNF_CPU ) ,Min( ACS ,DDR ) ) ) ) ) ) ,Min( ( Max( ( ( ( AMS * MRS ) * ( RRS + ACS ) ) * ( ( CRS + MDR ) + Max( Const,FirstVNF_Mem ) ) ),( ( ( MDR * MRS ) * ( FirstVNF_CPU - RRS ) ) - ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * ( ARS / BR ) ) ) ) / ( ( ( ( MDR * ARS ) / ( FirstVNF_RAM + BR ) ) - ( ( ARS / FirstVNF_Mem_Server ) / ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) ) + ( ( ( FirstVNF_CPU_Server / ACS ) - Min( Const ,FirstVNF_RAM ) ) * Max( ( Const * ACS ),( FirstVNF_CPU - AMS ) ) ) ) ) ,Min( ( Max( ( ( MDR - FirstVNF_RAM_Server ) / ( MRS * FirstVNF_RAM ) ),( ( BR - MDR ) / Max( FirstVNF_Mem,MRS ) ) ) * ( ( ( Const + RRS ) + ( BR * FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem_Server ) / Min( ACS ,BR ) ) ) ) ,Max( ( ( Min( MDR ,BR ) * ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) - ( ( PN / FirstVNF_Mem_Server ) / ( ARS * DDR ) ) ),( ( Max( BR,AMS ) - Max( MDR,FirstVNF_CPU_Server ) ) + Max( ( MDR - MDR ),( DDR - ACS ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( Max( ( Min( ( DS / RCSe ) ,Max( RMSe,MUR ) ) + ( Max( DS,MLU ) * Max( RRSe,MLU ) ) ),( ( ( CS + MLU ) * ( MUM + DS ) ) + Max( ( RCSe - RRSe ),( RRSe + DS ) ) ) ) - ( Min( ( ( RMSe - MUC ) * ( DS + DS ) ) ,( ( RRSe * MUR ) - Min( MLU ,RMSe ) ) ) - Max( Max( Max( MLU,MLU ),( MUR - MLU ) ),Min( ( RCSe * RMSe ) ,Max( RMSe,MUC ) ) ) ) ) ,Min( Min( Min( ( ( MLU / MUC ) - ( RRSe + RRSe ) ) ,Max( ( MUR + RCSe ),Min( MUR ,RMSe ) ) ) ,( ( ( MLU / RCSe ) * ( MUR / CS ) ) - ( Min( RCSe ,RRSe ) * ( MLU * MLU ) ) ) ) ,( ( Max( ( MLU + RRSe ),( MLU / MLU ) ) * Min( Min( MUR ,RMSe ) ,( MUM / CS ) ) ) + Min( ( ( MLU + MUM ) * ( MLU + RMSe ) ) ,( ( RMSe + MUC ) + ( DS + RRSe ) ) ) ) ) ),( ( Min( ( ( ( MLU * RCSe ) + ( RCSe / MUM ) ) - ( ( DS * MLU ) * ( MLU * CS ) ) ) ,Max( ( Max( CS,CS ) - Min( RRSe ,DS ) ),( ( CS * RRSe ) * ( MUM * RMSe ) ) ) ) / ( ( ( Min( CS ,CS ) / ( MUR + RRSe ) ) * ( ( DS - MLU ) * ( MUM - RCSe ) ) ) / ( ( ( DS / RMSe ) + ( RCSe - RCSe ) ) - ( ( DS - RCSe ) - ( RRSe - MUR ) ) ) ) ) + Max( Max( ( Min( Max( CS,MUC ) ,( MUR / MUC ) ) / ( ( RCSe / CS ) + ( DS - RMSe ) ) ),( ( ( MUC / MUR ) + ( MLU / MUR ) ) / ( ( RRSe - DS ) - ( RCSe - CS ) ) ) ),( ( ( ( MUC / DS ) / Min( MUC ,MLU ) ) + ( ( DS + RCSe ) / ( MUM + RRSe ) ) ) * ( ( ( MLU - MUR ) - Min( RMSe ,CS ) ) - ( ( RRSe - MUM ) + ( CS / RRSe ) ) ) ) ) ) ) - ( ( ( Max( Min( ( ( CS - MUR ) * ( RCSe * MUM ) ) ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ),( ( ( RCSe / RMSe ) / ( RMSe + RCSe ) ) - Max( ( DS * MUM ),( CS / RMSe ) ) ) ) + ( Min( Max( Max( DS,MUC ),( MUM * MUC ) ) ,( ( RMSe + MLU ) + ( RCSe - RCSe ) ) ) * ( Max( ( CS - DS ),Max( RMSe,RCSe ) ) / Min( Max( RMSe,DS ) ,Min( CS ,MLU ) ) ) ) ) * ( ( ( ( ( MUC * MLU ) / ( MUM + MUM ) ) * ( ( RCSe - RCSe ) * ( MLU / CS ) ) ) + ( ( Min( DS ,RCSe ) - ( CS - RCSe ) ) + ( Max( RMSe,DS ) * ( CS / RCSe ) ) ) ) * ( ( ( ( RCSe - RCSe ) + ( RMSe / MLU ) ) + ( ( MUM - MUR ) * ( CS / MUC ) ) ) * Min( Max( ( RCSe / MUM ),Max( CS,MUC ) ) ,Max( Max( RRSe,RMSe ),( RMSe + DS ) ) ) ) ) ) / ( ( Min( ( ( Min( MLU ,RRSe ) / Min( MLU ,MUM ) ) + ( ( MLU / RRSe ) * Min( RCSe ,RRSe ) ) ) ,( ( ( MUM + MUC ) * Max( MUC,RRSe ) ) * ( ( RCSe - MUC ) * Min( CS ,MUM ) ) ) ) * Min( ( ( ( MLU / CS ) / Min( RCSe ,DS ) ) + ( ( MUC + CS ) - ( CS * DS ) ) ) ,( ( ( MUM * RCSe ) * ( MUM / MUC ) ) - ( Max( RMSe,MUC ) / Max( MUC,CS ) ) ) ) ) * ( ( Min( ( Max( RMSe,RRSe ) / Min( CS ,RCSe ) ) ,( ( MUR + RMSe ) * ( MUM / MUM ) ) ) / ( ( Max( MUM,RCSe ) - ( MUC * RCSe ) ) / ( Min( DS ,RRSe ) - ( RMSe - MUC ) ) ) ) + ( ( Max( ( MUC - CS ),( CS - RRSe ) ) * ( ( DS * DS ) + Min( CS ,RMSe ) ) ) / Max( ( ( MUR / MUR ) * ( RRSe - RCSe ) ),( Min( MUC ,CS ) - ( RRSe / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.24088255128469055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( DS * MLU ) / ( DS - RRSe ) ) ) * ( MUR * CS ) )", "obj1": 0.7580299785867237, "obj2": 0.15768137185869777}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( MUC ,( RCSe * DS ) ) / ( Min( ( DS * MUC ) ,( MUR / RCSe ) ) - DS ) )", "obj1": 0.715203426124197, "obj2": 0.22649364272309544}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( Max( BR,RRS ) - ( CRS + BR ) )", "choosing": "Min( Max( MLU,MUC ) ,Min( MUR ,RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) * ( MUR * CS ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( PN - FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,MUR ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( DDR ,( DDR * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / CS ) ,MUM )", "obj1": 1.0, "obj2": 0.0}], "36": [{"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.8265524625267666, "obj2": 0.10681339840427287}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RCSe * MUC ) ,( MUR + RCSe ) )", "obj1": 0.7109207708779444, "obj2": 0.23817260096882734}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( Min( MUC ,( RCSe * DS ) ) / ( Min( ( DS * MUC ) ,( MUR / RCSe ) ) - DS ) )", "obj1": 0.715203426124197, "obj2": 0.22649364272309544}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( DS * MLU ) / ( DS - RRSe ) ) ) * ( MUR * CS ) )", "obj1": 0.7580299785867237, "obj2": 0.15768137185869777}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( ( ( Min( Min( ( ( ( FirstVNF_RAM_Server - RRS ) - ( AMS + BR ) ) * ( ( DDR * AMS ) * ( MDR * FirstVNF_RAM_Server ) ) ) ,( Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ,( DDR + Const ) ) * ( Min( FirstVNF_RAM ,ACS ) - ( AMS * FirstVNF_RAM ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem ) ,( FirstVNF_Mem_Server - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) + ( ( ( Const - MDR ) * ( DDR - FirstVNF_Mem_Server ) ) * ( Min( ARS ,MRS ) / Max( MDR,DDR ) ) ) ) ) - Max( Min( ( ( Min( MRS ,ACS ) - Max( BR,FirstVNF_RAM_Server ) ) * ( Min( FirstVNF_RAM_Server ,DDR ) / ( FirstVNF_RAM_Server * MRS ) ) ) ,Max( ( Max( ARS,CRS ) * Min( FirstVNF_RAM ,ARS ) ),( ( MRS + FirstVNF_CPU_Server ) / Max( ACS,Const ) ) ) ),Min( ( Max( ( ARS - FirstVNF_Mem_Server ),Min( FirstVNF_Mem ,RRS ) ) - ( ( MRS * MRS ) - ( FirstVNF_Mem_Server / Const ) ) ) ,Max( Min( Max( AMS,FirstVNF_Mem_Server ) ,( FirstVNF_RAM_Server + Const ) ),( ( FirstVNF_RAM - FirstVNF_Mem_Server ) * ( FirstVNF_CPU / FirstVNF_CPU_Server ) ) ) ) ) ) / ( ( Min( ( ( Max( FirstVNF_RAM,PN ) / ( MDR / FirstVNF_CPU ) ) / ( ( FirstVNF_RAM * CRS ) + ( BR + BR ) ) ) ,Min( Min( ( MRS * DDR ) ,( FirstVNF_RAM / CRS ) ) ,( ( ACS * AMS ) / ( RRS - FirstVNF_CPU ) ) ) ) + ( ( ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) - ( FirstVNF_CPU * DDR ) ) - ( ( BR / FirstVNF_Mem ) - Max( CRS,Const ) ) ) * ( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN - ACS ) ) * ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) / ( ACS + FirstVNF_Mem_Server ) ) ) ) ) + Max( ( ( ( Max( MRS,ARS ) / ( CRS + FirstVNF_CPU ) ) * ( Min( CRS ,MDR ) * ( Const / RRS ) ) ) - Min( ( ( PN / RRS ) + Min( ARS ,ARS ) ) ,( ( DDR / CRS ) / Min( CRS ,FirstVNF_RAM ) ) ) ),( Min( ( ( RRS * FirstVNF_Mem ) / ( FirstVNF_CPU + FirstVNF_Mem ) ) ,( ( ARS * CRS ) - ( FirstVNF_CPU_Server * BR ) ) ) - Max( ( ( FirstVNF_CPU / AMS ) - ( BR * FirstVNF_RAM ) ),Max( ( FirstVNF_RAM * PN ),( MDR - BR ) ) ) ) ) ) ) / Max( ( Max( ( ( ( ( FirstVNF_RAM + Const ) - ( DDR - FirstVNF_CPU_Server ) ) - ( Max( BR,Const ) + ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) + ( Min( ( DDR - MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) + ( ( MDR / FirstVNF_CPU ) - ( FirstVNF_Mem_Server * PN ) ) ) ),Max( Min( ( ( CRS * FirstVNF_CPU ) + Min( MDR ,CRS ) ) ,Max( ( RRS * MRS ),( CRS + ACS ) ) ),( ( Max( BR,CRS ) * Max( FirstVNF_RAM,FirstVNF_RAM ) ) / ( ( Const * Const ) + ( BR + PN ) ) ) ) ) + ( ( ( ( ( RRS + FirstVNF_CPU_Server ) + ( ACS + FirstVNF_CPU_Server ) ) - ( Max( DDR,PN ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * DDR ) + ( MDR * Const ) ) - ( ( FirstVNF_Mem_Server / RRS ) * Max( AMS,Const ) ) ) ) / ( Max( ( ( AMS - CRS ) * ( FirstVNF_RAM / AMS ) ),Max( Min( FirstVNF_Mem_Server ,MRS ),Max( MRS,Const ) ) ) - ( ( ( MDR / FirstVNF_CPU_Server ) - Max( BR,ACS ) ) - Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),( RRS * PN ) ) ) ) ) ),( ( ( ( ( ( FirstVNF_Mem_Server * MDR ) / ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( CRS - PN ) / ( Const + PN ) ) ) / ( ( ( MDR / BR ) / ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_Mem,ACS ),( FirstVNF_CPU * ARS ) ) ) ) / ( ( Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),( CRS - FirstVNF_Mem ) ) / Max( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ),( AMS / FirstVNF_Mem ) ) ) - Max( ( ( FirstVNF_RAM - MRS ) / Min( ARS ,DDR ) ),( ( ARS - MRS ) / ( Const - FirstVNF_Mem ) ) ) ) ) * Max( Min( ( ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_CPU - AMS ) ) + ( ( DDR / CRS ) - ( BR / FirstVNF_RAM_Server ) ) ) ,( Max( ( FirstVNF_RAM - RRS ),( FirstVNF_CPU - FirstVNF_Mem ) ) * Max( ( DDR - AMS ),Max( MDR,BR ) ) ) ),( ( ( ( CRS - BR ) * Min( FirstVNF_Mem_Server ,AMS ) ) * ( Min( PN ,Const ) * ( Const * CRS ) ) ) + Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) + Max( FirstVNF_CPU,PN ) ) ,Max( ( FirstVNF_RAM_Server + MDR ),( DDR / CRS ) ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( ( ( ( ( RMSe * CS ) + ( RRSe - RRSe ) ) / ( ( RRSe - MUR ) - Min( MUM ,RRSe ) ) ) / ( ( ( CS / RRSe ) * Max( RMSe,CS ) ) - ( ( MUC * RMSe ) * ( MUR * MLU ) ) ) ) + ( ( ( ( DS + MLU ) * Min( MUM ,RRSe ) ) / Max( ( DS + DS ),( CS + RCSe ) ) ) / Max( Min( ( MUC * RRSe ) ,( RRSe / MUC ) ),( ( DS / CS ) * ( MUR / MLU ) ) ) ) ),Min( ( Max( Max( ( RMSe / RMSe ),Min( MUR ,RRSe ) ),( ( MUM - RCSe ) / ( RMSe / DS ) ) ) * ( ( Max( RRSe,MUC ) - Max( RCSe,RCSe ) ) / ( Max( RMSe,RMSe ) * ( CS + RCSe ) ) ) ) ,( ( ( ( MUM - RMSe ) * ( MLU / MUM ) ) + Min( ( MUC - CS ) ,( MUC * RCSe ) ) ) / ( ( ( MUR * RCSe ) / ( RCSe * RRSe ) ) + ( Max( MUM,MLU ) - Max( DS,MLU ) ) ) ) ) ) + ( ( ( Min( ( Min( MUR ,RCSe ) - ( CS / RRSe ) ) ,( Max( CS,RRSe ) / ( RCSe + DS ) ) ) - ( ( ( MUM / RMSe ) / ( CS / MLU ) ) + Max( ( RRSe - RMSe ),Max( MUC,RRSe ) ) ) ) + Min( ( Min( Max( MUM,RCSe ) ,( DS - CS ) ) * ( Max( RMSe,RMSe ) / Min( MUC ,MUC ) ) ) ,( Max( Min( MUC ,RMSe ),( MLU / RMSe ) ) / ( ( RMSe + RCSe ) / ( RRSe * RCSe ) ) ) ) ) - Max( Max( ( Min( ( MUR / RRSe ) ,Max( RMSe,MUR ) ) / Max( ( RMSe * CS ),( CS / MUM ) ) ),( ( ( DS + MUC ) + ( CS - CS ) ) - ( ( MUM - CS ) - ( MUC * DS ) ) ) ),( Min( Max( ( RCSe * MUC ),( MUR / RMSe ) ) ,( Min( MLU ,RMSe ) + ( RMSe / RRSe ) ) ) + ( Max( ( CS * RMSe ),Min( CS ,DS ) ) * Max( Min( MUM ,CS ),( RCSe / MUR ) ) ) ) ) ) ),Min( Max( Max( ( Min( ( Min( DS ,MUR ) + ( MUR * MUR ) ) ,( ( RMSe + CS ) / ( MUM / MLU ) ) ) + ( ( ( RRSe / DS ) - ( MLU + RCSe ) ) + ( ( RCSe - MUM ) - Max( MLU,MUC ) ) ) ),( ( ( Max( MUR,MUC ) / ( MUC + MLU ) ) - ( ( RCSe / RCSe ) / ( RCSe / CS ) ) ) / ( Max( ( RRSe - RMSe ),( MLU + RCSe ) ) * ( ( MUR * RRSe ) / ( RCSe / MUR ) ) ) ) ),Min( ( ( ( ( RRSe * CS ) / Max( MUM,RMSe ) ) * ( Min( CS ,RCSe ) / Min( RCSe ,DS ) ) ) * ( ( Min( DS ,MLU ) - Max( MLU,RRSe ) ) - ( ( RCSe + RRSe ) + Min( RMSe ,MLU ) ) ) ) ,( ( ( ( DS + MUR ) + ( MUM * MUC ) ) - ( Min( RCSe ,RRSe ) * Min( MUC ,MUR ) ) ) * Min( ( Max( MUR,RRSe ) - ( MLU - RMSe ) ) ,( Min( DS ,MUR ) + ( MLU * MUR ) ) ) ) ) ) ,( ( ( ( ( ( RRSe - RRSe ) + ( MLU - MLU ) ) + Min( ( RRSe * MUM ) ,( DS + MUC ) ) ) - ( ( Min( MLU ,MUC ) - ( RMSe / RCSe ) ) * ( ( DS - CS ) + ( RMSe * RMSe ) ) ) ) / ( Min( Max( Max( RCSe,MUC ),Max( RRSe,RMSe ) ) ,( Min( DS ,MUR ) / ( MUC - RCSe ) ) ) - ( Max( Min( MUC ,MUR ),( MUM / RRSe ) ) * ( ( MLU / MLU ) + ( RRSe * RMSe ) ) ) ) ) * ( ( Min( Max( ( RCSe + MUM ),( RMSe + MUM ) ) ,( ( MLU / MUM ) / ( MUR + CS ) ) ) + Min( ( ( MUC * MUC ) + ( MUC / MLU ) ) ,( ( MLU * RRSe ) * Max( RMSe,DS ) ) ) ) * Min( ( ( ( CS - MLU ) + Max( DS,DS ) ) * ( ( MLU / MUR ) * ( MLU + MUR ) ) ) ,Min( Max( ( RMSe - CS ),( MLU * DS ) ) ,Min( ( DS * MLU ) ,Min( MUM ,RMSe ) ) ) ) ) ) ) )", "obj1": 0.7130620985010707, "obj2": 0.23073998393173625}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) * ( DS - RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.1610310944566532}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RMSe * CS ) ,MUC )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "Min( MRS ,Max( ACS,FirstVNF_CPU_Server ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / CS ) / RCSe ) )", "obj1": 0.702355460385439, "obj2": 0.24602777557486522}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) * ( MUR * CS ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "37": [{"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( DS * MLU ) / ( DS - RRSe ) ) ) * ( MUR * CS ) )", "obj1": 0.7580299785867237, "obj2": 0.15768137185869777}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) * ( DS - RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.1610310944566532}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) * ( MUR * CS ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( ( CS / MUC ) / MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,DDR ) - ( ( CRS + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) * Const ) )", "choosing": "( Max( CS,Min( MLU ,MUC ) ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( CRS / FirstVNF_Mem_Server ),MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "( ( RMSe * MUM ) / ( DS * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "38": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( FirstVNF_CPU_Server - RRS ) - ( DDR + CRS ) )", "choosing": "( ( CS + CS ) + Min( CS ,RMSe ) )", "obj1": 0.7773019271948608, "obj2": 0.1492117313201586}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( DS * MLU ) / ( DS - RRSe ) ) ) * ( MUR * CS ) )", "obj1": 0.7580299785867237, "obj2": 0.15768137185869777}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ACS - DDR ) - Min( MRS ,PN ) )", "choosing": "Min( ( DS * MUR ) ,Max( CS,MUC ) )", "obj1": 0.7751605995717344, "obj2": 0.15311537757916133}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) * ( DS - RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.1610310944566532}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) * ( MUR * CS ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) ) - PN ) - ( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) * AMS ) )", "choosing": "Min( Min( RRSe ,RCSe ) ,( ( ( RMSe / CS ) - DS ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "39": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( DS * MLU ) / ( DS - RRSe ) ) ) * ( MUR * CS ) )", "obj1": 0.7580299785867237, "obj2": 0.15768137185869777}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) * ( DS - RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.1610310944566532}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) * ( MUR * CS ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem_Server - ARS ) - Min( Const ,PN ) ) ,Min( DDR ,RRS ) )", "choosing": "Min( ( ( RMSe / CS ) - DS ) ,CS )", "obj1": 1.0, "obj2": 0.0}], "40": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - DDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "Min( ( MUM / MUR ) ,( ( RMSe * RCSe ) / ( MUM - MUR ) ) )", "obj1": 0.7708779443254818, "obj2": 0.1556091924739923}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * ( ( DS * MLU ) / ( DS - RRSe ) ) ) * ( MUR * CS ) )", "obj1": 0.7580299785867237, "obj2": 0.15768137185869777}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( FirstVNF_CPU * ACS ) ,( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUC * DS ) * ( DS - RRSe ) )", "obj1": 0.7558886509635975, "obj2": 0.1610310944566532}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * DS ) * ( MUR * CS ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - RRSe ) )", "obj1": 0.7537473233404711, "obj2": 0.16440340607055154}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "41": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) - PN ) - FirstVNF_Mem_Server )", "choosing": "Min( Min( RRSe ,RCSe ) ,Min( Min( RRSe ,RCSe ) ,( ( RMSe / CS ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( ARS * FirstVNF_Mem_Server ) )", "choosing": "( ( CS / MUC ) / ( ( MUR + RCSe ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "42": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}], "43": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ARS - FirstVNF_RAM ) - MDR )", "choosing": "( MUM - ( RRSe + RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / FirstVNF_CPU ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( MUR * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - PN ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}], "44": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Max( DS,RCSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}], "45": [{"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Max( DS,RCSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( DDR + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( Min( FirstVNF_RAM ,MDR ) - MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) - Min( FirstVNF_RAM_Server ,PN ) ) * AMS ) ) ) )", "choosing": "Min( Min( RRSe ,MUR ) ,( ( RMSe / Min( RRSe ,MUR ) ) / RCSe ) )", "obj1": 0.69593147751606, "obj2": 0.2502175806377845}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Max( ( Min( ( ( ( ( ( RRS + FirstVNF_Mem_Server ) - Min( MDR ,PN ) ) - ( Max( DDR,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) * Max( Max( Min( FirstVNF_RAM_Server ,ACS ),Min( BR ,MRS ) ),( ( FirstVNF_Mem * FirstVNF_Mem_Server ) / Max( DDR,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( MRS + PN ) ,Min( Const ,AMS ) ) - ( ( FirstVNF_Mem + BR ) * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) * ( Max( Max( Const,FirstVNF_Mem_Server ),( BR * FirstVNF_Mem_Server ) ) * ( Max( ACS,FirstVNF_RAM ) / Min( FirstVNF_Mem ,Const ) ) ) ) ) ,( ( ( ( Min( CRS ,ARS ) * ( AMS / MRS ) ) / Max( ( AMS * ACS ),( AMS + CRS ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / ( Const - MDR ) ) + ( ( RRS * ACS ) + Max( MDR,FirstVNF_CPU ) ) ) ) * ( ( ( ( ACS - ARS ) * ( AMS - ACS ) ) + Max( ( PN + DDR ),( BR + DDR ) ) ) + ( Min( ( FirstVNF_Mem_Server + FirstVNF_CPU ) ,Max( CRS,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server / AMS ) ,( FirstVNF_Mem / MRS ) ) ) ) ) ) / Min( Min( ( Min( ( Max( FirstVNF_CPU_Server,MDR ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,Min( ( ARS - FirstVNF_RAM ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) * ( ( Min( ACS ,Const ) * ( FirstVNF_RAM - Const ) ) - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) ) ,( ( ( ( FirstVNF_Mem - ARS ) - Min( DDR ,CRS ) ) - ( ( CRS + MRS ) * ( Const + FirstVNF_Mem ) ) ) + Max( ( ( Const + FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - DDR ) ),Min( Max( PN,AMS ) ,( FirstVNF_RAM_Server / PN ) ) ) ) ) ,Min( ( ( Min( ( ACS - PN ) ,( CRS - RRS ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ARS + ACS ) ) ) - ( ( ( PN - RRS ) * Max( MDR,ARS ) ) - ( ( FirstVNF_CPU_Server + BR ) / ( BR / BR ) ) ) ) ,( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) + ( ARS - MDR ) ) + ( Min( MRS ,BR ) - ( ACS - AMS ) ) ) * ( Min( ( MRS - CRS ) ,( MDR * DDR ) ) * ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - ( BR / FirstVNF_RAM ) ) ) ) ) ) ),( ( ( ( Min( Min( Max( ACS,ARS ) ,( FirstVNF_Mem_Server / BR ) ) ,( ( DDR + Const ) * ( FirstVNF_RAM_Server - MRS ) ) ) * ( ( Max( FirstVNF_Mem_Server,DDR ) + ( FirstVNF_Mem * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR - PN ) ) ) ) * Max( ( ( ( MRS * FirstVNF_Mem_Server ) + Min( ACS ,FirstVNF_Mem_Server ) ) + Max( ( PN * AMS ),( FirstVNF_CPU_Server / BR ) ) ),Max( Max( ( RRS / MDR ),( FirstVNF_CPU_Server * PN ) ),( ( AMS - ACS ) * ( FirstVNF_CPU_Server / PN ) ) ) ) ) / Max( Min( Max( ( ( FirstVNF_CPU_Server / CRS ) - ( AMS * RRS ) ),( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / Min( MRS ,FirstVNF_RAM_Server ) ) ) ,( Max( ( Const / MDR ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - FirstVNF_RAM ) ,( DDR - DDR ) ) ) ),( ( ( Max( ACS,FirstVNF_RAM ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) + ( ( FirstVNF_RAM - AMS ) * ( MDR / FirstVNF_RAM_Server ) ) ) - ( ( ( FirstVNF_CPU * AMS ) * Min( ARS ,PN ) ) / Min( ( FirstVNF_RAM_Server / FirstVNF_Mem ) ,( FirstVNF_RAM - FirstVNF_CPU ) ) ) ) ) ) * Max( ( ( Min( ( Max( DDR,MDR ) * ( BR + ACS ) ) ,( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) - ( Max( ( FirstVNF_RAM * FirstVNF_Mem ),( RRS * CRS ) ) * ( ( BR - CRS ) * ( AMS + FirstVNF_CPU_Server ) ) ) ) - Max( ( Max( ( ACS * FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM ) ) * ( Max( FirstVNF_CPU_Server,AMS ) - ( AMS + Const ) ) ),( ( Max( PN,FirstVNF_RAM_Server ) * ( MRS + MRS ) ) - ( ( BR * FirstVNF_RAM_Server ) + ( CRS * MDR ) ) ) ) ),Min( Max( Min( Max( ( MDR - RRS ),( CRS + DDR ) ) ,( ( ACS / BR ) * Min( PN ,Const ) ) ),( ( ( FirstVNF_CPU_Server - DDR ) + ( FirstVNF_CPU * ACS ) ) * ( ( FirstVNF_RAM_Server * ACS ) / ( RRS + PN ) ) ) ) ,( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),( FirstVNF_RAM_Server - MDR ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * ( DDR + FirstVNF_Mem_Server ) ) ) - ( Min( Max( DDR,ACS ) ,Min( DDR ,MDR ) ) + Max( ( RRS * PN ),( Const * FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) / ( MUM - MUR ) )", "obj1": 0.7002141327623126, "obj2": 0.24662353458083058}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "46": [{"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - MUC ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Max( DS,RCSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( ( DS - MLU ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( ( FirstVNF_Mem_Server - ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "47": [{"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - MUC ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - MUC ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Max( DS,RCSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( RCSe - CS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "48": [{"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / RRSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - MUC ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( Min( RMSe ,MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - MUC ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,Const ) ) * AMS ) )", "choosing": "Min( Max( DS,RCSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}], "49": [{"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / RRSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - MUC ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - MUC ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,MDR ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "50": [{"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / RRSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - MUC ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - FirstVNF_RAM ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,Min( ( CS - MUC ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "51": [{"determining": "( ( BR - DDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( Min( Max( Min( MUC ,MLU ),Min( MUC ,MUC ) ) ,( ( DS + RCSe ) + Max( MLU,RMSe ) ) ) ,( ( ( MUC + MUC ) / Min( DS ,RCSe ) ) + ( Min( MUC ,RCSe ) + ( MUR / MUM ) ) ) ) * ( ( ( ( MUR / RCSe ) + ( MLU - RCSe ) ) * Min( ( DS / RCSe ) ,Max( MLU,RRSe ) ) ) + ( ( ( DS / RMSe ) + Min( RCSe ,RCSe ) ) - ( Min( MUR ,CS ) * Max( CS,MLU ) ) ) ) ) - ( Min( ( Max( ( MLU / DS ),( RCSe - CS ) ) / ( ( RMSe * MUC ) + ( RCSe / RCSe ) ) ) ,( Min( ( MLU - RMSe ) ,( RRSe - DS ) ) - ( ( MUC - MUR ) * ( MUC + RCSe ) ) ) ) * Max( ( ( ( MLU + CS ) * ( MLU * MUM ) ) + Max( ( RCSe - MLU ),Max( RMSe,CS ) ) ),( ( ( RMSe / RMSe ) - ( RRSe * CS ) ) + Max( ( MUR / MLU ),Min( MLU ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( RCSe / RRSe ) * Min( RRSe ,RCSe ) ) - ( Max( RCSe,MUC ) + ( RMSe + RCSe ) ) ),Max( ( Max( MLU,RMSe ) - ( RCSe / MLU ) ),( Max( RRSe,RCSe ) - ( MUC + MUM ) ) ) ) ,( ( ( ( DS + DS ) + ( MUC * RCSe ) ) + ( ( MUM - DS ) - ( CS / MLU ) ) ) / ( ( ( MUR / MUR ) - Max( RRSe,CS ) ) + ( Min( MUC ,MLU ) * Min( MUC ,RRSe ) ) ) ) ) + ( ( Max( ( ( MLU * MUC ) + ( DS - MLU ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) * Min( ( ( RCSe * RCSe ) * ( CS * MUR ) ) ,Min( ( RRSe + RRSe ) ,( RRSe / DS ) ) ) ) / Max( ( ( Max( CS,MUM ) - ( MUR / RMSe ) ) + Max( ( MUM - RMSe ),Max( MUR,RMSe ) ) ),( Min( ( RMSe / MUR ) ,( RRSe * MUM ) ) * ( ( RMSe * DS ) + Min( MUC ,MUM ) ) ) ) ) ) ) / ( Max( Max( Min( Max( Max( ( RMSe - MUR ),Min( CS ,CS ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) ,( ( Min( MUM ,RRSe ) / ( RRSe / MUR ) ) + Max( Max( MLU,DS ),( MUM - RCSe ) ) ) ),( ( ( ( DS + CS ) + Max( CS,CS ) ) + ( Max( MUM,MUM ) * ( CS / MUM ) ) ) - Min( ( ( CS / RCSe ) * Max( CS,CS ) ) ,( ( MUR * RRSe ) / Max( DS,RCSe ) ) ) ) ),Min( Max( ( Min( ( MLU - DS ) ,( MLU - DS ) ) - Min( ( MUM * MUR ) ,( RRSe - RCSe ) ) ),( ( Min( MLU ,CS ) / Max( MUM,RMSe ) ) / ( ( RRSe / RMSe ) * ( CS + CS ) ) ) ) ,( Max( Max( ( RRSe - MUR ),Max( MUM,DS ) ),( Min( CS ,MUR ) + ( DS - MUC ) ) ) - ( Min( ( RCSe / RRSe ) ,( DS * RCSe ) ) * Max( Max( RRSe,RRSe ),Max( RRSe,CS ) ) ) ) ) ) + ( ( ( ( ( ( MUC / RRSe ) / Max( RCSe,MUC ) ) / Min( ( MUC + MUC ) ,Min( MUM ,MUC ) ) ) / Max( ( ( RMSe + CS ) / ( MUR + RRSe ) ),( Min( DS ,RMSe ) / ( CS + MUR ) ) ) ) / ( ( ( ( RRSe - RMSe ) * ( CS / RMSe ) ) * ( ( DS / MLU ) - ( MUC / MLU ) ) ) + Max( ( ( MLU * RRSe ) * ( RMSe / MUR ) ),Min( ( MUM / MUC ) ,( DS * RCSe ) ) ) ) ) + ( Max( Min( ( Min( RRSe ,MUM ) + ( RCSe / MUR ) ) ,Max( ( MUM * MUC ),Min( RCSe ,MLU ) ) ),( ( ( MUC - MUC ) * ( MUR - MUR ) ) * ( ( MUC / MUR ) * ( RCSe + RMSe ) ) ) ) / ( ( ( ( DS / MUR ) - Max( MLU,MLU ) ) + ( Max( MUR,DS ) * ( MUC / MUM ) ) ) + Max( ( Min( CS ,MUC ) / Min( MUR ,MUM ) ),( ( MLU / MUC ) * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS / RRSe ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( Max( Max( FirstVNF_Mem_Server,ARS ),Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - MUC ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "52": [{"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( Min( Max( Min( MUC ,MLU ),Min( MUC ,MUC ) ) ,( ( DS + RCSe ) + Max( MLU,RMSe ) ) ) ,( ( ( MUC + MUC ) / Min( DS ,RCSe ) ) + ( Min( MUC ,RCSe ) + ( MUR / MUM ) ) ) ) * ( ( ( ( MUR / RCSe ) + ( MLU - RCSe ) ) * Min( ( DS / RCSe ) ,Max( MLU,RRSe ) ) ) + ( ( ( DS / RMSe ) + Min( RCSe ,RCSe ) ) - ( Min( MUR ,CS ) * Max( CS,MLU ) ) ) ) ) - ( Min( ( Max( ( MLU / DS ),( RCSe - CS ) ) / ( ( RMSe * MUC ) + ( RCSe / RCSe ) ) ) ,( Min( ( MLU - RMSe ) ,( RRSe - DS ) ) - ( ( MUC - MUR ) * ( MUC + RCSe ) ) ) ) * Max( ( ( ( MLU + CS ) * ( MLU * MUM ) ) + Max( ( RCSe - MLU ),Max( RMSe,CS ) ) ),( ( ( RMSe / RMSe ) - ( RRSe * CS ) ) + Max( ( MUR / MLU ),Min( MLU ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( RCSe / RRSe ) * Min( RRSe ,RCSe ) ) - ( Max( RCSe,MUC ) + ( RMSe + RCSe ) ) ),Max( ( Max( MLU,RMSe ) - ( RCSe / MLU ) ),( Max( RRSe,RCSe ) - ( MUC + MUM ) ) ) ) ,( ( ( ( DS + DS ) + ( MUC * RCSe ) ) + ( ( MUM - DS ) - ( CS / MLU ) ) ) / ( ( ( MUR / MUR ) - Max( RRSe,CS ) ) + ( Min( MUC ,MLU ) * Min( MUC ,RRSe ) ) ) ) ) + ( ( Max( ( ( MLU * MUC ) + ( DS - MLU ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) * Min( ( ( RCSe * RCSe ) * ( CS * MUR ) ) ,Min( ( RRSe + RRSe ) ,( RRSe / DS ) ) ) ) / Max( ( ( Max( CS,MUM ) - ( MUR / RMSe ) ) + Max( ( MUM - RMSe ),Max( MUR,RMSe ) ) ),( Min( ( RMSe / MUR ) ,( RRSe * MUM ) ) * ( ( RMSe * DS ) + Min( MUC ,MUM ) ) ) ) ) ) ) / ( Max( Max( Min( Max( Max( ( RMSe - MUR ),Min( CS ,CS ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) ,( ( Min( MUM ,RRSe ) / ( RRSe / MUR ) ) + Max( Max( MLU,DS ),( MUM - RCSe ) ) ) ),( ( ( ( DS + CS ) + Max( CS,CS ) ) + ( Max( MUM,MUM ) * ( CS / MUM ) ) ) - Min( ( ( CS / RCSe ) * Max( CS,CS ) ) ,( ( MUR * RRSe ) / Max( DS,RCSe ) ) ) ) ),Min( Max( ( Min( ( MLU - DS ) ,( MLU - DS ) ) - Min( ( MUM * MUR ) ,( RRSe - RCSe ) ) ),( ( Min( MLU ,CS ) / Max( MUM,RMSe ) ) / ( ( RRSe / RMSe ) * ( CS + CS ) ) ) ) ,( Max( Max( ( RRSe - MUR ),Max( MUM,DS ) ),( Min( CS ,MUR ) + ( DS - MUC ) ) ) - ( Min( ( RCSe / RRSe ) ,( DS * RCSe ) ) * Max( Max( RRSe,RRSe ),Max( RRSe,CS ) ) ) ) ) ) + ( ( ( ( ( ( MUC / RRSe ) / Max( RCSe,MUC ) ) / Min( ( MUC + MUC ) ,Min( MUM ,MUC ) ) ) / Max( ( ( RMSe + CS ) / ( MUR + RRSe ) ),( Min( DS ,RMSe ) / ( CS + MUR ) ) ) ) / ( ( ( ( RRSe - RMSe ) * ( CS / RMSe ) ) * ( ( DS / MLU ) - ( MUC / MLU ) ) ) + Max( ( ( MLU * RRSe ) * ( RMSe / MUR ) ),Min( ( MUM / MUC ) ,( DS * RCSe ) ) ) ) ) + ( Max( Min( ( Min( RRSe ,MUM ) + ( RCSe / MUR ) ) ,Max( ( MUM * MUC ),Min( RCSe ,MLU ) ) ),( ( ( MUC - MUC ) * ( MUR - MUR ) ) * ( ( MUC / MUR ) * ( RCSe + RMSe ) ) ) ) / ( ( ( ( DS / MUR ) - Max( MLU,MLU ) ) + ( Max( MUR,DS ) * ( MUC / MUM ) ) ) + Max( ( Min( CS ,MUC ) / Min( MUR ,MUM ) ),( ( MLU / MUC ) * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( ARS * Const ) - Min( MRS ,AMS ) ) - ( ( ( BR - Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( ( MLU + Min( MLU ,CS ) ) / Min( ( MUM * RRSe ) ,( MUC + RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1265176739353899}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "53": [{"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( ARS * Const ) - Min( MRS ,AMS ) ) - ( ( ( BR - Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( ( MLU + Min( MLU ,CS ) ) / Min( ( MUM * RRSe ) ,( MUC + RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1265176739353899}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( BR - DDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( Min( Max( Min( MUC ,MLU ),Min( MUC ,MUC ) ) ,( ( DS + RCSe ) + Max( MLU,RMSe ) ) ) ,( ( ( MUC + MUC ) / Min( DS ,RCSe ) ) + ( Min( MUC ,RCSe ) + ( MUR / MUM ) ) ) ) * ( ( ( ( MUR / RCSe ) + ( MLU - RCSe ) ) * Min( ( DS / RCSe ) ,Max( MLU,RRSe ) ) ) + ( ( ( DS / RMSe ) + Min( RCSe ,RCSe ) ) - ( Min( MUR ,CS ) * Max( CS,MLU ) ) ) ) ) - ( Min( ( Max( ( MLU / DS ),( RCSe - CS ) ) / ( ( RMSe * MUC ) + ( RCSe / RCSe ) ) ) ,( Min( ( MLU - RMSe ) ,( RRSe - DS ) ) - ( ( MUC - MUR ) * ( MUC + RCSe ) ) ) ) * Max( ( ( ( MLU + CS ) * ( MLU * MUM ) ) + Max( ( RCSe - MLU ),Max( RMSe,CS ) ) ),( ( ( RMSe / RMSe ) - ( RRSe * CS ) ) + Max( ( MUR / MLU ),Min( MLU ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( RCSe / RRSe ) * Min( RRSe ,RCSe ) ) - ( Max( RCSe,MUC ) + ( RMSe + RCSe ) ) ),Max( ( Max( MLU,RMSe ) - ( RCSe / MLU ) ),( Max( RRSe,RCSe ) - ( MUC + MUM ) ) ) ) ,( ( ( ( DS + DS ) + ( MUC * RCSe ) ) + ( ( MUM - DS ) - ( CS / MLU ) ) ) / ( ( ( MUR / MUR ) - Max( RRSe,CS ) ) + ( Min( MUC ,MLU ) * Min( MUC ,RRSe ) ) ) ) ) + ( ( Max( ( ( MLU * MUC ) + ( DS - MLU ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) * Min( ( ( RCSe * RCSe ) * ( CS * MUR ) ) ,Min( ( RRSe + RRSe ) ,( RRSe / DS ) ) ) ) / Max( ( ( Max( CS,MUM ) - ( MUR / RMSe ) ) + Max( ( MUM - RMSe ),Max( MUR,RMSe ) ) ),( Min( ( RMSe / MUR ) ,( RRSe * MUM ) ) * ( ( RMSe * DS ) + Min( MUC ,MUM ) ) ) ) ) ) ) / ( Max( Max( Min( Max( Max( ( RMSe - MUR ),Min( CS ,CS ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) ,( ( Min( MUM ,RRSe ) / ( RRSe / MUR ) ) + Max( Max( MLU,DS ),( MUM - RCSe ) ) ) ),( ( ( ( DS + CS ) + Max( CS,CS ) ) + ( Max( MUM,MUM ) * ( CS / MUM ) ) ) - Min( ( ( CS / RCSe ) * Max( CS,CS ) ) ,( ( MUR * RRSe ) / Max( DS,RCSe ) ) ) ) ),Min( Max( ( Min( ( MLU - DS ) ,( MLU - DS ) ) - Min( ( MUM * MUR ) ,( RRSe - RCSe ) ) ),( ( Min( MLU ,CS ) / Max( MUM,RMSe ) ) / ( ( RRSe / RMSe ) * ( CS + CS ) ) ) ) ,( Max( Max( ( RRSe - MUR ),Max( MUM,DS ) ),( Min( CS ,MUR ) + ( DS - MUC ) ) ) - ( Min( ( RCSe / RRSe ) ,( DS * RCSe ) ) * Max( Max( RRSe,RRSe ),Max( RRSe,CS ) ) ) ) ) ) + ( ( ( ( ( ( MUC / RRSe ) / Max( RCSe,MUC ) ) / Min( ( MUC + MUC ) ,Min( MUM ,MUC ) ) ) / Max( ( ( RMSe + CS ) / ( MUR + RRSe ) ),( Min( DS ,RMSe ) / ( CS + MUR ) ) ) ) / ( ( ( ( RRSe - RMSe ) * ( CS / RMSe ) ) * ( ( DS / MLU ) - ( MUC / MLU ) ) ) + Max( ( ( MLU * RRSe ) * ( RMSe / MUR ) ),Min( ( MUM / MUC ) ,( DS * RCSe ) ) ) ) ) + ( Max( Min( ( Min( RRSe ,MUM ) + ( RCSe / MUR ) ) ,Max( ( MUM * MUC ),Min( RCSe ,MLU ) ) ),( ( ( MUC - MUC ) * ( MUR - MUR ) ) * ( ( MUC / MUR ) * ( RCSe + RMSe ) ) ) ) / ( ( ( ( DS / MUR ) - Max( MLU,MLU ) ) + ( Max( MUR,DS ) * ( MUC / MUM ) ) ) + Max( ( Min( CS ,MUC ) / Min( MUR ,MUM ) ),( ( MLU / MUC ) * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "54": [{"determining": "Max( ( ( FirstVNF_RAM_Server - ( MDR / MDR ) ) - BR ),( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,DS ) - ( ( RMSe / RCSe ) * Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * ( DS - RRSe ) ) / ( MUC - DS ) )", "obj1": 0.7730192719486081, "obj2": 0.14479472675631302}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - ( BR / FirstVNF_RAM ) ) - Min( DDR ,Max( FirstVNF_CPU_Server,RRS ) ) )", "choosing": "( ( ( RRSe * MUC ) + ( MLU + CS ) ) / Max( Max( RMSe,MLU ),Max( RCSe,MUC ) ) )", "obj1": 0.7858672376873662, "obj2": 0.12480248668042192}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( ( ARS * Const ) - Min( MRS ,AMS ) ) - ( ( ( BR - Const ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( ( MLU + Min( MLU ,CS ) ) / Min( ( MUM * RRSe ) ,( MUC + RMSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.1265176739353899}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( Min( Max( Min( MUC ,MLU ),Min( MUC ,MUC ) ) ,( ( DS + RCSe ) + Max( MLU,RMSe ) ) ) ,( ( ( MUC + MUC ) / Min( DS ,RCSe ) ) + ( Min( MUC ,RCSe ) + ( MUR / MUM ) ) ) ) * ( ( ( ( MUR / RCSe ) + ( MLU - RCSe ) ) * Min( ( DS / RCSe ) ,Max( MLU,RRSe ) ) ) + ( ( ( DS / RMSe ) + Min( RCSe ,RCSe ) ) - ( Min( MUR ,CS ) * Max( CS,MLU ) ) ) ) ) - ( Min( ( Max( ( MLU / DS ),( RCSe - CS ) ) / ( ( RMSe * MUC ) + ( RCSe / RCSe ) ) ) ,( Min( ( MLU - RMSe ) ,( RRSe - DS ) ) - ( ( MUC - MUR ) * ( MUC + RCSe ) ) ) ) * Max( ( ( ( MLU + CS ) * ( MLU * MUM ) ) + Max( ( RCSe - MLU ),Max( RMSe,CS ) ) ),( ( ( RMSe / RMSe ) - ( RRSe * CS ) ) + Max( ( MUR / MLU ),Min( MLU ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( RCSe / RRSe ) * Min( RRSe ,RCSe ) ) - ( Max( RCSe,MUC ) + ( RMSe + RCSe ) ) ),Max( ( Max( MLU,RMSe ) - ( RCSe / MLU ) ),( Max( RRSe,RCSe ) - ( MUC + MUM ) ) ) ) ,( ( ( ( DS + DS ) + ( MUC * RCSe ) ) + ( ( MUM - DS ) - ( CS / MLU ) ) ) / ( ( ( MUR / MUR ) - Max( RRSe,CS ) ) + ( Min( MUC ,MLU ) * Min( MUC ,RRSe ) ) ) ) ) + ( ( Max( ( ( MLU * MUC ) + ( DS - MLU ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) * Min( ( ( RCSe * RCSe ) * ( CS * MUR ) ) ,Min( ( RRSe + RRSe ) ,( RRSe / DS ) ) ) ) / Max( ( ( Max( CS,MUM ) - ( MUR / RMSe ) ) + Max( ( MUM - RMSe ),Max( MUR,RMSe ) ) ),( Min( ( RMSe / MUR ) ,( RRSe * MUM ) ) * ( ( RMSe * DS ) + Min( MUC ,MUM ) ) ) ) ) ) ) / ( Max( Max( Min( Max( Max( ( RMSe - MUR ),Min( CS ,CS ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) ,( ( Min( MUM ,RRSe ) / ( RRSe / MUR ) ) + Max( Max( MLU,DS ),( MUM - RCSe ) ) ) ),( ( ( ( DS + CS ) + Max( CS,CS ) ) + ( Max( MUM,MUM ) * ( CS / MUM ) ) ) - Min( ( ( CS / RCSe ) * Max( CS,CS ) ) ,( ( MUR * RRSe ) / Max( DS,RCSe ) ) ) ) ),Min( Max( ( Min( ( MLU - DS ) ,( MLU - DS ) ) - Min( ( MUM * MUR ) ,( RRSe - RCSe ) ) ),( ( Min( MLU ,CS ) / Max( MUM,RMSe ) ) / ( ( RRSe / RMSe ) * ( CS + CS ) ) ) ) ,( Max( Max( ( RRSe - MUR ),Max( MUM,DS ) ),( Min( CS ,MUR ) + ( DS - MUC ) ) ) - ( Min( ( RCSe / RRSe ) ,( DS * RCSe ) ) * Max( Max( RRSe,RRSe ),Max( RRSe,CS ) ) ) ) ) ) + ( ( ( ( ( ( MUC / RRSe ) / Max( RCSe,MUC ) ) / Min( ( MUC + MUC ) ,Min( MUM ,MUC ) ) ) / Max( ( ( RMSe + CS ) / ( MUR + RRSe ) ),( Min( DS ,RMSe ) / ( CS + MUR ) ) ) ) / ( ( ( ( RRSe - RMSe ) * ( CS / RMSe ) ) * ( ( DS / MLU ) - ( MUC / MLU ) ) ) + Max( ( ( MLU * RRSe ) * ( RMSe / MUR ) ),Min( ( MUM / MUC ) ,( DS * RCSe ) ) ) ) ) + ( Max( Min( ( Min( RRSe ,MUM ) + ( RCSe / MUR ) ) ,Max( ( MUM * MUC ),Min( RCSe ,MLU ) ) ),( ( ( MUC - MUC ) * ( MUR - MUR ) ) * ( ( MUC / MUR ) * ( RCSe + RMSe ) ) ) ) / ( ( ( ( DS / MUR ) - Max( MLU,MLU ) ) + ( Max( MUR,DS ) * ( MUC / MUM ) ) ) + Max( ( Min( CS ,MUC ) / Min( MUR ,MUM ) ),( ( MLU / MUC ) * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "55": [{"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server - ( MDR / MDR ) ) - BR ),( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,DS ) - ( ( RMSe / RCSe ) * Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( Min( Max( Min( MUC ,MLU ),Min( MUC ,MUC ) ) ,( ( DS + RCSe ) + Max( MLU,RMSe ) ) ) ,( ( ( MUC + MUC ) / Min( DS ,RCSe ) ) + ( Min( MUC ,RCSe ) + ( MUR / MUM ) ) ) ) * ( ( ( ( MUR / RCSe ) + ( MLU - RCSe ) ) * Min( ( DS / RCSe ) ,Max( MLU,RRSe ) ) ) + ( ( ( DS / RMSe ) + Min( RCSe ,RCSe ) ) - ( Min( MUR ,CS ) * Max( CS,MLU ) ) ) ) ) - ( Min( ( Max( ( MLU / DS ),( RCSe - CS ) ) / ( ( RMSe * MUC ) + ( RCSe / RCSe ) ) ) ,( Min( ( MLU - RMSe ) ,( RRSe - DS ) ) - ( ( MUC - MUR ) * ( MUC + RCSe ) ) ) ) * Max( ( ( ( MLU + CS ) * ( MLU * MUM ) ) + Max( ( RCSe - MLU ),Max( RMSe,CS ) ) ),( ( ( RMSe / RMSe ) - ( RRSe * CS ) ) + Max( ( MUR / MLU ),Min( MLU ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( RCSe / RRSe ) * Min( RRSe ,RCSe ) ) - ( Max( RCSe,MUC ) + ( RMSe + RCSe ) ) ),Max( ( Max( MLU,RMSe ) - ( RCSe / MLU ) ),( Max( RRSe,RCSe ) - ( MUC + MUM ) ) ) ) ,( ( ( ( DS + DS ) + ( MUC * RCSe ) ) + ( ( MUM - DS ) - ( CS / MLU ) ) ) / ( ( ( MUR / MUR ) - Max( RRSe,CS ) ) + ( Min( MUC ,MLU ) * Min( MUC ,RRSe ) ) ) ) ) + ( ( Max( ( ( MLU * MUC ) + ( DS - MLU ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) * Min( ( ( RCSe * RCSe ) * ( CS * MUR ) ) ,Min( ( RRSe + RRSe ) ,( RRSe / DS ) ) ) ) / Max( ( ( Max( CS,MUM ) - ( MUR / RMSe ) ) + Max( ( MUM - RMSe ),Max( MUR,RMSe ) ) ),( Min( ( RMSe / MUR ) ,( RRSe * MUM ) ) * ( ( RMSe * DS ) + Min( MUC ,MUM ) ) ) ) ) ) ) / ( Max( Max( Min( Max( Max( ( RMSe - MUR ),Min( CS ,CS ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) ,( ( Min( MUM ,RRSe ) / ( RRSe / MUR ) ) + Max( Max( MLU,DS ),( MUM - RCSe ) ) ) ),( ( ( ( DS + CS ) + Max( CS,CS ) ) + ( Max( MUM,MUM ) * ( CS / MUM ) ) ) - Min( ( ( CS / RCSe ) * Max( CS,CS ) ) ,( ( MUR * RRSe ) / Max( DS,RCSe ) ) ) ) ),Min( Max( ( Min( ( MLU - DS ) ,( MLU - DS ) ) - Min( ( MUM * MUR ) ,( RRSe - RCSe ) ) ),( ( Min( MLU ,CS ) / Max( MUM,RMSe ) ) / ( ( RRSe / RMSe ) * ( CS + CS ) ) ) ) ,( Max( Max( ( RRSe - MUR ),Max( MUM,DS ) ),( Min( CS ,MUR ) + ( DS - MUC ) ) ) - ( Min( ( RCSe / RRSe ) ,( DS * RCSe ) ) * Max( Max( RRSe,RRSe ),Max( RRSe,CS ) ) ) ) ) ) + ( ( ( ( ( ( MUC / RRSe ) / Max( RCSe,MUC ) ) / Min( ( MUC + MUC ) ,Min( MUM ,MUC ) ) ) / Max( ( ( RMSe + CS ) / ( MUR + RRSe ) ),( Min( DS ,RMSe ) / ( CS + MUR ) ) ) ) / ( ( ( ( RRSe - RMSe ) * ( CS / RMSe ) ) * ( ( DS / MLU ) - ( MUC / MLU ) ) ) + Max( ( ( MLU * RRSe ) * ( RMSe / MUR ) ),Min( ( MUM / MUC ) ,( DS * RCSe ) ) ) ) ) + ( Max( Min( ( Min( RRSe ,MUM ) + ( RCSe / MUR ) ) ,Max( ( MUM * MUC ),Min( RCSe ,MLU ) ) ),( ( ( MUC - MUC ) * ( MUR - MUR ) ) * ( ( MUC / MUR ) * ( RCSe + RMSe ) ) ) ) / ( ( ( ( DS / MUR ) - Max( MLU,MLU ) ) + ( Max( MUR,DS ) * ( MUC / MUM ) ) ) + Max( ( Min( CS ,MUC ) / Min( MUR ,MUM ) ),( ( MLU / MUC ) * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - Min( ( DDR + FirstVNF_Mem_Server ) ,AMS ) )", "choosing": "Min( ( CS * RRSe ) ,( MUC + RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "56": [{"determining": "( Max( ( MRS / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Max( ( ( FirstVNF_RAM_Server - ( MDR / MDR ) ) - BR ),( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,DS ) - ( ( RMSe / RCSe ) * Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - DDR ) + ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( Min( Min( Max( Min( MUC ,MLU ),Min( MUC ,MUC ) ) ,( ( DS + RCSe ) + Max( MLU,RMSe ) ) ) ,( ( ( MUC + MUC ) / Min( DS ,RCSe ) ) + ( Min( MUC ,RCSe ) + ( MUR / MUM ) ) ) ) * ( ( ( ( MUR / RCSe ) + ( MLU - RCSe ) ) * Min( ( DS / RCSe ) ,Max( MLU,RRSe ) ) ) + ( ( ( DS / RMSe ) + Min( RCSe ,RCSe ) ) - ( Min( MUR ,CS ) * Max( CS,MLU ) ) ) ) ) - ( Min( ( Max( ( MLU / DS ),( RCSe - CS ) ) / ( ( RMSe * MUC ) + ( RCSe / RCSe ) ) ) ,( Min( ( MLU - RMSe ) ,( RRSe - DS ) ) - ( ( MUC - MUR ) * ( MUC + RCSe ) ) ) ) * Max( ( ( ( MLU + CS ) * ( MLU * MUM ) ) + Max( ( RCSe - MLU ),Max( RMSe,CS ) ) ),( ( ( RMSe / RMSe ) - ( RRSe * CS ) ) + Max( ( MUR / MLU ),Min( MLU ,MUR ) ) ) ) ) ),( Min( Max( ( ( ( RCSe / RRSe ) * Min( RRSe ,RCSe ) ) - ( Max( RCSe,MUC ) + ( RMSe + RCSe ) ) ),Max( ( Max( MLU,RMSe ) - ( RCSe / MLU ) ),( Max( RRSe,RCSe ) - ( MUC + MUM ) ) ) ) ,( ( ( ( DS + DS ) + ( MUC * RCSe ) ) + ( ( MUM - DS ) - ( CS / MLU ) ) ) / ( ( ( MUR / MUR ) - Max( RRSe,CS ) ) + ( Min( MUC ,MLU ) * Min( MUC ,RRSe ) ) ) ) ) + ( ( Max( ( ( MLU * MUC ) + ( DS - MLU ) ),Max( ( MUM + DS ),( DS * MLU ) ) ) * Min( ( ( RCSe * RCSe ) * ( CS * MUR ) ) ,Min( ( RRSe + RRSe ) ,( RRSe / DS ) ) ) ) / Max( ( ( Max( CS,MUM ) - ( MUR / RMSe ) ) + Max( ( MUM - RMSe ),Max( MUR,RMSe ) ) ),( Min( ( RMSe / MUR ) ,( RRSe * MUM ) ) * ( ( RMSe * DS ) + Min( MUC ,MUM ) ) ) ) ) ) ) / ( Max( Max( Min( Max( Max( ( RMSe - MUR ),Min( CS ,CS ) ),( ( MUM / RMSe ) / ( MUC - MUR ) ) ) ,( ( Min( MUM ,RRSe ) / ( RRSe / MUR ) ) + Max( Max( MLU,DS ),( MUM - RCSe ) ) ) ),( ( ( ( DS + CS ) + Max( CS,CS ) ) + ( Max( MUM,MUM ) * ( CS / MUM ) ) ) - Min( ( ( CS / RCSe ) * Max( CS,CS ) ) ,( ( MUR * RRSe ) / Max( DS,RCSe ) ) ) ) ),Min( Max( ( Min( ( MLU - DS ) ,( MLU - DS ) ) - Min( ( MUM * MUR ) ,( RRSe - RCSe ) ) ),( ( Min( MLU ,CS ) / Max( MUM,RMSe ) ) / ( ( RRSe / RMSe ) * ( CS + CS ) ) ) ) ,( Max( Max( ( RRSe - MUR ),Max( MUM,DS ) ),( Min( CS ,MUR ) + ( DS - MUC ) ) ) - ( Min( ( RCSe / RRSe ) ,( DS * RCSe ) ) * Max( Max( RRSe,RRSe ),Max( RRSe,CS ) ) ) ) ) ) + ( ( ( ( ( ( MUC / RRSe ) / Max( RCSe,MUC ) ) / Min( ( MUC + MUC ) ,Min( MUM ,MUC ) ) ) / Max( ( ( RMSe + CS ) / ( MUR + RRSe ) ),( Min( DS ,RMSe ) / ( CS + MUR ) ) ) ) / ( ( ( ( RRSe - RMSe ) * ( CS / RMSe ) ) * ( ( DS / MLU ) - ( MUC / MLU ) ) ) + Max( ( ( MLU * RRSe ) * ( RMSe / MUR ) ),Min( ( MUM / MUC ) ,( DS * RCSe ) ) ) ) ) + ( Max( Min( ( Min( RRSe ,MUM ) + ( RCSe / MUR ) ) ,Max( ( MUM * MUC ),Min( RCSe ,MLU ) ) ),( ( ( MUC - MUC ) * ( MUR - MUR ) ) * ( ( MUC / MUR ) * ( RCSe + RMSe ) ) ) ) / ( ( ( ( DS / MUR ) - Max( MLU,MLU ) ) + ( Max( MUR,DS ) * ( MUC / MUM ) ) ) + Max( ( Min( CS ,MUC ) / Min( MUR ,MUM ) ),( ( MLU / MUC ) * ( CS - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "57": [{"determining": "( Max( MRS,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( MUM / RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server - ( MDR / MDR ) ) - BR ),( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,DS ) - ( ( RMSe / RCSe ) * Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,FirstVNF_Mem ) - MRS ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "58": [{"determining": "( Min( PN ,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( MUM / RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ( MRS / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server - ( MDR / MDR ) ) - BR ),( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,DS ) - ( ( RMSe / RCSe ) * Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}], "59": [{"determining": "Min( ( ( ( Min( Min( ( ( DDR - DDR ) + ( Const + ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ,( Max( Min( BR ,FirstVNF_Mem ),Min( RRS ,CRS ) ) * ( ( CRS * ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( DDR * AMS ) / ( DDR / CRS ) ) * Max( Min( MRS ,DDR ),( BR + RRS ) ) ),( ( Max( FirstVNF_RAM_Server,RRS ) * ( ARS + FirstVNF_RAM_Server ) ) + ( ( ACS + RRS ) + Min( FirstVNF_Mem ,BR ) ) ) ) ) - Min( ( ( ( Min( BR ,BR ) * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) * ( ( ACS * CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - ( ( Min( CRS ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_Mem * ARS ) ) ) ) ,( ( Min( Min( BR ,AMS ) ,Max( AMS,BR ) ) / ( ( PN + FirstVNF_RAM_Server ) * ( AMS + RRS ) ) ) - ( ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( Const * MDR ) + Max( PN,DDR ) ) ) ) ) ) - ( Max( Max( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_CPU / ARS ) ) / ( ( FirstVNF_RAM_Server / ACS ) - Max( FirstVNF_Mem_Server,BR ) ) ),( Min( ( FirstVNF_CPU + DDR ) ,( AMS / FirstVNF_CPU_Server ) ) + ( ( RRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / BR ) ) ) ),( Min( ( ( DDR * CRS ) + ( MRS - MDR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( Const / FirstVNF_CPU ) ) ) - ( ( ( CRS * RRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * ( ( MDR - ARS ) - Max( PN,FirstVNF_Mem ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU_Server + Const ),( CRS + Const ) ) / ( ( RRS + CRS ) / Max( RRS,CRS ) ) ) - ( Max( ( MDR - AMS ),( AMS - ACS ) ) / Max( ( BR + MDR ),Min( ARS ,AMS ) ) ) ) / ( Min( Max( ( DDR - FirstVNF_RAM ),( Const + FirstVNF_RAM_Server ) ) ,( ( PN + RRS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( ( ( PN - ARS ) + Min( ACS ,BR ) ) / Min( Max( FirstVNF_CPU_Server,CRS ) ,( FirstVNF_RAM * CRS ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( FirstVNF_CPU / PN ) * Max( DDR,CRS ) ) - ( ( FirstVNF_CPU - BR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_RAM * CRS ),Max( BR,FirstVNF_Mem_Server ) ) * ( ( Const + Const ) - ( PN / ARS ) ) ) ) + ( ( ( ( Const * FirstVNF_Mem ) + Max( FirstVNF_CPU,ARS ) ) * ( Min( ARS ,Const ) + ( BR / FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_Mem_Server ) / ( BR - DDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( ACS / ARS ) ) ) ) ),( ( ( Min( ( ARS + PN ) ,Min( ARS ,FirstVNF_CPU_Server ) ) * Min( Min( Const ,FirstVNF_RAM ) ,( DDR - FirstVNF_Mem_Server ) ) ) / Max( Min( Min( AMS ,MDR ) ,Max( PN,ACS ) ),Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( RRS * FirstVNF_CPU ) ) ) ) + Min( ( ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_Mem_Server - MRS ) / ( BR - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - DDR ) * ( DDR - AMS ) ) ) ) ) ) ,( Max( ( ( Max( Max( BR,CRS ),Min( RRS ,PN ) ) / Min( ( MRS + MDR ) ,( AMS * FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,ARS ) - ( FirstVNF_RAM / MDR ) ) + ( Max( DDR,PN ) / ( CRS / FirstVNF_Mem_Server ) ) ) ),Min( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - MDR ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( BR + PN ) ) ) ,Max( Min( Max( DDR,MRS ) ,( AMS - BR ) ),( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) - Max( ARS,FirstVNF_Mem ) ) ) ) ) + ( ( ( Min( ( ACS - FirstVNF_CPU_Server ) ,Min( CRS ,BR ) ) / ( ( DDR / ARS ) * Min( MDR ,Const ) ) ) * ( ( ( ACS + FirstVNF_CPU ) / ( FirstVNF_CPU * ARS ) ) - ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_CPU / ACS ) ) ) ) / ( Min( ( Min( FirstVNF_CPU ,BR ) / ( AMS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,Const ) + Max( PN,PN ) ) ) * Max( ( ( MRS / BR ) / ( FirstVNF_CPU / MRS ) ),Max( ( ACS * FirstVNF_CPU ),( ACS * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) * Max( MUC,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS / MUM ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( MRS,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( MUM / RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( Min( DS ,RCSe ) ,MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / FirstVNF_Mem ) - PN ) - ( ( Max( FirstVNF_Mem_Server,ARS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( CS - RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( FirstVNF_RAM_Server - ( MDR / MDR ) ) - BR ),( BR - FirstVNF_Mem_Server ) )", "choosing": "( Min( MUC ,DS ) - ( ( RMSe / RCSe ) * Max( RRSe,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "60": [{"determining": "( ( ( ( CRS / ACS ) - Min( FirstVNF_CPU ,ARS ) ) / CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS + DS ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( Min( ( ( DDR - DDR ) + ( Const + ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ,( Max( Min( BR ,FirstVNF_Mem ),Min( RRS ,CRS ) ) * ( ( CRS * ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( DDR * AMS ) / ( DDR / CRS ) ) * Max( Min( MRS ,DDR ),( BR + RRS ) ) ),( ( Max( FirstVNF_RAM_Server,RRS ) * ( ARS + FirstVNF_RAM_Server ) ) + ( ( ACS + RRS ) + Min( FirstVNF_Mem ,BR ) ) ) ) ) - Min( ( ( ( Min( BR ,BR ) * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) * ( ( ACS * CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - ( ( Min( CRS ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_Mem * ARS ) ) ) ) ,( ( Min( Min( BR ,AMS ) ,Max( AMS,BR ) ) / ( ( PN + FirstVNF_RAM_Server ) * ( AMS + RRS ) ) ) - ( ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( Const * MDR ) + Max( PN,DDR ) ) ) ) ) ) - ( Max( Max( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_CPU / ARS ) ) / ( ( FirstVNF_RAM_Server / ACS ) - Max( FirstVNF_Mem_Server,BR ) ) ),( Min( ( FirstVNF_CPU + DDR ) ,( AMS / FirstVNF_CPU_Server ) ) + ( ( RRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / BR ) ) ) ),( Min( ( ( DDR * CRS ) + ( MRS - MDR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( Const / FirstVNF_CPU ) ) ) - ( ( ( CRS * RRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * ( ( MDR - ARS ) - Max( PN,FirstVNF_Mem ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU_Server + Const ),( CRS + Const ) ) / ( ( RRS + CRS ) / Max( RRS,CRS ) ) ) - ( Max( ( MDR - AMS ),( AMS - ACS ) ) / Max( ( BR + MDR ),Min( ARS ,AMS ) ) ) ) / ( Min( Max( ( DDR - FirstVNF_RAM ),( Const + FirstVNF_RAM_Server ) ) ,( ( PN + RRS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( ( ( PN - ARS ) + Min( ACS ,BR ) ) / Min( Max( FirstVNF_CPU_Server,CRS ) ,( FirstVNF_RAM * CRS ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( FirstVNF_CPU / PN ) * Max( DDR,CRS ) ) - ( ( FirstVNF_CPU - BR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_RAM * CRS ),Max( BR,FirstVNF_Mem_Server ) ) * ( ( Const + Const ) - ( PN / ARS ) ) ) ) + ( ( ( ( Const * FirstVNF_Mem ) + Max( FirstVNF_CPU,ARS ) ) * ( Min( ARS ,Const ) + ( BR / FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_Mem_Server ) / ( BR - DDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( ACS / ARS ) ) ) ) ),( ( ( Min( ( ARS + PN ) ,Min( ARS ,FirstVNF_CPU_Server ) ) * Min( Min( Const ,FirstVNF_RAM ) ,( DDR - FirstVNF_Mem_Server ) ) ) / Max( Min( Min( AMS ,MDR ) ,Max( PN,ACS ) ),Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( RRS * FirstVNF_CPU ) ) ) ) + Min( ( ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_Mem_Server - MRS ) / ( BR - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - DDR ) * ( DDR - AMS ) ) ) ) ) ) ,( Max( ( ( Max( Max( BR,CRS ),Min( RRS ,PN ) ) / Min( ( MRS + MDR ) ,( AMS * FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,ARS ) - ( FirstVNF_RAM / MDR ) ) + ( Max( DDR,PN ) / ( CRS / FirstVNF_Mem_Server ) ) ) ),Min( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - MDR ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( BR + PN ) ) ) ,Max( Min( Max( DDR,MRS ) ,( AMS - BR ) ),( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) - Max( ARS,FirstVNF_Mem ) ) ) ) ) + ( ( ( Min( ( ACS - FirstVNF_CPU_Server ) ,Min( CRS ,BR ) ) / ( ( DDR / ARS ) * Min( MDR ,Const ) ) ) * ( ( ( ACS + FirstVNF_CPU ) / ( FirstVNF_CPU * ARS ) ) - ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_CPU / ACS ) ) ) ) / ( Min( ( Min( FirstVNF_CPU ,BR ) / ( AMS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,Const ) + Max( PN,PN ) ) ) * Max( ( ( MRS / BR ) / ( FirstVNF_CPU / MRS ) ),Max( ( ACS * FirstVNF_CPU ),( ACS * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) * Max( MUC,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ARS - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe + RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Min( PN ,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,( ( MUM / RMSe ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "61": [{"determining": "( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) * Max( PN,( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( PN - PN ) ) ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( CS / ( MUM * MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ACS ) - Min( FirstVNF_CPU ,ARS ) ) / CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS + DS ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ARS - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe + RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( ( ( BR / ARS ) - Min( MRS ,PN ) ) ,PN ) )", "choosing": "Min( Min( DS ,Min( Max( RRSe,MUR ) ,( MUM / MUM ) ) ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_RAM - AMS ) - Min( Max( ( PN / FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,( ( BR / ARS ) - Min( MRS ,PN ) ) ) )", "choosing": "Min( Min( DS ,MUM ) ,RMSe )", "obj1": 0.9957173447537473, "obj2": 0.0044309018281535936}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( ( ( ( Min( Min( ( ( DDR - DDR ) + ( Const + ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ,( Max( Min( BR ,FirstVNF_Mem ),Min( RRS ,CRS ) ) * ( ( CRS * ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( DDR * AMS ) / ( DDR / CRS ) ) * Max( Min( MRS ,DDR ),( BR + RRS ) ) ),( ( Max( FirstVNF_RAM_Server,RRS ) * ( ARS + FirstVNF_RAM_Server ) ) + ( ( ACS + RRS ) + Min( FirstVNF_Mem ,BR ) ) ) ) ) - Min( ( ( ( Min( BR ,BR ) * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) * ( ( ACS * CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - ( ( Min( CRS ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_Mem * ARS ) ) ) ) ,( ( Min( Min( BR ,AMS ) ,Max( AMS,BR ) ) / ( ( PN + FirstVNF_RAM_Server ) * ( AMS + RRS ) ) ) - ( ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( Const * MDR ) + Max( PN,DDR ) ) ) ) ) ) - ( Max( Max( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_CPU / ARS ) ) / ( ( FirstVNF_RAM_Server / ACS ) - Max( FirstVNF_Mem_Server,BR ) ) ),( Min( ( FirstVNF_CPU + DDR ) ,( AMS / FirstVNF_CPU_Server ) ) + ( ( RRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / BR ) ) ) ),( Min( ( ( DDR * CRS ) + ( MRS - MDR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( Const / FirstVNF_CPU ) ) ) - ( ( ( CRS * RRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * ( ( MDR - ARS ) - Max( PN,FirstVNF_Mem ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU_Server + Const ),( CRS + Const ) ) / ( ( RRS + CRS ) / Max( RRS,CRS ) ) ) - ( Max( ( MDR - AMS ),( AMS - ACS ) ) / Max( ( BR + MDR ),Min( ARS ,AMS ) ) ) ) / ( Min( Max( ( DDR - FirstVNF_RAM ),( Const + FirstVNF_RAM_Server ) ) ,( ( PN + RRS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( ( ( PN - ARS ) + Min( ACS ,BR ) ) / Min( Max( FirstVNF_CPU_Server,CRS ) ,( FirstVNF_RAM * CRS ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( FirstVNF_CPU / PN ) * Max( DDR,CRS ) ) - ( ( FirstVNF_CPU - BR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_RAM * CRS ),Max( BR,FirstVNF_Mem_Server ) ) * ( ( Const + Const ) - ( PN / ARS ) ) ) ) + ( ( ( ( Const * FirstVNF_Mem ) + Max( FirstVNF_CPU,ARS ) ) * ( Min( ARS ,Const ) + ( BR / FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_Mem_Server ) / ( BR - DDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( ACS / ARS ) ) ) ) ),( ( ( Min( ( ARS + PN ) ,Min( ARS ,FirstVNF_CPU_Server ) ) * Min( Min( Const ,FirstVNF_RAM ) ,( DDR - FirstVNF_Mem_Server ) ) ) / Max( Min( Min( AMS ,MDR ) ,Max( PN,ACS ) ),Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( RRS * FirstVNF_CPU ) ) ) ) + Min( ( ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_Mem_Server - MRS ) / ( BR - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - DDR ) * ( DDR - AMS ) ) ) ) ) ) ,( Max( ( ( Max( Max( BR,CRS ),Min( RRS ,PN ) ) / Min( ( MRS + MDR ) ,( AMS * FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,ARS ) - ( FirstVNF_RAM / MDR ) ) + ( Max( DDR,PN ) / ( CRS / FirstVNF_Mem_Server ) ) ) ),Min( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - MDR ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( BR + PN ) ) ) ,Max( Min( Max( DDR,MRS ) ,( AMS - BR ) ),( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) - Max( ARS,FirstVNF_Mem ) ) ) ) ) + ( ( ( Min( ( ACS - FirstVNF_CPU_Server ) ,Min( CRS ,BR ) ) / ( ( DDR / ARS ) * Min( MDR ,Const ) ) ) * ( ( ( ACS + FirstVNF_CPU ) / ( FirstVNF_CPU * ARS ) ) - ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_CPU / ACS ) ) ) ) / ( Min( ( Min( FirstVNF_CPU ,BR ) / ( AMS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,Const ) + Max( PN,PN ) ) ) * Max( ( ( MRS / BR ) / ( FirstVNF_CPU / MRS ) ),Max( ( ACS * FirstVNF_CPU ),( ACS * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) * Max( MUC,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}], "62": [{"determining": "( ( ( MRS / ARS ) - FirstVNF_RAM ) + ( CRS - PN ) )", "choosing": "( Max( MUR,MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) * Max( PN,( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( PN - PN ) ) ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( CS / ( MUM * MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ARS - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe + RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ( ( CRS / ACS ) - Min( FirstVNF_CPU ,ARS ) ) / CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS + DS ) ,MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( Min( ( ( DDR - DDR ) + ( Const + ACS ) ) ,( ( FirstVNF_RAM + FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) ,( Max( Min( BR ,FirstVNF_Mem ),Min( RRS ,CRS ) ) * ( ( CRS * ARS ) * ( FirstVNF_RAM / FirstVNF_Mem_Server ) ) ) ) - Max( ( ( ( DDR * AMS ) / ( DDR / CRS ) ) * Max( Min( MRS ,DDR ),( BR + RRS ) ) ),( ( Max( FirstVNF_RAM_Server,RRS ) * ( ARS + FirstVNF_RAM_Server ) ) + ( ( ACS + RRS ) + Min( FirstVNF_Mem ,BR ) ) ) ) ) - Min( ( ( ( Min( BR ,BR ) * Min( FirstVNF_CPU ,FirstVNF_Mem ) ) * ( ( ACS * CRS ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - ( ( Min( CRS ,FirstVNF_RAM_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_RAM_Server / FirstVNF_RAM ),( FirstVNF_Mem * ARS ) ) ) ) ,( ( Min( Min( BR ,AMS ) ,Max( AMS,BR ) ) / ( ( PN + FirstVNF_RAM_Server ) * ( AMS + RRS ) ) ) - ( ( Min( MRS ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( Const * MDR ) + Max( PN,DDR ) ) ) ) ) ) - ( Max( Max( ( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_CPU / ARS ) ) / ( ( FirstVNF_RAM_Server / ACS ) - Max( FirstVNF_Mem_Server,BR ) ) ),( Min( ( FirstVNF_CPU + DDR ) ,( AMS / FirstVNF_CPU_Server ) ) + ( ( RRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server / BR ) ) ) ),( Min( ( ( DDR * CRS ) + ( MRS - MDR ) ) ,Max( ( PN - FirstVNF_RAM_Server ),( Const / FirstVNF_CPU ) ) ) - ( ( ( CRS * RRS ) - ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) * ( ( MDR - ARS ) - Max( PN,FirstVNF_Mem ) ) ) ) ) - ( ( ( Max( ( FirstVNF_CPU_Server + Const ),( CRS + Const ) ) / ( ( RRS + CRS ) / Max( RRS,CRS ) ) ) - ( Max( ( MDR - AMS ),( AMS - ACS ) ) / Max( ( BR + MDR ),Min( ARS ,AMS ) ) ) ) / ( Min( Max( ( DDR - FirstVNF_RAM ),( Const + FirstVNF_RAM_Server ) ) ,( ( PN + RRS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) + ( ( ( PN - ARS ) + Min( ACS ,BR ) ) / Min( Max( FirstVNF_CPU_Server,CRS ) ,( FirstVNF_RAM * CRS ) ) ) ) ) ) ) ,Min( Max( ( ( ( ( ( FirstVNF_CPU / PN ) * Max( DDR,CRS ) ) - ( ( FirstVNF_CPU - BR ) + ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) * ( Max( ( FirstVNF_RAM * CRS ),Max( BR,FirstVNF_Mem_Server ) ) * ( ( Const + Const ) - ( PN / ARS ) ) ) ) + ( ( ( ( Const * FirstVNF_Mem ) + Max( FirstVNF_CPU,ARS ) ) * ( Min( ARS ,Const ) + ( BR / FirstVNF_CPU ) ) ) * ( ( ( RRS * FirstVNF_Mem_Server ) / ( BR - DDR ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( ACS / ARS ) ) ) ) ),( ( ( Min( ( ARS + PN ) ,Min( ARS ,FirstVNF_CPU_Server ) ) * Min( Min( Const ,FirstVNF_RAM ) ,( DDR - FirstVNF_Mem_Server ) ) ) / Max( Min( Min( AMS ,MDR ) ,Max( PN,ACS ) ),Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),( RRS * FirstVNF_CPU ) ) ) ) + Min( ( ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * Min( DDR ,FirstVNF_RAM ) ) ) ,( ( ( FirstVNF_Mem_Server - MRS ) / ( BR - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem - DDR ) * ( DDR - AMS ) ) ) ) ) ) ,( Max( ( ( Max( Max( BR,CRS ),Min( RRS ,PN ) ) / Min( ( MRS + MDR ) ,( AMS * FirstVNF_Mem_Server ) ) ) - ( ( Max( FirstVNF_RAM_Server,ARS ) - ( FirstVNF_RAM / MDR ) ) + ( Max( DDR,PN ) / ( CRS / FirstVNF_Mem_Server ) ) ) ),Min( ( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) + ( FirstVNF_Mem - MDR ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM ) / ( BR + PN ) ) ) ,Max( Min( Max( DDR,MRS ) ,( AMS - BR ) ),( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) - Max( ARS,FirstVNF_Mem ) ) ) ) ) + ( ( ( Min( ( ACS - FirstVNF_CPU_Server ) ,Min( CRS ,BR ) ) / ( ( DDR / ARS ) * Min( MDR ,Const ) ) ) * ( ( ( ACS + FirstVNF_CPU ) / ( FirstVNF_CPU * ARS ) ) - ( ( ARS / FirstVNF_Mem ) - ( FirstVNF_CPU / ACS ) ) ) ) / ( Min( ( Min( FirstVNF_CPU ,BR ) / ( AMS * FirstVNF_Mem_Server ) ) ,( Min( AMS ,Const ) + Max( PN,PN ) ) ) * Max( ( ( MRS / BR ) / ( FirstVNF_CPU / MRS ) ),Max( ( ACS * FirstVNF_CPU ),( ACS * FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( RMSe * RMSe ) * Max( MUC,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) + Min( PN ,PN ) ) * AMS ) )", "choosing": "Min( ( DS + RCSe ) ,RCSe )", "obj1": 1.0, "obj2": 0.0}], "63": [{"determining": "( ( ( MRS * MRS ) / PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) * Max( DDR,PN ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / Min( Min( DS ,RRSe ) ,MUM ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / ARS ) - FirstVNF_RAM ) + ( CRS - PN ) )", "choosing": "( Max( MUR,MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ARS - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe + RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) * Max( PN,( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( PN - PN ) ) ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( CS / ( MUM * MUC ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( CRS / ACS ) - Min( FirstVNF_CPU ,ARS ) ) / CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS + DS ) ,MLU )", "obj1": 1.0, "obj2": 0.0}], "64": [{"determining": "( ( ARS - ( ( ( CRS / ACS ) + Min( FirstVNF_CPU ,ACS ) ) / CRS ) ) + ( CRS - PN ) )", "choosing": "( Max( MUR,CS ) / ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * MRS ) / PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) * Max( DDR,PN ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / Min( Min( DS ,RRSe ) ,MUM ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( MRS / ARS ) - FirstVNF_RAM ) + ( CRS - PN ) )", "choosing": "( Max( MUR,MUC ) / ( CS + DS ) )", "obj1": 1.0, "obj2": 0.0}], "65": [{"determining": "( ( FirstVNF_CPU_Server * AMS ) * ( CRS - FirstVNF_CPU ) )", "choosing": "( Max( ( Max( ( ( Max( ( RRSe * MUC ),Min( RMSe ,CS ) ) - Max( Max( MLU,DS ),Min( MUC ,RRSe ) ) ) - ( Max( Max( MLU,RRSe ),Min( RRSe ,MLU ) ) - ( ( MLU * MUM ) / ( MUM + MUM ) ) ) ),( ( Min( ( DS + CS ) ,Min( MLU ,MLU ) ) + ( ( RCSe - MLU ) + Min( MUC ,MUM ) ) ) + ( ( Max( RMSe,MUC ) + ( MUR / RRSe ) ) * Min( Max( DS,MUR ) ,( DS + MLU ) ) ) ) ) + ( Max( ( ( ( DS + DS ) / ( RCSe + RMSe ) ) / ( ( MLU + MUM ) - ( RRSe * RMSe ) ) ),( ( Max( MUR,RCSe ) / Max( DS,MUR ) ) / ( ( RMSe / MLU ) * Max( RCSe,RCSe ) ) ) ) * ( Min( ( ( RRSe + MUR ) * ( MLU * MUR ) ) ,( ( RCSe + MUC ) - ( MUM * MUR ) ) ) - ( ( Max( MUC,RMSe ) / Max( RRSe,MUC ) ) / ( ( MUR / RCSe ) / ( RCSe - MUC ) ) ) ) ) ),( ( Max( ( Max( ( CS / MLU ),( MUC + RRSe ) ) - ( ( RMSe * DS ) * ( MUC - MUM ) ) ),( ( ( MLU - RCSe ) / Min( MUR ,MUR ) ) / ( ( RMSe + MUC ) - ( RMSe / RCSe ) ) ) ) - Max( ( ( ( MLU * MUC ) / ( RCSe / MUM ) ) * ( Min( RMSe ,RCSe ) * Max( MUC,MLU ) ) ),Max( ( ( RCSe * CS ) / ( DS * MUM ) ),Max( ( MUR - MUR ),( MUC + CS ) ) ) ) ) * ( ( ( ( Min( CS ,MLU ) + ( RRSe / RCSe ) ) / ( ( DS - DS ) - ( RMSe + DS ) ) ) / ( ( ( MUM + MLU ) + Min( MLU ,MUR ) ) * Max( ( RRSe + MUM ),( MUM - RCSe ) ) ) ) - ( ( ( ( MLU + RMSe ) - ( CS * RRSe ) ) - ( Max( MUR,CS ) * ( DS - MUM ) ) ) / ( ( ( RRSe / CS ) * ( MLU + MUR ) ) - ( ( RMSe * RCSe ) / ( RRSe - DS ) ) ) ) ) ) ) * ( Min( ( ( ( ( Max( MUC,RMSe ) - Max( MUC,MUM ) ) - Max( ( DS / MUC ),( CS / MLU ) ) ) + ( Min( Min( RMSe ,MUC ) ,( MUC / CS ) ) * Max( ( RRSe - MLU ),( RMSe + RRSe ) ) ) ) / Max( ( Min( ( MUC * RMSe ) ,( CS * MUC ) ) + ( Min( DS ,RRSe ) / ( RRSe * RCSe ) ) ),( ( ( RRSe / MLU ) * Min( RRSe ,MUR ) ) / ( ( MUM / RMSe ) - Min( MUR ,DS ) ) ) ) ) ,Max( ( ( ( ( RMSe - RMSe ) * ( MLU + RCSe ) ) * Max( Min( RCSe ,MUC ),( RMSe / MUM ) ) ) * ( ( ( RRSe - MUM ) + ( MLU - MUR ) ) * ( Max( RCSe,DS ) * ( RCSe * MUC ) ) ) ),Min( Max( ( ( CS / DS ) * Min( MUR ,CS ) ),Min( ( MUR + RMSe ) ,Min( CS ,RCSe ) ) ) ,Min( ( ( RMSe / CS ) + Max( DS,MLU ) ) ,( Max( CS,MLU ) * ( RMSe * CS ) ) ) ) ) ) / Max( ( Min( ( Max( ( RRSe * MLU ),( MUM - RCSe ) ) + Max( Max( RRSe,MLU ),( RMSe / MLU ) ) ) ,( ( Min( MUR ,MUC ) - Max( RCSe,RCSe ) ) * ( ( DS / MUR ) + ( MLU - MUM ) ) ) ) + ( ( ( ( RMSe / CS ) - ( RMSe / RCSe ) ) / Min( ( RMSe / MLU ) ,( MUM / CS ) ) ) * Max( ( ( RRSe - RMSe ) * ( CS - MUM ) ),( Max( MUC,RRSe ) * Max( MLU,MLU ) ) ) ) ),Min( ( ( ( ( MUC - MUC ) * ( RRSe / MUR ) ) * ( Min( RRSe ,RRSe ) * Min( RRSe ,MUR ) ) ) + ( ( Min( MLU ,MLU ) - ( CS - MUC ) ) * ( ( CS * MUC ) + ( MUC - MUR ) ) ) ) ,( ( Min( ( MLU / RRSe ) ,( RRSe * RMSe ) ) * Max( Max( MLU,DS ),( DS / MUR ) ) ) * ( Min( Min( RCSe ,RRSe ) ,Max( DS,DS ) ) / ( ( RMSe - RMSe ) + ( MUR - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( ( CRS / ACS ) + Min( FirstVNF_CPU ,ACS ) ) / CRS ) ) + ( CRS - PN ) )", "choosing": "( Max( MUR,CS ) / ( MUR + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( ( MRS * MRS ) / PN ) - ( ( Max( FirstVNF_Mem_Server,AMS ) * Max( DDR,PN ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / Min( Min( DS ,RRSe ) ,MUM ) ) + RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "66": [{"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( ( MUC * DS ) ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * AMS ) * ( CRS - FirstVNF_CPU ) )", "choosing": "( Max( ( Max( ( ( Max( ( RRSe * MUC ),Min( RMSe ,CS ) ) - Max( Max( MLU,DS ),Min( MUC ,RRSe ) ) ) - ( Max( Max( MLU,RRSe ),Min( RRSe ,MLU ) ) - ( ( MLU * MUM ) / ( MUM + MUM ) ) ) ),( ( Min( ( DS + CS ) ,Min( MLU ,MLU ) ) + ( ( RCSe - MLU ) + Min( MUC ,MUM ) ) ) + ( ( Max( RMSe,MUC ) + ( MUR / RRSe ) ) * Min( Max( DS,MUR ) ,( DS + MLU ) ) ) ) ) + ( Max( ( ( ( DS + DS ) / ( RCSe + RMSe ) ) / ( ( MLU + MUM ) - ( RRSe * RMSe ) ) ),( ( Max( MUR,RCSe ) / Max( DS,MUR ) ) / ( ( RMSe / MLU ) * Max( RCSe,RCSe ) ) ) ) * ( Min( ( ( RRSe + MUR ) * ( MLU * MUR ) ) ,( ( RCSe + MUC ) - ( MUM * MUR ) ) ) - ( ( Max( MUC,RMSe ) / Max( RRSe,MUC ) ) / ( ( MUR / RCSe ) / ( RCSe - MUC ) ) ) ) ) ),( ( Max( ( Max( ( CS / MLU ),( MUC + RRSe ) ) - ( ( RMSe * DS ) * ( MUC - MUM ) ) ),( ( ( MLU - RCSe ) / Min( MUR ,MUR ) ) / ( ( RMSe + MUC ) - ( RMSe / RCSe ) ) ) ) - Max( ( ( ( MLU * MUC ) / ( RCSe / MUM ) ) * ( Min( RMSe ,RCSe ) * Max( MUC,MLU ) ) ),Max( ( ( RCSe * CS ) / ( DS * MUM ) ),Max( ( MUR - MUR ),( MUC + CS ) ) ) ) ) * ( ( ( ( Min( CS ,MLU ) + ( RRSe / RCSe ) ) / ( ( DS - DS ) - ( RMSe + DS ) ) ) / ( ( ( MUM + MLU ) + Min( MLU ,MUR ) ) * Max( ( RRSe + MUM ),( MUM - RCSe ) ) ) ) - ( ( ( ( MLU + RMSe ) - ( CS * RRSe ) ) - ( Max( MUR,CS ) * ( DS - MUM ) ) ) / ( ( ( RRSe / CS ) * ( MLU + MUR ) ) - ( ( RMSe * RCSe ) / ( RRSe - DS ) ) ) ) ) ) ) * ( Min( ( ( ( ( Max( MUC,RMSe ) - Max( MUC,MUM ) ) - Max( ( DS / MUC ),( CS / MLU ) ) ) + ( Min( Min( RMSe ,MUC ) ,( MUC / CS ) ) * Max( ( RRSe - MLU ),( RMSe + RRSe ) ) ) ) / Max( ( Min( ( MUC * RMSe ) ,( CS * MUC ) ) + ( Min( DS ,RRSe ) / ( RRSe * RCSe ) ) ),( ( ( RRSe / MLU ) * Min( RRSe ,MUR ) ) / ( ( MUM / RMSe ) - Min( MUR ,DS ) ) ) ) ) ,Max( ( ( ( ( RMSe - RMSe ) * ( MLU + RCSe ) ) * Max( Min( RCSe ,MUC ),( RMSe / MUM ) ) ) * ( ( ( RRSe - MUM ) + ( MLU - MUR ) ) * ( Max( RCSe,DS ) * ( RCSe * MUC ) ) ) ),Min( Max( ( ( CS / DS ) * Min( MUR ,CS ) ),Min( ( MUR + RMSe ) ,Min( CS ,RCSe ) ) ) ,Min( ( ( RMSe / CS ) + Max( DS,MLU ) ) ,( Max( CS,MLU ) * ( RMSe * CS ) ) ) ) ) ) / Max( ( Min( ( Max( ( RRSe * MLU ),( MUM - RCSe ) ) + Max( Max( RRSe,MLU ),( RMSe / MLU ) ) ) ,( ( Min( MUR ,MUC ) - Max( RCSe,RCSe ) ) * ( ( DS / MUR ) + ( MLU - MUM ) ) ) ) + ( ( ( ( RMSe / CS ) - ( RMSe / RCSe ) ) / Min( ( RMSe / MLU ) ,( MUM / CS ) ) ) * Max( ( ( RRSe - RMSe ) * ( CS - MUM ) ),( Max( MUC,RRSe ) * Max( MLU,MLU ) ) ) ) ),Min( ( ( ( ( MUC - MUC ) * ( RRSe / MUR ) ) * ( Min( RRSe ,RRSe ) * Min( RRSe ,MUR ) ) ) + ( ( Min( MLU ,MLU ) - ( CS - MUC ) ) * ( ( CS * MUC ) + ( MUC - MUR ) ) ) ) ,( ( Min( ( MLU / RRSe ) ,( RRSe * RMSe ) ) * Max( Max( MLU,DS ),( DS / MUR ) ) ) * ( Min( Min( RCSe ,RRSe ) ,Max( DS,DS ) ) / ( ( RMSe - RMSe ) + ( MUR - DS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( FirstVNF_CPU ,( MRS * MRS ) )", "choosing": "Min( Min( DS ,MLU ) ,DS )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}], "67": [{"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( ( MUC * DS ) ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( FirstVNF_CPU ,( MRS * MRS ) )", "choosing": "Min( Min( DS ,MLU ) ,DS )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}], "68": [{"determining": "( Max( ( ( Min( Min( ( ( MDR + FirstVNF_RAM ) * ( FirstVNF_CPU - MDR ) ) ,( ( MRS + DDR ) - ( MDR - FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( ARS * FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU + CRS ),( BR + CRS ) ) ) ) + Min( Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ,( ( AMS - ARS ) * Min( FirstVNF_Mem ,BR ) ) ) ,( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ARS ) ) - ( ( MDR + ARS ) + Max( PN,CRS ) ) ) ) ) * ( ( ( ( ( CRS - MRS ) * ( FirstVNF_CPU / DDR ) ) + ( ( FirstVNF_CPU - DDR ) / ( Const / CRS ) ) ) - ( ( Min( BR ,PN ) * ( DDR / MRS ) ) + ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( RRS + MDR ) ) ) ) + ( ( ( ( CRS * AMS ) + ( AMS + BR ) ) / Min( ( CRS + PN ) ,( RRS * FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_RAM / MDR ) ) / ( ( DDR + FirstVNF_CPU ) - ( CRS / BR ) ) ) ) ) ),Max( ( Max( Max( Max( ( FirstVNF_RAM_Server * Const ),Max( Const,ARS ) ),Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ARS + ARS ) ) ),Min( ( Max( DDR,FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) ) ,Max( ( ACS + ACS ),( FirstVNF_CPU + MRS ) ) ) ) / ( Max( ( ( AMS / PN ) / ( FirstVNF_RAM * AMS ) ),( ( MDR / FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,ACS ) * ( AMS + FirstVNF_Mem_Server ) ) + Min( Min( MDR ,ACS ) ,Max( ACS,MDR ) ) ) ) ),( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( DDR + MRS ) ) * ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU / MRS ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / AMS ) ) - ( ( AMS / FirstVNF_Mem_Server ) - ( CRS - ARS ) ) ) ) * ( ( Max( ( RRS + ACS ),( FirstVNF_Mem_Server / RRS ) ) * ( Min( MDR ,FirstVNF_RAM_Server ) * ( AMS + Const ) ) ) * ( ( ( BR + MRS ) / Max( MRS,FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem + ARS ),( ARS - Const ) ) ) ) ) ) ) / ( ( Max( Min( ( ( ( RRS + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - Min( Min( FirstVNF_RAM ,MDR ) ,Min( DDR ,PN ) ) ) ,( ( ( DDR - Const ) + ( Const - RRS ) ) / ( ( ARS - FirstVNF_RAM_Server ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ),Min( Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ,( Min( PN ,DDR ) * ( FirstVNF_RAM / BR ) ) ) ,( ( ( MRS - ARS ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * Min( Min( ARS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) ) / ( Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM ),Max( FirstVNF_RAM_Server,Const ) ) * ( Min( FirstVNF_CPU_Server ,Const ) + ( ACS + FirstVNF_RAM_Server ) ) ),Min( Min( ( CRS / FirstVNF_CPU ) ,Min( BR ,CRS ) ) ,( ( BR * ARS ) * ( Const / ACS ) ) ) ) + ( Max( ( Max( MDR,MDR ) * ( RRS - CRS ) ),Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( FirstVNF_Mem_Server * CRS ) ) ,( Max( FirstVNF_RAM,FirstVNF_RAM ) + ( ARS * Const ) ) ) ) ) ) - ( ( ( ( ( Min( DDR ,FirstVNF_Mem_Server ) / ( AMS * BR ) ) * Max( ( RRS - FirstVNF_Mem_Server ),Min( ARS ,BR ) ) ) * Max( ( ( FirstVNF_RAM / AMS ) + ( FirstVNF_Mem * RRS ) ),( ( FirstVNF_RAM / Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) / ( FirstVNF_CPU + PN ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_CPU ) ) ) * ( ( ( Const + FirstVNF_RAM ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( ARS,FirstVNF_RAM_Server ) - Max( RRS,CRS ) ) ) ) ) + ( Max( ( ( ( AMS / PN ) - ( MRS * PN ) ) * ( Max( DDR,FirstVNF_CPU_Server ) * ( DDR * FirstVNF_CPU_Server ) ) ),Max( ( Max( FirstVNF_CPU,ARS ) - Max( ARS,ACS ) ),Max( ( FirstVNF_RAM_Server * BR ),( PN + AMS ) ) ) ) + ( ( ( ( ARS - MRS ) * ( ARS * PN ) ) - ( Max( MRS,FirstVNF_RAM_Server ) + Min( MRS ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server * DDR ) * Max( FirstVNF_Mem,MDR ) ) * ( ( FirstVNF_CPU - ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MLU * DS ),CS ),MLU ) - Min( ( RCSe + RMSe ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - FirstVNF_RAM )", "choosing": "( ( RMSe * RRSe ) / Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) ) )", "obj1": 0.9014989293361885, "obj2": 0.04951463371260328}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( RRSe / RCSe ) ,RCSe )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}], "69": [{"determining": "( Min( ( Const * BR ) ,( Const / ARS ) ) - ( PN + FirstVNF_RAM ) )", "choosing": "( CS / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Min( Min( ( ( MDR + FirstVNF_RAM ) * ( FirstVNF_CPU - MDR ) ) ,( ( MRS + DDR ) - ( MDR - FirstVNF_RAM ) ) ) ,( Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),( ARS * FirstVNF_Mem ) ) - Max( ( FirstVNF_CPU + CRS ),( BR + CRS ) ) ) ) + Min( Min( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) ,( ( AMS - ARS ) * Min( FirstVNF_Mem ,BR ) ) ) ,( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ARS ) ) - ( ( MDR + ARS ) + Max( PN,CRS ) ) ) ) ) * ( ( ( ( ( CRS - MRS ) * ( FirstVNF_CPU / DDR ) ) + ( ( FirstVNF_CPU - DDR ) / ( Const / CRS ) ) ) - ( ( Min( BR ,PN ) * ( DDR / MRS ) ) + ( ( FirstVNF_Mem_Server / FirstVNF_CPU ) + ( RRS + MDR ) ) ) ) + ( ( ( ( CRS * AMS ) + ( AMS + BR ) ) / Min( ( CRS + PN ) ,( RRS * FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) * ( FirstVNF_RAM / MDR ) ) / ( ( DDR + FirstVNF_CPU ) - ( CRS / BR ) ) ) ) ) ),Max( ( Max( Max( Max( ( FirstVNF_RAM_Server * Const ),Max( Const,ARS ) ),Min( ( FirstVNF_CPU + FirstVNF_CPU ) ,( ARS + ARS ) ) ),Min( ( Max( DDR,FirstVNF_RAM ) - ( FirstVNF_RAM + Const ) ) ,Max( ( ACS + ACS ),( FirstVNF_CPU + MRS ) ) ) ) / ( Max( ( ( AMS / PN ) / ( FirstVNF_RAM * AMS ) ),( ( MDR / FirstVNF_CPU ) / Max( DDR,FirstVNF_RAM_Server ) ) ) + ( ( Min( ACS ,ACS ) * ( AMS + FirstVNF_Mem_Server ) ) + Min( Min( MDR ,ACS ) ,Max( ACS,MDR ) ) ) ) ),( Min( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( DDR + MRS ) ) * ( ( FirstVNF_CPU_Server - AMS ) + ( FirstVNF_CPU / MRS ) ) ) ,( ( ( MDR * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / AMS ) ) - ( ( AMS / FirstVNF_Mem_Server ) - ( CRS - ARS ) ) ) ) * ( ( Max( ( RRS + ACS ),( FirstVNF_Mem_Server / RRS ) ) * ( Min( MDR ,FirstVNF_RAM_Server ) * ( AMS + Const ) ) ) * ( ( ( BR + MRS ) / Max( MRS,FirstVNF_RAM ) ) + Max( ( FirstVNF_Mem + ARS ),( ARS - Const ) ) ) ) ) ) ) / ( ( Max( Min( ( ( ( RRS + DDR ) / Min( FirstVNF_Mem ,FirstVNF_RAM ) ) - Min( Min( FirstVNF_RAM ,MDR ) ,Min( DDR ,PN ) ) ) ,( ( ( DDR - Const ) + ( Const - RRS ) ) / ( ( ARS - FirstVNF_RAM_Server ) + ( FirstVNF_CPU * FirstVNF_CPU ) ) ) ),Min( Min( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ,( Min( PN ,DDR ) * ( FirstVNF_RAM / BR ) ) ) ,( ( ( MRS - ARS ) + ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) * Min( Min( ARS ,FirstVNF_Mem_Server ) ,Min( FirstVNF_Mem_Server ,BR ) ) ) ) ) / ( Max( ( Max( ( FirstVNF_Mem * FirstVNF_RAM ),Max( FirstVNF_RAM_Server,Const ) ) * ( Min( FirstVNF_CPU_Server ,Const ) + ( ACS + FirstVNF_RAM_Server ) ) ),Min( Min( ( CRS / FirstVNF_CPU ) ,Min( BR ,CRS ) ) ,( ( BR * ARS ) * ( Const / ACS ) ) ) ) + ( Max( ( Max( MDR,MDR ) * ( RRS - CRS ) ),Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) ) ) * Min( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( FirstVNF_Mem_Server * CRS ) ) ,( Max( FirstVNF_RAM,FirstVNF_RAM ) + ( ARS * Const ) ) ) ) ) ) - ( ( ( ( ( Min( DDR ,FirstVNF_Mem_Server ) / ( AMS * BR ) ) * Max( ( RRS - FirstVNF_Mem_Server ),Min( ARS ,BR ) ) ) * Max( ( ( FirstVNF_RAM / AMS ) + ( FirstVNF_Mem * RRS ) ),( ( FirstVNF_RAM / Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( FirstVNF_CPU - MRS ) / ( FirstVNF_CPU + PN ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + Max( MRS,FirstVNF_CPU ) ) ) * ( ( ( Const + FirstVNF_RAM ) + ( PN - FirstVNF_RAM_Server ) ) - ( Max( ARS,FirstVNF_RAM_Server ) - Max( RRS,CRS ) ) ) ) ) + ( Max( ( ( ( AMS / PN ) - ( MRS * PN ) ) * ( Max( DDR,FirstVNF_CPU_Server ) * ( DDR * FirstVNF_CPU_Server ) ) ),Max( ( Max( FirstVNF_CPU,ARS ) - Max( ARS,ACS ) ),Max( ( FirstVNF_RAM_Server * BR ),( PN + AMS ) ) ) ) + ( ( ( ( ARS - MRS ) * ( ARS * PN ) ) - ( Max( MRS,FirstVNF_RAM_Server ) + Min( MRS ,BR ) ) ) * ( ( ( FirstVNF_CPU_Server * DDR ) * Max( FirstVNF_Mem,MDR ) ) * ( ( FirstVNF_CPU - ARS ) - Max( Const,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Max( Max( ( MLU * DS ),CS ),MLU ) - Min( ( RCSe + RMSe ) ,( RMSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}], "70": [{"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * BR ) ,( Const / ARS ) ) - ( PN + FirstVNF_RAM ) )", "choosing": "( CS / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "Min( FirstVNF_CPU ,( MRS + MRS ) )", "choosing": "Min( Min( Min( DS ,RCSe ) ,MUM ) ,MUM )", "obj1": 0.6937901498929336, "obj2": 0.25164938533220466}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "( ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / MDR ) - ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( AMS * RRS ) ) + PN ) )", "choosing": "Min( ( DS * Max( CS,MLU ) ) ,( RCSe + RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.25561660914939505}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( PN ,DDR ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( MLU * MUR ) / RCSe )", "obj1": 0.6873661670235546, "obj2": 0.2520674882082552}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Min( Min( ( DDR * FirstVNF_RAM ) ,( RRS + MRS ) ) ,( BR / Max( Const,MDR ) ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( Min( ( DDR * ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( FirstVNF_RAM_Server * PN ) ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU * MUR ) * ( RCSe - MUM ) )", "obj1": 0.6852248394004282, "obj2": 0.2546418493121479}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}], "71": [{"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( ( ( MLU / MUM ) + MUR ) / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( AMS * ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) / ( FirstVNF_CPU - DDR ) ) )", "choosing": "( ( Max( ( ( MUM * Max( Min( RCSe ,RMSe ),RCSe ) ) / MUC ),RCSe ) / DS ) + ( ( ( CS * RCSe ) - Min( MLU ,DS ) ) + ( CS - CS ) ) )", "obj1": 0.7194860813704497, "obj2": 0.21851104676722383}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( Min( ( Const * BR ) ,( Const / ARS ) ) - ( PN + FirstVNF_RAM ) )", "choosing": "( CS / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - DDR )", "choosing": "Min( ( Max( MUM,CS ) / ( RRSe * MLU ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - Min( MDR ,AMS ) )", "choosing": "( Max( MUM,CS ) / ( RRSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "72": [{"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + CRS ) )", "choosing": "( ( MUM - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( ( ( MLU / MUM ) + MUR ) / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * BR ) ,( Const / ARS ) ) - ( PN + FirstVNF_RAM ) )", "choosing": "( CS / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * Const ) - DDR )", "choosing": "Min( ( Max( MUM,CS ) / ( RRSe * MLU ) ) ,( MUC + MUM ) )", "obj1": 1.0, "obj2": 0.0}], "73": [{"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + CRS ) )", "choosing": "( ( MUM - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( ( ( MLU / MUM ) + MUR ) / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_CPU ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * BR ) ,( Const / ARS ) ) - ( PN + FirstVNF_RAM ) )", "choosing": "( CS / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}], "74": [{"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,Min( DS ,MLU ) ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Max( DDR,AMS ) ) - ( MDR + MDR ) )", "choosing": "( Min( RRSe ,DS ) / ( MUC + MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + CRS ) )", "choosing": "( ( MUM - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) ) ) - ( ( Max( FirstVNF_CPU_Server,AMS ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,RCSe ) ,( ( ( ( MLU / MUM ) + MUR ) / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}], "75": [{"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( MRS * CRS ) ) + ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM + Const ) + ( RRS * BR ) ) + Min( ( ACS * DDR ) ,Min( FirstVNF_CPU ,MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * Const ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) ,Min( ( ( BR * ACS ) - ( FirstVNF_CPU_Server * MDR ) ) ,( ( ACS + ACS ) + ( FirstVNF_RAM / ACS ) ) ) ) ) * ( ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR / ACS ) ),( ( PN / ARS ) + ( PN * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU_Server - MDR ) ,Min( PN ,MRS ) ) * ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,BR ) ) ) ) * ( ( ( Min( ACS ,FirstVNF_Mem ) / ( Const - DDR ) ) / ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_CPU + AMS ) ) ) * ( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,MRS ) ) - ( ( AMS * CRS ) * Max( CRS,MRS ) ) ) ) ) ) + ( Min( Min( ( Max( ( MRS - RRS ),( BR - ARS ) ) * ( ( FirstVNF_CPU_Server + MRS ) * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( DDR * FirstVNF_CPU_Server ) + ( MRS * RRS ) ) * ( ( BR * PN ) / Max( ACS,ARS ) ) ) ) ,( ( ( ( RRS * FirstVNF_CPU_Server ) - ( RRS / MRS ) ) * ( ( AMS + ARS ) / ( MDR * AMS ) ) ) / ( Min( ( DDR * FirstVNF_Mem ) ,( Const * AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Min( MDR ,DDR ) ) ) ) ) * ( Min( ( ( Min( CRS ,MDR ) / ( FirstVNF_RAM * RRS ) ) / Min( Max( Const,MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ) ) ,( ( ( ARS + ACS ) / ( FirstVNF_Mem / RRS ) ) - ( Max( MRS,BR ) * ( FirstVNF_Mem - RRS ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,CRS ) + ( RRS / MDR ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( CRS + FirstVNF_CPU ) ) ) + ( Max( ( CRS + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) / ( ( CRS / ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( PN ,ACS ) * ( CRS / FirstVNF_CPU ) ) - ( ( Const + FirstVNF_Mem ) - ( BR * ARS ) ) ),( ( ( FirstVNF_CPU / DDR ) + ( Const * Const ) ) * ( ( FirstVNF_RAM_Server + ACS ) / ( ACS * PN ) ) ) ) + ( ( ( ( ARS * Const ) + Min( ACS ,Const ) ) + Max( Min( Const ,BR ),( CRS + MRS ) ) ) - Max( Max( Min( AMS ,BR ),Max( FirstVNF_RAM,CRS ) ),Max( Max( FirstVNF_Mem,CRS ),Min( ARS ,Const ) ) ) ) ) ,( Min( Min( ( ( ACS - MDR ) * ( ACS - ARS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM - CRS ) + Max( FirstVNF_CPU_Server,MRS ) ) / Max( ( MDR + DDR ),( CRS + FirstVNF_RAM_Server ) ) ) ) + ( ( Max( Max( AMS,AMS ),( FirstVNF_CPU_Server + MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - BR ) ) ) / Max( ( ( CRS + Const ) / ( BR / MRS ) ),Min( ( MDR * DDR ) ,( Const + BR ) ) ) ) ) ) + ( ( ( ( ( ( BR * DDR ) * ( ACS * FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM_Server,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ),( ( PN - CRS ) + ( FirstVNF_Mem - MRS ) ) ) ) / Max( Min( Max( ( FirstVNF_CPU_Server - ACS ),( MDR + MRS ) ) ,( ( ACS / DDR ) - ( FirstVNF_RAM_Server - PN ) ) ),( ( Max( Const,CRS ) * ( FirstVNF_Mem * RRS ) ) / ( ( AMS + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( MDR,FirstVNF_RAM ) ) ) ,Max( ( ( ARS + FirstVNF_RAM ) - Min( MRS ,RRS ) ),( Min( PN ,BR ) + Max( Const,CRS ) ) ) ) * ( ( Min( Max( MRS,PN ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( Max( CRS,FirstVNF_Mem_Server ) / Min( BR ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_RAM_Server + DDR ) / Min( BR ,ARS ) ) - ( ( AMS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * RCSe ) - ( CS / RCSe ) ) + ( ( MUR / RCSe ) / ( MUR + DS ) ) ) + ( Min( ( MUR + RCSe ) ,( MLU + MLU ) ) * ( Min( MLU ,MUR ) / ( MUC / DS ) ) ) ) * ( Max( ( ( RMSe - RCSe ) + ( CS - MLU ) ),Min( ( RRSe + MUR ) ,( MUM * DS ) ) ) + Min( Min( ( RCSe * DS ) ,Min( RRSe ,CS ) ) ,Max( ( CS / DS ),( RMSe / RCSe ) ) ) ) ),Min( Max( ( ( ( RRSe + RMSe ) - ( DS + RCSe ) ) * ( ( DS - MUM ) + ( MLU - MLU ) ) ),( Min( ( RRSe * MUR ) ,( MUC * MLU ) ) * ( ( MUM + RMSe ) - ( RRSe + MUC ) ) ) ) ,Max( ( Max( Max( MUR,RCSe ),( MUM / CS ) ) - ( Min( RCSe ,RMSe ) + ( MLU / MUC ) ) ),Max( Min( ( DS * CS ) ,( MUM / RRSe ) ),Max( ( RRSe * RMSe ),( DS / RMSe ) ) ) ) ) ) ,( Min( ( Max( ( ( RCSe - RMSe ) - ( CS + MUM ) ),Max( ( RRSe - MUM ),( MUR + MUR ) ) ) + ( ( ( RRSe + MLU ) + ( CS / CS ) ) - ( ( CS * MUR ) + ( RRSe + RRSe ) ) ) ) ,( ( Min( Max( MUM,MUM ) ,( MUC - CS ) ) / ( ( DS / DS ) - Min( MUC ,MUC ) ) ) + Min( ( Max( MUC,DS ) - Min( RMSe ,RRSe ) ) ,Max( ( MUR - MLU ),( RMSe / DS ) ) ) ) ) / ( ( ( Min( Min( CS ,CS ) ,( RMSe + RRSe ) ) - ( ( MUM - RRSe ) + Max( RCSe,MUC ) ) ) + Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,( ( RCSe / DS ) / ( RCSe / CS ) ) ) ) * ( Max( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ),( ( MUC / RRSe ) / ( MUC - MUR ) ) ) * Min( ( ( MUM - MUM ) / ( DS - RCSe ) ) ,( Max( MUM,MLU ) * ( CS * RCSe ) ) ) ) ) ) ) / Min( Min( ( Min( Max( ( ( DS * CS ) + ( DS * RMSe ) ),( Min( CS ,MUC ) * ( MLU / RCSe ) ) ) ,( ( ( MUC + DS ) / Min( RMSe ,RMSe ) ) * Min( ( MLU - MUM ) ,( MLU + RMSe ) ) ) ) + ( Max( ( Min( MUC ,RMSe ) - ( MUR / DS ) ),Min( ( CS / MUM ) ,( MLU + MLU ) ) ) - ( Min( ( RMSe * MUR ) ,( MUM - DS ) ) / Min( ( RRSe / RRSe ) ,Min( RMSe ,RRSe ) ) ) ) ) ,Min( Min( ( ( ( RMSe * DS ) + ( RMSe / MUC ) ) * ( Max( DS,CS ) * Max( MUM,RRSe ) ) ) ,( ( ( MLU - RMSe ) - ( RCSe - MUM ) ) - ( ( MLU / DS ) / ( CS + MUR ) ) ) ) ,( Min( Min( ( MLU * MUM ) ,( CS + MLU ) ) ,( ( MLU - MLU ) / Max( MUM,MLU ) ) ) + ( ( ( MLU * MUC ) - ( RCSe * RCSe ) ) - ( Max( CS,MUC ) * Max( DS,MLU ) ) ) ) ) ) ,Max( ( Max( ( Max( Min( DS ,MUR ),( CS + RCSe ) ) / ( ( RMSe + MUR ) - ( RCSe - MUC ) ) ),( Min( ( RCSe - RCSe ) ,Max( MLU,RCSe ) ) * Max( Max( MUR,CS ),Min( RRSe ,RMSe ) ) ) ) - ( ( ( Max( MUC,MUM ) * Min( DS ,RRSe ) ) + Min( ( MUM - MLU ) ,( MUM * MUR ) ) ) + ( ( Min( RRSe ,RMSe ) - ( DS / MUR ) ) - ( ( DS - MUC ) + Max( DS,RMSe ) ) ) ) ),( Min( ( ( ( CS - RRSe ) + ( MUC - RCSe ) ) / ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( Max( MLU,CS ) - ( RMSe + MUC ) ) / ( ( RRSe / MLU ) + Min( MUM ,MLU ) ) ) ) * Min( Max( ( ( CS + RCSe ) / ( CS - MLU ) ),( ( MUM / MUC ) - ( MUR - MUC ) ) ) ,( ( Max( MLU,MUM ) + ( MUM - DS ) ) * ( Max( MUM,RCSe ) / ( MUR / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,Min( DS ,MLU ) ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * RRSe ) / ( Min( ( DS * RRSe ) ,( MUR / RMSe ) ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( ( ( ( FirstVNF_RAM - MDR ) / MDR ) - ( FirstVNF_CPU + PN ) ) - ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,( RCSe * DS ) ),( Max( MLU,MUR ) - DS ) )", "obj1": 0.987152034261242, "obj2": 0.006584755648428955}, {"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + CRS ) )", "choosing": "( ( MUM - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}], "76": [{"determining": "( ( ( Min( ( ( ( Max( MDR,FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_Mem ) ) * Min( ( BR - Const ) ,( DDR / AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / MRS ) - ( ACS / AMS ) ) - ( Max( FirstVNF_RAM,ACS ) - ( PN + FirstVNF_RAM ) ) ) ) ,Max( ( ( ( FirstVNF_CPU_Server - PN ) - Max( FirstVNF_RAM,PN ) ) - ( ( FirstVNF_CPU / RRS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( ( ACS - Const ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( Min( MDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( Max( ( MRS * BR ),( RRS / AMS ) ) / Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU,BR ) + ( Const * MRS ) ) - ( ( RRS / PN ) / ( PN * AMS ) ) ) ) * Min( ( Min( Max( RRS,Const ) ,( FirstVNF_CPU / PN ) ) / ( ( CRS * BR ) * ( Const + MRS ) ) ) ,Min( Max( ( MRS * FirstVNF_RAM_Server ),( PN * DDR ) ) ,( Min( FirstVNF_CPU ,CRS ) + Min( CRS ,Const ) ) ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem_Server + MRS ) / Max( FirstVNF_RAM,BR ) ) * ( ( MRS + FirstVNF_CPU_Server ) - Min( MRS ,AMS ) ) ) + ( Max( ( AMS / RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),Max( ARS,CRS ) ) ) - Min( ( Min( FirstVNF_RAM ,Const ) + ( PN - AMS ) ) ,( ( FirstVNF_CPU / ACS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) * ( Max( ( ( ( PN * RRS ) / ( PN - ARS ) ) - ( ( ARS + AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),( ( Min( AMS ,ACS ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + Const ) ,( Const / MRS ) ) ) ) / ( ( Min( ( AMS + ACS ) ,( AMS + RRS ) ) + ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( MDR + FirstVNF_CPU_Server ),( ACS - AMS ) ) / ( Min( ARS ,RRS ) * ( FirstVNF_Mem - ARS ) ) ) ) ) ) ) * Max( Max( Min( ( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_RAM / MDR ) ) - ( ( FirstVNF_CPU_Server - AMS ) + ( Const / ACS ) ) ) * Min( ( ( ACS / BR ) + ( FirstVNF_CPU * BR ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ,( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server + MDR ) ) * ( ( FirstVNF_CPU * AMS ) + Max( BR,FirstVNF_Mem ) ) ) - ( Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,CRS ) ) * ( ( MRS + FirstVNF_CPU ) * Max( MRS,PN ) ) ) ) ),Max( Max( Min( ( ( CRS - MDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU_Server - MRS ),( MDR + CRS ) ) ),Min( ( ( FirstVNF_RAM + MDR ) * ( FirstVNF_RAM_Server / MDR ) ) ,( ( DDR * FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,MRS ) ) ) ),Max( Max( ( ( Const - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM ) + ( FirstVNF_Mem / ARS ) ) ),( Max( ( ACS - MRS ),Min( ACS ,BR ) ) - Max( Max( RRS,FirstVNF_CPU ),( DDR * DDR ) ) ) ) ) ),Max( Max( ( ( ( ( CRS / MRS ) * ( AMS / AMS ) ) + ( ( ARS / RRS ) / ( RRS - ARS ) ) ) * ( Min( ( BR - DDR ) ,( ARS / FirstVNF_RAM_Server ) ) * Min( ( ACS + ARS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ),Min( ( Max( ( DDR + FirstVNF_CPU ),( ARS - ARS ) ) - Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,RRS ) ) ) ,( Max( ( AMS / FirstVNF_RAM ),( Const * DDR ) ) * ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_Mem * DDR ) ) ) ) ),Max( Max( ( ( ( CRS - Const ) + ( DDR - Const ) ) / ( ( PN - ACS ) / ( BR * ARS ) ) ),( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( RRS + DDR ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( ARS + BR ) ) ) ),( ( ( ( ARS - PN ) + ( FirstVNF_RAM + DDR ) ) + ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) * ( ( ( FirstVNF_Mem + RRS ) + Min( FirstVNF_CPU ,Const ) ) - ( ( RRS + ACS ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( ( ( ( RMSe + CS ) + Max( RRSe,MUR ) ) * ( ( MLU * DS ) * ( MUC + CS ) ) ) / ( ( Min( RCSe ,MUC ) - ( CS + CS ) ) - ( ( MUM * RRSe ) + Max( MUR,RRSe ) ) ) ),Min( Max( ( Min( DS ,RCSe ) + ( MUR * MUR ) ),Max( ( RMSe * RMSe ),( DS - RCSe ) ) ) ,( ( ( RMSe - DS ) - ( RCSe * DS ) ) / Min( ( MUC + MUC ) ,( MUR + MUR ) ) ) ) ),( Max( ( Min( ( MUR - MUC ) ,Min( RMSe ,MUM ) ) - Max( Max( MUR,MUC ),( RCSe + MUR ) ) ),( ( ( RMSe + MUM ) / ( RCSe / RRSe ) ) / Max( ( MUC / MUC ),( MUC * MUR ) ) ) ) / ( ( ( ( RCSe - MUM ) / Max( MUC,CS ) ) / ( Max( MUR,MLU ) - Min( RRSe ,MUR ) ) ) + ( Max( Min( RCSe ,MUC ),( MUC / MLU ) ) * ( ( DS - RMSe ) - Max( RRSe,MUM ) ) ) ) ) ) - ( ( Min( ( ( Max( DS,RMSe ) + ( RMSe - CS ) ) - ( ( RCSe - MUR ) + ( RRSe / DS ) ) ) ,( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) / ( ( MUM - MLU ) - ( MUM + RCSe ) ) ) ) - ( ( ( ( RMSe + MUC ) - ( MUR * MUM ) ) * ( Max( MLU,RRSe ) / Max( RCSe,RRSe ) ) ) - ( ( Max( CS,MUR ) - ( MUC * MUC ) ) / ( Max( MLU,DS ) * Max( RCSe,CS ) ) ) ) ) - ( ( Min( ( ( RCSe - MLU ) / ( RMSe + RMSe ) ) ,Min( ( DS + RCSe ) ,Min( RMSe ,MUM ) ) ) + Max( ( Min( RCSe ,MLU ) + Max( RRSe,RRSe ) ),Min( ( RCSe * DS ) ,Min( MUR ,MUM ) ) ) ) + ( ( ( ( RMSe / RMSe ) + ( MUR * MUC ) ) - ( Max( DS,RMSe ) - Max( DS,MUC ) ) ) - ( ( ( MUM * MUM ) + Min( RMSe ,RRSe ) ) / Max( Max( RRSe,MUC ),( MUR + DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe + MUC ) + ( RCSe - RRSe ) ) / Min( Max( CS,RMSe ) ,( RCSe - MUM ) ) ) / ( Max( Max( RMSe,DS ),( MLU - RMSe ) ) - ( ( MLU * DS ) * ( MUM + RMSe ) ) ) ),( ( ( ( RCSe / DS ) + ( MUR / MUC ) ) * Min( Max( MLU,RMSe ) ,( MUC - MUM ) ) ) / ( ( ( RCSe + MUR ) - ( CS - MUC ) ) - ( ( MLU - MLU ) - ( RMSe + RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) - Max( RCSe,DS ) ) + ( ( RMSe - RCSe ) / Max( CS,MLU ) ) ) + ( ( ( RMSe / DS ) + ( DS - MUR ) ) + ( ( MUR * DS ) / Max( RRSe,MUC ) ) ) ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUM,CS ) ) ,( Min( MUC ,RCSe ) + Max( MLU,MLU ) ) ) + ( Min( ( RMSe + MUM ) ,( MUR * RMSe ) ) * Max( ( MUR * DS ),( MUM * RMSe ) ) ) ) ) ),Min( ( Min( ( ( Min( RRSe ,MUC ) / ( MLU + MUC ) ) / ( ( DS / RRSe ) * ( RRSe - MLU ) ) ) ,Min( Max( ( RCSe / MUR ),( MLU - MUR ) ) ,( ( RCSe / RRSe ) + ( DS / CS ) ) ) ) * Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) ,Max( Min( ( RRSe / CS ) ,Min( RMSe ,MUR ) ),( Max( RCSe,MUR ) / Max( MUR,RMSe ) ) ) ) ) ,( Max( ( ( ( MUR - MUC ) + Max( RMSe,RCSe ) ) * ( ( RRSe / RRSe ) - Max( CS,RCSe ) ) ),Min( ( ( MUM - RRSe ) + ( MUC + MUC ) ) ,Max( Max( RCSe,MLU ),( RMSe - MLU ) ) ) ) - ( ( ( ( RRSe - MUM ) - ( RRSe * MUM ) ) + ( ( MUC + RMSe ) * ( MUM - RMSe ) ) ) * ( ( ( MLU * RRSe ) + ( RRSe + DS ) ) - ( ( CS + RCSe ) + ( MLU - MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( MRS * CRS ) ) + ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM + Const ) + ( RRS * BR ) ) + Min( ( ACS * DDR ) ,Min( FirstVNF_CPU ,MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * Const ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) ,Min( ( ( BR * ACS ) - ( FirstVNF_CPU_Server * MDR ) ) ,( ( ACS + ACS ) + ( FirstVNF_RAM / ACS ) ) ) ) ) * ( ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR / ACS ) ),( ( PN / ARS ) + ( PN * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU_Server - MDR ) ,Min( PN ,MRS ) ) * ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,BR ) ) ) ) * ( ( ( Min( ACS ,FirstVNF_Mem ) / ( Const - DDR ) ) / ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_CPU + AMS ) ) ) * ( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,MRS ) ) - ( ( AMS * CRS ) * Max( CRS,MRS ) ) ) ) ) ) + ( Min( Min( ( Max( ( MRS - RRS ),( BR - ARS ) ) * ( ( FirstVNF_CPU_Server + MRS ) * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( DDR * FirstVNF_CPU_Server ) + ( MRS * RRS ) ) * ( ( BR * PN ) / Max( ACS,ARS ) ) ) ) ,( ( ( ( RRS * FirstVNF_CPU_Server ) - ( RRS / MRS ) ) * ( ( AMS + ARS ) / ( MDR * AMS ) ) ) / ( Min( ( DDR * FirstVNF_Mem ) ,( Const * AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Min( MDR ,DDR ) ) ) ) ) * ( Min( ( ( Min( CRS ,MDR ) / ( FirstVNF_RAM * RRS ) ) / Min( Max( Const,MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ) ) ,( ( ( ARS + ACS ) / ( FirstVNF_Mem / RRS ) ) - ( Max( MRS,BR ) * ( FirstVNF_Mem - RRS ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,CRS ) + ( RRS / MDR ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( CRS + FirstVNF_CPU ) ) ) + ( Max( ( CRS + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) / ( ( CRS / ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( PN ,ACS ) * ( CRS / FirstVNF_CPU ) ) - ( ( Const + FirstVNF_Mem ) - ( BR * ARS ) ) ),( ( ( FirstVNF_CPU / DDR ) + ( Const * Const ) ) * ( ( FirstVNF_RAM_Server + ACS ) / ( ACS * PN ) ) ) ) + ( ( ( ( ARS * Const ) + Min( ACS ,Const ) ) + Max( Min( Const ,BR ),( CRS + MRS ) ) ) - Max( Max( Min( AMS ,BR ),Max( FirstVNF_RAM,CRS ) ),Max( Max( FirstVNF_Mem,CRS ),Min( ARS ,Const ) ) ) ) ) ,( Min( Min( ( ( ACS - MDR ) * ( ACS - ARS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM - CRS ) + Max( FirstVNF_CPU_Server,MRS ) ) / Max( ( MDR + DDR ),( CRS + FirstVNF_RAM_Server ) ) ) ) + ( ( Max( Max( AMS,AMS ),( FirstVNF_CPU_Server + MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - BR ) ) ) / Max( ( ( CRS + Const ) / ( BR / MRS ) ),Min( ( MDR * DDR ) ,( Const + BR ) ) ) ) ) ) + ( ( ( ( ( ( BR * DDR ) * ( ACS * FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM_Server,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ),( ( PN - CRS ) + ( FirstVNF_Mem - MRS ) ) ) ) / Max( Min( Max( ( FirstVNF_CPU_Server - ACS ),( MDR + MRS ) ) ,( ( ACS / DDR ) - ( FirstVNF_RAM_Server - PN ) ) ),( ( Max( Const,CRS ) * ( FirstVNF_Mem * RRS ) ) / ( ( AMS + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( MDR,FirstVNF_RAM ) ) ) ,Max( ( ( ARS + FirstVNF_RAM ) - Min( MRS ,RRS ) ),( Min( PN ,BR ) + Max( Const,CRS ) ) ) ) * ( ( Min( Max( MRS,PN ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( Max( CRS,FirstVNF_Mem_Server ) / Min( BR ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_RAM_Server + DDR ) / Min( BR ,ARS ) ) - ( ( AMS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * RCSe ) - ( CS / RCSe ) ) + ( ( MUR / RCSe ) / ( MUR + DS ) ) ) + ( Min( ( MUR + RCSe ) ,( MLU + MLU ) ) * ( Min( MLU ,MUR ) / ( MUC / DS ) ) ) ) * ( Max( ( ( RMSe - RCSe ) + ( CS - MLU ) ),Min( ( RRSe + MUR ) ,( MUM * DS ) ) ) + Min( Min( ( RCSe * DS ) ,Min( RRSe ,CS ) ) ,Max( ( CS / DS ),( RMSe / RCSe ) ) ) ) ),Min( Max( ( ( ( RRSe + RMSe ) - ( DS + RCSe ) ) * ( ( DS - MUM ) + ( MLU - MLU ) ) ),( Min( ( RRSe * MUR ) ,( MUC * MLU ) ) * ( ( MUM + RMSe ) - ( RRSe + MUC ) ) ) ) ,Max( ( Max( Max( MUR,RCSe ),( MUM / CS ) ) - ( Min( RCSe ,RMSe ) + ( MLU / MUC ) ) ),Max( Min( ( DS * CS ) ,( MUM / RRSe ) ),Max( ( RRSe * RMSe ),( DS / RMSe ) ) ) ) ) ) ,( Min( ( Max( ( ( RCSe - RMSe ) - ( CS + MUM ) ),Max( ( RRSe - MUM ),( MUR + MUR ) ) ) + ( ( ( RRSe + MLU ) + ( CS / CS ) ) - ( ( CS * MUR ) + ( RRSe + RRSe ) ) ) ) ,( ( Min( Max( MUM,MUM ) ,( MUC - CS ) ) / ( ( DS / DS ) - Min( MUC ,MUC ) ) ) + Min( ( Max( MUC,DS ) - Min( RMSe ,RRSe ) ) ,Max( ( MUR - MLU ),( RMSe / DS ) ) ) ) ) / ( ( ( Min( Min( CS ,CS ) ,( RMSe + RRSe ) ) - ( ( MUM - RRSe ) + Max( RCSe,MUC ) ) ) + Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,( ( RCSe / DS ) / ( RCSe / CS ) ) ) ) * ( Max( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ),( ( MUC / RRSe ) / ( MUC - MUR ) ) ) * Min( ( ( MUM - MUM ) / ( DS - RCSe ) ) ,( Max( MUM,MLU ) * ( CS * RCSe ) ) ) ) ) ) ) / Min( Min( ( Min( Max( ( ( DS * CS ) + ( DS * RMSe ) ),( Min( CS ,MUC ) * ( MLU / RCSe ) ) ) ,( ( ( MUC + DS ) / Min( RMSe ,RMSe ) ) * Min( ( MLU - MUM ) ,( MLU + RMSe ) ) ) ) + ( Max( ( Min( MUC ,RMSe ) - ( MUR / DS ) ),Min( ( CS / MUM ) ,( MLU + MLU ) ) ) - ( Min( ( RMSe * MUR ) ,( MUM - DS ) ) / Min( ( RRSe / RRSe ) ,Min( RMSe ,RRSe ) ) ) ) ) ,Min( Min( ( ( ( RMSe * DS ) + ( RMSe / MUC ) ) * ( Max( DS,CS ) * Max( MUM,RRSe ) ) ) ,( ( ( MLU - RMSe ) - ( RCSe - MUM ) ) - ( ( MLU / DS ) / ( CS + MUR ) ) ) ) ,( Min( Min( ( MLU * MUM ) ,( CS + MLU ) ) ,( ( MLU - MLU ) / Max( MUM,MLU ) ) ) + ( ( ( MLU * MUC ) - ( RCSe * RCSe ) ) - ( Max( CS,MUC ) * Max( DS,MLU ) ) ) ) ) ) ,Max( ( Max( ( Max( Min( DS ,MUR ),( CS + RCSe ) ) / ( ( RMSe + MUR ) - ( RCSe - MUC ) ) ),( Min( ( RCSe - RCSe ) ,Max( MLU,RCSe ) ) * Max( Max( MUR,CS ),Min( RRSe ,RMSe ) ) ) ) - ( ( ( Max( MUC,MUM ) * Min( DS ,RRSe ) ) + Min( ( MUM - MLU ) ,( MUM * MUR ) ) ) + ( ( Min( RRSe ,RMSe ) - ( DS / MUR ) ) - ( ( DS - MUC ) + Max( DS,RMSe ) ) ) ) ),( Min( ( ( ( CS - RRSe ) + ( MUC - RCSe ) ) / ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( Max( MLU,CS ) - ( RMSe + MUC ) ) / ( ( RRSe / MLU ) + Min( MUM ,MLU ) ) ) ) * Min( Max( ( ( CS + RCSe ) / ( CS - MLU ) ),( ( MUM / MUC ) - ( MUR - MUC ) ) ) ,( ( Max( MLU,MUM ) + ( MUM - DS ) ) * ( Max( MUM,RCSe ) / ( MUR / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( Min( Max( ( PN / CRS ),Max( Const,MRS ) ) ,PN ) - CRS )", "choosing": "Min( ( MLU * ( MLU * MUR ) ) ,RCSe )", "obj1": 0.7387580299785867, "obj2": 0.19175348424073785}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - MDR )", "choosing": "( Min( MUR ,( MUM / MLU ) ) / Max( MUC,RCSe ) )", "obj1": 0.7366167023554604, "obj2": 0.20071168321597224}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) - MDR ) - Max( MDR,Const ) )", "choosing": "( ( MUM / Min( RRSe ,MUM ) ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( ( BR * FirstVNF_RAM ) - ( ( FirstVNF_RAM + MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( RRSe + RCSe ) ,RCSe ) - MUR ) ,( DS * MUM ) )", "obj1": 0.9957173447537473, "obj2": 0.0023508669266320706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - MUR ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) - MDR ) - Max( FirstVNF_CPU_Server,PN ) )", "choosing": "( ( RMSe * RCSe ) / ( MUM - CS ) )", "obj1": 0.7301927194860813, "obj2": 0.2020933664227187}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,Min( DS ,MLU ) ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "77": [{"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "( ( MUM - MUC ) / ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( Max( MDR,FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_Mem ) ) * Min( ( BR - Const ) ,( DDR / AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / MRS ) - ( ACS / AMS ) ) - ( Max( FirstVNF_RAM,ACS ) - ( PN + FirstVNF_RAM ) ) ) ) ,Max( ( ( ( FirstVNF_CPU_Server - PN ) - Max( FirstVNF_RAM,PN ) ) - ( ( FirstVNF_CPU / RRS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( ( ACS - Const ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( Min( MDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( Max( ( MRS * BR ),( RRS / AMS ) ) / Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU,BR ) + ( Const * MRS ) ) - ( ( RRS / PN ) / ( PN * AMS ) ) ) ) * Min( ( Min( Max( RRS,Const ) ,( FirstVNF_CPU / PN ) ) / ( ( CRS * BR ) * ( Const + MRS ) ) ) ,Min( Max( ( MRS * FirstVNF_RAM_Server ),( PN * DDR ) ) ,( Min( FirstVNF_CPU ,CRS ) + Min( CRS ,Const ) ) ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem_Server + MRS ) / Max( FirstVNF_RAM,BR ) ) * ( ( MRS + FirstVNF_CPU_Server ) - Min( MRS ,AMS ) ) ) + ( Max( ( AMS / RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),Max( ARS,CRS ) ) ) - Min( ( Min( FirstVNF_RAM ,Const ) + ( PN - AMS ) ) ,( ( FirstVNF_CPU / ACS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) * ( Max( ( ( ( PN * RRS ) / ( PN - ARS ) ) - ( ( ARS + AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),( ( Min( AMS ,ACS ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + Const ) ,( Const / MRS ) ) ) ) / ( ( Min( ( AMS + ACS ) ,( AMS + RRS ) ) + ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( MDR + FirstVNF_CPU_Server ),( ACS - AMS ) ) / ( Min( ARS ,RRS ) * ( FirstVNF_Mem - ARS ) ) ) ) ) ) ) * Max( Max( Min( ( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_RAM / MDR ) ) - ( ( FirstVNF_CPU_Server - AMS ) + ( Const / ACS ) ) ) * Min( ( ( ACS / BR ) + ( FirstVNF_CPU * BR ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ,( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server + MDR ) ) * ( ( FirstVNF_CPU * AMS ) + Max( BR,FirstVNF_Mem ) ) ) - ( Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,CRS ) ) * ( ( MRS + FirstVNF_CPU ) * Max( MRS,PN ) ) ) ) ),Max( Max( Min( ( ( CRS - MDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU_Server - MRS ),( MDR + CRS ) ) ),Min( ( ( FirstVNF_RAM + MDR ) * ( FirstVNF_RAM_Server / MDR ) ) ,( ( DDR * FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,MRS ) ) ) ),Max( Max( ( ( Const - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM ) + ( FirstVNF_Mem / ARS ) ) ),( Max( ( ACS - MRS ),Min( ACS ,BR ) ) - Max( Max( RRS,FirstVNF_CPU ),( DDR * DDR ) ) ) ) ) ),Max( Max( ( ( ( ( CRS / MRS ) * ( AMS / AMS ) ) + ( ( ARS / RRS ) / ( RRS - ARS ) ) ) * ( Min( ( BR - DDR ) ,( ARS / FirstVNF_RAM_Server ) ) * Min( ( ACS + ARS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ),Min( ( Max( ( DDR + FirstVNF_CPU ),( ARS - ARS ) ) - Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,RRS ) ) ) ,( Max( ( AMS / FirstVNF_RAM ),( Const * DDR ) ) * ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_Mem * DDR ) ) ) ) ),Max( Max( ( ( ( CRS - Const ) + ( DDR - Const ) ) / ( ( PN - ACS ) / ( BR * ARS ) ) ),( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( RRS + DDR ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( ARS + BR ) ) ) ),( ( ( ( ARS - PN ) + ( FirstVNF_RAM + DDR ) ) + ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) * ( ( ( FirstVNF_Mem + RRS ) + Min( FirstVNF_CPU ,Const ) ) - ( ( RRS + ACS ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( ( ( ( RMSe + CS ) + Max( RRSe,MUR ) ) * ( ( MLU * DS ) * ( MUC + CS ) ) ) / ( ( Min( RCSe ,MUC ) - ( CS + CS ) ) - ( ( MUM * RRSe ) + Max( MUR,RRSe ) ) ) ),Min( Max( ( Min( DS ,RCSe ) + ( MUR * MUR ) ),Max( ( RMSe * RMSe ),( DS - RCSe ) ) ) ,( ( ( RMSe - DS ) - ( RCSe * DS ) ) / Min( ( MUC + MUC ) ,( MUR + MUR ) ) ) ) ),( Max( ( Min( ( MUR - MUC ) ,Min( RMSe ,MUM ) ) - Max( Max( MUR,MUC ),( RCSe + MUR ) ) ),( ( ( RMSe + MUM ) / ( RCSe / RRSe ) ) / Max( ( MUC / MUC ),( MUC * MUR ) ) ) ) / ( ( ( ( RCSe - MUM ) / Max( MUC,CS ) ) / ( Max( MUR,MLU ) - Min( RRSe ,MUR ) ) ) + ( Max( Min( RCSe ,MUC ),( MUC / MLU ) ) * ( ( DS - RMSe ) - Max( RRSe,MUM ) ) ) ) ) ) - ( ( Min( ( ( Max( DS,RMSe ) + ( RMSe - CS ) ) - ( ( RCSe - MUR ) + ( RRSe / DS ) ) ) ,( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) / ( ( MUM - MLU ) - ( MUM + RCSe ) ) ) ) - ( ( ( ( RMSe + MUC ) - ( MUR * MUM ) ) * ( Max( MLU,RRSe ) / Max( RCSe,RRSe ) ) ) - ( ( Max( CS,MUR ) - ( MUC * MUC ) ) / ( Max( MLU,DS ) * Max( RCSe,CS ) ) ) ) ) - ( ( Min( ( ( RCSe - MLU ) / ( RMSe + RMSe ) ) ,Min( ( DS + RCSe ) ,Min( RMSe ,MUM ) ) ) + Max( ( Min( RCSe ,MLU ) + Max( RRSe,RRSe ) ),Min( ( RCSe * DS ) ,Min( MUR ,MUM ) ) ) ) + ( ( ( ( RMSe / RMSe ) + ( MUR * MUC ) ) - ( Max( DS,RMSe ) - Max( DS,MUC ) ) ) - ( ( ( MUM * MUM ) + Min( RMSe ,RRSe ) ) / Max( Max( RRSe,MUC ),( MUR + DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe + MUC ) + ( RCSe - RRSe ) ) / Min( Max( CS,RMSe ) ,( RCSe - MUM ) ) ) / ( Max( Max( RMSe,DS ),( MLU - RMSe ) ) - ( ( MLU * DS ) * ( MUM + RMSe ) ) ) ),( ( ( ( RCSe / DS ) + ( MUR / MUC ) ) * Min( Max( MLU,RMSe ) ,( MUC - MUM ) ) ) / ( ( ( RCSe + MUR ) - ( CS - MUC ) ) - ( ( MLU - MLU ) - ( RMSe + RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) - Max( RCSe,DS ) ) + ( ( RMSe - RCSe ) / Max( CS,MLU ) ) ) + ( ( ( RMSe / DS ) + ( DS - MUR ) ) + ( ( MUR * DS ) / Max( RRSe,MUC ) ) ) ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUM,CS ) ) ,( Min( MUC ,RCSe ) + Max( MLU,MLU ) ) ) + ( Min( ( RMSe + MUM ) ,( MUR * RMSe ) ) * Max( ( MUR * DS ),( MUM * RMSe ) ) ) ) ) ),Min( ( Min( ( ( Min( RRSe ,MUC ) / ( MLU + MUC ) ) / ( ( DS / RRSe ) * ( RRSe - MLU ) ) ) ,Min( Max( ( RCSe / MUR ),( MLU - MUR ) ) ,( ( RCSe / RRSe ) + ( DS / CS ) ) ) ) * Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) ,Max( Min( ( RRSe / CS ) ,Min( RMSe ,MUR ) ),( Max( RCSe,MUR ) / Max( MUR,RMSe ) ) ) ) ) ,( Max( ( ( ( MUR - MUC ) + Max( RMSe,RCSe ) ) * ( ( RRSe / RRSe ) - Max( CS,RCSe ) ) ),Min( ( ( MUM - RRSe ) + ( MUC + MUC ) ) ,Max( Max( RCSe,MLU ),( RMSe - MLU ) ) ) ) - ( ( ( ( RRSe - MUM ) - ( RRSe * MUM ) ) + ( ( MUC + RMSe ) * ( MUM - RMSe ) ) ) * ( ( ( MLU * RRSe ) + ( RRSe + DS ) ) - ( ( CS + RCSe ) + ( MLU - MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) - MDR ) - Max( MDR,Const ) )", "choosing": "( ( MUM / Min( RRSe ,MUM ) ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( MRS * CRS ) ) + ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM + Const ) + ( RRS * BR ) ) + Min( ( ACS * DDR ) ,Min( FirstVNF_CPU ,MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * Const ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) ,Min( ( ( BR * ACS ) - ( FirstVNF_CPU_Server * MDR ) ) ,( ( ACS + ACS ) + ( FirstVNF_RAM / ACS ) ) ) ) ) * ( ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR / ACS ) ),( ( PN / ARS ) + ( PN * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU_Server - MDR ) ,Min( PN ,MRS ) ) * ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,BR ) ) ) ) * ( ( ( Min( ACS ,FirstVNF_Mem ) / ( Const - DDR ) ) / ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_CPU + AMS ) ) ) * ( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,MRS ) ) - ( ( AMS * CRS ) * Max( CRS,MRS ) ) ) ) ) ) + ( Min( Min( ( Max( ( MRS - RRS ),( BR - ARS ) ) * ( ( FirstVNF_CPU_Server + MRS ) * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( DDR * FirstVNF_CPU_Server ) + ( MRS * RRS ) ) * ( ( BR * PN ) / Max( ACS,ARS ) ) ) ) ,( ( ( ( RRS * FirstVNF_CPU_Server ) - ( RRS / MRS ) ) * ( ( AMS + ARS ) / ( MDR * AMS ) ) ) / ( Min( ( DDR * FirstVNF_Mem ) ,( Const * AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Min( MDR ,DDR ) ) ) ) ) * ( Min( ( ( Min( CRS ,MDR ) / ( FirstVNF_RAM * RRS ) ) / Min( Max( Const,MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ) ) ,( ( ( ARS + ACS ) / ( FirstVNF_Mem / RRS ) ) - ( Max( MRS,BR ) * ( FirstVNF_Mem - RRS ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,CRS ) + ( RRS / MDR ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( CRS + FirstVNF_CPU ) ) ) + ( Max( ( CRS + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) / ( ( CRS / ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( PN ,ACS ) * ( CRS / FirstVNF_CPU ) ) - ( ( Const + FirstVNF_Mem ) - ( BR * ARS ) ) ),( ( ( FirstVNF_CPU / DDR ) + ( Const * Const ) ) * ( ( FirstVNF_RAM_Server + ACS ) / ( ACS * PN ) ) ) ) + ( ( ( ( ARS * Const ) + Min( ACS ,Const ) ) + Max( Min( Const ,BR ),( CRS + MRS ) ) ) - Max( Max( Min( AMS ,BR ),Max( FirstVNF_RAM,CRS ) ),Max( Max( FirstVNF_Mem,CRS ),Min( ARS ,Const ) ) ) ) ) ,( Min( Min( ( ( ACS - MDR ) * ( ACS - ARS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM - CRS ) + Max( FirstVNF_CPU_Server,MRS ) ) / Max( ( MDR + DDR ),( CRS + FirstVNF_RAM_Server ) ) ) ) + ( ( Max( Max( AMS,AMS ),( FirstVNF_CPU_Server + MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - BR ) ) ) / Max( ( ( CRS + Const ) / ( BR / MRS ) ),Min( ( MDR * DDR ) ,( Const + BR ) ) ) ) ) ) + ( ( ( ( ( ( BR * DDR ) * ( ACS * FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM_Server,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ),( ( PN - CRS ) + ( FirstVNF_Mem - MRS ) ) ) ) / Max( Min( Max( ( FirstVNF_CPU_Server - ACS ),( MDR + MRS ) ) ,( ( ACS / DDR ) - ( FirstVNF_RAM_Server - PN ) ) ),( ( Max( Const,CRS ) * ( FirstVNF_Mem * RRS ) ) / ( ( AMS + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( MDR,FirstVNF_RAM ) ) ) ,Max( ( ( ARS + FirstVNF_RAM ) - Min( MRS ,RRS ) ),( Min( PN ,BR ) + Max( Const,CRS ) ) ) ) * ( ( Min( Max( MRS,PN ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( Max( CRS,FirstVNF_Mem_Server ) / Min( BR ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_RAM_Server + DDR ) / Min( BR ,ARS ) ) - ( ( AMS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * RCSe ) - ( CS / RCSe ) ) + ( ( MUR / RCSe ) / ( MUR + DS ) ) ) + ( Min( ( MUR + RCSe ) ,( MLU + MLU ) ) * ( Min( MLU ,MUR ) / ( MUC / DS ) ) ) ) * ( Max( ( ( RMSe - RCSe ) + ( CS - MLU ) ),Min( ( RRSe + MUR ) ,( MUM * DS ) ) ) + Min( Min( ( RCSe * DS ) ,Min( RRSe ,CS ) ) ,Max( ( CS / DS ),( RMSe / RCSe ) ) ) ) ),Min( Max( ( ( ( RRSe + RMSe ) - ( DS + RCSe ) ) * ( ( DS - MUM ) + ( MLU - MLU ) ) ),( Min( ( RRSe * MUR ) ,( MUC * MLU ) ) * ( ( MUM + RMSe ) - ( RRSe + MUC ) ) ) ) ,Max( ( Max( Max( MUR,RCSe ),( MUM / CS ) ) - ( Min( RCSe ,RMSe ) + ( MLU / MUC ) ) ),Max( Min( ( DS * CS ) ,( MUM / RRSe ) ),Max( ( RRSe * RMSe ),( DS / RMSe ) ) ) ) ) ) ,( Min( ( Max( ( ( RCSe - RMSe ) - ( CS + MUM ) ),Max( ( RRSe - MUM ),( MUR + MUR ) ) ) + ( ( ( RRSe + MLU ) + ( CS / CS ) ) - ( ( CS * MUR ) + ( RRSe + RRSe ) ) ) ) ,( ( Min( Max( MUM,MUM ) ,( MUC - CS ) ) / ( ( DS / DS ) - Min( MUC ,MUC ) ) ) + Min( ( Max( MUC,DS ) - Min( RMSe ,RRSe ) ) ,Max( ( MUR - MLU ),( RMSe / DS ) ) ) ) ) / ( ( ( Min( Min( CS ,CS ) ,( RMSe + RRSe ) ) - ( ( MUM - RRSe ) + Max( RCSe,MUC ) ) ) + Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,( ( RCSe / DS ) / ( RCSe / CS ) ) ) ) * ( Max( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ),( ( MUC / RRSe ) / ( MUC - MUR ) ) ) * Min( ( ( MUM - MUM ) / ( DS - RCSe ) ) ,( Max( MUM,MLU ) * ( CS * RCSe ) ) ) ) ) ) ) / Min( Min( ( Min( Max( ( ( DS * CS ) + ( DS * RMSe ) ),( Min( CS ,MUC ) * ( MLU / RCSe ) ) ) ,( ( ( MUC + DS ) / Min( RMSe ,RMSe ) ) * Min( ( MLU - MUM ) ,( MLU + RMSe ) ) ) ) + ( Max( ( Min( MUC ,RMSe ) - ( MUR / DS ) ),Min( ( CS / MUM ) ,( MLU + MLU ) ) ) - ( Min( ( RMSe * MUR ) ,( MUM - DS ) ) / Min( ( RRSe / RRSe ) ,Min( RMSe ,RRSe ) ) ) ) ) ,Min( Min( ( ( ( RMSe * DS ) + ( RMSe / MUC ) ) * ( Max( DS,CS ) * Max( MUM,RRSe ) ) ) ,( ( ( MLU - RMSe ) - ( RCSe - MUM ) ) - ( ( MLU / DS ) / ( CS + MUR ) ) ) ) ,( Min( Min( ( MLU * MUM ) ,( CS + MLU ) ) ,( ( MLU - MLU ) / Max( MUM,MLU ) ) ) + ( ( ( MLU * MUC ) - ( RCSe * RCSe ) ) - ( Max( CS,MUC ) * Max( DS,MLU ) ) ) ) ) ) ,Max( ( Max( ( Max( Min( DS ,MUR ),( CS + RCSe ) ) / ( ( RMSe + MUR ) - ( RCSe - MUC ) ) ),( Min( ( RCSe - RCSe ) ,Max( MLU,RCSe ) ) * Max( Max( MUR,CS ),Min( RRSe ,RMSe ) ) ) ) - ( ( ( Max( MUC,MUM ) * Min( DS ,RRSe ) ) + Min( ( MUM - MLU ) ,( MUM * MUR ) ) ) + ( ( Min( RRSe ,RMSe ) - ( DS / MUR ) ) - ( ( DS - MUC ) + Max( DS,RMSe ) ) ) ) ),( Min( ( ( ( CS - RRSe ) + ( MUC - RCSe ) ) / ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( Max( MLU,CS ) - ( RMSe + MUC ) ) / ( ( RRSe / MLU ) + Min( MUM ,MLU ) ) ) ) * Min( Max( ( ( CS + RCSe ) / ( CS - MLU ) ),( ( MUM / MUC ) - ( MUR - MUC ) ) ) ,( ( Max( MLU,MUM ) + ( MUM - DS ) ) * ( Max( MUM,RCSe ) / ( MUR / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,Min( DS ,MLU ) ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) - ( FirstVNF_CPU + ( RRS + RRS ) ) )", "choosing": "( Min( CS ,DS ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_CPU + ( CRS + ( ( FirstVNF_Mem_Server / DDR ) - ( FirstVNF_CPU_Server * MRS ) ) ) ) )", "choosing": "( Min( MUM ,DS ) / Max( RRSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "78": [{"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( DS + RMSe ) / ( MUM + MUC ) ) ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "( ( MUM - MUC ) / ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( AMS ,FirstVNF_RAM_Server ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( DS ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( ( Min( ( ( ( Max( MDR,FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_Mem ) ) * Min( ( BR - Const ) ,( DDR / AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / MRS ) - ( ACS / AMS ) ) - ( Max( FirstVNF_RAM,ACS ) - ( PN + FirstVNF_RAM ) ) ) ) ,Max( ( ( ( FirstVNF_CPU_Server - PN ) - Max( FirstVNF_RAM,PN ) ) - ( ( FirstVNF_CPU / RRS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( ( ACS - Const ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( Min( MDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( Max( ( MRS * BR ),( RRS / AMS ) ) / Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU,BR ) + ( Const * MRS ) ) - ( ( RRS / PN ) / ( PN * AMS ) ) ) ) * Min( ( Min( Max( RRS,Const ) ,( FirstVNF_CPU / PN ) ) / ( ( CRS * BR ) * ( Const + MRS ) ) ) ,Min( Max( ( MRS * FirstVNF_RAM_Server ),( PN * DDR ) ) ,( Min( FirstVNF_CPU ,CRS ) + Min( CRS ,Const ) ) ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem_Server + MRS ) / Max( FirstVNF_RAM,BR ) ) * ( ( MRS + FirstVNF_CPU_Server ) - Min( MRS ,AMS ) ) ) + ( Max( ( AMS / RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),Max( ARS,CRS ) ) ) - Min( ( Min( FirstVNF_RAM ,Const ) + ( PN - AMS ) ) ,( ( FirstVNF_CPU / ACS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) * ( Max( ( ( ( PN * RRS ) / ( PN - ARS ) ) - ( ( ARS + AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),( ( Min( AMS ,ACS ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + Const ) ,( Const / MRS ) ) ) ) / ( ( Min( ( AMS + ACS ) ,( AMS + RRS ) ) + ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( MDR + FirstVNF_CPU_Server ),( ACS - AMS ) ) / ( Min( ARS ,RRS ) * ( FirstVNF_Mem - ARS ) ) ) ) ) ) ) * Max( Max( Min( ( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_RAM / MDR ) ) - ( ( FirstVNF_CPU_Server - AMS ) + ( Const / ACS ) ) ) * Min( ( ( ACS / BR ) + ( FirstVNF_CPU * BR ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ,( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server + MDR ) ) * ( ( FirstVNF_CPU * AMS ) + Max( BR,FirstVNF_Mem ) ) ) - ( Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,CRS ) ) * ( ( MRS + FirstVNF_CPU ) * Max( MRS,PN ) ) ) ) ),Max( Max( Min( ( ( CRS - MDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU_Server - MRS ),( MDR + CRS ) ) ),Min( ( ( FirstVNF_RAM + MDR ) * ( FirstVNF_RAM_Server / MDR ) ) ,( ( DDR * FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,MRS ) ) ) ),Max( Max( ( ( Const - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM ) + ( FirstVNF_Mem / ARS ) ) ),( Max( ( ACS - MRS ),Min( ACS ,BR ) ) - Max( Max( RRS,FirstVNF_CPU ),( DDR * DDR ) ) ) ) ) ),Max( Max( ( ( ( ( CRS / MRS ) * ( AMS / AMS ) ) + ( ( ARS / RRS ) / ( RRS - ARS ) ) ) * ( Min( ( BR - DDR ) ,( ARS / FirstVNF_RAM_Server ) ) * Min( ( ACS + ARS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ),Min( ( Max( ( DDR + FirstVNF_CPU ),( ARS - ARS ) ) - Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,RRS ) ) ) ,( Max( ( AMS / FirstVNF_RAM ),( Const * DDR ) ) * ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_Mem * DDR ) ) ) ) ),Max( Max( ( ( ( CRS - Const ) + ( DDR - Const ) ) / ( ( PN - ACS ) / ( BR * ARS ) ) ),( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( RRS + DDR ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( ARS + BR ) ) ) ),( ( ( ( ARS - PN ) + ( FirstVNF_RAM + DDR ) ) + ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) * ( ( ( FirstVNF_Mem + RRS ) + Min( FirstVNF_CPU ,Const ) ) - ( ( RRS + ACS ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( ( ( ( RMSe + CS ) + Max( RRSe,MUR ) ) * ( ( MLU * DS ) * ( MUC + CS ) ) ) / ( ( Min( RCSe ,MUC ) - ( CS + CS ) ) - ( ( MUM * RRSe ) + Max( MUR,RRSe ) ) ) ),Min( Max( ( Min( DS ,RCSe ) + ( MUR * MUR ) ),Max( ( RMSe * RMSe ),( DS - RCSe ) ) ) ,( ( ( RMSe - DS ) - ( RCSe * DS ) ) / Min( ( MUC + MUC ) ,( MUR + MUR ) ) ) ) ),( Max( ( Min( ( MUR - MUC ) ,Min( RMSe ,MUM ) ) - Max( Max( MUR,MUC ),( RCSe + MUR ) ) ),( ( ( RMSe + MUM ) / ( RCSe / RRSe ) ) / Max( ( MUC / MUC ),( MUC * MUR ) ) ) ) / ( ( ( ( RCSe - MUM ) / Max( MUC,CS ) ) / ( Max( MUR,MLU ) - Min( RRSe ,MUR ) ) ) + ( Max( Min( RCSe ,MUC ),( MUC / MLU ) ) * ( ( DS - RMSe ) - Max( RRSe,MUM ) ) ) ) ) ) - ( ( Min( ( ( Max( DS,RMSe ) + ( RMSe - CS ) ) - ( ( RCSe - MUR ) + ( RRSe / DS ) ) ) ,( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) / ( ( MUM - MLU ) - ( MUM + RCSe ) ) ) ) - ( ( ( ( RMSe + MUC ) - ( MUR * MUM ) ) * ( Max( MLU,RRSe ) / Max( RCSe,RRSe ) ) ) - ( ( Max( CS,MUR ) - ( MUC * MUC ) ) / ( Max( MLU,DS ) * Max( RCSe,CS ) ) ) ) ) - ( ( Min( ( ( RCSe - MLU ) / ( RMSe + RMSe ) ) ,Min( ( DS + RCSe ) ,Min( RMSe ,MUM ) ) ) + Max( ( Min( RCSe ,MLU ) + Max( RRSe,RRSe ) ),Min( ( RCSe * DS ) ,Min( MUR ,MUM ) ) ) ) + ( ( ( ( RMSe / RMSe ) + ( MUR * MUC ) ) - ( Max( DS,RMSe ) - Max( DS,MUC ) ) ) - ( ( ( MUM * MUM ) + Min( RMSe ,RRSe ) ) / Max( Max( RRSe,MUC ),( MUR + DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe + MUC ) + ( RCSe - RRSe ) ) / Min( Max( CS,RMSe ) ,( RCSe - MUM ) ) ) / ( Max( Max( RMSe,DS ),( MLU - RMSe ) ) - ( ( MLU * DS ) * ( MUM + RMSe ) ) ) ),( ( ( ( RCSe / DS ) + ( MUR / MUC ) ) * Min( Max( MLU,RMSe ) ,( MUC - MUM ) ) ) / ( ( ( RCSe + MUR ) - ( CS - MUC ) ) - ( ( MLU - MLU ) - ( RMSe + RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) - Max( RCSe,DS ) ) + ( ( RMSe - RCSe ) / Max( CS,MLU ) ) ) + ( ( ( RMSe / DS ) + ( DS - MUR ) ) + ( ( MUR * DS ) / Max( RRSe,MUC ) ) ) ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUM,CS ) ) ,( Min( MUC ,RCSe ) + Max( MLU,MLU ) ) ) + ( Min( ( RMSe + MUM ) ,( MUR * RMSe ) ) * Max( ( MUR * DS ),( MUM * RMSe ) ) ) ) ) ),Min( ( Min( ( ( Min( RRSe ,MUC ) / ( MLU + MUC ) ) / ( ( DS / RRSe ) * ( RRSe - MLU ) ) ) ,Min( Max( ( RCSe / MUR ),( MLU - MUR ) ) ,( ( RCSe / RRSe ) + ( DS / CS ) ) ) ) * Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) ,Max( Min( ( RRSe / CS ) ,Min( RMSe ,MUR ) ),( Max( RCSe,MUR ) / Max( MUR,RMSe ) ) ) ) ) ,( Max( ( ( ( MUR - MUC ) + Max( RMSe,RCSe ) ) * ( ( RRSe / RRSe ) - Max( CS,RCSe ) ) ),Min( ( ( MUM - RRSe ) + ( MUC + MUC ) ) ,Max( Max( RCSe,MLU ),( RMSe - MLU ) ) ) ) - ( ( ( ( RRSe - MUM ) - ( RRSe * MUM ) ) + ( ( MUC + RMSe ) * ( MUM - RMSe ) ) ) * ( ( ( MLU * RRSe ) + ( RRSe + DS ) ) - ( ( CS + RCSe ) + ( MLU - MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( MRS * CRS ) ) + ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM + Const ) + ( RRS * BR ) ) + Min( ( ACS * DDR ) ,Min( FirstVNF_CPU ,MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * Const ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) ,Min( ( ( BR * ACS ) - ( FirstVNF_CPU_Server * MDR ) ) ,( ( ACS + ACS ) + ( FirstVNF_RAM / ACS ) ) ) ) ) * ( ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR / ACS ) ),( ( PN / ARS ) + ( PN * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU_Server - MDR ) ,Min( PN ,MRS ) ) * ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,BR ) ) ) ) * ( ( ( Min( ACS ,FirstVNF_Mem ) / ( Const - DDR ) ) / ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_CPU + AMS ) ) ) * ( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,MRS ) ) - ( ( AMS * CRS ) * Max( CRS,MRS ) ) ) ) ) ) + ( Min( Min( ( Max( ( MRS - RRS ),( BR - ARS ) ) * ( ( FirstVNF_CPU_Server + MRS ) * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( DDR * FirstVNF_CPU_Server ) + ( MRS * RRS ) ) * ( ( BR * PN ) / Max( ACS,ARS ) ) ) ) ,( ( ( ( RRS * FirstVNF_CPU_Server ) - ( RRS / MRS ) ) * ( ( AMS + ARS ) / ( MDR * AMS ) ) ) / ( Min( ( DDR * FirstVNF_Mem ) ,( Const * AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Min( MDR ,DDR ) ) ) ) ) * ( Min( ( ( Min( CRS ,MDR ) / ( FirstVNF_RAM * RRS ) ) / Min( Max( Const,MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ) ) ,( ( ( ARS + ACS ) / ( FirstVNF_Mem / RRS ) ) - ( Max( MRS,BR ) * ( FirstVNF_Mem - RRS ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,CRS ) + ( RRS / MDR ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( CRS + FirstVNF_CPU ) ) ) + ( Max( ( CRS + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) / ( ( CRS / ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( PN ,ACS ) * ( CRS / FirstVNF_CPU ) ) - ( ( Const + FirstVNF_Mem ) - ( BR * ARS ) ) ),( ( ( FirstVNF_CPU / DDR ) + ( Const * Const ) ) * ( ( FirstVNF_RAM_Server + ACS ) / ( ACS * PN ) ) ) ) + ( ( ( ( ARS * Const ) + Min( ACS ,Const ) ) + Max( Min( Const ,BR ),( CRS + MRS ) ) ) - Max( Max( Min( AMS ,BR ),Max( FirstVNF_RAM,CRS ) ),Max( Max( FirstVNF_Mem,CRS ),Min( ARS ,Const ) ) ) ) ) ,( Min( Min( ( ( ACS - MDR ) * ( ACS - ARS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM - CRS ) + Max( FirstVNF_CPU_Server,MRS ) ) / Max( ( MDR + DDR ),( CRS + FirstVNF_RAM_Server ) ) ) ) + ( ( Max( Max( AMS,AMS ),( FirstVNF_CPU_Server + MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - BR ) ) ) / Max( ( ( CRS + Const ) / ( BR / MRS ) ),Min( ( MDR * DDR ) ,( Const + BR ) ) ) ) ) ) + ( ( ( ( ( ( BR * DDR ) * ( ACS * FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM_Server,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ),( ( PN - CRS ) + ( FirstVNF_Mem - MRS ) ) ) ) / Max( Min( Max( ( FirstVNF_CPU_Server - ACS ),( MDR + MRS ) ) ,( ( ACS / DDR ) - ( FirstVNF_RAM_Server - PN ) ) ),( ( Max( Const,CRS ) * ( FirstVNF_Mem * RRS ) ) / ( ( AMS + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( MDR,FirstVNF_RAM ) ) ) ,Max( ( ( ARS + FirstVNF_RAM ) - Min( MRS ,RRS ) ),( Min( PN ,BR ) + Max( Const,CRS ) ) ) ) * ( ( Min( Max( MRS,PN ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( Max( CRS,FirstVNF_Mem_Server ) / Min( BR ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_RAM_Server + DDR ) / Min( BR ,ARS ) ) - ( ( AMS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * RCSe ) - ( CS / RCSe ) ) + ( ( MUR / RCSe ) / ( MUR + DS ) ) ) + ( Min( ( MUR + RCSe ) ,( MLU + MLU ) ) * ( Min( MLU ,MUR ) / ( MUC / DS ) ) ) ) * ( Max( ( ( RMSe - RCSe ) + ( CS - MLU ) ),Min( ( RRSe + MUR ) ,( MUM * DS ) ) ) + Min( Min( ( RCSe * DS ) ,Min( RRSe ,CS ) ) ,Max( ( CS / DS ),( RMSe / RCSe ) ) ) ) ),Min( Max( ( ( ( RRSe + RMSe ) - ( DS + RCSe ) ) * ( ( DS - MUM ) + ( MLU - MLU ) ) ),( Min( ( RRSe * MUR ) ,( MUC * MLU ) ) * ( ( MUM + RMSe ) - ( RRSe + MUC ) ) ) ) ,Max( ( Max( Max( MUR,RCSe ),( MUM / CS ) ) - ( Min( RCSe ,RMSe ) + ( MLU / MUC ) ) ),Max( Min( ( DS * CS ) ,( MUM / RRSe ) ),Max( ( RRSe * RMSe ),( DS / RMSe ) ) ) ) ) ) ,( Min( ( Max( ( ( RCSe - RMSe ) - ( CS + MUM ) ),Max( ( RRSe - MUM ),( MUR + MUR ) ) ) + ( ( ( RRSe + MLU ) + ( CS / CS ) ) - ( ( CS * MUR ) + ( RRSe + RRSe ) ) ) ) ,( ( Min( Max( MUM,MUM ) ,( MUC - CS ) ) / ( ( DS / DS ) - Min( MUC ,MUC ) ) ) + Min( ( Max( MUC,DS ) - Min( RMSe ,RRSe ) ) ,Max( ( MUR - MLU ),( RMSe / DS ) ) ) ) ) / ( ( ( Min( Min( CS ,CS ) ,( RMSe + RRSe ) ) - ( ( MUM - RRSe ) + Max( RCSe,MUC ) ) ) + Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,( ( RCSe / DS ) / ( RCSe / CS ) ) ) ) * ( Max( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ),( ( MUC / RRSe ) / ( MUC - MUR ) ) ) * Min( ( ( MUM - MUM ) / ( DS - RCSe ) ) ,( Max( MUM,MLU ) * ( CS * RCSe ) ) ) ) ) ) ) / Min( Min( ( Min( Max( ( ( DS * CS ) + ( DS * RMSe ) ),( Min( CS ,MUC ) * ( MLU / RCSe ) ) ) ,( ( ( MUC + DS ) / Min( RMSe ,RMSe ) ) * Min( ( MLU - MUM ) ,( MLU + RMSe ) ) ) ) + ( Max( ( Min( MUC ,RMSe ) - ( MUR / DS ) ),Min( ( CS / MUM ) ,( MLU + MLU ) ) ) - ( Min( ( RMSe * MUR ) ,( MUM - DS ) ) / Min( ( RRSe / RRSe ) ,Min( RMSe ,RRSe ) ) ) ) ) ,Min( Min( ( ( ( RMSe * DS ) + ( RMSe / MUC ) ) * ( Max( DS,CS ) * Max( MUM,RRSe ) ) ) ,( ( ( MLU - RMSe ) - ( RCSe - MUM ) ) - ( ( MLU / DS ) / ( CS + MUR ) ) ) ) ,( Min( Min( ( MLU * MUM ) ,( CS + MLU ) ) ,( ( MLU - MLU ) / Max( MUM,MLU ) ) ) + ( ( ( MLU * MUC ) - ( RCSe * RCSe ) ) - ( Max( CS,MUC ) * Max( DS,MLU ) ) ) ) ) ) ,Max( ( Max( ( Max( Min( DS ,MUR ),( CS + RCSe ) ) / ( ( RMSe + MUR ) - ( RCSe - MUC ) ) ),( Min( ( RCSe - RCSe ) ,Max( MLU,RCSe ) ) * Max( Max( MUR,CS ),Min( RRSe ,RMSe ) ) ) ) - ( ( ( Max( MUC,MUM ) * Min( DS ,RRSe ) ) + Min( ( MUM - MLU ) ,( MUM * MUR ) ) ) + ( ( Min( RRSe ,RMSe ) - ( DS / MUR ) ) - ( ( DS - MUC ) + Max( DS,RMSe ) ) ) ) ),( Min( ( ( ( CS - RRSe ) + ( MUC - RCSe ) ) / ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( Max( MLU,CS ) - ( RMSe + MUC ) ) / ( ( RRSe / MLU ) + Min( MUM ,MLU ) ) ) ) * Min( Max( ( ( CS + RCSe ) / ( CS - MLU ) ),( ( MUM / MUC ) - ( MUR - MUC ) ) ) ,( ( Max( MLU,MUM ) + ( MUM - DS ) ) * ( Max( MUM,RCSe ) / ( MUR / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,Min( DS ,MLU ) ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,DDR ) - ( FirstVNF_CPU + ( RRS + RRS ) ) )", "choosing": "( Min( CS ,DS ) / ( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "79": [{"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) )", "choosing": "Min( Min( MLU ,DS ) ,( Min( DS ,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( DS + RMSe ) / ( MUM + MUC ) ) ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( AMS ,FirstVNF_RAM_Server ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( DS ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "( ( MUM - MUC ) / ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( Max( MDR,FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_Mem ) ) * Min( ( BR - Const ) ,( DDR / AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / MRS ) - ( ACS / AMS ) ) - ( Max( FirstVNF_RAM,ACS ) - ( PN + FirstVNF_RAM ) ) ) ) ,Max( ( ( ( FirstVNF_CPU_Server - PN ) - Max( FirstVNF_RAM,PN ) ) - ( ( FirstVNF_CPU / RRS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( ( ACS - Const ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( Min( MDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( Max( ( MRS * BR ),( RRS / AMS ) ) / Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU,BR ) + ( Const * MRS ) ) - ( ( RRS / PN ) / ( PN * AMS ) ) ) ) * Min( ( Min( Max( RRS,Const ) ,( FirstVNF_CPU / PN ) ) / ( ( CRS * BR ) * ( Const + MRS ) ) ) ,Min( Max( ( MRS * FirstVNF_RAM_Server ),( PN * DDR ) ) ,( Min( FirstVNF_CPU ,CRS ) + Min( CRS ,Const ) ) ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem_Server + MRS ) / Max( FirstVNF_RAM,BR ) ) * ( ( MRS + FirstVNF_CPU_Server ) - Min( MRS ,AMS ) ) ) + ( Max( ( AMS / RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),Max( ARS,CRS ) ) ) - Min( ( Min( FirstVNF_RAM ,Const ) + ( PN - AMS ) ) ,( ( FirstVNF_CPU / ACS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) * ( Max( ( ( ( PN * RRS ) / ( PN - ARS ) ) - ( ( ARS + AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),( ( Min( AMS ,ACS ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + Const ) ,( Const / MRS ) ) ) ) / ( ( Min( ( AMS + ACS ) ,( AMS + RRS ) ) + ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( MDR + FirstVNF_CPU_Server ),( ACS - AMS ) ) / ( Min( ARS ,RRS ) * ( FirstVNF_Mem - ARS ) ) ) ) ) ) ) * Max( Max( Min( ( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_RAM / MDR ) ) - ( ( FirstVNF_CPU_Server - AMS ) + ( Const / ACS ) ) ) * Min( ( ( ACS / BR ) + ( FirstVNF_CPU * BR ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ,( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server + MDR ) ) * ( ( FirstVNF_CPU * AMS ) + Max( BR,FirstVNF_Mem ) ) ) - ( Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,CRS ) ) * ( ( MRS + FirstVNF_CPU ) * Max( MRS,PN ) ) ) ) ),Max( Max( Min( ( ( CRS - MDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU_Server - MRS ),( MDR + CRS ) ) ),Min( ( ( FirstVNF_RAM + MDR ) * ( FirstVNF_RAM_Server / MDR ) ) ,( ( DDR * FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,MRS ) ) ) ),Max( Max( ( ( Const - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM ) + ( FirstVNF_Mem / ARS ) ) ),( Max( ( ACS - MRS ),Min( ACS ,BR ) ) - Max( Max( RRS,FirstVNF_CPU ),( DDR * DDR ) ) ) ) ) ),Max( Max( ( ( ( ( CRS / MRS ) * ( AMS / AMS ) ) + ( ( ARS / RRS ) / ( RRS - ARS ) ) ) * ( Min( ( BR - DDR ) ,( ARS / FirstVNF_RAM_Server ) ) * Min( ( ACS + ARS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ),Min( ( Max( ( DDR + FirstVNF_CPU ),( ARS - ARS ) ) - Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,RRS ) ) ) ,( Max( ( AMS / FirstVNF_RAM ),( Const * DDR ) ) * ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_Mem * DDR ) ) ) ) ),Max( Max( ( ( ( CRS - Const ) + ( DDR - Const ) ) / ( ( PN - ACS ) / ( BR * ARS ) ) ),( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( RRS + DDR ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( ARS + BR ) ) ) ),( ( ( ( ARS - PN ) + ( FirstVNF_RAM + DDR ) ) + ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) * ( ( ( FirstVNF_Mem + RRS ) + Min( FirstVNF_CPU ,Const ) ) - ( ( RRS + ACS ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( ( ( ( RMSe + CS ) + Max( RRSe,MUR ) ) * ( ( MLU * DS ) * ( MUC + CS ) ) ) / ( ( Min( RCSe ,MUC ) - ( CS + CS ) ) - ( ( MUM * RRSe ) + Max( MUR,RRSe ) ) ) ),Min( Max( ( Min( DS ,RCSe ) + ( MUR * MUR ) ),Max( ( RMSe * RMSe ),( DS - RCSe ) ) ) ,( ( ( RMSe - DS ) - ( RCSe * DS ) ) / Min( ( MUC + MUC ) ,( MUR + MUR ) ) ) ) ),( Max( ( Min( ( MUR - MUC ) ,Min( RMSe ,MUM ) ) - Max( Max( MUR,MUC ),( RCSe + MUR ) ) ),( ( ( RMSe + MUM ) / ( RCSe / RRSe ) ) / Max( ( MUC / MUC ),( MUC * MUR ) ) ) ) / ( ( ( ( RCSe - MUM ) / Max( MUC,CS ) ) / ( Max( MUR,MLU ) - Min( RRSe ,MUR ) ) ) + ( Max( Min( RCSe ,MUC ),( MUC / MLU ) ) * ( ( DS - RMSe ) - Max( RRSe,MUM ) ) ) ) ) ) - ( ( Min( ( ( Max( DS,RMSe ) + ( RMSe - CS ) ) - ( ( RCSe - MUR ) + ( RRSe / DS ) ) ) ,( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) / ( ( MUM - MLU ) - ( MUM + RCSe ) ) ) ) - ( ( ( ( RMSe + MUC ) - ( MUR * MUM ) ) * ( Max( MLU,RRSe ) / Max( RCSe,RRSe ) ) ) - ( ( Max( CS,MUR ) - ( MUC * MUC ) ) / ( Max( MLU,DS ) * Max( RCSe,CS ) ) ) ) ) - ( ( Min( ( ( RCSe - MLU ) / ( RMSe + RMSe ) ) ,Min( ( DS + RCSe ) ,Min( RMSe ,MUM ) ) ) + Max( ( Min( RCSe ,MLU ) + Max( RRSe,RRSe ) ),Min( ( RCSe * DS ) ,Min( MUR ,MUM ) ) ) ) + ( ( ( ( RMSe / RMSe ) + ( MUR * MUC ) ) - ( Max( DS,RMSe ) - Max( DS,MUC ) ) ) - ( ( ( MUM * MUM ) + Min( RMSe ,RRSe ) ) / Max( Max( RRSe,MUC ),( MUR + DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe + MUC ) + ( RCSe - RRSe ) ) / Min( Max( CS,RMSe ) ,( RCSe - MUM ) ) ) / ( Max( Max( RMSe,DS ),( MLU - RMSe ) ) - ( ( MLU * DS ) * ( MUM + RMSe ) ) ) ),( ( ( ( RCSe / DS ) + ( MUR / MUC ) ) * Min( Max( MLU,RMSe ) ,( MUC - MUM ) ) ) / ( ( ( RCSe + MUR ) - ( CS - MUC ) ) - ( ( MLU - MLU ) - ( RMSe + RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) - Max( RCSe,DS ) ) + ( ( RMSe - RCSe ) / Max( CS,MLU ) ) ) + ( ( ( RMSe / DS ) + ( DS - MUR ) ) + ( ( MUR * DS ) / Max( RRSe,MUC ) ) ) ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUM,CS ) ) ,( Min( MUC ,RCSe ) + Max( MLU,MLU ) ) ) + ( Min( ( RMSe + MUM ) ,( MUR * RMSe ) ) * Max( ( MUR * DS ),( MUM * RMSe ) ) ) ) ) ),Min( ( Min( ( ( Min( RRSe ,MUC ) / ( MLU + MUC ) ) / ( ( DS / RRSe ) * ( RRSe - MLU ) ) ) ,Min( Max( ( RCSe / MUR ),( MLU - MUR ) ) ,( ( RCSe / RRSe ) + ( DS / CS ) ) ) ) * Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) ,Max( Min( ( RRSe / CS ) ,Min( RMSe ,MUR ) ),( Max( RCSe,MUR ) / Max( MUR,RMSe ) ) ) ) ) ,( Max( ( ( ( MUR - MUC ) + Max( RMSe,RCSe ) ) * ( ( RRSe / RRSe ) - Max( CS,RCSe ) ) ),Min( ( ( MUM - RRSe ) + ( MUC + MUC ) ) ,Max( Max( RCSe,MLU ),( RMSe - MLU ) ) ) ) - ( ( ( ( RRSe - MUM ) - ( RRSe * MUM ) ) + ( ( MUC + RMSe ) * ( MUM - RMSe ) ) ) * ( ( ( MLU * RRSe ) + ( RRSe + DS ) ) - ( ( CS + RCSe ) + ( MLU - MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( MRS * CRS ) ) + ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM + Const ) + ( RRS * BR ) ) + Min( ( ACS * DDR ) ,Min( FirstVNF_CPU ,MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * Const ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) ,Min( ( ( BR * ACS ) - ( FirstVNF_CPU_Server * MDR ) ) ,( ( ACS + ACS ) + ( FirstVNF_RAM / ACS ) ) ) ) ) * ( ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR / ACS ) ),( ( PN / ARS ) + ( PN * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU_Server - MDR ) ,Min( PN ,MRS ) ) * ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,BR ) ) ) ) * ( ( ( Min( ACS ,FirstVNF_Mem ) / ( Const - DDR ) ) / ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_CPU + AMS ) ) ) * ( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,MRS ) ) - ( ( AMS * CRS ) * Max( CRS,MRS ) ) ) ) ) ) + ( Min( Min( ( Max( ( MRS - RRS ),( BR - ARS ) ) * ( ( FirstVNF_CPU_Server + MRS ) * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( DDR * FirstVNF_CPU_Server ) + ( MRS * RRS ) ) * ( ( BR * PN ) / Max( ACS,ARS ) ) ) ) ,( ( ( ( RRS * FirstVNF_CPU_Server ) - ( RRS / MRS ) ) * ( ( AMS + ARS ) / ( MDR * AMS ) ) ) / ( Min( ( DDR * FirstVNF_Mem ) ,( Const * AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Min( MDR ,DDR ) ) ) ) ) * ( Min( ( ( Min( CRS ,MDR ) / ( FirstVNF_RAM * RRS ) ) / Min( Max( Const,MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ) ) ,( ( ( ARS + ACS ) / ( FirstVNF_Mem / RRS ) ) - ( Max( MRS,BR ) * ( FirstVNF_Mem - RRS ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,CRS ) + ( RRS / MDR ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( CRS + FirstVNF_CPU ) ) ) + ( Max( ( CRS + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) / ( ( CRS / ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( PN ,ACS ) * ( CRS / FirstVNF_CPU ) ) - ( ( Const + FirstVNF_Mem ) - ( BR * ARS ) ) ),( ( ( FirstVNF_CPU / DDR ) + ( Const * Const ) ) * ( ( FirstVNF_RAM_Server + ACS ) / ( ACS * PN ) ) ) ) + ( ( ( ( ARS * Const ) + Min( ACS ,Const ) ) + Max( Min( Const ,BR ),( CRS + MRS ) ) ) - Max( Max( Min( AMS ,BR ),Max( FirstVNF_RAM,CRS ) ),Max( Max( FirstVNF_Mem,CRS ),Min( ARS ,Const ) ) ) ) ) ,( Min( Min( ( ( ACS - MDR ) * ( ACS - ARS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM - CRS ) + Max( FirstVNF_CPU_Server,MRS ) ) / Max( ( MDR + DDR ),( CRS + FirstVNF_RAM_Server ) ) ) ) + ( ( Max( Max( AMS,AMS ),( FirstVNF_CPU_Server + MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - BR ) ) ) / Max( ( ( CRS + Const ) / ( BR / MRS ) ),Min( ( MDR * DDR ) ,( Const + BR ) ) ) ) ) ) + ( ( ( ( ( ( BR * DDR ) * ( ACS * FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM_Server,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ),( ( PN - CRS ) + ( FirstVNF_Mem - MRS ) ) ) ) / Max( Min( Max( ( FirstVNF_CPU_Server - ACS ),( MDR + MRS ) ) ,( ( ACS / DDR ) - ( FirstVNF_RAM_Server - PN ) ) ),( ( Max( Const,CRS ) * ( FirstVNF_Mem * RRS ) ) / ( ( AMS + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( MDR,FirstVNF_RAM ) ) ) ,Max( ( ( ARS + FirstVNF_RAM ) - Min( MRS ,RRS ) ),( Min( PN ,BR ) + Max( Const,CRS ) ) ) ) * ( ( Min( Max( MRS,PN ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( Max( CRS,FirstVNF_Mem_Server ) / Min( BR ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_RAM_Server + DDR ) / Min( BR ,ARS ) ) - ( ( AMS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * RCSe ) - ( CS / RCSe ) ) + ( ( MUR / RCSe ) / ( MUR + DS ) ) ) + ( Min( ( MUR + RCSe ) ,( MLU + MLU ) ) * ( Min( MLU ,MUR ) / ( MUC / DS ) ) ) ) * ( Max( ( ( RMSe - RCSe ) + ( CS - MLU ) ),Min( ( RRSe + MUR ) ,( MUM * DS ) ) ) + Min( Min( ( RCSe * DS ) ,Min( RRSe ,CS ) ) ,Max( ( CS / DS ),( RMSe / RCSe ) ) ) ) ),Min( Max( ( ( ( RRSe + RMSe ) - ( DS + RCSe ) ) * ( ( DS - MUM ) + ( MLU - MLU ) ) ),( Min( ( RRSe * MUR ) ,( MUC * MLU ) ) * ( ( MUM + RMSe ) - ( RRSe + MUC ) ) ) ) ,Max( ( Max( Max( MUR,RCSe ),( MUM / CS ) ) - ( Min( RCSe ,RMSe ) + ( MLU / MUC ) ) ),Max( Min( ( DS * CS ) ,( MUM / RRSe ) ),Max( ( RRSe * RMSe ),( DS / RMSe ) ) ) ) ) ) ,( Min( ( Max( ( ( RCSe - RMSe ) - ( CS + MUM ) ),Max( ( RRSe - MUM ),( MUR + MUR ) ) ) + ( ( ( RRSe + MLU ) + ( CS / CS ) ) - ( ( CS * MUR ) + ( RRSe + RRSe ) ) ) ) ,( ( Min( Max( MUM,MUM ) ,( MUC - CS ) ) / ( ( DS / DS ) - Min( MUC ,MUC ) ) ) + Min( ( Max( MUC,DS ) - Min( RMSe ,RRSe ) ) ,Max( ( MUR - MLU ),( RMSe / DS ) ) ) ) ) / ( ( ( Min( Min( CS ,CS ) ,( RMSe + RRSe ) ) - ( ( MUM - RRSe ) + Max( RCSe,MUC ) ) ) + Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,( ( RCSe / DS ) / ( RCSe / CS ) ) ) ) * ( Max( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ),( ( MUC / RRSe ) / ( MUC - MUR ) ) ) * Min( ( ( MUM - MUM ) / ( DS - RCSe ) ) ,( Max( MUM,MLU ) * ( CS * RCSe ) ) ) ) ) ) ) / Min( Min( ( Min( Max( ( ( DS * CS ) + ( DS * RMSe ) ),( Min( CS ,MUC ) * ( MLU / RCSe ) ) ) ,( ( ( MUC + DS ) / Min( RMSe ,RMSe ) ) * Min( ( MLU - MUM ) ,( MLU + RMSe ) ) ) ) + ( Max( ( Min( MUC ,RMSe ) - ( MUR / DS ) ),Min( ( CS / MUM ) ,( MLU + MLU ) ) ) - ( Min( ( RMSe * MUR ) ,( MUM - DS ) ) / Min( ( RRSe / RRSe ) ,Min( RMSe ,RRSe ) ) ) ) ) ,Min( Min( ( ( ( RMSe * DS ) + ( RMSe / MUC ) ) * ( Max( DS,CS ) * Max( MUM,RRSe ) ) ) ,( ( ( MLU - RMSe ) - ( RCSe - MUM ) ) - ( ( MLU / DS ) / ( CS + MUR ) ) ) ) ,( Min( Min( ( MLU * MUM ) ,( CS + MLU ) ) ,( ( MLU - MLU ) / Max( MUM,MLU ) ) ) + ( ( ( MLU * MUC ) - ( RCSe * RCSe ) ) - ( Max( CS,MUC ) * Max( DS,MLU ) ) ) ) ) ) ,Max( ( Max( ( Max( Min( DS ,MUR ),( CS + RCSe ) ) / ( ( RMSe + MUR ) - ( RCSe - MUC ) ) ),( Min( ( RCSe - RCSe ) ,Max( MLU,RCSe ) ) * Max( Max( MUR,CS ),Min( RRSe ,RMSe ) ) ) ) - ( ( ( Max( MUC,MUM ) * Min( DS ,RRSe ) ) + Min( ( MUM - MLU ) ,( MUM * MUR ) ) ) + ( ( Min( RRSe ,RMSe ) - ( DS / MUR ) ) - ( ( DS - MUC ) + Max( DS,RMSe ) ) ) ) ),( Min( ( ( ( CS - RRSe ) + ( MUC - RCSe ) ) / ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( Max( MLU,CS ) - ( RMSe + MUC ) ) / ( ( RRSe / MLU ) + Min( MUM ,MLU ) ) ) ) * Min( Max( ( ( CS + RCSe ) / ( CS - MLU ) ),( ( MUM / MUC ) - ( MUR - MUC ) ) ) ,( ( Max( MLU,MUM ) + ( MUM - DS ) ) * ( Max( MUM,RCSe ) / ( MUR / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( DDR,FirstVNF_Mem_Server ) ) * AMS ) )", "choosing": "Min( Min( MLU ,Min( DS ,MLU ) ) ,( ( MLU / MUM ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( ( ( ( ( ARS * MRS ) * Min( PN ,FirstVNF_RAM_Server ) ) + ( ( RRS / FirstVNF_Mem_Server ) * ( BR + FirstVNF_RAM ) ) ) * ( ( ( FirstVNF_Mem_Server - Const ) - ( FirstVNF_Mem + FirstVNF_Mem ) ) / ( ( DDR / AMS ) + Max( AMS,AMS ) ) ) ) + ( ( ( ( BR - AMS ) + ( ARS + Const ) ) / ( ( FirstVNF_RAM - ACS ) / Max( CRS,PN ) ) ) / ( ( ( PN * FirstVNF_Mem_Server ) / ( PN * FirstVNF_CPU ) ) + Max( ( ARS * Const ),Max( Const,FirstVNF_CPU ) ) ) ) ),( ( ( Max( ( Const / FirstVNF_CPU_Server ),Max( FirstVNF_RAM,PN ) ) * ( ( FirstVNF_CPU / DDR ) * ( MRS - CRS ) ) ) * ( Max( ( FirstVNF_Mem / ARS ),( FirstVNF_Mem * Const ) ) * ( ( MDR / AMS ) + ( PN * MDR ) ) ) ) * Max( Max( ( ( ACS + ACS ) + ( FirstVNF_Mem - BR ) ),( ( FirstVNF_CPU_Server + CRS ) + ( PN - FirstVNF_RAM_Server ) ) ),Max( ( ( AMS * Const ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ),( Max( AMS,PN ) + Max( FirstVNF_RAM,ARS ) ) ) ) ) ) * Min( Max( ( ( Min( ( FirstVNF_Mem_Server * MRS ) ,Max( RRS,ACS ) ) / Max( ( PN * Const ),( MDR * MRS ) ) ) - Max( ( ( ACS * FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU_Server ) ),Max( ( BR + DDR ),( AMS / MDR ) ) ) ),( Max( ( ( CRS / FirstVNF_CPU_Server ) * ( FirstVNF_Mem_Server + ARS ) ),Max( ( MRS / BR ),( FirstVNF_Mem / AMS ) ) ) / ( Min( ( FirstVNF_CPU_Server + RRS ) ,Max( Const,RRS ) ) * ( ( BR * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) ) ) ,( Min( ( ( Max( MRS,ARS ) + ( MRS / MDR ) ) / ( Max( Const,CRS ) + ( RRS / AMS ) ) ) ,( Max( ( Const - FirstVNF_RAM_Server ),( FirstVNF_RAM * RRS ) ) + ( Max( ACS,FirstVNF_Mem ) / ( BR * MRS ) ) ) ) / ( ( ( Max( PN,RRS ) - ( AMS - FirstVNF_CPU ) ) * Max( ( DDR * MRS ),( FirstVNF_CPU + PN ) ) ) + ( ( Min( FirstVNF_Mem_Server ,PN ) - ( CRS - ARS ) ) - ( Max( FirstVNF_CPU,ARS ) * Max( MRS,MDR ) ) ) ) ) ) ) ,Min( ( ( ( ( Min( ( MDR / Const ) ,Min( Const ,FirstVNF_CPU ) ) * Min( Max( FirstVNF_Mem,AMS ) ,( ACS / PN ) ) ) * ( ( ( ACS + PN ) * ( DDR * FirstVNF_RAM_Server ) ) / ( ( FirstVNF_RAM * CRS ) + ( MRS + RRS ) ) ) ) / Min( Min( Min( Min( ARS ,MDR ) ,( ARS - BR ) ) ,Max( ( ARS + FirstVNF_CPU_Server ),Max( CRS,FirstVNF_RAM_Server ) ) ) ,( Min( Min( ACS ,FirstVNF_Mem ) ,( CRS - ACS ) ) + ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) + ( FirstVNF_Mem / MRS ) ) ) ) ) * Min( ( ( ( ( Const + DDR ) - ( FirstVNF_RAM * FirstVNF_RAM ) ) / ( ( PN * MRS ) + Min( RRS ,ACS ) ) ) - ( ( Min( BR ,RRS ) - ( Const - DDR ) ) + Max( Min( FirstVNF_RAM ,BR ),Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ,( ( Min( ( DDR * ACS ) ,( FirstVNF_Mem_Server - Const ) ) * Min( Max( Const,MDR ) ,( MRS * FirstVNF_CPU ) ) ) * ( ( ( ARS + PN ) * ( BR / CRS ) ) * Min( ( FirstVNF_Mem - DDR ) ,( DDR - FirstVNF_CPU_Server ) ) ) ) ) ) ,( Max( Max( ( Min( Min( MDR ,ARS ) ,( MDR + PN ) ) - ( ( FirstVNF_RAM_Server - AMS ) * ( FirstVNF_CPU_Server / AMS ) ) ),Max( ( ( ARS + AMS ) * ( FirstVNF_CPU_Server * PN ) ),( ( BR / DDR ) - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ),( ( ( ( FirstVNF_CPU - DDR ) * Max( MRS,FirstVNF_CPU ) ) * ( ( Const + MDR ) - Max( FirstVNF_CPU_Server,RRS ) ) ) / Min( ( Min( BR ,BR ) + Max( PN,PN ) ) ,Min( ( Const - AMS ) ,Min( ACS ,MDR ) ) ) ) ) * ( ( Max( Max( ( ARS - RRS ),( FirstVNF_Mem_Server + CRS ) ),Min( ( Const * CRS ) ,( FirstVNF_Mem_Server - MRS ) ) ) + ( ( ( FirstVNF_Mem_Server + Const ) * ( FirstVNF_RAM * CRS ) ) * Min( ( MDR * CRS ) ,( FirstVNF_RAM / RRS ) ) ) ) / ( ( ( Max( CRS,FirstVNF_RAM ) / ( FirstVNF_Mem_Server / BR ) ) + ( ( ACS * PN ) * ( CRS * RRS ) ) ) * ( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * ( PN + ARS ) ) - ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - ( BR - FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "Max( ( ( RMSe * MUC ) + MUM ),( CS - Min( DS ,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "80": [{"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) ) )", "choosing": "( ( ( ( MLU + MUM ) + MUR ) - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) )", "choosing": "Min( Min( MLU ,DS ) ,( Min( DS ,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) - Max( DDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( MUC,MUC ) / ( MLU + CS ) ) / Max( MUC,MLU ) )", "obj1": 0.8715203426124197, "obj2": 0.06430832335853208}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( AMS ,FirstVNF_RAM_Server ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( DS ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( DS + RMSe ) / ( MUM + MUC ) ) ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "( ( MUM - MUC ) / ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( Max( MDR,FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_Mem ) ) * Min( ( BR - Const ) ,( DDR / AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / MRS ) - ( ACS / AMS ) ) - ( Max( FirstVNF_RAM,ACS ) - ( PN + FirstVNF_RAM ) ) ) ) ,Max( ( ( ( FirstVNF_CPU_Server - PN ) - Max( FirstVNF_RAM,PN ) ) - ( ( FirstVNF_CPU / RRS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( ( ACS - Const ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( Min( MDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( Max( ( MRS * BR ),( RRS / AMS ) ) / Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU,BR ) + ( Const * MRS ) ) - ( ( RRS / PN ) / ( PN * AMS ) ) ) ) * Min( ( Min( Max( RRS,Const ) ,( FirstVNF_CPU / PN ) ) / ( ( CRS * BR ) * ( Const + MRS ) ) ) ,Min( Max( ( MRS * FirstVNF_RAM_Server ),( PN * DDR ) ) ,( Min( FirstVNF_CPU ,CRS ) + Min( CRS ,Const ) ) ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem_Server + MRS ) / Max( FirstVNF_RAM,BR ) ) * ( ( MRS + FirstVNF_CPU_Server ) - Min( MRS ,AMS ) ) ) + ( Max( ( AMS / RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),Max( ARS,CRS ) ) ) - Min( ( Min( FirstVNF_RAM ,Const ) + ( PN - AMS ) ) ,( ( FirstVNF_CPU / ACS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) * ( Max( ( ( ( PN * RRS ) / ( PN - ARS ) ) - ( ( ARS + AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),( ( Min( AMS ,ACS ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + Const ) ,( Const / MRS ) ) ) ) / ( ( Min( ( AMS + ACS ) ,( AMS + RRS ) ) + ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( MDR + FirstVNF_CPU_Server ),( ACS - AMS ) ) / ( Min( ARS ,RRS ) * ( FirstVNF_Mem - ARS ) ) ) ) ) ) ) * Max( Max( Min( ( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_RAM / MDR ) ) - ( ( FirstVNF_CPU_Server - AMS ) + ( Const / ACS ) ) ) * Min( ( ( ACS / BR ) + ( FirstVNF_CPU * BR ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ,( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server + MDR ) ) * ( ( FirstVNF_CPU * AMS ) + Max( BR,FirstVNF_Mem ) ) ) - ( Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,CRS ) ) * ( ( MRS + FirstVNF_CPU ) * Max( MRS,PN ) ) ) ) ),Max( Max( Min( ( ( CRS - MDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU_Server - MRS ),( MDR + CRS ) ) ),Min( ( ( FirstVNF_RAM + MDR ) * ( FirstVNF_RAM_Server / MDR ) ) ,( ( DDR * FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,MRS ) ) ) ),Max( Max( ( ( Const - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM ) + ( FirstVNF_Mem / ARS ) ) ),( Max( ( ACS - MRS ),Min( ACS ,BR ) ) - Max( Max( RRS,FirstVNF_CPU ),( DDR * DDR ) ) ) ) ) ),Max( Max( ( ( ( ( CRS / MRS ) * ( AMS / AMS ) ) + ( ( ARS / RRS ) / ( RRS - ARS ) ) ) * ( Min( ( BR - DDR ) ,( ARS / FirstVNF_RAM_Server ) ) * Min( ( ACS + ARS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ),Min( ( Max( ( DDR + FirstVNF_CPU ),( ARS - ARS ) ) - Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,RRS ) ) ) ,( Max( ( AMS / FirstVNF_RAM ),( Const * DDR ) ) * ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_Mem * DDR ) ) ) ) ),Max( Max( ( ( ( CRS - Const ) + ( DDR - Const ) ) / ( ( PN - ACS ) / ( BR * ARS ) ) ),( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( RRS + DDR ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( ARS + BR ) ) ) ),( ( ( ( ARS - PN ) + ( FirstVNF_RAM + DDR ) ) + ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) * ( ( ( FirstVNF_Mem + RRS ) + Min( FirstVNF_CPU ,Const ) ) - ( ( RRS + ACS ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( ( ( ( RMSe + CS ) + Max( RRSe,MUR ) ) * ( ( MLU * DS ) * ( MUC + CS ) ) ) / ( ( Min( RCSe ,MUC ) - ( CS + CS ) ) - ( ( MUM * RRSe ) + Max( MUR,RRSe ) ) ) ),Min( Max( ( Min( DS ,RCSe ) + ( MUR * MUR ) ),Max( ( RMSe * RMSe ),( DS - RCSe ) ) ) ,( ( ( RMSe - DS ) - ( RCSe * DS ) ) / Min( ( MUC + MUC ) ,( MUR + MUR ) ) ) ) ),( Max( ( Min( ( MUR - MUC ) ,Min( RMSe ,MUM ) ) - Max( Max( MUR,MUC ),( RCSe + MUR ) ) ),( ( ( RMSe + MUM ) / ( RCSe / RRSe ) ) / Max( ( MUC / MUC ),( MUC * MUR ) ) ) ) / ( ( ( ( RCSe - MUM ) / Max( MUC,CS ) ) / ( Max( MUR,MLU ) - Min( RRSe ,MUR ) ) ) + ( Max( Min( RCSe ,MUC ),( MUC / MLU ) ) * ( ( DS - RMSe ) - Max( RRSe,MUM ) ) ) ) ) ) - ( ( Min( ( ( Max( DS,RMSe ) + ( RMSe - CS ) ) - ( ( RCSe - MUR ) + ( RRSe / DS ) ) ) ,( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) / ( ( MUM - MLU ) - ( MUM + RCSe ) ) ) ) - ( ( ( ( RMSe + MUC ) - ( MUR * MUM ) ) * ( Max( MLU,RRSe ) / Max( RCSe,RRSe ) ) ) - ( ( Max( CS,MUR ) - ( MUC * MUC ) ) / ( Max( MLU,DS ) * Max( RCSe,CS ) ) ) ) ) - ( ( Min( ( ( RCSe - MLU ) / ( RMSe + RMSe ) ) ,Min( ( DS + RCSe ) ,Min( RMSe ,MUM ) ) ) + Max( ( Min( RCSe ,MLU ) + Max( RRSe,RRSe ) ),Min( ( RCSe * DS ) ,Min( MUR ,MUM ) ) ) ) + ( ( ( ( RMSe / RMSe ) + ( MUR * MUC ) ) - ( Max( DS,RMSe ) - Max( DS,MUC ) ) ) - ( ( ( MUM * MUM ) + Min( RMSe ,RRSe ) ) / Max( Max( RRSe,MUC ),( MUR + DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe + MUC ) + ( RCSe - RRSe ) ) / Min( Max( CS,RMSe ) ,( RCSe - MUM ) ) ) / ( Max( Max( RMSe,DS ),( MLU - RMSe ) ) - ( ( MLU * DS ) * ( MUM + RMSe ) ) ) ),( ( ( ( RCSe / DS ) + ( MUR / MUC ) ) * Min( Max( MLU,RMSe ) ,( MUC - MUM ) ) ) / ( ( ( RCSe + MUR ) - ( CS - MUC ) ) - ( ( MLU - MLU ) - ( RMSe + RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) - Max( RCSe,DS ) ) + ( ( RMSe - RCSe ) / Max( CS,MLU ) ) ) + ( ( ( RMSe / DS ) + ( DS - MUR ) ) + ( ( MUR * DS ) / Max( RRSe,MUC ) ) ) ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUM,CS ) ) ,( Min( MUC ,RCSe ) + Max( MLU,MLU ) ) ) + ( Min( ( RMSe + MUM ) ,( MUR * RMSe ) ) * Max( ( MUR * DS ),( MUM * RMSe ) ) ) ) ) ),Min( ( Min( ( ( Min( RRSe ,MUC ) / ( MLU + MUC ) ) / ( ( DS / RRSe ) * ( RRSe - MLU ) ) ) ,Min( Max( ( RCSe / MUR ),( MLU - MUR ) ) ,( ( RCSe / RRSe ) + ( DS / CS ) ) ) ) * Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) ,Max( Min( ( RRSe / CS ) ,Min( RMSe ,MUR ) ),( Max( RCSe,MUR ) / Max( MUR,RMSe ) ) ) ) ) ,( Max( ( ( ( MUR - MUC ) + Max( RMSe,RCSe ) ) * ( ( RRSe / RRSe ) - Max( CS,RCSe ) ) ),Min( ( ( MUM - RRSe ) + ( MUC + MUC ) ) ,Max( Max( RCSe,MLU ),( RMSe - MLU ) ) ) ) - ( ( ( ( RRSe - MUM ) - ( RRSe * MUM ) ) + ( ( MUC + RMSe ) * ( MUM - RMSe ) ) ) * ( ( ( MLU * RRSe ) + ( RRSe + DS ) ) - ( ( CS + RCSe ) + ( MLU - MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( ( ( Min( FirstVNF_Mem_Server ,ACS ) + ( MRS * CRS ) ) + ( ( DDR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) * ( ( ( FirstVNF_RAM + Const ) + ( RRS * BR ) ) + Min( ( ACS * DDR ) ,Min( FirstVNF_CPU ,MRS ) ) ) ) * Min( ( Min( ( FirstVNF_RAM * Const ) ,( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / ( DDR / PN ) ) ) ,Min( ( ( BR * ACS ) - ( FirstVNF_CPU_Server * MDR ) ) ,( ( ACS + ACS ) + ( FirstVNF_RAM / ACS ) ) ) ) ) * ( ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR / ACS ) ),( ( PN / ARS ) + ( PN * FirstVNF_RAM_Server ) ) ) * ( Min( ( FirstVNF_CPU_Server - MDR ) ,Min( PN ,MRS ) ) * ( ( Const + FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,BR ) ) ) ) * ( ( ( Min( ACS ,FirstVNF_Mem ) / ( Const - DDR ) ) / ( ( CRS + FirstVNF_RAM ) + ( FirstVNF_CPU + AMS ) ) ) * ( Min( ( RRS - FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM_Server,MRS ) ) - ( ( AMS * CRS ) * Max( CRS,MRS ) ) ) ) ) ) + ( Min( Min( ( Max( ( MRS - RRS ),( BR - ARS ) ) * ( ( FirstVNF_CPU_Server + MRS ) * Max( CRS,FirstVNF_Mem ) ) ) ,( ( ( DDR * FirstVNF_CPU_Server ) + ( MRS * RRS ) ) * ( ( BR * PN ) / Max( ACS,ARS ) ) ) ) ,( ( ( ( RRS * FirstVNF_CPU_Server ) - ( RRS / MRS ) ) * ( ( AMS + ARS ) / ( MDR * AMS ) ) ) / ( Min( ( DDR * FirstVNF_Mem ) ,( Const * AMS ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) * Min( MDR ,DDR ) ) ) ) ) * ( Min( ( ( Min( CRS ,MDR ) / ( FirstVNF_RAM * RRS ) ) / Min( Max( Const,MDR ) ,Max( FirstVNF_Mem_Server,CRS ) ) ) ,( ( ( ARS + ACS ) / ( FirstVNF_Mem / RRS ) ) - ( Max( MRS,BR ) * ( FirstVNF_Mem - RRS ) ) ) ) * ( ( ( Max( FirstVNF_Mem_Server,CRS ) + ( RRS / MDR ) ) * ( ( FirstVNF_CPU_Server - ACS ) - ( CRS + FirstVNF_CPU ) ) ) + ( Max( ( CRS + FirstVNF_CPU_Server ),Min( BR ,RRS ) ) / ( ( CRS / ACS ) - ( DDR / FirstVNF_Mem ) ) ) ) ) ) ) ,( Min( ( Max( ( ( Min( PN ,ACS ) * ( CRS / FirstVNF_CPU ) ) - ( ( Const + FirstVNF_Mem ) - ( BR * ARS ) ) ),( ( ( FirstVNF_CPU / DDR ) + ( Const * Const ) ) * ( ( FirstVNF_RAM_Server + ACS ) / ( ACS * PN ) ) ) ) + ( ( ( ( ARS * Const ) + Min( ACS ,Const ) ) + Max( Min( Const ,BR ),( CRS + MRS ) ) ) - Max( Max( Min( AMS ,BR ),Max( FirstVNF_RAM,CRS ) ),Max( Max( FirstVNF_Mem,CRS ),Min( ARS ,Const ) ) ) ) ) ,( Min( Min( ( ( ACS - MDR ) * ( ACS - ARS ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( ARS + PN ) ) ) ,( ( ( FirstVNF_RAM - CRS ) + Max( FirstVNF_CPU_Server,MRS ) ) / Max( ( MDR + DDR ),( CRS + FirstVNF_RAM_Server ) ) ) ) + ( ( Max( Max( AMS,AMS ),( FirstVNF_CPU_Server + MDR ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server - BR ) ) ) / Max( ( ( CRS + Const ) / ( BR / MRS ) ),Min( ( MDR * DDR ) ,( Const + BR ) ) ) ) ) ) + ( ( ( ( ( ( BR * DDR ) * ( ACS * FirstVNF_CPU_Server ) ) + Min( Max( FirstVNF_RAM_Server,RRS ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) + Max( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ),( ( PN - CRS ) + ( FirstVNF_Mem - MRS ) ) ) ) / Max( Min( Max( ( FirstVNF_CPU_Server - ACS ),( MDR + MRS ) ) ,( ( ACS / DDR ) - ( FirstVNF_RAM_Server - PN ) ) ),( ( Max( Const,CRS ) * ( FirstVNF_Mem * RRS ) ) / ( ( AMS + DDR ) * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) ) + ( Min( ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - ARS ) ) - ( ( FirstVNF_Mem_Server + RRS ) * Max( MDR,FirstVNF_RAM ) ) ) ,Max( ( ( ARS + FirstVNF_RAM ) - Min( MRS ,RRS ) ),( Min( PN ,BR ) + Max( Const,CRS ) ) ) ) * ( ( Min( Max( MRS,PN ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( Max( CRS,FirstVNF_Mem_Server ) / Min( BR ,FirstVNF_Mem_Server ) ) ) - ( ( ( FirstVNF_RAM_Server + DDR ) / Min( BR ,ARS ) ) - ( ( AMS * FirstVNF_Mem ) * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( Min( Max( ( ( ( ( ( MUM * RCSe ) - ( CS / RCSe ) ) + ( ( MUR / RCSe ) / ( MUR + DS ) ) ) + ( Min( ( MUR + RCSe ) ,( MLU + MLU ) ) * ( Min( MLU ,MUR ) / ( MUC / DS ) ) ) ) * ( Max( ( ( RMSe - RCSe ) + ( CS - MLU ) ),Min( ( RRSe + MUR ) ,( MUM * DS ) ) ) + Min( Min( ( RCSe * DS ) ,Min( RRSe ,CS ) ) ,Max( ( CS / DS ),( RMSe / RCSe ) ) ) ) ),Min( Max( ( ( ( RRSe + RMSe ) - ( DS + RCSe ) ) * ( ( DS - MUM ) + ( MLU - MLU ) ) ),( Min( ( RRSe * MUR ) ,( MUC * MLU ) ) * ( ( MUM + RMSe ) - ( RRSe + MUC ) ) ) ) ,Max( ( Max( Max( MUR,RCSe ),( MUM / CS ) ) - ( Min( RCSe ,RMSe ) + ( MLU / MUC ) ) ),Max( Min( ( DS * CS ) ,( MUM / RRSe ) ),Max( ( RRSe * RMSe ),( DS / RMSe ) ) ) ) ) ) ,( Min( ( Max( ( ( RCSe - RMSe ) - ( CS + MUM ) ),Max( ( RRSe - MUM ),( MUR + MUR ) ) ) + ( ( ( RRSe + MLU ) + ( CS / CS ) ) - ( ( CS * MUR ) + ( RRSe + RRSe ) ) ) ) ,( ( Min( Max( MUM,MUM ) ,( MUC - CS ) ) / ( ( DS / DS ) - Min( MUC ,MUC ) ) ) + Min( ( Max( MUC,DS ) - Min( RMSe ,RRSe ) ) ,Max( ( MUR - MLU ),( RMSe / DS ) ) ) ) ) / ( ( ( Min( Min( CS ,CS ) ,( RMSe + RRSe ) ) - ( ( MUM - RRSe ) + Max( RCSe,MUC ) ) ) + Min( Max( ( MLU - CS ),( MLU + MUC ) ) ,( ( RCSe / DS ) / ( RCSe / CS ) ) ) ) * ( Max( ( ( RCSe * RMSe ) + Min( RRSe ,RCSe ) ),( ( MUC / RRSe ) / ( MUC - MUR ) ) ) * Min( ( ( MUM - MUM ) / ( DS - RCSe ) ) ,( Max( MUM,MLU ) * ( CS * RCSe ) ) ) ) ) ) ) / Min( Min( ( Min( Max( ( ( DS * CS ) + ( DS * RMSe ) ),( Min( CS ,MUC ) * ( MLU / RCSe ) ) ) ,( ( ( MUC + DS ) / Min( RMSe ,RMSe ) ) * Min( ( MLU - MUM ) ,( MLU + RMSe ) ) ) ) + ( Max( ( Min( MUC ,RMSe ) - ( MUR / DS ) ),Min( ( CS / MUM ) ,( MLU + MLU ) ) ) - ( Min( ( RMSe * MUR ) ,( MUM - DS ) ) / Min( ( RRSe / RRSe ) ,Min( RMSe ,RRSe ) ) ) ) ) ,Min( Min( ( ( ( RMSe * DS ) + ( RMSe / MUC ) ) * ( Max( DS,CS ) * Max( MUM,RRSe ) ) ) ,( ( ( MLU - RMSe ) - ( RCSe - MUM ) ) - ( ( MLU / DS ) / ( CS + MUR ) ) ) ) ,( Min( Min( ( MLU * MUM ) ,( CS + MLU ) ) ,( ( MLU - MLU ) / Max( MUM,MLU ) ) ) + ( ( ( MLU * MUC ) - ( RCSe * RCSe ) ) - ( Max( CS,MUC ) * Max( DS,MLU ) ) ) ) ) ) ,Max( ( Max( ( Max( Min( DS ,MUR ),( CS + RCSe ) ) / ( ( RMSe + MUR ) - ( RCSe - MUC ) ) ),( Min( ( RCSe - RCSe ) ,Max( MLU,RCSe ) ) * Max( Max( MUR,CS ),Min( RRSe ,RMSe ) ) ) ) - ( ( ( Max( MUC,MUM ) * Min( DS ,RRSe ) ) + Min( ( MUM - MLU ) ,( MUM * MUR ) ) ) + ( ( Min( RRSe ,RMSe ) - ( DS / MUR ) ) - ( ( DS - MUC ) + Max( DS,RMSe ) ) ) ) ),( Min( ( ( ( CS - RRSe ) + ( MUC - RCSe ) ) / ( Max( MLU,CS ) + Max( MLU,RRSe ) ) ) ,( ( Max( MLU,CS ) - ( RMSe + MUC ) ) / ( ( RRSe / MLU ) + Min( MUM ,MLU ) ) ) ) * Min( Max( ( ( CS + RCSe ) / ( CS - MLU ) ),( ( MUM / MUC ) - ( MUR - MUC ) ) ) ,( ( Max( MLU,MUM ) + ( MUM - DS ) ) * ( Max( MUM,RCSe ) / ( MUR / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "81": [{"determining": "( ( MRS * MRS ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( RMSe + MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) ) )", "choosing": "( ( ( ( MLU + MUM ) + MUR ) - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) - Max( DDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( MUC,MUC ) / ( MLU + CS ) ) / Max( MUC,MLU ) )", "obj1": 0.8715203426124197, "obj2": 0.06430832335853208}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( AMS ,FirstVNF_RAM_Server ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( DS ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) )", "choosing": "Min( Min( MLU ,DS ) ,( Min( DS ,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( DS + RMSe ) / ( MUM + MUC ) ) ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "( ( MUM - MUC ) / ( MUC * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( ( ( Max( MDR,FirstVNF_RAM_Server ) - Min( DDR ,FirstVNF_Mem ) ) * Min( ( BR - Const ) ,( DDR / AMS ) ) ) / ( ( ( FirstVNF_CPU_Server / MRS ) - ( ACS / AMS ) ) - ( Max( FirstVNF_RAM,ACS ) - ( PN + FirstVNF_RAM ) ) ) ) ,Max( ( ( ( FirstVNF_CPU_Server - PN ) - Max( FirstVNF_RAM,PN ) ) - ( ( FirstVNF_CPU / RRS ) / Min( FirstVNF_CPU_Server ,ARS ) ) ),( ( ( ACS - Const ) - ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) * ( Min( MDR ,FirstVNF_CPU_Server ) * ( FirstVNF_CPU * FirstVNF_Mem_Server ) ) ) ) ) * ( ( ( Max( ( MRS * BR ),( RRS / AMS ) ) / Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,Max( RRS,FirstVNF_RAM ) ) ) / ( ( Max( FirstVNF_CPU,BR ) + ( Const * MRS ) ) - ( ( RRS / PN ) / ( PN * AMS ) ) ) ) * Min( ( Min( Max( RRS,Const ) ,( FirstVNF_CPU / PN ) ) / ( ( CRS * BR ) * ( Const + MRS ) ) ) ,Min( Max( ( MRS * FirstVNF_RAM_Server ),( PN * DDR ) ) ,( Min( FirstVNF_CPU ,CRS ) + Min( CRS ,Const ) ) ) ) ) ) / ( ( ( ( ( ( FirstVNF_Mem_Server + MRS ) / Max( FirstVNF_RAM,BR ) ) * ( ( MRS + FirstVNF_CPU_Server ) - Min( MRS ,AMS ) ) ) + ( Max( ( AMS / RRS ),( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) + ( Max( Const,FirstVNF_Mem_Server ) + ( FirstVNF_RAM * CRS ) ) ) ) + ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) * Max( Max( FirstVNF_CPU_Server,ACS ),Max( ARS,CRS ) ) ) - Min( ( Min( FirstVNF_RAM ,Const ) + ( PN - AMS ) ) ,( ( FirstVNF_CPU / ACS ) + ( FirstVNF_CPU - FirstVNF_CPU ) ) ) ) ) * ( Max( ( ( ( PN * RRS ) / ( PN - ARS ) ) - ( ( ARS + AMS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ),( ( Min( AMS ,ACS ) - ( FirstVNF_RAM - FirstVNF_Mem ) ) * Min( ( FirstVNF_CPU + Const ) ,( Const / MRS ) ) ) ) / ( ( Min( ( AMS + ACS ) ,( AMS + RRS ) ) + ( ( BR - FirstVNF_CPU_Server ) * Min( FirstVNF_Mem ,BR ) ) ) + ( Max( ( MDR + FirstVNF_CPU_Server ),( ACS - AMS ) ) / ( Min( ARS ,RRS ) * ( FirstVNF_Mem - ARS ) ) ) ) ) ) ) * Max( Max( Min( ( ( Min( Min( FirstVNF_CPU ,RRS ) ,( FirstVNF_RAM / MDR ) ) - ( ( FirstVNF_CPU_Server - AMS ) + ( Const / ACS ) ) ) * Min( ( ( ACS / BR ) + ( FirstVNF_CPU * BR ) ) ,( ( FirstVNF_RAM + FirstVNF_RAM ) - ( FirstVNF_CPU / FirstVNF_CPU ) ) ) ) ,( ( ( Min( FirstVNF_RAM ,FirstVNF_RAM ) * ( FirstVNF_CPU_Server + MDR ) ) * ( ( FirstVNF_CPU * AMS ) + Max( BR,FirstVNF_Mem ) ) ) - ( Max( ( MRS - FirstVNF_Mem ),Min( FirstVNF_Mem ,CRS ) ) * ( ( MRS + FirstVNF_CPU ) * Max( MRS,PN ) ) ) ) ),Max( Max( Min( ( ( CRS - MDR ) / ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_CPU_Server - MRS ),( MDR + CRS ) ) ),Min( ( ( FirstVNF_RAM + MDR ) * ( FirstVNF_RAM_Server / MDR ) ) ,( ( DDR * FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,MRS ) ) ) ),Max( Max( ( ( Const - DDR ) + ( FirstVNF_CPU / FirstVNF_CPU_Server ) ),( Min( PN ,FirstVNF_RAM ) + ( FirstVNF_Mem / ARS ) ) ),( Max( ( ACS - MRS ),Min( ACS ,BR ) ) - Max( Max( RRS,FirstVNF_CPU ),( DDR * DDR ) ) ) ) ) ),Max( Max( ( ( ( ( CRS / MRS ) * ( AMS / AMS ) ) + ( ( ARS / RRS ) / ( RRS - ARS ) ) ) * ( Min( ( BR - DDR ) ,( ARS / FirstVNF_RAM_Server ) ) * Min( ( ACS + ARS ) ,( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) ),Min( ( Max( ( DDR + FirstVNF_CPU ),( ARS - ARS ) ) - Max( Min( FirstVNF_CPU ,CRS ),Min( MDR ,RRS ) ) ) ,( Max( ( AMS / FirstVNF_RAM ),( Const * DDR ) ) * ( ( FirstVNF_Mem + ACS ) + ( FirstVNF_Mem * DDR ) ) ) ) ),Max( Max( ( ( ( CRS - Const ) + ( DDR - Const ) ) / ( ( PN - ACS ) / ( BR * ARS ) ) ),( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( RRS + DDR ) ) / Min( Min( FirstVNF_CPU_Server ,DDR ) ,( ARS + BR ) ) ) ),( ( ( ( ARS - PN ) + ( FirstVNF_RAM + DDR ) ) + ( ( FirstVNF_Mem_Server + MRS ) + ( FirstVNF_Mem_Server * ACS ) ) ) * ( ( ( FirstVNF_Mem + RRS ) + Min( FirstVNF_CPU ,Const ) ) - ( ( RRS + ACS ) / Max( PN,DDR ) ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( ( ( ( RMSe + CS ) + Max( RRSe,MUR ) ) * ( ( MLU * DS ) * ( MUC + CS ) ) ) / ( ( Min( RCSe ,MUC ) - ( CS + CS ) ) - ( ( MUM * RRSe ) + Max( MUR,RRSe ) ) ) ),Min( Max( ( Min( DS ,RCSe ) + ( MUR * MUR ) ),Max( ( RMSe * RMSe ),( DS - RCSe ) ) ) ,( ( ( RMSe - DS ) - ( RCSe * DS ) ) / Min( ( MUC + MUC ) ,( MUR + MUR ) ) ) ) ),( Max( ( Min( ( MUR - MUC ) ,Min( RMSe ,MUM ) ) - Max( Max( MUR,MUC ),( RCSe + MUR ) ) ),( ( ( RMSe + MUM ) / ( RCSe / RRSe ) ) / Max( ( MUC / MUC ),( MUC * MUR ) ) ) ) / ( ( ( ( RCSe - MUM ) / Max( MUC,CS ) ) / ( Max( MUR,MLU ) - Min( RRSe ,MUR ) ) ) + ( Max( Min( RCSe ,MUC ),( MUC / MLU ) ) * ( ( DS - RMSe ) - Max( RRSe,MUM ) ) ) ) ) ) - ( ( Min( ( ( Max( DS,RMSe ) + ( RMSe - CS ) ) - ( ( RCSe - MUR ) + ( RRSe / DS ) ) ) ,( ( Min( RRSe ,MUC ) + ( MLU * CS ) ) / ( ( MUM - MLU ) - ( MUM + RCSe ) ) ) ) - ( ( ( ( RMSe + MUC ) - ( MUR * MUM ) ) * ( Max( MLU,RRSe ) / Max( RCSe,RRSe ) ) ) - ( ( Max( CS,MUR ) - ( MUC * MUC ) ) / ( Max( MLU,DS ) * Max( RCSe,CS ) ) ) ) ) - ( ( Min( ( ( RCSe - MLU ) / ( RMSe + RMSe ) ) ,Min( ( DS + RCSe ) ,Min( RMSe ,MUM ) ) ) + Max( ( Min( RCSe ,MLU ) + Max( RRSe,RRSe ) ),Min( ( RCSe * DS ) ,Min( MUR ,MUM ) ) ) ) + ( ( ( ( RMSe / RMSe ) + ( MUR * MUC ) ) - ( Max( DS,RMSe ) - Max( DS,MUC ) ) ) - ( ( ( MUM * MUM ) + Min( RMSe ,RRSe ) ) / Max( Max( RRSe,MUC ),( MUR + DS ) ) ) ) ) ) ) ,Max( ( Max( ( ( ( ( RMSe + MUC ) + ( RCSe - RRSe ) ) / Min( Max( CS,RMSe ) ,( RCSe - MUM ) ) ) / ( Max( Max( RMSe,DS ),( MLU - RMSe ) ) - ( ( MLU * DS ) * ( MUM + RMSe ) ) ) ),( ( ( ( RCSe / DS ) + ( MUR / MUC ) ) * Min( Max( MLU,RMSe ) ,( MUC - MUM ) ) ) / ( ( ( RCSe + MUR ) - ( CS - MUC ) ) - ( ( MLU - MLU ) - ( RMSe + RRSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) - Max( RCSe,DS ) ) + ( ( RMSe - RCSe ) / Max( CS,MLU ) ) ) + ( ( ( RMSe / DS ) + ( DS - MUR ) ) + ( ( MUR * DS ) / Max( RRSe,MUC ) ) ) ) + ( Min( Min( ( RRSe + MLU ) ,Max( MUM,CS ) ) ,( Min( MUC ,RCSe ) + Max( MLU,MLU ) ) ) + ( Min( ( RMSe + MUM ) ,( MUR * RMSe ) ) * Max( ( MUR * DS ),( MUM * RMSe ) ) ) ) ) ),Min( ( Min( ( ( Min( RRSe ,MUC ) / ( MLU + MUC ) ) / ( ( DS / RRSe ) * ( RRSe - MLU ) ) ) ,Min( Max( ( RCSe / MUR ),( MLU - MUR ) ) ,( ( RCSe / RRSe ) + ( DS / CS ) ) ) ) * Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) * ( ( MUC + RCSe ) - Min( DS ,MUR ) ) ) ,Max( Min( ( RRSe / CS ) ,Min( RMSe ,MUR ) ),( Max( RCSe,MUR ) / Max( MUR,RMSe ) ) ) ) ) ,( Max( ( ( ( MUR - MUC ) + Max( RMSe,RCSe ) ) * ( ( RRSe / RRSe ) - Max( CS,RCSe ) ) ),Min( ( ( MUM - RRSe ) + ( MUC + MUC ) ) ,Max( Max( RCSe,MLU ),( RMSe - MLU ) ) ) ) - ( ( ( ( RRSe - MUM ) - ( RRSe * MUM ) ) + ( ( MUC + RMSe ) * ( MUM - RMSe ) ) ) * ( ( ( MLU * RRSe ) + ( RRSe + DS ) ) - ( ( CS + RCSe ) + ( MLU - MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "82": [{"determining": "( ( CRS + MDR ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( CS - DS ) / ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MRS ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( RMSe + MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) - Max( DDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( MUC,MUC ) / ( MLU + CS ) ) / Max( MUC,MLU ) )", "obj1": 0.8715203426124197, "obj2": 0.06430832335853208}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( AMS ,FirstVNF_RAM_Server ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( DS ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) ) - Max( DDR,MRS ) )", "choosing": "( ( DS + ( DS + MUC ) ) / ( MUC * MLU ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) ) )", "choosing": "( ( ( ( MLU + MUM ) + MUR ) - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) )", "choosing": "Min( Min( MLU ,DS ) ,( Min( DS ,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( PN + FirstVNF_RAM ) )", "choosing": "Min( ( MUM - ( ( DS + RMSe ) / ( MUM + MUC ) ) ) ,( DS - RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "83": [{"determining": "( Min( DDR ,( DDR * FirstVNF_RAM_Server ) ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( ( RMSe / CS ) * MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MDR ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( ( CS - DS ) / ( MUR + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( FirstVNF_RAM_Server - ARS ) - Min( Min( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ,( AMS - BR ) ) ,PN ) ) ) - ARS ) - Min( FirstVNF_RAM_Server ,PN ) )", "choosing": "Min( ( ( Min( DS ,MUR ) * ( DS - MUR ) ) / RMSe ) ,( RMSe / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.25839561334553335}, {"determining": "( ( ( FirstVNF_Mem_Server - Max( CRS,MDR ) ) * Const ) - Min( MRS ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( ( Max( MUM,RCSe ) / ( MUR / RCSe ) ) + RMSe ) )", "obj1": 0.7708779443254818, "obj2": 0.11861009307690201}, {"determining": "( Min( BR ,PN ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( Max( MUC,( RMSe / MLU ) ) ,( MUR * RCSe ) )", "obj1": 0.7537473233404711, "obj2": 0.154797561057061}, {"determining": "( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_CPU_Server + Max( ( DDR / PN ),Max( Const,MDR ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( RMSe / ( MLU * MUR ) ) )", "obj1": 0.8351177730192719, "obj2": 0.08308584008779876}, {"determining": "( Max( RRS,FirstVNF_Mem ) - ( MDR + MDR ) )", "choosing": "( ( DS * MUM ) / MUC )", "obj1": 0.8201284796573876, "obj2": 0.10825162465129223}, {"determining": "( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) - MDR )", "choosing": "( Min( MUR ,RCSe ) / Max( MUC,Min( MUR ,RCSe ) ) )", "obj1": 0.728051391862955, "obj2": 0.20720164175164227}, {"determining": "( ( FirstVNF_Mem_Server / DDR ) - ( Const + FirstVNF_CPU_Server ) )", "choosing": "( Min( MUC ,RMSe ) / Max( MUC,RCSe ) )", "obj1": 0.7301927194860813, "obj2": 0.17727369258349285}, {"determining": "Min( Min( ( Min( Max( ( DDR / PN ),Max( Const,MDR ) ) ,PN ) - ( MRS / PN ) ) ,( RRS + MRS ) ) ,( BR / DDR ) )", "choosing": "( ( MLU + MLU ) * ( CS - MUM ) )", "obj1": 0.8865096359743041, "obj2": 0.05613088325262002}, {"determining": "( ( FirstVNF_Mem_Server + ( Max( FirstVNF_Mem,DDR ) - ( Const + FirstVNF_CPU_Server ) ) ) - MDR )", "choosing": "( Min( MUR ,MUC ) / Max( MUC,RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2511359443257897}, {"determining": "( ( ( FirstVNF_RAM_Server + BR ) - Max( DDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( ( Max( MUC,MUC ) / ( MLU + CS ) ) / Max( MUC,MLU ) )", "obj1": 0.8715203426124197, "obj2": 0.06430832335853208}, {"determining": "( ( ( FirstVNF_Mem / ( ( FirstVNF_Mem / FirstVNF_CPU ) * FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( CS + ( CS + RRSe ) ) / DS )", "obj1": 0.7109207708779444, "obj2": 0.21461409911135576}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( DS - Max( CS,Min( MLU ,MUC ) ) ) )", "obj1": 0.8265524625267666, "obj2": 0.10472757164663171}, {"determining": "( ( FirstVNF_RAM_Server - ( Min( AMS ,MDR ) - ( FirstVNF_CPU_Server - DDR ) ) ) - Max( FirstVNF_RAM,FirstVNF_Mem ) )", "choosing": "( Max( CS,MUC ) / ( RRSe * MUC ) )", "obj1": 0.9014989293361885, "obj2": 0.04744375062061156}, {"determining": "( ( FirstVNF_RAM_Server - DDR ) - Max( DDR,PN ) )", "choosing": "( ( MUM + CS ) + ( MUM / CS ) )", "obj1": 0.9207708779443254, "obj2": 0.03949680738340868}, {"determining": "Min( Min( ( Min( BR ,FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) ,ACS ) ,( MDR * Const ) )", "choosing": "( ( MUC * DS ) * ( MUR * ( DS / RRSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.1704898962864324}, {"determining": "( ( FirstVNF_RAM_Server - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + FirstVNF_Mem_Server ) * Min( ( FirstVNF_RAM_Server + PN ) ,DDR ) ) ) - Min( ( Min( FirstVNF_RAM ,MDR ) - MDR ) ,PN ) )", "choosing": "Min( MUR ,( ( MUC + ( RMSe / MLU ) ) + ( ( RRSe + RCSe ) / Max( RCSe,MLU ) ) ) )", "obj1": 0.8586723768736617, "obj2": 0.07032088630304896}, {"determining": "( ( BR * ( ( ( FirstVNF_RAM / MDR ) / MDR ) - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) ) )", "obj1": 0.702355460385439, "obj2": 0.22118267523920018}, {"determining": "( Min( BR ,FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MLU / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.7002141327623126, "obj2": 0.22688642518408814}, {"determining": "( ( ( PN / CRS ) - FirstVNF_RAM ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MUC * MUC ) - ( RRSe + ( MLU * RCSe ) ) )", "obj1": 0.9593147751605996, "obj2": 0.019761670915157906}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( RMSe / RCSe ) / Max( MUM,MUC ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( ( ( ( AMS / MDR ) - Max( FirstVNF_Mem,( ( ( Min( FirstVNF_Mem ,DDR ) - ( MRS * MDR ) ) * ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) - ( RRS / FirstVNF_CPU ) ) * ( Max( FirstVNF_CPU,MRS ) * Max( FirstVNF_RAM_Server,PN ) ) ) ) ) ) / ( ( FirstVNF_RAM * CRS ) / ( Const - MRS ) ) ) * Min( ( ( FirstVNF_RAM + AMS ) * Max( RRS,ARS ) ) ,Max( Min( DDR ,ACS ),Max( ARS,MDR ) ) ) )", "choosing": "( ( ( RRSe + MUR ) / RCSe ) - ( MUM - RCSe ) )", "obj1": 0.9721627408993576, "obj2": 0.013757444948923272}, {"determining": "( ( BR * ( BR * FirstVNF_Mem_Server ) ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / ( ( MUC * RCSe ) / ( MUC - DS ) ) )", "obj1": 0.9336188436830836, "obj2": 0.03289467632857742}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR + ( ( RMSe * RRSe ) / ( RCSe - DS ) ) ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( Max( ( PN / CRS ),Max( Const,MRS ) ) - ( FirstVNF_Mem / BR ) )", "choosing": "( ( MLU * RCSe ) - ( RRSe + RCSe ) )", "obj1": 0.9486081370449678, "obj2": 0.024908110107664055}, {"determining": "( ( BR / FirstVNF_Mem ) - ( CRS - RRS ) )", "choosing": "( ( MUC - ( MLU / MUC ) ) / ( RCSe * CS ) )", "obj1": 0.69593147751606, "obj2": 0.23652780794811148}, {"determining": "( Min( ( ( ( ( DDR / ACS ) * Max( Const,BR ) ) / ACS ) * Max( Const,BR ) ) ,CRS ) - ( MRS / ARS ) )", "choosing": "Min( ( CS * RCSe ) ,CS )", "obj1": 0.9443254817987152, "obj2": 0.029895180004889606}, {"determining": "( ( Max( FirstVNF_RAM_Server,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) )", "choosing": "( Max( MUM,( RRSe / MLU ) ) / ( RRSe / MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( Min( AMS ,FirstVNF_RAM_Server ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( DS ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.854389721627409, "obj2": 0.07205268647118859}, {"determining": "( ( BR * BR ) - ( CRS * FirstVNF_Mem_Server ) )", "choosing": "( ( MUC * RCSe ) / MUC )", "obj1": 0.9122055674518201, "obj2": 0.04402603448554429}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( DDR,MRS ) ) - Max( DDR,MRS ) )", "choosing": "( ( DS + ( DS + MUC ) ) / ( MUC * MLU ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( ( ( ( ( Max( FirstVNF_RAM_Server,PN ) - ( MRS - ACS ) ) * ( ( Const + MDR ) / Max( MDR,FirstVNF_CPU_Server ) ) ) / ( ( ( Const / ARS ) - ( BR * RRS ) ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_CPU + CRS ) ) ) ) + Max( Min( ( ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_Mem ) * ( FirstVNF_RAM - CRS ) ) ),Max( ( ( FirstVNF_CPU_Server + ARS ) - ( Const + CRS ) ),( Min( MRS ,FirstVNF_CPU ) - Max( ACS,Const ) ) ) ) ) / Min( Min( ( Min( Min( FirstVNF_Mem ,MRS ) ,( ARS * RRS ) ) * ( Max( CRS,FirstVNF_RAM ) - ( FirstVNF_RAM / Const ) ) ) ,( ( ( FirstVNF_RAM / Const ) / ( ACS / PN ) ) + ( Max( Const,DDR ) + Max( ACS,FirstVNF_Mem ) ) ) ) ,( Max( ( ( RRS - MRS ) * Min( FirstVNF_Mem ,AMS ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),( DDR + FirstVNF_CPU_Server ) ) ) * ( Max( Max( CRS,BR ),Max( BR,ARS ) ) * ( ( AMS * FirstVNF_RAM_Server ) - ( DDR / MDR ) ) ) ) ) ) + ( Min( ( ( Max( ( FirstVNF_Mem_Server / ARS ),Max( ARS,FirstVNF_RAM_Server ) ) + ( ( PN * FirstVNF_CPU_Server ) - Min( AMS ,RRS ) ) ) + ( ( ( Const / CRS ) * ( DDR / RRS ) ) - ( ( Const + FirstVNF_RAM ) - ( ACS - ACS ) ) ) ) ,( ( ( ( BR * RRS ) - Min( MRS ,FirstVNF_Mem_Server ) ) + ( ( FirstVNF_CPU_Server + CRS ) + ( FirstVNF_CPU_Server - MRS ) ) ) * ( ( ( ARS * MRS ) - ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU_Server / CRS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) ) * ( ( ( Max( ( MDR - MDR ),( Const - ACS ) ) - ( Max( ARS,MRS ) * Max( FirstVNF_RAM,MRS ) ) ) * Max( ( ( AMS * ARS ) + ( MRS / ARS ) ),( Max( FirstVNF_Mem,Const ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) ) * ( ( ( Min( AMS ,Const ) + Max( FirstVNF_CPU_Server,RRS ) ) * Max( Max( CRS,FirstVNF_RAM_Server ),( FirstVNF_Mem + FirstVNF_Mem_Server ) ) ) * ( ( ( Const + DDR ) - ( CRS + FirstVNF_CPU ) ) + Max( ( ARS + FirstVNF_Mem_Server ),Max( MDR,BR ) ) ) ) ) ) ) ,( ( ( ( ( ( Min( Const ,BR ) / ( ARS + FirstVNF_RAM ) ) - ( Min( ARS ,MDR ) - ( FirstVNF_CPU + DDR ) ) ) + ( Min( ( ACS + FirstVNF_Mem_Server ) ,( CRS * PN ) ) - ( ( Const - Const ) - Max( FirstVNF_Mem_Server,BR ) ) ) ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_RAM_Server ) - ( FirstVNF_RAM + RRS ) ) - ( ( BR - MRS ) * Min( MDR ,CRS ) ) ) / ( Min( Max( FirstVNF_Mem,Const ) ,( CRS * ARS ) ) + Min( ( CRS - FirstVNF_CPU ) ,Min( CRS ,ARS ) ) ) ) ) + ( ( Min( ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( FirstVNF_Mem_Server * BR ) ) ,( Min( RRS ,FirstVNF_RAM ) - Min( ACS ,RRS ) ) ) - ( ( ( CRS - PN ) * Max( FirstVNF_CPU,MRS ) ) - ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) - ( MRS + PN ) ) ) ) * ( ( ( Max( Const,BR ) * Min( ARS ,FirstVNF_RAM_Server ) ) + ( Max( FirstVNF_RAM,FirstVNF_Mem ) - ( MRS + ARS ) ) ) * Max( Max( ( Const * FirstVNF_CPU ),( RRS + CRS ) ),( ( ACS + MRS ) / ( FirstVNF_CPU - Const ) ) ) ) ) ) * ( ( ( ( ( ( FirstVNF_Mem * PN ) * ( PN / FirstVNF_Mem ) ) - ( ( ARS + CRS ) - ( CRS + PN ) ) ) + Min( Min( Min( RRS ,MDR ) ,Min( FirstVNF_Mem_Server ,PN ) ) ,( ( CRS / FirstVNF_RAM_Server ) * ( MDR / FirstVNF_Mem_Server ) ) ) ) * ( Max( Max( ( ARS * BR ),( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( Const - MDR ) - ( PN + FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM / ARS ) + Min( DDR ,FirstVNF_Mem_Server ) ) + Min( ( Const + FirstVNF_Mem ) ,( AMS / PN ) ) ) ) ) + ( Min( ( Max( ( BR - BR ),Min( FirstVNF_Mem_Server ,MDR ) ) / ( ( BR + FirstVNF_RAM ) / ( MRS / MDR ) ) ) ,( ( ( RRS - ACS ) * Min( DDR ,FirstVNF_Mem ) ) / ( ( DDR / CRS ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) + Max( ( ( ( MDR - Const ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Min( CRS ,PN ) ) ),( ( ( MDR * CRS ) * Min( CRS ,ACS ) ) / Min( ( MRS * FirstVNF_CPU ) ,Max( RRS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( ( ( ( Max( ( ( ( MUM * MLU ) / ( RMSe * MUR ) ) / ( Max( MLU,MLU ) / ( MUC * MLU ) ) ),Max( Max( ( MUC - MLU ),( MLU * MLU ) ),( ( MUM / MUC ) - ( MUC - RRSe ) ) ) ) / ( ( ( ( MUR + DS ) * ( MUM + MUR ) ) + ( ( CS * DS ) * ( MLU + MUM ) ) ) + ( ( ( RMSe - RCSe ) * Max( RMSe,MUM ) ) - Max( ( RRSe + CS ),Min( DS ,RRSe ) ) ) ) ) + Min( ( Min( ( Max( CS,RMSe ) - ( MUR / MUR ) ) ,( Min( MUM ,RCSe ) / ( MLU / RRSe ) ) ) + Max( ( ( RCSe + DS ) - ( CS - RCSe ) ),( ( DS + MUM ) * ( RRSe + RMSe ) ) ) ) ,( ( Max( ( RMSe - RRSe ),( MUM * RMSe ) ) / Max( ( DS * RCSe ),( RMSe / CS ) ) ) / Max( ( ( DS / MUM ) - Min( RRSe ,MUC ) ),( ( MUC - CS ) * Max( RRSe,MUR ) ) ) ) ) ) + ( ( ( Max( Max( Max( RCSe,RRSe ),( MUR / MLU ) ),( ( DS + MUC ) * ( RCSe / DS ) ) ) / ( Min( ( RCSe - MUM ) ,Min( RRSe ,RRSe ) ) * Max( ( RRSe / DS ),Max( RMSe,RCSe ) ) ) ) + ( ( ( Max( MLU,RMSe ) + ( MLU - RRSe ) ) * ( Max( RMSe,DS ) + Max( MUC,RCSe ) ) ) + ( ( ( CS / RMSe ) * ( MUR / DS ) ) / Max( Min( CS ,RCSe ),( MLU - DS ) ) ) ) ) + Max( ( ( ( ( RMSe + RCSe ) / Min( DS ,MUC ) ) / ( Min( MUM ,DS ) / Min( RRSe ,RCSe ) ) ) - ( ( Min( RRSe ,MLU ) - ( RMSe - CS ) ) - ( Max( MUC,CS ) * ( MUC / RMSe ) ) ) ),Min( ( Min( ( RRSe + MUC ) ,Min( DS ,RMSe ) ) - ( Max( RCSe,RCSe ) + ( CS + MLU ) ) ) ,Min( Min( Min( MLU ,RCSe ) ,Min( RMSe ,MUR ) ) ,( ( RCSe / MUC ) / Min( MUR ,CS ) ) ) ) ) ) ) / ( ( ( Min( ( ( Min( MUC ,MUC ) * ( DS + MUC ) ) - ( Max( CS,RMSe ) / ( DS * DS ) ) ) ,( ( ( MLU - MLU ) - ( MUM / DS ) ) + ( ( MUC + CS ) + Min( CS ,DS ) ) ) ) + ( ( ( Min( RRSe ,MUR ) * ( RMSe / MUR ) ) - ( ( CS + MLU ) + ( MUM + MUC ) ) ) * ( ( ( RMSe / RCSe ) / ( MLU * MUR ) ) + Max( Max( DS,CS ),Min( RMSe ,RMSe ) ) ) ) ) * ( ( ( Max( Max( MUC,RCSe ),Min( DS ,RRSe ) ) - Min( ( CS - MUR ) ,( MUR * MUM ) ) ) + ( ( ( MUM - MUC ) * ( MLU / RMSe ) ) + ( Min( DS ,RRSe ) - ( RCSe * MUC ) ) ) ) - ( Min( Max( Min( RRSe ,RRSe ),( CS + RMSe ) ) ,( ( RRSe + RMSe ) / ( CS + MUR ) ) ) + ( ( ( RCSe * MUM ) + Max( MUC,MUM ) ) * Min( ( RCSe - RMSe ) ,( MUM - MUC ) ) ) ) ) ) + ( ( ( Min( ( ( DS / CS ) * Min( RRSe ,CS ) ) ,( ( MUR / MUR ) + Max( RCSe,CS ) ) ) * Max( Min( Max( MUR,RMSe ) ,( MUM / MUM ) ),( ( RRSe - MUR ) / ( CS / MUM ) ) ) ) * ( Max( ( ( DS * MUC ) * ( MUC * MUC ) ),( ( MLU * DS ) - ( CS - DS ) ) ) - ( ( Max( CS,MLU ) - ( DS - RMSe ) ) + Max( Max( MLU,MUR ),( MUC / MLU ) ) ) ) ) - ( Max( ( Max( Max( MUC,MUC ),( RCSe - MUC ) ) + ( ( RCSe * DS ) - Max( DS,RCSe ) ) ),( ( Max( MUR,RRSe ) - ( MUM / DS ) ) - ( ( MLU / MUM ) - ( CS - MLU ) ) ) ) / Min( ( Min( ( MLU * MUC ) ,( CS * DS ) ) / Min( ( MLU - MUC ) ,Max( CS,MUR ) ) ) ,( Max( ( RRSe - MUM ),Min( MUC ,MUC ) ) - Max( Max( MUC,MUR ),( CS * DS ) ) ) ) ) ) ) )", "obj1": 0.9357601713062098, "obj2": 0.032547175328584164}, {"determining": "( Min( Max( ( ( ( Min( ( FirstVNF_CPU - FirstVNF_CPU ) ,Min( Const ,ACS ) ) / ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) * Max( PN,FirstVNF_Mem_Server ) ) ) / ( Max( ( ARS + AMS ),Max( DDR,FirstVNF_CPU_Server ) ) - Min( Max( MDR,ARS ) ,( ACS + BR ) ) ) ) - ( Min( ( ( FirstVNF_RAM * AMS ) * Min( FirstVNF_CPU ,DDR ) ) ,( ( MDR * MDR ) + ( ARS - FirstVNF_Mem_Server ) ) ) / ( ( ( RRS / FirstVNF_CPU ) * ( RRS + MDR ) ) - ( ( FirstVNF_RAM_Server * AMS ) / ( ACS / MRS ) ) ) ) ),Max( ( ( ( Min( AMS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) + ( ( FirstVNF_Mem + PN ) + Max( BR,AMS ) ) ) - Min( ( Max( Const,CRS ) / Max( ARS,FirstVNF_CPU_Server ) ) ,Max( ( ARS - FirstVNF_CPU ),( ARS * DDR ) ) ) ),Min( Min( Max( ( ACS + AMS ),( PN / FirstVNF_CPU ) ) ,( ( MRS + ACS ) + Max( FirstVNF_RAM_Server,DDR ) ) ) ,( ( ( DDR - FirstVNF_Mem_Server ) - ( FirstVNF_RAM / MRS ) ) + Max( ( FirstVNF_Mem_Server - CRS ),( MDR * MDR ) ) ) ) ) ) ,( ( ( ( ( Max( BR,FirstVNF_Mem ) - ( FirstVNF_RAM_Server * AMS ) ) / ( ( ARS * AMS ) / ( FirstVNF_CPU_Server * PN ) ) ) - Max( ( Max( RRS,FirstVNF_RAM_Server ) + ( MDR / AMS ) ),( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + ( MRS * RRS ) ) ) ) - ( ( ( Max( DDR,RRS ) + ( RRS - ARS ) ) / ( ( RRS - MRS ) + ( ACS - MRS ) ) ) - ( ( ( DDR * FirstVNF_RAM_Server ) * ( Const - AMS ) ) * ( ( PN - FirstVNF_RAM ) - Min( FirstVNF_CPU ,DDR ) ) ) ) ) * ( Min( ( ( Min( BR ,FirstVNF_CPU_Server ) - ( Const / MDR ) ) - Min( Min( ACS ,FirstVNF_CPU_Server ) ,Max( RRS,RRS ) ) ) ,Max( ( ( CRS / ARS ) + Min( PN ,RRS ) ),( ( FirstVNF_CPU - ARS ) - ( ACS - FirstVNF_RAM ) ) ) ) * ( Min( Max( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ),( FirstVNF_Mem - MDR ) ) ,( ( FirstVNF_Mem_Server / FirstVNF_RAM ) * ( MDR + FirstVNF_Mem_Server ) ) ) + Max( ( ( RRS / FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ),( ( CRS + ACS ) - ( RRS - ACS ) ) ) ) ) ) ) - ( ( ( ( ( Min( ( ARS + ACS ) ,( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_RAM ,CRS ) - ( FirstVNF_CPU_Server + PN ) ) ) + ( ( ( MDR - ARS ) / ( FirstVNF_RAM_Server + ACS ) ) + Min( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,ARS ) ) ) ) - ( ( ( Min( ARS ,FirstVNF_Mem ) - ( BR / FirstVNF_Mem ) ) - ( ( FirstVNF_CPU / MDR ) * Max( MDR,FirstVNF_RAM_Server ) ) ) * ( ( ( Const / BR ) / ( FirstVNF_RAM * AMS ) ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) + ( FirstVNF_CPU - FirstVNF_Mem ) ) ) ) ) / ( ( ( ( Min( MDR ,FirstVNF_RAM_Server ) / Min( AMS ,Const ) ) - ( ( RRS + DDR ) / ( PN + Const ) ) ) - Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) - ( Const + AMS ) ) ,( ( AMS / PN ) / ( AMS * CRS ) ) ) ) + ( Max( Min( ( FirstVNF_Mem * MDR ) ,( DDR - FirstVNF_Mem_Server ) ),Max( Max( FirstVNF_Mem,DDR ),( FirstVNF_CPU_Server * RRS ) ) ) - ( Min( ( AMS - FirstVNF_Mem ) ,( FirstVNF_CPU * RRS ) ) / ( ( FirstVNF_Mem_Server * MRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ) ) - Min( ( ( ( ( ( CRS - FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + ( Max( AMS,FirstVNF_CPU_Server ) + ( ACS / RRS ) ) ) + ( ( ( DDR + PN ) / Max( FirstVNF_CPU,FirstVNF_CPU_Server ) ) + Max( ( PN / MRS ),( MRS - ARS ) ) ) ) / ( Max( ( Min( FirstVNF_CPU_Server ,CRS ) + ( FirstVNF_RAM * Const ) ),( Min( MDR ,CRS ) * ( FirstVNF_RAM_Server / RRS ) ) ) * Max( Max( ( FirstVNF_Mem_Server / ARS ),( DDR * FirstVNF_CPU ) ),Max( ( FirstVNF_CPU + AMS ),Max( FirstVNF_RAM_Server,RRS ) ) ) ) ) ,( Max( ( Max( ( MDR / FirstVNF_Mem_Server ),( FirstVNF_RAM_Server + RRS ) ) + Min( ( FirstVNF_RAM + ARS ) ,( ARS + FirstVNF_RAM ) ) ),Min( ( ( FirstVNF_CPU_Server - PN ) + ( AMS - DDR ) ) ,( ( Const - FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) * ( ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,PN ) ) * ( ( RRS - AMS ) + Max( Const,PN ) ) ) * ( Max( Max( FirstVNF_CPU,FirstVNF_RAM_Server ),Max( CRS,Const ) ) + ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Min( ( MUC * Min( DS ,Min( CS ,( Max( MLU,RCSe ) - Min( ( RMSe - DS ) ,Max( MUM,MUM ) ) ) ) ) ) ,( ( CS - Max( MLU,MUM ) ) - RMSe ) )", "obj1": 0.9957173447537473, "obj2": 0.0021024440491402316}, {"determining": "Min( Min( ( BR / DDR ) ,( AMS - Max( ( RRS - FirstVNF_RAM ),( FirstVNF_Mem + MDR ) ) ) ) ,( FirstVNF_RAM / Const ) )", "choosing": "Min( ( RMSe / ( Min( MUR ,MLU ) * ( MUM + MUC ) ) ) ,Max( RMSe,MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "( ( DS * MLU ) / ( ( DS * MLU ) / ( DS - RRSe ) ) )", "obj1": 0.8222698072805139, "obj2": 0.10671969533094348}, {"determining": "( ( FirstVNF_Mem_Server - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,MDR ) ) ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MLU - MUR ) ,( DS * MUM ) )", "obj1": 0.9828693790149893, "obj2": 0.007489654153281363}, {"determining": "( Min( CRS ,DDR ) - ( ( Min( FirstVNF_Mem_Server ,DDR ) + ( FirstVNF_RAM - BR ) ) * CRS ) )", "choosing": "( Max( RCSe,Min( MLU ,CS ) ) / ( MLU + MUM ) )", "obj1": 0.987152034261242, "obj2": 0.0062188766693830715}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_Mem ) - ( ( ( FirstVNF_Mem_Server - ARS ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) )", "choosing": "Min( Min( RMSe ,MUM ) ,MLU )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( Max( ACS,MDR ) - ( ( ( FirstVNF_RAM + FirstVNF_CPU ) + MDR ) - ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( ( MUC * MUR ) ,( RMSe + RCSe ) ) / ( MUC - DS ) )", "obj1": 0.974304068522484, "obj2": 0.012437753338766143}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU ) / MDR ) / MDR ) - ( FirstVNF_RAM_Server + ACS ) )", "choosing": "Min( ( DS * MUC ) ,RRSe )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( BR * FirstVNF_Mem ) - ( CRS / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * MUC ) ,( MUR / RCSe ) )", "obj1": 0.7516059957173448, "obj2": 0.16681438402353388}, {"determining": "( ( Max( RRS,DDR ) - Min( FirstVNF_CPU ,Max( CRS,MDR ) ) ) - Min( MDR ,AMS ) )", "choosing": "Min( ( MUM * RRSe ) ,( Max( MUM,RMSe ) / ( MUR / MLU ) ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Min( Max( ( RRS - FirstVNF_Mem ),( FirstVNF_Mem + MDR ) ) ,( AMS - ( FirstVNF_Mem + MDR ) ) )", "choosing": "( Min( DS ,Min( DS ,MLU ) ) * ( DS - MUR ) )", "obj1": 0.9571734475374732, "obj2": 0.02183061495150809}, {"determining": "( ( FirstVNF_RAM - MDR ) - Min( Max( ( PN - FirstVNF_RAM ),Max( FirstVNF_CPU,PN ) ) ,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / MUC ) - ( DS * RCSe ) )", "obj1": 0.9892933618843683, "obj2": 0.004681033845800852}, {"determining": "( ( Min( FirstVNF_Mem_Server ,DDR ) - Max( MDR,MDR ) ) - Max( MDR,MDR ) )", "choosing": "( Min( MUR ,RMSe ) / Max( MUC,MLU ) )", "obj1": 0.9807280513918629, "obj2": 0.009156283912406409}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUC * RCSe ) - Max( CS,CS ) ) / ( Max( MLU,MUC ) * ( RRSe - RRSe ) ) ) ,Min( Max( Min( DS ,MUR ),Max( DS,MUM ) ) ,Max( Max( MLU,CS ),Min( DS ,DS ) ) ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "Max( ( ( Min( ACS ,PN ) - FirstVNF_Mem ) - RRS ),( ( BR + ( BR - MDR ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU + MUR ) / RRSe ) + ( MLU + RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.011654381514128944}, {"determining": "( ( MRS * MRS ) - ( Min( Max( AMS,PN ) ,Max( PN,ARS ) ) / AMS ) )", "choosing": "Min( ( DS / DS ) ,( ( RMSe + MUM ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + ARS ) ,MDR ) - ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / PN ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) ) )", "choosing": "( ( ( ( MLU + MUM ) + MUR ) - MUC ) / ( MUC * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,( MRS * MRS ) ) - ( ( Max( PN,PN ) * Max( PN,ARS ) ) * AMS ) )", "choosing": "Min( Min( MLU ,DS ) ,( Min( DS ,MLU ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}]}