{"1": [{"determining": "Min( ( ACS + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MUM,MLU ) + ( MUC - MUR ) )", "obj1": 0.7901498929336188, "obj2": 0.27743461056157753}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / RRS ) + ( CRS - BR ) )", "choosing": "Min( Max( MUC,DS ) ,( MLU / MUM ) )", "obj1": 0.7430406852248393, "obj2": 0.2669802943810416}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM ) + ( BR / FirstVNF_Mem ) )", "choosing": "( Max( MLU,MLU ) * ( MUM - MLU ) )", "obj1": 0.7708779443254818, "obj2": 0.24921736631896146}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( BR ,PN ),( Const / FirstVNF_RAM_Server ) )", "choosing": "Min( ( CS / RCSe ) ,( RMSe * RMSe ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "( Max( ACS,CRS ) + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,( RMSe + ( Max( RCSe,CS ) + CS ) ) )", "obj1": 0.8244111349036403, "obj2": 0.2183186429677587}, {"determining": "( ( ACS + BR ) + ( CRS * PN ) )", "choosing": "( ( RMSe / CS ) / ( MUC / CS ) )", "obj1": 0.6916488222698073, "obj2": 0.2558746715076788}, {"determining": "Min( ( DDR / AMS ) ,( FirstVNF_Mem_Server / MDR ) )", "choosing": "( ( MLU / DS ) / ( CS + MUM ) )", "obj1": 0.7580299785867237, "obj2": 0.27296474809933713}, {"determining": "Min( ( AMS + FirstVNF_Mem ) ,Max( CRS,FirstVNF_Mem_Server ) )", "choosing": "( ( MLU / MLU ) * ( MUR + RMSe ) )", "obj1": 0.7623126338329764, "obj2": 0.2658635622142086}, {"determining": "( ( AMS / FirstVNF_CPU_Server ) / Min( ACS ,FirstVNF_CPU ) )", "choosing": "( Max( MUC,RMSe ) + ( RRSe + MUC ) )", "obj1": 0.7451820128479657, "obj2": 0.27960355287847616}, {"determining": "( ( CRS / ACS ) + ( ACS + FirstVNF_CPU ) )", "choosing": "Max( ( MUM * CS ),( CS * DS ) )", "obj1": 0.7944325481798715, "obj2": 0.26819365751975616}, {"determining": "( ( DDR + FirstVNF_Mem ) - ( MDR + RRS ) )", "choosing": "( Min( DS ,CS ) / Min( DS ,RRSe ) )", "obj1": 0.7516059957173448, "obj2": 0.2806940221415254}, {"determining": "( ( AMS + MRS ) + ( DDR * AMS ) )", "choosing": "Min( ( RCSe - MUM ) ,( RMSe / MUC ) )", "obj1": 0.7451820128479657, "obj2": 0.2838123051214012}, {"determining": "Min( ( CRS / AMS ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( ( RRSe + MUC ) ,( CS + RCSe ) )", "obj1": 0.7451820128479657, "obj2": 0.27960355287847616}, {"determining": "Max( ( AMS * FirstVNF_CPU ),( MDR + AMS ) )", "choosing": "( ( RCSe / RMSe ) - ( CS + RCSe ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_Mem ) * ( Const * AMS ) )", "choosing": "( Min( RMSe ,RMSe ) - ( CS + RMSe ) )", "obj1": 0.7880085653104925, "obj2": 0.2725222634309406}, {"determining": "( ( DDR * PN ) + ( ACS - AMS ) )", "choosing": "( ( RRSe - RRSe ) + Min( RCSe ,MUM ) )", "obj1": 0.7537473233404711, "obj2": 0.2608726541828435}, {"determining": "( ( FirstVNF_Mem_Server - AMS ) + ( ( Min( FirstVNF_Mem ,( Const / MRS ) ) + DDR ) - FirstVNF_Mem ) )", "choosing": "Min( ( RCSe / MLU ) ,Max( RRSe,RCSe ) )", "obj1": 0.7494646680942184, "obj2": 0.2721197948242053}, {"determining": "( Min( AMS ,RRS ) / Max( Max( FirstVNF_Mem_Server,MDR ),MDR ) )", "choosing": "( ( MLU / RMSe ) * ( RCSe + ( ( Max( RMSe,RCSe ) - Min( RCSe ,( MUM / RCSe ) ) ) / DS ) ) )", "obj1": 0.721627408993576, "obj2": 0.2739060033563077}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( RRSe,MUR ),( RCSe * CS ) )", "obj1": 0.7901498929336188, "obj2": 0.26662283517366114}, {"determining": "( Min( BR ,RRS ) + Max( DDR,Const ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 0.7130620985010707, "obj2": 0.2777543006872188}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,Const ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,MUC ) )", "obj1": 0.7644539614561028, "obj2": 0.2660368569448317}, {"determining": "Min( Max( CRS,PN ) ,Min( BR ,MDR ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) )", "obj1": 0.6916488222698073, "obj2": 0.25926131944098624}, {"determining": "( ( DDR * PN ) * Min( ACS ,ARS ) )", "choosing": "Min( ( RRSe * MUC ) ,Max( RRSe,CS ) )", "obj1": 0.7601713062098501, "obj2": 0.27296835007144654}, {"determining": "( Max( FirstVNF_CPU,ARS ) + ( FirstVNF_RAM_Server - ARS ) )", "choosing": "Max( ( RCSe * MUM ),Max( RMSe,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.2677694736133827}, {"determining": "Max( Max( FirstVNF_RAM,ARS ),Max( BR,FirstVNF_RAM ) )", "choosing": "Min( Max( MLU,MUR ) ,Max( MLU,Max( ( MUC - Min( ( CS + Min( ( RMSe / MUR ) ,( MLU / MLU ) ) ) ,Max( ( MLU / MUM ),CS ) ) ),( ( MLU / MUC ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7708779443254818, "obj2": 0.2806434638019609}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.7580299785867237, "obj2": 0.2794233930781829}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( MUR - MUM ),( MUM - RMSe ) )", "obj1": 0.7601713062098501, "obj2": 0.27899959851967715}, {"determining": "Min( ( ACS / ARS ) ,Max( ( CRS - FirstVNF_RAM_Server ),PN ) )", "choosing": "Max( Min( ( ( Max( MUR,DS ) / RRSe ) / RCSe ) ,CS ),Max( MUR,RCSe ) )", "obj1": 0.7922912205567452, "obj2": 0.27128501997600507}, {"determining": "Max( ( AMS / PN ),Min( FirstVNF_CPU_Server ,DDR ) )", "choosing": "( ( RCSe + RRSe ) + ( RMSe * RMSe ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "Max( ( ARS / FirstVNF_Mem_Server ),( RRS * FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe * MLU ) / Max( MLU,MLU ) )", "obj1": 0.7558886509635975, "obj2": 0.2784285043859758}, {"determining": "( ( ACS + FirstVNF_RAM ) - Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS * MUC ) * ( RCSe / CS ) )", "obj1": 0.7944325481798715, "obj2": 0.27333049619921534}, {"determining": "Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + MRS ) )", "choosing": "Min( ( MUR + MUC ) ,Min( CS ,MLU ) )", "obj1": 0.7109207708779444, "obj2": 0.28108891864106667}, {"determining": "Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) * ( PN / Const ) ),( ( MDR + FirstVNF_CPU ) * ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( MLU,MUC ) / ( MLU * MUM ) ) / ( Min( CS ,MUR ) * Min( MUR ,RRSe ) ) )", "obj1": 0.7109207708779444, "obj2": 0.28108891864106667}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ARS - AMS ) / MRS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - MUC ) / Max( MUR,MUC ) ) + Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) )", "obj1": 0.8650963597430407, "obj2": 0.13827203430162646}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 0.7537473233404711, "obj2": 0.2644776739792197}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR + FirstVNF_Mem ) + DDR ),Max( Min( FirstVNF_RAM ,BR ),MRS ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 0.7002141327623126, "obj2": 0.25083664984469994}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( Min( RRS ,DDR ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ),( Min( BR ,BR ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( MLU / RMSe ) + ( MUC / RCSe ) ) - Min( ( RRSe + MUC ) ,( CS + DS ) ) )", "obj1": 0.7109207708779444, "obj2": 0.28108891864106667}, {"determining": "Min( ( Max( BR,RRS ) + ( PN + RRS ) ) ,( ( ACS + PN ) / ( Const * FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,( MUM * MLU ) ) + ( ( DS / MLU ) + MUM ) )", "obj1": 0.7987152034261242, "obj2": 0.2704476697513358}, {"determining": "Max( ( ( MDR + FirstVNF_RAM_Server ) - MDR ),Max( ACS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe + MLU ) / Min( RRSe ,RRSe ) ) - Min( Min( RCSe ,RCSe ) ,( RMSe + RRSe ) ) )", "obj1": 0.7837259100642399, "obj2": 0.2853128222440551}, {"determining": "( ( MRS * ( MDR + MDR ) ) * ( ( Const * FirstVNF_CPU_Server ) + FirstVNF_CPU ) )", "choosing": "( ( Max( CS,RRSe ) + ( ( ( RRSe - DS ) + MUC ) / MUM ) ) / Min( RMSe ,( MLU * CS ) ) )", "obj1": 0.7366167023554604, "obj2": 0.2704426588536311}, {"determining": "( ( ( ARS * FirstVNF_Mem ) + ( FirstVNF_Mem_Server - ARS ) ) / ( ( MDR + FirstVNF_CPU ) + ( MRS / AMS ) ) )", "choosing": "( ( DS * RMSe ) + ( Min( MUC ,MUM ) + Max( MUR,RMSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( Const + CRS ) )", "choosing": "( ( Min( MUC ,MUC ) / ( MLU - MUR ) ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 0.7880085653104925, "obj2": 0.27459541473855875}, {"determining": "Max( ( ( MRS - FirstVNF_RAM_Server ) - AMS ),( PN * ( FirstVNF_CPU / ARS ) ) )", "choosing": "Min( ( ( RMSe * CS ) * ( DS + MUM ) ) ,( Min( DS ,MLU ) - Max( RRSe,RMSe ) ) )", "obj1": 0.7987152034261242, "obj2": 0.270489410875484}, {"determining": "( ( Min( DDR ,MRS ) + Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) + ( Const / DDR ) )", "choosing": "( ( MUC - ( CS + RMSe ) ) / Max( Max( DS,RRSe ),RRSe ) )", "obj1": 0.7601713062098501, "obj2": 0.2653433521696194}, {"determining": "( Min( FirstVNF_RAM ,( AMS / BR ) ) + ( BR * FirstVNF_RAM ) )", "choosing": "Max( ( ( DS - RCSe ) - ( RCSe + MUM ) ),Max( ( MUR - RCSe ),( MUM / MUR ) ) )", "obj1": 0.7644539614561028, "obj2": 0.2540118309897777}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.2669802943810416}, {"determining": "( ( Min( Min( RRS ,BR ) ,Max( ( ( ( FirstVNF_CPU_Server / PN ) + ( MDR / FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + MDR ) ),Const ) ) + Max( FirstVNF_CPU,ARS ) ) * Min( FirstVNF_RAM_Server ,( Const * PN ) ) )", "choosing": "( ( Min( RRSe ,( Min( RMSe ,DS ) - ( MUC - MUC ) ) ) + Max( Min( ( RMSe / MUC ) ,MUR ),MLU ) ) - ( ( DS - RCSe ) - MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26695862219896926}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem_Server ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 0.7665952890792291, "obj2": 0.256345432900273}, {"determining": "Max( ( RRS - ( FirstVNF_RAM_Server - Const ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) )", "choosing": "Min( ( CS + MUM ) ,Min( ( RCSe * MUM ) ,MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.2558297473758763}, {"determining": "( ( MDR * ( ACS / ( ( CRS / MRS ) / ACS ) ) ) * ( ( ( Const / Min( MDR ,BR ) ) + MDR ) + FirstVNF_CPU ) )", "choosing": "( ( ( RCSe / MUC ) - Max( MUR,MUR ) ) - Max( ( MUR / Max( ( MUC + Max( ( Max( RMSe,MLU ) + Max( MUR,RCSe ) ),( Min( RCSe ,MUR ) - ( CS + RCSe ) ) ) ),( RRSe + RRSe ) ) ),( Max( MUC,RRSe ) / ( Min( MUR ,MUR ) / ( ( RMSe / DS ) * DS ) ) ) ) )", "obj1": 0.7387580299785867, "obj2": 0.27079939569938016}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,ACS ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 0.7430406852248393, "obj2": 0.26632124875235946}, {"determining": "Max( ( ( ARS * FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( ( ARS - Const ) / ( FirstVNF_CPU + DDR ) ) )", "choosing": "( Min( Max( DS,MUM ) ,( MUC + DS ) ) * ( ( DS / RCSe ) - ( MUR - MUC ) ) )", "obj1": 0.7815845824411135, "obj2": 0.27474809153524027}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 0.6937901498929336, "obj2": 0.2643109497348498}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) / ( FirstVNF_CPU * AMS ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUC ,MUM ) * ( MLU - MLU ) ) * ( Max( RMSe,RMSe ) - ( RCSe - RRSe ) ) )", "obj1": 0.7537473233404711, "obj2": 0.28118141506180305}, {"determining": "Max( Max( Max( ( PN - BR ),Max( CRS,FirstVNF_RAM_Server ) ),( ( MRS + FirstVNF_CPU ) - ( CRS + AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_Mem ) ,Max( AMS,FirstVNF_Mem ) ) / Max( ( Const - RRS ),( CRS - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MUR + RMSe ) - ( MUR * MUM ) ) + Max( ( MUM + MUM ),( RCSe / RMSe ) ) ) + Max( ( Min( RMSe ,RRSe ) / ( RMSe / MUM ) ),( ( RCSe * MLU ) * Min( MUM ,DS ) ) ) )", "obj1": 0.7537473233404711, "obj2": 0.26525647153683246}, {"determining": "Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( ARS - CRS ) ) ) )", "choosing": "Max( ( DS + Min( ( CS * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) )", "obj1": 0.8265524625267666, "obj2": 0.19847432567198947}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( FirstVNF_CPU_Server + Const ) ) - ( FirstVNF_CPU_Server + ( RRS - CRS ) ) )", "choosing": "( ( ( ( ( RCSe - MUM ) * MUR ) + DS ) / CS ) + ( Min( RRSe ,MUC ) * ( RCSe + MUM ) ) )", "obj1": 0.7430406852248393, "obj2": 0.26162770223408294}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( RRS + Min( Const ,Const ) ),( BR - ( ( FirstVNF_RAM + Const ) - PN ) ) )", "choosing": "( ( ( Min( RCSe ,MUR ) * ( DS * DS ) ) * Min( ( MUM / MUM ) ,Min( RMSe ,RRSe ) ) ) + Min( ( ( RMSe + MLU ) + Max( MLU,DS ) ) ,( Min( MUC ,MUC ) / ( MUR - CS ) ) ) )", "obj1": 0.8008565310492506, "obj2": 0.26342026784413625}, {"determining": "( ( Max( PN,AMS ) + ( Min( Max( CRS,FirstVNF_CPU_Server ) ,Const ) + ( MRS / FirstVNF_Mem ) ) ) + Min( CRS ,BR ) )", "choosing": "( ( MUR / ( RMSe / ( RMSe - ( ( DS / RCSe ) - MUR ) ) ) ) / ( ( RCSe / ( DS * ( ( RRSe * MUC ) + ( RRSe / ( ( MUR * CS ) - ( RCSe * MLU ) ) ) ) ) ) - ( RMSe - MUM ) ) )", "obj1": 0.6788008565310493, "obj2": 0.2688330329108393}, {"determining": "( ( Min( ( FirstVNF_RAM * ACS ) ,( FirstVNF_Mem * Const ) ) - Max( ( FirstVNF_Mem / ARS ),( BR / FirstVNF_Mem_Server ) ) ) / Min( ( ( PN * PN ) / Min( MRS ,ACS ) ) ,( ( FirstVNF_RAM - ACS ) * Max( DDR,MDR ) ) ) )", "choosing": "Max( ( Max( MUM,MUM ) - MLU ),( ( MLU + RMSe ) - MUM ) )", "obj1": 0.9036402569593148, "obj2": 0.09889775830910538}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( CRS - FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) - ( Max( MRS,FirstVNF_Mem_Server ) - ( ARS + ACS ) ) ) / Min( ( ( FirstVNF_CPU * FirstVNF_RAM ) / Min( CRS ,BR ) ) ,( ( AMS * ACS ) + ( ACS / RRS ) ) ) )", "choosing": "Min( ( MUC / ( MUM + Min( MUM ,MLU ) ) ) ,( RCSe * MUM ) )", "obj1": 0.8501070663811563, "obj2": 0.18072804901076725}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / Const ),( PN + FirstVNF_Mem ) ) + Min( ( CRS / FirstVNF_Mem ) ,Max( FirstVNF_CPU,ACS ) ) ) * Min( Min( Min( CRS ,ARS ) ,( ACS - AMS ) ) ,( ( FirstVNF_Mem / FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe / ( MUR + RCSe ) ) * Max( DS,Max( Max( RRSe,MUM ),CS ) ) )", "obj1": 0.7944325481798715, "obj2": 0.2491246517253895}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM + ACS ) - Max( ARS,PN ) ) ) - Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem_Server ) ) ,Max( Max( MDR,PN ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM / CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( MUC * DS ) * ( RCSe - MUM ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.1002187174705565}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( MDR - Min( BR ,ACS ) ) / ( FirstVNF_RAM - MDR ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.7730192719486081, "obj2": 0.28475594347007915}, {"determining": "( ( FirstVNF_Mem - BR ) / Min( FirstVNF_RAM_Server ,BR ) )", "choosing": "( ( ( ( MUM * MUR ) + ( RRSe * DS ) ) - Max( ( DS + ( RRSe - DS ) ),( Min( ( MLU - Max( ( DS - RMSe ),MUM ) ) ,DS ) * MUC ) ) ) * ( ( ( MUR - CS ) + ( MUC - MUM ) ) * Max( Max( MUC,MLU ),Min( RRSe ,MUC ) ) ) )", "obj1": 0.7301927194860813, "obj2": 0.2766615274817006}, {"determining": "( ( FirstVNF_CPU + MDR ) - ( FirstVNF_Mem + PN ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * DS ) ) + ( ( DS + MUC ) / Max( RCSe,MUC ) ) ) - ( ( ( MUC / CS ) / ( MUR - MUC ) ) + Max( Max( RCSe,RCSe ),( RCSe + RMSe ) ) ) )", "obj1": 0.7880085653104925, "obj2": 0.2795573167624901}, {"determining": "Min( ( Max( AMS,ARS ) + Max( Min( BR ,BR ),( Min( AMS ,DDR ) - AMS ) ) ) ,( Max( Max( MRS,FirstVNF_Mem ),RRS ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( Min( ( MUM * DS ) ,RCSe ) - ( MUC + MUR ) ) + ( ( MLU / MLU ) + Min( MUC ,MUR ) ) ) / ( MLU + CS ) )", "obj1": 0.7387580299785867, "obj2": 0.28103017944770226}, {"determining": "Min( ( AMS + MRS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( DS - RCSe ) * ( MLU / RCSe ) ),( Min( MUR ,RMSe ) - Max( CS,MUR ) ) ) * Min( Min( Max( DS,RCSe ) ,( CS / RMSe ) ) ,Min( ( DS * CS ) ,Min( MLU ,MLU ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.2690455780193494}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( RRS + ARS ) - ( ARS - FirstVNF_Mem ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - ( RRSe - CS ) )", "obj1": 0.7773019271948608, "obj2": 0.25573495030306753}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ARS / ( RRS * Max( MRS,Min( ACS ,FirstVNF_CPU ) ) ) ) ) - ACS ) / FirstVNF_RAM ) * ( ( RRS / Min( MRS ,( FirstVNF_RAM_Server - Min( Max( ARS,MRS ) ,FirstVNF_CPU_Server ) ) ) ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,( RRSe - ( ( MUC + DS ) - ( RRSe + ( ( ( MUR / CS ) + RCSe ) + MLU ) ) ) ) ) / ( RRSe * RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Max( Max( MDR,ARS ),AMS ) + ( RRS + Const ) )", "choosing": "( ( Max( Max( RRSe,MUC ),Max( MUM,DS ) ) - ( ( MUC * RMSe ) + Max( MLU,MUC ) ) ) * Max( Max( ( RRSe + MLU ),( DS + RCSe ) ),( ( MLU + CS ) + Max( MUC,MLU ) ) ) )", "obj1": 0.7451820128479657, "obj2": 0.2758073211518328}, {"determining": "( Max( ( Const - MRS ),Const ) * Min( PN ,MDR ) )", "choosing": "( ( CS + RMSe ) - Min( MLU ,Min( MLU ,MUM ) ) )", "obj1": 0.7516059957173448, "obj2": 0.26935243036159867}, {"determining": "Max( ( Max( ACS,Max( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ),FirstVNF_RAM ) ) + FirstVNF_Mem_Server ),Max( DDR,PN ) )", "choosing": "Max( ( ( MLU * ( MUR * ( Min( MUR ,Min( MLU ,MLU ) ) + ( Min( MUM ,( MUM - RCSe ) ) / MUR ) ) ) ) / RCSe ),Min( MUC ,MUC ) )", "obj1": 0.7323340471092077, "obj2": 0.27152708478021687}, {"determining": "( ( ( Max( MDR,ARS ) + ( BR - FirstVNF_RAM ) ) + Max( Min( PN ,ACS ),Max( MRS,AMS ) ) ) / ( ( ( ARS + RRS ) - Max( MRS,FirstVNF_RAM_Server ) ) * Max( ( ARS + PN ),Min( Const ,MRS ) ) ) )", "choosing": "( ( ( ( MLU - CS ) / Max( MLU,MUC ) ) * ( Max( MUC,RMSe ) + ( CS * RRSe ) ) ) * ( ( ( DS - RMSe ) - ( MLU * RCSe ) ) * ( Max( MUC,MUC ) - ( RMSe * MUM ) ) ) )", "obj1": 0.7580299785867237, "obj2": 0.2713830389606719}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ( ( MDR - MDR ) - Max( Const,BR ) ) - ( Max( Const,FirstVNF_Mem ) - ( PN + PN ) ) ) )", "choosing": "( Min( Max( RRSe,RCSe ) ,MUR ) * ( ( MUR * MUC ) + Max( ( MUR + RMSe ),( RCSe - CS ) ) ) )", "obj1": 0.7601713062098501, "obj2": 0.262577440707537}, {"determining": "( Max( DDR,( FirstVNF_RAM_Server * RRS ) ) * ( PN * FirstVNF_CPU_Server ) )", "choosing": "Max( Min( MUC ,Max( ( CS + MUM ),( MLU * RRSe ) ) ),Max( ( ( MLU + CS ) * MUR ),MLU ) )", "obj1": 0.7173447537473233, "obj2": 0.2820623233508467}, {"determining": "( ( BR * Max( BR,FirstVNF_Mem_Server ) ) * ( DDR / BR ) )", "choosing": "Max( Min( ( ( RCSe - MUC ) * Min( MUR ,MUC ) ) ,Max( Min( DS ,DS ),( MUR + MUR ) ) ),Max( ( ( RCSe + RMSe ) - Min( MUM ,RMSe ) ),Max( ( CS - MUM ),( MUC - MUC ) ) ) )", "obj1": 0.6980728051391863, "obj2": 0.26290081603995336}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server / ARS ),Min( Const ,ARS ) ) ,( ( AMS + FirstVNF_RAM ) * Max( FirstVNF_RAM_Server,DDR ) ) ) / ( ( Min( MRS ,Const ) + ( DDR / RRS ) ) / ( ( RRS + RRS ) * ( ARS + ARS ) ) ) )", "choosing": "Max( Min( RCSe ,MUM ),Min( CS ,Min( RCSe ,RMSe ) ) )", "obj1": 0.7516059957173448, "obj2": 0.2649908211693324}, {"determining": "( Max( ARS,BR ) - ( ACS * FirstVNF_Mem_Server ) )", "choosing": "( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ) - ( ( Max( MUR,MUC ) + ( MUC - RMSe ) ) + ( ( MUM * MLU ) + Max( RRSe,MUC ) ) ) )", "obj1": 0.7687366167023555, "obj2": 0.27156275046201683}, {"determining": "( ( ACS - FirstVNF_RAM ) / ( DDR / Min( RRS ,( ( FirstVNF_CPU + ( FirstVNF_Mem + DDR ) ) / CRS ) ) ) )", "choosing": "Min( ( RRSe - ( ( Min( DS ,Max( CS,MLU ) ) * MUC ) / RRSe ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,RMSe ) ) * DS ) - DS ) ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26524366540367245}, {"determining": "( ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,Max( DDR,PN ) ) * ( ( DDR * FirstVNF_Mem_Server ) / Max( FirstVNF_CPU,MDR ) ) ) + ( ( ARS * ( BR / FirstVNF_CPU ) ) - Max( ( CRS * FirstVNF_Mem ),Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( ( RCSe - RRSe ) / ( MUR + MUC ) ) / ( ( RMSe + MLU ) + ( RRSe * MUC ) ) ) + ( Max( Max( RCSe,DS ),( RMSe + RCSe ) ) * ( ( MUC / DS ) - ( MUM - MUC ) ) ) )", "obj1": 0.7002141327623126, "obj2": 0.2732373241718123}], "2": [{"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( RRS ,BR ) ,Max( ( ( ( FirstVNF_CPU_Server / PN ) + ( MDR / FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem + MDR ) ),Const ) ) + Max( FirstVNF_CPU,ARS ) ) * Min( FirstVNF_RAM_Server ,( Const * PN ) ) )", "choosing": "( ( Min( RRSe ,( Min( RMSe ,DS ) - ( MUC - MUC ) ) ) + Max( Min( ( RMSe / MUC ) ,MUR ),MLU ) ) - ( ( DS - RCSe ) - MLU ) )", "obj1": 0.6766595289079229, "obj2": 0.26695862219896926}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( BR + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,CS )", "obj1": 0.7730192719486081, "obj2": 0.17970550546903485}, {"determining": "Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "Max( ( DS + Min( ( ( ( DS / RRSe ) * ( MUR / DS ) ) * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) )", "obj1": 0.8265524625267666, "obj2": 0.1503310179758932}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ARS / ( RRS * Max( MRS,Min( ACS ,FirstVNF_CPU ) ) ) ) ) - ACS ) / FirstVNF_RAM ) * ( ( RRS / Min( MRS ,( FirstVNF_RAM_Server - Min( Max( ARS,MRS ) ,FirstVNF_CPU_Server ) ) ) ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,( RRSe - ( ( MUC + DS ) - ( RRSe + ( ( ( MUR / CS ) + RCSe ) + MLU ) ) ) ) ) / ( RRSe * RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - Max( ( RRS - ( FirstVNF_RAM_Server - Const ) ),Min( FirstVNF_CPU ,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( CS + MUM ) ,Min( ( RCSe * MUM ) ,MLU ) ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 0.892933618843683, "obj2": 0.09822383235392333}, {"determining": "( ( ( ARS - AMS ) / MRS ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUM - MUC ) / Max( MUR,MUC ) ) + Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) )", "obj1": 0.8650963597430407, "obj2": 0.13827203430162646}, {"determining": "Min( ( AMS + MRS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Min( RMSe ,Min( CS ,MUR ) ) + Max( RRSe,MLU ) )", "obj1": 0.880085653104925, "obj2": 0.12582473312409775}, {"determining": "( ( BR * FirstVNF_CPU ) + ( FirstVNF_RAM - Min( ( ( RRS - MDR ) * Max( RRS,Min( AMS ,FirstVNF_RAM ) ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM - RCSe ) ,Max( RRSe,DS ) )", "obj1": 0.7773019271948608, "obj2": 0.17558706385228684}, {"determining": "( ( ( ( ARS + FirstVNF_Mem_Server ) * Max( ACS,FirstVNF_CPU ) ) - ( ( FirstVNF_RAM + ACS ) - Max( ARS,PN ) ) ) - Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem_Server ) ) ,Max( Max( MDR,PN ),( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RCSe / RRSe ) + ( MUM / CS ) ) - Min( ( DS / RRSe ) ,( RRSe + RCSe ) ) ) / ( ( ( MUC * DS ) * ( RCSe - MUM ) ) + Min( ( DS / DS ) ,( MLU - RCSe ) ) ) )", "obj1": 0.8907922912205567, "obj2": 0.1002187174705565}, {"determining": "( ( BR * FirstVNF_CPU ) + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 0.7773019271948608, "obj2": 0.17558706385228684}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( ACS,DDR ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ),( MUC + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2591025405775976}, {"determining": "Max( Min( ARS ,Const ),( MRS + CRS ) )", "choosing": "Min( ( RCSe + Min( MUM ,CS ) ) ,Max( RMSe,RCSe ) )", "obj1": 0.6937901498929336, "obj2": 0.2558174710931733}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ACS + FirstVNF_CPU ) + ( CRS * PN ) )", "choosing": "( ( Min( ( CS / CS ) ,Max( RMSe,DS ) ) / CS ) / ( MUC / CS ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( ( ( FirstVNF_RAM_Server + DDR ) / ( FirstVNF_CPU * AMS ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( Min( MUC ,MUM ) * ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( ARS - CRS ) ) ) ) - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / Max( ( DS + Min( ( CS * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( PN / FirstVNF_RAM_Server ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU )", "choosing": "( ( MUC - RRSe ) / ( ( RCSe / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,( RRS + Min( Const ,Const ) ) ) - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) )", "choosing": "( ( CS / DS ) + ( DS * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( BR * MDR ) - Max( PN,Const ) ),( ( FirstVNF_RAM_Server - Const ) + ( FirstVNF_RAM / ( BR - ( ( FirstVNF_RAM + Const ) - PN ) ) ) ) ) + ( ( ( PN - DDR ) - ( FirstVNF_RAM_Server - ARS ) ) * Min( Max( BR,RRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / DS ) / ( ( ( ( ( ( Min( RCSe ,MUR ) * ( DS * DS ) ) * Min( ( MUM / MUM ) ,Min( RMSe ,RRSe ) ) ) + Min( ( ( RMSe + MLU ) + Max( MLU,DS ) ) ,( Min( MUC ,MUC ) / ( MUR - CS ) ) ) ) - MLU ) * CS ) - ( RMSe - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( AMS - DDR ) - Const )", "choosing": "Min( Min( ( CS / CS ) ,Max( RMSe,DS ) ) ,( CS / RCSe ) )", "obj1": 0.8351177730192719, "obj2": 0.09322575358891697}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( MDR - Min( BR ,ACS ) ) / ( FirstVNF_RAM - MDR ) ) )", "choosing": "Max( Max( RRSe,MUR ),( RCSe * MLU ) )", "obj1": 0.7473233404710921, "obj2": 0.14952369918842137}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( FirstVNF_Mem - ( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) + ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe / MUM ) ,Min( MUC ,( ( ( ( CS / DS ) + Max( RRSe,RCSe ) ) * DS ) / RMSe ) ) )", "obj1": 0.7408993576017131, "obj2": 0.2254174851763349}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Min( RMSe ,Min( CS ,MUR ) ) + Max( RRSe,MLU ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( ( BR * FirstVNF_CPU ) + ( ( BR * FirstVNF_CPU ) + ( ARS - Const ) ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 0.7173447537473233, "obj2": 0.23390019725591957}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( ( ACS - ( Min( BR ,RRS ) / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( CS / ( MLU * RRSe ) )", "obj1": 0.7044967880085653, "obj2": 0.2483060051357117}, {"determining": "( ( FirstVNF_Mem / PN ) - ( FirstVNF_RAM_Server / ( PN * FirstVNF_RAM ) ) )", "choosing": "( Min( RMSe ,Min( CS ,MUR ) ) + ( Max( RMSe,( MUR + DS ) ) * ( MUM / MUC ) ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "Max( Min( ARS ,Const ),( MRS + CRS ) )", "choosing": "Min( ( RCSe + Min( MUM ,CS ) ) ,Max( RMSe,RCSe ) )", "obj1": 0.6937901498929336, "obj2": 0.2558174710931733}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( ACS,DDR ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ),( MUC + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2591025405775976}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Const + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Max( ( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( MDR,DDR ) ),ARS ) + BR )", "choosing": "Max( ( RCSe * MUM ),Min( MUM ,Min( MUR ,MUC ) ) )", "obj1": 0.683083511777302, "obj2": 0.2620840539857368}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( ( FirstVNF_Mem_Server / ( ARS / ( RRS * Max( MRS,Min( ACS ,FirstVNF_CPU ) ) ) ) ) - ACS ) / FirstVNF_RAM ) * ( ( RRS / Min( MRS ,( FirstVNF_RAM_Server - Min( Max( ARS,MRS ) ,FirstVNF_CPU_Server ) ) ) ) - Max( AMS,FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUM ,( RRSe - ( ( MUC + DS ) - ( RRSe + ( ( ( MUR / CS ) + RCSe ) + MLU ) ) ) ) ) / ( RRSe * RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Max( FirstVNF_CPU,ARS ) + ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623111301225236}, {"determining": "( ( ACS + FirstVNF_CPU ) + ( CRS * PN ) )", "choosing": "( ( Min( ( CS / CS ) ,Max( RMSe,DS ) ) / CS ) / ( MUC / CS ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( ( ( FirstVNF_RAM_Server + DDR ) / ( FirstVNF_CPU * AMS ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( Min( MUC ,MUM ) * ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( ARS - CRS ) ) ) ) - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / Max( ( DS + Min( ( CS * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( PN / FirstVNF_RAM_Server ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,FirstVNF_CPU )", "choosing": "( ( MUC - RRSe ) / ( ( RCSe / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( MDR - Min( BR ,ACS ) ) / ( FirstVNF_RAM - MDR ) ) )", "choosing": "Max( Max( RRSe,MUR ),( RCSe * MLU ) )", "obj1": 0.7473233404710921, "obj2": 0.14952369918842137}, {"determining": "( ( FirstVNF_Mem - ( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) + ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe / MUM ) ,Min( MUC ,( ( ( ( CS / DS ) + Max( RRSe,RCSe ) ) * DS ) / RMSe ) ) )", "obj1": 0.7408993576017131, "obj2": 0.2254174851763349}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Min( RMSe ,Min( CS ,MUR ) ) + Max( RRSe,MLU ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( ( BR * FirstVNF_CPU ) + ( ( BR * FirstVNF_CPU ) + ( ARS - Const ) ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 0.7173447537473233, "obj2": 0.23390019725591957}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7815845824411135, "obj2": 0.10883124251451678}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( Min( ( ACS - ( Min( BR ,RRS ) / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( CS / ( MLU * RRSe ) )", "obj1": 0.7044967880085653, "obj2": 0.2483060051357117}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU + RMSe ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( Max( FirstVNF_Mem,MDR ) - Min( FirstVNF_RAM ,BR ) )", "choosing": "( Min( MLU ,MLU ) * ( Max( ( ( RMSe * MUM ) * DS ),( MUC * RMSe ) ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "Min( Min( ARS ,Const ) ,( DDR + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.2522614650014828}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( ACS,DDR ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ),( MUC + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2591025405775976}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Min( BR ,RRS ) + Max( DDR,Const ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( Min( AMS ,RRS ) / Max( ARS,MDR ) ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "( Max( ( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( MDR,DDR ) ),ARS ) + BR )", "choosing": "Max( ( RCSe * MUM ),Min( MUM ,Min( MUR ,MUC ) ) )", "obj1": 0.683083511777302, "obj2": 0.2620840539857368}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Const + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Max( FirstVNF_CPU,ARS ) + ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623111301225236}, {"determining": "( ( ACS + FirstVNF_CPU ) + ( CRS * PN ) )", "choosing": "( ( Min( ( CS / CS ) ,Max( RMSe,DS ) ) / CS ) / ( MUC / CS ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( ( ( FirstVNF_RAM_Server + DDR ) / ( FirstVNF_CPU * AMS ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( Min( MUC ,MUM ) * ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( Min( Max( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ),Min( ACS ,MDR ) ),Min( ( CRS * FirstVNF_Mem_Server ) ,( MRS + CRS ) ) ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( MRS - BR ) ) / ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) - ( ARS - CRS ) ) ) ) - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / Max( ( DS + Min( ( CS * RRSe ) ,Max( MLU,DS ) ) ),( RRSe / ( Min( CS ,MUR ) / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / DS )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ARS / FirstVNF_Mem_Server ) - ( ( MDR - Min( BR ,ACS ) ) / ( FirstVNF_RAM - MDR ) ) )", "choosing": "Max( Max( RRSe,MUR ),( RCSe * MLU ) )", "obj1": 0.7473233404710921, "obj2": 0.14952369918842137}, {"determining": "( ( FirstVNF_Mem - ( ( FirstVNF_CPU * DDR ) + Max( ARS,CRS ) ) ) + ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( RCSe / MUM ) ,Min( MUC ,( ( ( ( CS / DS ) + Max( RRSe,RCSe ) ) * DS ) / RMSe ) ) )", "obj1": 0.7408993576017131, "obj2": 0.2254174851763349}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Min( RMSe ,Min( CS ,MUR ) ) + Max( RRSe,MLU ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( ( BR * FirstVNF_CPU ) + ( ( BR * FirstVNF_CPU ) + ( ARS - Const ) ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,DS ) )", "obj1": 0.7173447537473233, "obj2": 0.23390019725591957}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( Min( Max( Min( ( MUR + MUC ) ,DS ),( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( ( ( MUM / MUM ) * ( Max( RRSe,Min( MUC ,( RRSe + RMSe ) ) ) * ( MUC - DS ) ) ) / RCSe ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877976}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( Min( ( ACS - ( Min( BR ,RRS ) / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( CS / ( MLU * RRSe ) )", "obj1": 0.7044967880085653, "obj2": 0.2483060051357117}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU + RMSe ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ARS ,Const ) ,( DDR + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.2522614650014828}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( ACS,DDR ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ),( MUC + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2591025405775976}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( ( ( RMSe / ( MUR - RMSe ) ) - RMSe ) - Max( MUR,MUM ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) + ( ( Min( AMS ,RRS ) / ARS ) + DDR ) )", "choosing": "Max( ( RCSe * MUM ),Min( ( Min( RRSe ,DS ) - Max( CS,CS ) ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6916488222698073, "obj2": 0.25536719302269995}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( BR ,RRS ) + Max( DDR,Const ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Max( FirstVNF_CPU,ARS ) + ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623111301225236}, {"determining": "( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "( Max( ( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( MDR,DDR ) ),ARS ) + BR )", "choosing": "Max( ( RCSe * MUM ),Min( MUM ,Min( MUR ,MUC ) ) )", "obj1": 0.683083511777302, "obj2": 0.2620840539857368}, {"determining": "( Const + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR + Min( MUR ,MUC ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2620840539857368}, {"determining": "( Min( AMS ,RRS ) / ( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / ( Min( CS ,RCSe ) / MUC ) ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( Min( AMS ,RRS ) / Max( ARS,MDR ) ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( ( ( FirstVNF_RAM_Server + DDR ) / ( FirstVNF_CPU * AMS ) ) + Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),Min( ACS ,FirstVNF_RAM_Server ) ) ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( Min( MUC ,MUM ) * ( MLU - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ARS * CRS ) - Min( Min( FirstVNF_CPU ,MDR ) ,( CRS - BR ) ) )", "choosing": "( RMSe + Max( CS,MLU ) )", "obj1": 0.7044967880085653, "obj2": 0.23863514758489793}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Min( RMSe ,Min( CS ,MUR ) ) + Max( RRSe,MLU ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "Min( ( FirstVNF_Mem_Server + ARS ) ,( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) ) )", "choosing": "Min( Min( Max( Min( ( MUR + MUC ) ,DS ),( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( ( ( MUM / MUM ) * ( Max( RRSe,Min( MUC ,( RRSe + RMSe ) ) ) * ( MUC - DS ) ) ) / RCSe ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877976}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( FirstVNF_RAM_Server / ( PN + FirstVNF_RAM ) ) )", "choosing": "( Max( MLU,MLU ) * ( ( MLU + RMSe ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.961456102783726, "obj2": 0.03497376607832146}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( ( ( RMSe / ( MUR - RMSe ) ) - RMSe ) - Max( MUR,MUM ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( ARS ,Const ) ,( DDR + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.2522614650014828}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( ACS,DDR ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( Max( ( MUR * MUR ),( MUM + DS ) ) - Max( ( RRSe - RCSe ),Min( RCSe ,MLU ) ) ),( MUC + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.6852248394004282, "obj2": 0.2591025405775976}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ( ACS - ( FirstVNF_Mem_Server / RRS ) ) ,FirstVNF_RAM ) * ( RRS - RRS ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( RMSe ,Max( MUC,MUC ) ) ) / ( MLU * RRSe ) )", "obj1": 0.7002141327623126, "obj2": 0.2485160199166259}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) + ( ( Min( AMS ,RRS ) / ARS ) + DDR ) )", "choosing": "Max( ( RCSe * MUM ),Min( ( Min( RRSe ,DS ) - Max( CS,CS ) ) ,Min( RCSe ,MUC ) ) )", "obj1": 0.6916488222698073, "obj2": 0.25536719302269995}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( FirstVNF_CPU,ARS ) + ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623111301225236}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Max( ARS,AMS ) )", "choosing": "Min( Max( RMSe,MUC ) ,( ( RCSe - MUC ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "( Max( ( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Max( MDR,DDR ) ),ARS ) + BR )", "choosing": "Max( ( RCSe * MUM ),Min( MUM ,Min( MUR ,MUC ) ) )", "obj1": 0.683083511777302, "obj2": 0.2620840539857368}, {"determining": "Min( ( ACS + FirstVNF_CPU_Server ) ,( ( ACS + FirstVNF_CPU_Server ) - MRS ) )", "choosing": "( Max( MLU,MLU ) * ( MUM - MLU ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( Const + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( ( Min( AMS ,RRS ) / ARS ) + DDR ) / Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( MUR + Min( MUR ,MUC ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,DS ) - Max( CS,CS ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2620840539857368}, {"determining": "( ( BR * FirstVNF_CPU ) + ( BR * Min( Min( ARS ,Const ) ,( DDR + FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( CS / CS ) ,Max( RMSe,DS ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / MUM ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( Min( ARS ,Const ) ,( DDR + Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) ,MUC ) )", "obj1": 0.6937901498929336, "obj2": 0.2522614650014828}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) / Max( ARS,MDR ) )", "choosing": "Min( Min( Max( MUM,MUM ) ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2591648295069924}, {"determining": "( Max( FirstVNF_CPU,ARS ) + ( FirstVNF_RAM_Server - Max( FirstVNF_CPU,ARS ) ) )", "choosing": "Min( Min( DS ,MUM ) ,Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) )", "obj1": 0.6809421841541756, "obj2": 0.2623111301225236}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,( ( Max( CRS,FirstVNF_CPU ) * DDR ) * CRS ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + ( CS - MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6916488222698073, "obj2": 0.2534662962744215}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Const + ( ARS - Const ) )", "choosing": "Min( ( CS / CS ) ,Max( RMSe,RMSe ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "Max( Min( Max( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * RRS ) ),FirstVNF_RAM_Server ) ,Const ),( MRS - CRS ) )", "choosing": "Min( ( ( MUM / MLU ) * CS ) ,Max( RMSe,RCSe ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "Min( ( ACS + FirstVNF_CPU_Server ) ,( ( ACS + FirstVNF_CPU_Server ) - MRS ) )", "choosing": "( Max( MLU,MLU ) * ( MUM - MLU ) )", "obj1": 0.6788008565310493, "obj2": 0.2637916459045382}, {"determining": "( ( RRS * PN ) / ( RRS - FirstVNF_CPU ) )", "choosing": "Min( ( Min( CS ,RCSe ) / MUC ) ,( MUC / ( MUM / RCSe ) ) )", "obj1": 0.6895074946466809, "obj2": 0.25585190965689053}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Max( ARS,AMS ) )", "choosing": "Min( Max( RMSe,MUC ) ,( ( RCSe - MUC ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) / Max( ARS,AMS ) )", "choosing": "Min( Max( RMSe,MUC ) ,( ( RCSe - MUC ) / RCSe ) )", "obj1": 0.6873661670235546, "obj2": 0.25599779036390274}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( ( MUC / DS ) / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( MRS * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,DDR ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26167291362173567}, {"determining": "( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) / Max( ARS,MDR ) )", "choosing": "Min( Min( Max( MUM,MUM ) ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2591648295069924}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( ( MUC / DS ) / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( MRS * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,( RMSe + MUM ) ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * ( ( DDR * MDR ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( Min( ( Max( RMSe,MUC ) / CS ) ,DS ) * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,( MUC / DS ) ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / MUR ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,DDR ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26167291362173567}, {"determining": "( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) / Max( ARS,MDR ) )", "choosing": "Min( Min( Max( MUM,MUM ) ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.683083511777302, "obj2": 0.2591648295069924}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( ( MUC / DS ) / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( MRS * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,( RMSe + MUM ) ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * ( ( DDR * MDR ) * FirstVNF_RAM ) ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( Min( ( Max( RMSe,MUC ) / CS ) ,DS ) * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,DDR ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26167291362173567}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( Min( ( RMSe + MUR ) ,MUM ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 0.683083511777302, "obj2": 0.2569567881762368}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( ( MUC / DS ) / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( ( MRS * MDR ) * FirstVNF_RAM ) * MRS ) ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + ( ( ( Min( MUR ,DS ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( DDR * MDR ) * FirstVNF_RAM ) * MRS ) ,( PN - FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe - ( RMSe / MUR ) ) * DS ) * ( MLU * ( CS * RCSe ) ) ) + Min( ( ( ( Min( MUR ,( RMSe + MUM ) ) - Min( ( ( CS / MUR ) * MUC ) ,( ( RMSe + MUM ) / ( MLU + RRSe ) ) ) ) + ( MUC / DS ) ) / Min( ( Max( RMSe,MUC ) / CS ) ,DS ) ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,DDR ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26167291362173567}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( ( ( FirstVNF_Mem_Server / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( Min( ( RMSe + MUR ) ,MUM ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 0.683083511777302, "obj2": 0.2569567881762368}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,DDR ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26167291362173567}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( DDR,RRS ) ,( Const - DDR ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( MUC - RRSe ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( MRS + Const ) + Min( FirstVNF_RAM ,DDR ) )", "choosing": "Min( ( MLU / ( ( MUC + ( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( Min( Min( DS ,MUM ) ,Min( MUR ,MUC ) ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26167291362173567}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) ) - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( Max( ( FirstVNF_Mem * PN ),FirstVNF_RAM_Server ) - ( MRS - ( ACS - ( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * CRS ) + PN ) ) ) ) )", "choosing": "( ( ( ( Min( ( RCSe + ( MUR - ( DS / MLU ) ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) + Max( MUM,( DS / ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) ) ) ) + Max( ( MUC * DS ),Max( ( ( RRSe - ( ( DS * MUR ) - Min( MLU ,DS ) ) ) * RMSe ),CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26046961861024887}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - MDR ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,Max( Const,ARS ) ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( ( ( MLU - CS ) + MLU ) + DS ) / ( Max( MUM,MUC ) - DS ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( MUR ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( Max( ( FirstVNF_Mem * PN ),FirstVNF_RAM_Server ) - ( MRS - ( ACS - ( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * CRS ) + PN ) ) ) ) )", "choosing": "( ( ( ( Min( ( RCSe + ( MUR - ( DS / MLU ) ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) + Max( MUM,( DS / ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) ) ) ) + Max( ( MUC * DS ),Max( ( ( RRSe - ( ( DS * MUR ) - Min( MLU ,DS ) ) ) * RMSe ),CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26046961861024887}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,Min( ( DDR + ARS ) ,Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,( Max( DS,MUC ) * ( MUM / MUR ) ) ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_RAM ,MDR ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( ( RMSe - DS ) + ( RCSe * CS ) ) - Max( Max( MUR,MUC ),Min( MLU ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( Max( ( FirstVNF_Mem * PN ),FirstVNF_RAM_Server ) - ( MRS - ( ACS - ( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * CRS ) + PN ) ) ) ) )", "choosing": "( ( ( ( Min( ( RCSe + ( MUR - ( DS / MLU ) ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) + Max( MUM,( DS / ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) ) ) ) + Max( ( MUC * DS ),Max( ( ( RRSe - ( ( DS * MUR ) - Min( MLU ,DS ) ) ) * RMSe ),CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26046961861024887}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,Max( Const,ARS ) ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( ( ( MLU - CS ) + MLU ) + DS ) / ( Max( MUM,MUC ) - DS ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( MUR ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - RMSe ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( CS - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem * FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,Min( ( RRS - ( FirstVNF_RAM_Server - Const ) ) ,AMS ) )", "choosing": "Min( Max( ( CS * RMSe ),( RMSe - MLU ) ) ,Max( ( MUM - RCSe ),( CS + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( Max( ( FirstVNF_Mem * PN ),FirstVNF_RAM_Server ) - ( MRS - ( ACS - ( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * CRS ) + PN ) ) ) ) )", "choosing": "( ( ( ( Min( ( RCSe + ( MUR - ( DS / MLU ) ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) + Max( MUM,( DS / ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) ) ) ) + Max( ( MUC * DS ),Max( ( ( RRSe - ( ( DS * MUR ) - Min( MLU ,DS ) ) ) * RMSe ),CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26046961861024887}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC * ( ( Max( MUM,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const * MDR ) ,( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,CS ) - ( Min( MUM ,MUR ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( RCSe ,CS ) - ( MUR / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) ) ) )", "choosing": "Max( ( ( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * ( FirstVNF_CPU * FirstVNF_CPU_Server ) ) + MRS ) )", "choosing": "Max( ( CS * DS ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( RRS + Const ) / Const ) + FirstVNF_Mem_Server ),ARS ) - Min( ACS ,FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,RMSe ) + ( MUC - ( RCSe - MUR ) ) )", "obj1": 0.6723768736616702, "obj2": 0.2760057589268273}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "Min( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) ,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( DS - ( CS - MUR ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0648236611671986}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( RRS / ( ( MRS / MRS ) / BR ) ) - ( RRS / FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe / MUR ) - Max( MUC,MUR ) ) + Max( MLU,Min( ( MLU + RRSe ) ,( ( ( CS * RMSe ) + ( RCSe / RRSe ) ) - CS ) ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893505232437993}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893505232437993}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( Max( ( FirstVNF_Mem * PN ),FirstVNF_RAM_Server ) - ( MRS - ( ACS - ( MDR - ( ( Max( FirstVNF_RAM,FirstVNF_RAM ) * CRS ) + PN ) ) ) ) )", "choosing": "( ( ( ( Min( ( RCSe + ( MUR - ( DS / MLU ) ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) + Max( MUM,( DS / ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) ) ) ) + Max( ( MUC * DS ),Max( ( ( RRSe - ( ( DS * MUR ) - Min( MLU ,DS ) ) ) * RMSe ),CS ) ) )", "obj1": 0.6788008565310493, "obj2": 0.26046961861024887}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,RRS ) / Max( ARS,MDR ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( MUM / RCSe ) )", "obj1": 0.6745182012847966, "obj2": 0.2719099530646842}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "Min( Min( BR ,FirstVNF_RAM ) ,Min( Min( BR ,FirstVNF_RAM ) ,( ( BR / CRS ) + ( FirstVNF_Mem * Max( Min( FirstVNF_RAM ,MRS ),( MDR + Min( CRS ,Const ) ) ) ) ) ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - ( ( CS / MLU ) * ( DS + CS ) ) ) ,Min( Max( Min( ( ( CS / MLU ) * ( DS + CS ) ) ,CS ),CS ) ,( MUM - MLU ) ) ) ) ,Min( MUR ,MUC ) )", "obj1": 0.6852248394004282, "obj2": 0.2561162652050928}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RMSe ,RRSe ) ,( Min( MUM ,( ( MLU * Min( CS ,MUC ) ) - ( CS * MLU ) ) ) - DS ) )", "obj1": 0.683083511777302, "obj2": 0.25621586611662023}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Max( Min( DDR ,FirstVNF_CPU ),MDR ) * ( Const * AMS ) )", "choosing": "( ( DS * ( RCSe * CS ) ) + ( MUC - RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "Max( ( FirstVNF_Mem_Server - AMS ),( DDR / MRS ) )", "choosing": "( ( ( CS * ( RMSe * Min( RRSe ,Max( MLU,MUC ) ) ) ) + ( MUM + RRSe ) ) + ( MUC / RRSe ) )", "obj1": 0.6766595289079229, "obj2": 0.26608704608244504}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) - ( PN / AMS ) ) + ( AMS - ( ( PN / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - Min( ( RCSe + RRSe ) ,Max( MUM,CS ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "Min( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) ,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + ( PN * FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( DS - ( CS - MUR ) ) )", "obj1": 0.8843683083511777, "obj2": 0.0648236611671986}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) - ( PN / AMS ) ) + ( FirstVNF_CPU_Server - CRS ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,Min( ( RCSe * MLU ) ,MUC ) ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server * ACS ) ,( ( MRS - FirstVNF_RAM_Server ) + CRS ) )", "choosing": "( Min( DS ,MLU ) + ( Min( RCSe ,MUC ) * ( MLU - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Const / MRS ) * DDR ) / Max( CRS,( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "( Min( Max( MUR,MUM ) ,( MUM * RMSe ) ) * Max( ( RRSe - DS ),( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( Min( AMS ,Min( Min( BR ,PN ) ,( AMS - DDR ) ) ) - ( ( MDR - ( Max( ( Min( CRS ,( AMS * MRS ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ),CRS ) / Max( Min( ( ( RRS - MDR ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + Const ) ),FirstVNF_CPU ) ) ) * ARS ) )", "choosing": "( Max( Max( ( MUR + MUC ),CS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( MUC * ( Max( Max( MLU,MUR ),MLU ) + Min( ( RCSe * MLU ) ,RRSe ) ) ) ,( ( Max( MUM,MUM ) / CS ) + RCSe ) ) * ( MLU - RRSe ) ) - Min( MLU ,Max( RMSe,RCSe ) ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( ( ( Max( Min( ACS ,MRS ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) * FirstVNF_RAM_Server ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - ( ( ( ARS - ARS ) + Max( ARS,FirstVNF_RAM_Server ) ) + ( BR + DDR ) ) )", "choosing": "( ( RRSe / Max( ( ( ( ( RMSe - ( CS / RMSe ) ) + MLU ) + RRSe ) / ( DS * ( ( ( RCSe * MUR ) - MUR ) + RRSe ) ) ),CS ) ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe * RCSe ) ,Max( MUM,MUR ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( DDR + DDR ) ) )", "choosing": "( ( ( MUM / RMSe ) / Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) ) ) + Min( ( MUM * RCSe ) ,Min( CS ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( BR + DDR ) ) )", "choosing": "Max( ( CS + ( MLU + RCSe ) ),( DS - ( RRSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( PN,DDR ) ) ,ACS ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( DS / ( Min( MUR ,MUC ) * ( ( DS - RMSe ) * RMSe ) ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.987152034261242, "obj2": 0.0066271743555476785}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe * RCSe ) ,Max( MUM,MUR ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "( ( ACS - MRS ) / ( DDR / ( ( MDR + RRS ) - ACS ) ) )", "choosing": "Min( ( ( DS / ( RCSe / Min( ( MUC / RRSe ) ,( Max( CS,MLU ) * RMSe ) ) ) ) - RRSe ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,( ( ( MUM * MUR ) / MUR ) * ( RMSe / RRSe ) ) ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( Min( AMS ,( ( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( ( CS + MUM ) * MUC ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.12808408269207747}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( Min( AMS ,( Min( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + Max( ( MUR + MUC ),DS ) ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09887716747601145}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( MDR - Max( ( ( ACS - MDR ) * FirstVNF_CPU ),FirstVNF_Mem ) ) / Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem - ( Min( ( Const * AMS ) ,MRS ) - Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUR,RMSe ) ) + Min( ( MLU - RMSe ) ,MLU ) )", "obj1": 0.987152034261242, "obj2": 0.00657170265065925}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe * RCSe ) ,Max( MUM,MUR ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,Min( ( CRS - MDR ) ,Min( FirstVNF_CPU ,MDR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ACS ,ACS ) - FirstVNF_CPU_Server ) - Max( MDR,DDR ) ) + ( ( FirstVNF_RAM - AMS ) / Min( FirstVNF_RAM ,BR ) ) )", "choosing": "( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * ( RRSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( Const - CRS ) ) / Const ) )", "choosing": "( ( Min( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / ( ( MDR + RRS ) - ACS ) ) )", "choosing": "Min( ( ( DS / ( RCSe / Min( ( MUC / RRSe ) ,( Max( CS,MLU ) * RMSe ) ) ) ) - RRSe ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,( ( ( MUM * MUR ) / MUR ) * ( RMSe / RRSe ) ) ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( Min( AMS ,( ( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( ( CS + MUM ) * MUC ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.12808408269207747}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + Max( ( MUR + MUC ),DS ) ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09887716747601145}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( Min( AMS ,( MRS + ( ( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - Min( AMS ,CRS ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - ( ( Max( MUM,MUM ) / CS ) + RCSe ) ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03748520261212534}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - FirstVNF_Mem )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( ( RCSe + RCSe ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007805259883074832}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( ( ( ARS / RRS ) - FirstVNF_RAM ) - ( FirstVNF_RAM / Max( ( ACS + AMS ),( Max( MDR,BR ) / PN ) ) ) ) ) / Const ) )", "choosing": "( ( Min( Min( MUR ,MLU ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 0.9357601713062098, "obj2": 0.03387332020520841}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( ( MDR - Max( ( ( ACS - MDR ) * FirstVNF_CPU ),FirstVNF_Mem ) ) / Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem - ( Min( ( Const * AMS ) ,MRS ) - Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUR,RMSe ) ) + Min( ( MLU - RMSe ) ,MLU ) )", "obj1": 0.987152034261242, "obj2": 0.00657170265065925}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe * RCSe ) ,Max( MUM,MUR ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( ( MUM + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Max( BR,FirstVNF_Mem ) ,Max( ACS,DDR ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) - Max( DDR,MDR ) ) )", "choosing": "Min( ( RCSe * RCSe ) ,( ( ( ( RMSe + CS ) / Max( RCSe,MUM ) ) * Max( Min( MUR ,RMSe ),( RRSe / RCSe ) ) ) / MUR ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "( ( ( AMS - Max( BR,( ( ARS + ARS ) * FirstVNF_CPU_Server ) ) ) - Const ) + Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( FirstVNF_RAM * ( RRS / ( ( FirstVNF_CPU + Max( BR,Max( MRS,FirstVNF_Mem ) ) ) + ( Max( FirstVNF_Mem_Server,CRS ) / CRS ) ) ) ) ) )", "choosing": "Min( ( MLU - ( ( ( ( Max( Min( MLU ,RMSe ),( MUM / RCSe ) ) - ( MUC / MUR ) ) * MUR ) / ( MLU / RMSe ) ) * ( RRSe / RMSe ) ) ) ,( Min( ( ( RMSe / RRSe ) - ( MLU + CS ) ) ,( MUR + RMSe ) ) / ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( Const - CRS ) ) / Const ) )", "choosing": "( ( Min( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( Min( AMS ,( ( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( ( CS + MUM ) * MUC ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.12808408269207747}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + Max( ( MUR + MUC ),DS ) ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09887716747601145}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( Min( AMS ,( MRS + ( ( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - Min( AMS ,CRS ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - ( ( Max( MUM,MUM ) / CS ) + RCSe ) ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03748520261212534}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - FirstVNF_Mem )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( ( RCSe + RCSe ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007805259883074832}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( ( ( ARS / RRS ) - FirstVNF_RAM ) - ( FirstVNF_RAM / Max( ( ACS + AMS ),( Max( MDR,BR ) / PN ) ) ) ) ) / Const ) )", "choosing": "( ( Min( Min( MUR ,MLU ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 0.9357601713062098, "obj2": 0.03387332020520841}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( ( MDR - Max( ( ( ACS - MDR ) * FirstVNF_CPU ),FirstVNF_Mem ) ) / Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem - ( Min( ( Const * AMS ) ,MRS ) - Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUR,RMSe ) ) + Min( ( MLU - RMSe ) ,MLU ) )", "obj1": 0.987152034261242, "obj2": 0.00657170265065925}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RMSe,RRSe ) ) + Max( ( MUC * DS ),( RCSe / ( MUC / ( MUC * MLU ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( ACS - MRS ) / ( DDR / ( ( MDR + RRS ) - ACS ) ) )", "choosing": "Min( ( ( DS / ( RCSe / Min( ( MUC / RRSe ) ,( Max( CS,MLU ) * RMSe ) ) ) ) - RRSe ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,( ( ( MUM * MUR ) / MUR ) * ( RMSe / RRSe ) ) ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "( PN - Min( MDR ,( MDR + ( ( ( ( ( BR + PN ) / ( BR - RRS ) ) - ( Min( RRS ,FirstVNF_Mem ) + MRS ) ) - FirstVNF_RAM_Server ) / ( FirstVNF_RAM + DDR ) ) ) ) )", "choosing": "( Max( ( DS / ( RCSe + MLU ) ),MUC ) + ( MUC - Min( ( MUR * Min( RCSe ,Max( MUR,( ( MUC - RCSe ) / RMSe ) ) ) ) ,Max( Max( MLU,DS ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Max( BR,( ( ARS + ARS ) * FirstVNF_CPU_Server ) ) ) - Const ) + Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( FirstVNF_RAM * ( RRS / ( ( FirstVNF_CPU + Max( BR,Max( MRS,FirstVNF_Mem ) ) ) + ( Max( FirstVNF_Mem_Server,CRS ) / CRS ) ) ) ) ) )", "choosing": "Min( ( MLU - ( ( ( ( Max( Min( MLU ,RMSe ),( MUM / RCSe ) ) - ( MUC / MUR ) ) * MUR ) / ( MLU / RMSe ) ) * ( RRSe / RMSe ) ) ) ,( Min( ( ( RMSe / RRSe ) - ( MLU + CS ) ) ,( MUR + RMSe ) ) / ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( Min( AMS ,( ( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( ( CS + MUM ) * MUC ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.12808408269207747}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + Max( ( MUR + MUC ),DS ) ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09887716747601145}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( Min( AMS ,( MRS + ( ( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - Min( AMS ,CRS ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - ( ( Max( MUM,MUM ) / CS ) + RCSe ) ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03748520261212534}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - FirstVNF_Mem )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( ( RCSe + RCSe ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007805259883074832}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( ( ( ARS / RRS ) - FirstVNF_RAM ) - ( FirstVNF_RAM / Max( ( ACS + AMS ),( Max( MDR,BR ) / PN ) ) ) ) ) / Const ) )", "choosing": "( ( Min( Min( MUR ,MLU ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 0.9357601713062098, "obj2": 0.03387332020520841}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( ( MDR - Max( ( ( ACS - MDR ) * FirstVNF_CPU ),FirstVNF_Mem ) ) / Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem - ( Min( ( Const * AMS ) ,MRS ) - Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUR,RMSe ) ) + Min( ( MLU - RMSe ) ,MLU ) )", "obj1": 0.987152034261242, "obj2": 0.00657170265065925}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RMSe,RRSe ) ) + Max( ( MUC * DS ),( RCSe / ( MUC / ( MUC * MLU ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( Const - CRS ) ) / Const ) )", "choosing": "( ( Min( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / ( ( MDR + RRS ) - ACS ) ) )", "choosing": "Min( ( ( DS / ( RCSe / Min( ( MUC / RRSe ) ,( Max( CS,MLU ) * RMSe ) ) ) ) - RRSe ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,( ( ( MUM * MUR ) / MUR ) * ( RMSe / RRSe ) ) ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),Max( MUR,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( RRS - Min( MDR ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( ( RCSe / RMSe ) ,( RMSe / MUR ) ) / ( RRSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( Min( RRS ,( DDR * DDR ) ) - ARS )", "choosing": "( ( RMSe * Min( ( RRSe * ( Min( CS ,Min( Max( DS,DS ) ,RCSe ) ) / Min( Min( CS ,( DS + CS ) ) ,Max( DS,( RMSe * RRSe ) ) ) ) ) ,DS ) ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Min( MDR ,( MDR + ( ( ( ( ( BR + PN ) / ( BR - RRS ) ) - ( Min( RRS ,FirstVNF_Mem ) + MRS ) ) - FirstVNF_RAM_Server ) / ( FirstVNF_RAM + DDR ) ) ) ) )", "choosing": "( Max( ( DS / ( RCSe + MLU ) ),MUC ) + ( MUC - Min( ( MUR * Min( RCSe ,Max( MUR,( ( MUC - RCSe ) / RMSe ) ) ) ) ,Max( Max( MLU,DS ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "Min( ( ( FirstVNF_RAM / FirstVNF_Mem ) + FirstVNF_CPU_Server ) ,( PN - MRS ) )", "choosing": "( Max( MLU,( ( DS - RRSe ) * RMSe ) ) * ( MUM - MLU ) )", "obj1": 0.6873661670235546, "obj2": 0.2499782645287966}, {"determining": "( Min( AMS ,( ( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( ( CS + MUM ) * MUC ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.12808408269207747}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + Max( ( MUR + MUC ),DS ) ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09887716747601145}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( Min( AMS ,( MRS + ( ( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - Min( AMS ,CRS ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - ( ( Max( MUM,MUM ) / CS ) + RCSe ) ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03748520261212534}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( PN / Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) ) - ( Max( Min( FirstVNF_RAM_Server ,DDR ),Min( Max( FirstVNF_CPU,( FirstVNF_Mem_Server + CRS ) ) ,( Min( ( FirstVNF_CPU + PN ) ,RRS ) * ACS ) ) ) - FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Max( Min( RMSe ,RMSe ),Min( ( MUC - MUR ) ,RCSe ) ) ,RCSe ) - Min( Min( Min( ( RRSe + RCSe ) ,RMSe ) ,RMSe ) ,( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ) / Min( RRSe ,RMSe ) ) + Max( RRSe,RRSe ) ) + ( ( Max( MUR,MUM ) * MUC ) * Max( ( ( MUR * MLU ) - ( CS / ( Min( ( RCSe + RRSe ) ,( RRSe / MLU ) ) - RCSe ) ) ),RCSe ) ) )", "obj1": 0.683083511777302, "obj2": 0.2548513529749064}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( ( DDR - BR ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( Min( RMSe ,( CS / DS ) ) ,RMSe ) * ( RCSe - Min( ( RRSe + RCSe ) ,( DS / RRSe ) ) ) ) - ( ( Max( Min( RMSe ,CS ),Min( MLU ,DS ) ) + CS ) + ( Max( ( RRSe * RRSe ),MUM ) + RCSe ) ) ) * ( ( ( MUM / ( ( MUR + DS ) - ( MUC / RMSe ) ) ) / ( MUR * ( Min( RRSe ,RMSe ) + RCSe ) ) ) - RMSe ) ) + ( CS - CS ) ) + ( MLU + RRSe ) )", "obj1": 0.6788008565310493, "obj2": 0.25862051505199884}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Max( ( ( FirstVNF_Mem_Server / ( FirstVNF_CPU_Server / ACS ) ) - ( ( ARS + MRS ) / ( FirstVNF_RAM / Min( FirstVNF_CPU ,Min( AMS ,DDR ) ) ) ) ),Const ) - ( DDR / FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,RMSe ) + Max( Min( ( MUC - MLU ) ,Max( ( Min( ( MUR + MUM ) ,( RMSe - MLU ) ) + MUR ),( DS * RRSe ) ) ),( Max( ( RMSe - Min( MUM ,RMSe ) ),Min( DS ,( DS / ( MLU + Min( MUM ,CS ) ) ) ) ) - MLU ) ) )", "obj1": 0.9271948608137045, "obj2": 0.03702915828455049}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - FirstVNF_Mem )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( ( RCSe + RCSe ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007805259883074832}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( ( ( ARS / RRS ) - FirstVNF_RAM ) - ( FirstVNF_RAM / Max( ( ACS + AMS ),( Max( MDR,BR ) / PN ) ) ) ) ) / Const ) )", "choosing": "( ( Min( Min( MUR ,MLU ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 0.9357601713062098, "obj2": 0.03387332020520841}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( ( MDR - Max( ( ( ACS - MDR ) * FirstVNF_CPU ),FirstVNF_Mem ) ) / Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem - ( Min( ( Const * AMS ) ,MRS ) - Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUR,RMSe ) ) + Min( ( MLU - RMSe ) ,MLU ) )", "obj1": 0.987152034261242, "obj2": 0.00657170265065925}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( Max( Const,FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( ( Min( Min( ( CS / DS ) ,RMSe ) ,RMSe ) * ( RCSe - Min( ( RRSe + RCSe ) ,( DS / RRSe ) ) ) ) - ( ( Max( Min( RMSe ,CS ),Min( MLU ,RMSe ) ) + CS ) + ( RCSe + Max( ( RRSe * RRSe ),MUM ) ) ) ) * ( ( ( MUM / ( MLU - ( MUC * RMSe ) ) ) / ( MUR * ( RCSe + RCSe ) ) ) / RMSe ) ) + ( CS - CS ) ) + Min( ( RCSe + MUR ) ,( MUM + ( MLU / MUC ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.25862051505199884}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RMSe,RRSe ) ) + Max( ( MUC * DS ),( RCSe / ( MUC / ( MUC * MLU ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( ( AMS - Max( BR,( ( ARS + ARS ) * FirstVNF_CPU_Server ) ) ) - Const ) + Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( FirstVNF_RAM * ( RRS / ( ( FirstVNF_CPU + Max( BR,Max( MRS,FirstVNF_Mem ) ) ) + ( Max( FirstVNF_Mem_Server,CRS ) / CRS ) ) ) ) ) )", "choosing": "Min( ( MLU - ( ( ( ( Max( Min( MLU ,RMSe ),( MUM / RCSe ) ) - ( MUC / MUR ) ) * MUR ) / ( MLU / RMSe ) ) * ( RRSe / RMSe ) ) ) ,( Min( ( ( RMSe / RRSe ) - ( MLU + CS ) ) ,( MUR + RMSe ) ) / ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( Const - CRS ) ) / Const ) )", "choosing": "( ( Min( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / ( ( MDR + RRS ) - ACS ) ) )", "choosing": "Min( ( ( DS / ( RCSe / Min( ( MUC / RRSe ) ,( Max( CS,MLU ) * RMSe ) ) ) ) - RRSe ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,( ( ( MUM * MUR ) / MUR ) * ( RMSe / RRSe ) ) ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( BR ,CRS ) ,( PN - FirstVNF_RAM_Server ) ) ,( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + ( PN * PN ) ) )", "choosing": "Max( ( ( MLU + RRSe ) + RCSe ),( RRSe * ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( MRS - ACS ) / ( DDR / Min( RRS ,( ( FirstVNF_CPU + BR ) / CRS ) ) ) )", "choosing": "Min( ( ( Max( MUR,DS ) + CS ) / ( ( RRSe + MLU ) * ( MUC - MLU ) ) ) ,( MLU - ( ( ( ( Max( Min( MLU ,RMSe ),( MUM / MUM ) ) - ( MUC / MUR ) ) * MUM ) / ( MLU / RMSe ) ) * ( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( DDR * DDR ) ) - ARS )", "choosing": "( ( RMSe * Min( ( RRSe * ( Min( CS ,Min( Max( DS,DS ) ,RCSe ) ) / Min( Min( CS ,( DS + CS ) ) ,Max( DS,( RMSe * RRSe ) ) ) ) ) ,DS ) ) + ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ),( FirstVNF_Mem * PN ) ) - ( MRS * ( ( DDR / ( Min( FirstVNF_RAM_Server ,ACS ) + ( FirstVNF_CPU * ( FirstVNF_CPU_Server - CRS ) ) ) ) / ( ( ( PN + ACS ) * ARS ) - DDR ) ) ) )", "choosing": "( Min( ( ( Min( ( RCSe + ( ( DS / MLU ) - MUR ) ) ,DS ) - ( MUC * MUC ) ) + MUC ) ,Max( MUM,( ( Min( ( RCSe * MLU ) ,MUC ) * ( ( DS - RRSe ) * Max( Max( MUR,MUR ),MUM ) ) ) / DS ) ) ) + Max( ( MUC * DS ),Max( Min( ( CS / Max( RCSe,( ( RMSe / RCSe ) * Max( RCSe,MLU ) ) ) ) ,MUM ),CS ) ) )", "obj1": 0.6723768736616702, "obj2": 0.260417172963474}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),Min( MLU ,MLU ) ) )", "obj1": 0.69593147751606, "obj2": 0.1765957134167934}, {"determining": "( Max( ARS,( Max( ( Min( CRS ,( AMS * MRS ) ) + ( FirstVNF_CPU - FirstVNF_Mem_Server ) ),CRS ) / Max( Min( ( ( RRS - MDR ) * FirstVNF_Mem ) ,( FirstVNF_Mem_Server + Const ) ),FirstVNF_CPU ) ) ) - Min( Max( PN,FirstVNF_CPU ) ,MDR ) )", "choosing": "( ( ( Max( Min( Min( Min( ( CS + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe * RCSe ) ,Max( MUM,MUR ) ) - RCSe ) ),( ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) * MUC ) ) / DS ) + Max( RRSe,RRSe ) ) + Max( ( MUC * DS ),Max( RMSe,( MUM + ( Min( MLU ,( CS / Min( CS ,DS ) ) ) / Max( RCSe,Max( RMSe,MLU ) ) ) ) ) ) )", "obj1": 0.683083511777302, "obj2": 0.2471468430766486}, {"determining": "( Min( AMS ,( ( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( ( CS + MUM ) * MUC ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7665952890792291, "obj2": 0.12808408269207747}, {"determining": "( ( ARS - Min( Max( ( ARS / Const ),( FirstVNF_RAM_Server - BR ) ) ,Min( ( Const * AMS ) ,FirstVNF_CPU_Server ) ) ) - Min( AMS ,( DDR * DDR ) ) )", "choosing": "( ( RMSe * Min( ( RRSe * ( Min( ( MUC * CS ) ,Min( Max( DS,DS ) ,RMSe ) ) / Min( Max( CS,( DS + CS ) ) ,Max( Min( CS ,RCSe ),( RMSe * RRSe ) ) ) ) ) ,( MUC - MLU ) ) ) + ( MLU + MUC ) )", "obj1": 0.7430406852248393, "obj2": 0.14262076613090618}, {"determining": "( ( FirstVNF_CPU + AMS ) - ( ( MDR - ( FirstVNF_RAM_Server * MRS ) ) / Const ) )", "choosing": "( ( Min( Max( ( MUM * ( RRSe + RCSe ) ),( MUR * Min( Min( MUR ,DS ) ,MUM ) ) ) ,( DS + MUM ) ) * RMSe ) + ( CS - RRSe ) )", "obj1": 0.8779443254817987, "obj2": 0.06300196007083923}, {"determining": "( ( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + ( Const * MRS ) ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( RMSe + Min( MUM ,( RCSe / MLU ) ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.8501070663811563, "obj2": 0.08590399242236108}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / PN ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( RMSe + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( RMSe / ( MLU + RCSe ) ) )", "obj1": 0.8693790149892934, "obj2": 0.06523165540265308}, {"determining": "( Min( AMS ,( Min( MRS ,BR ) + ( Min( AMS ,( Min( MRS ,BR ) + ( AMS - DDR ) ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( ( RRSe - ( ( MUM - MUC ) + MUC ) ) - ( ( MUM - MUM ) + MUC ) ) ,( MUC * Min( CS ,DS ) ) ) * Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) )", "obj1": 0.9079229122055674, "obj2": 0.045742238786393254}, {"determining": "( ( BR + ( MDR + FirstVNF_Mem_Server ) ) - ( ( MDR - Min( CRS ,Max( ( MDR + FirstVNF_Mem_Server ),ARS ) ) ) / Const ) )", "choosing": "( ( Min( ( RMSe * ( MUC - ( RCSe - MUR ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 0.9528907922912205, "obj2": 0.02357000219936741}, {"determining": "( ( ( Min( ( FirstVNF_Mem_Server + ARS ) ,Min( BR ,FirstVNF_RAM ) ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + ( Max( RRSe,Min( MUC ,DS ) ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.8179871520342612, "obj2": 0.09135334419764304}, {"determining": "( ( PN * ( PN / FirstVNF_CPU_Server ) ) - ( CRS * DDR ) )", "choosing": "( Max( ( MUR * MUM ),MLU ) * ( ( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) ) - Max( MUC,Max( Max( DS,MUR ),RCSe ) ) ) )", "obj1": 0.715203426124197, "obj2": 0.14411204938271185}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( ( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) ) ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + Max( ( MUR + MUC ),DS ) ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.8029978586723768, "obj2": 0.09887716747601145}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) / MDR ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( ( ( RMSe - ( CS / DS ) ) + MUC ) - MUM ) / RCSe ) ) ) )", "obj1": 0.9379014989293362, "obj2": 0.031883218086430756}, {"determining": "( Min( AMS ,( MRS + ( ( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - Min( AMS ,CRS ) ) - DDR ) ) ) - Min( AMS ,CRS ) )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - ( ( Max( MUM,MUM ) / CS ) + RCSe ) ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9250535331905781, "obj2": 0.03748520261212534}, {"determining": "( ( AMS - DDR ) - Max( DDR,Const ) )", "choosing": "Min( ( MUR - DS ) ,( ( ( MUM - DS ) - Max( MUR,MUM ) ) / RCSe ) )", "obj1": 0.9100642398286938, "obj2": 0.044968733052736715}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) - ( ( ( ( DDR / PN ) + FirstVNF_Mem ) + MRS ) / ( Max( Max( Max( ( FirstVNF_Mem_Server / FirstVNF_Mem ),PN ),BR ),RRS ) / MDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( ( Min( ( MUC - MLU ) ,Max( ( Min( RMSe ,( RCSe - MUC ) ) + MUR ),MUM ) ) + ( CS / CS ) ) ,RMSe ) )", "obj1": 0.9764453961456103, "obj2": 0.012455059232731118}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RMSe ) - Max( MLU,Max( Max( DS,Max( DS,MUR ) ),RRSe ) ) ) * Max( Min( MUM ,MLU ),MLU ) )", "obj1": 0.7815845824411135, "obj2": 0.10873096983877972}, {"determining": "( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( ( ( AMS - RRS ) / ( MRS * RRS ) ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( ( ( Min( ( CS + MUC ) ,( RCSe * RRSe ) ) + RMSe ) * DS ) - MUC ) + ( ( ( MUC * DS ) * MUM ) / ( ( ( DS * ( MUM + MUM ) ) + MUR ) + ( MUM + CS ) ) ) ) + CS ) + Min( ( Min( ( ( DS / MUM ) * Min( ( DS + Min( MLU ,RRSe ) ) ,RRSe ) ) ,Min( Min( ( Max( RRSe,MUR ) / ( MUR * RMSe ) ) ,MUC ) ,( Max( RMSe,Max( MUR,RMSe ) ) * ( DS / ( RMSe / MUM ) ) ) ) ) + ( CS / MUC ) ) ,MUC ) )", "obj1": 0.9657387580299786, "obj2": 0.018336399491681046}, {"determining": "( ( DDR - BR ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( Min( Min( RMSe ,( CS / DS ) ) ,RMSe ) * ( RCSe - Min( ( RRSe + RCSe ) ,( DS / RRSe ) ) ) ) - ( ( Max( Min( RMSe ,CS ),Min( MLU ,DS ) ) + CS ) + ( Max( ( RRSe * RRSe ),MUM ) + RCSe ) ) ) * ( ( ( MUM / ( ( MUR + DS ) - ( MUC / RMSe ) ) ) / ( MUR * ( Min( RRSe ,RMSe ) + RCSe ) ) ) - RMSe ) ) + ( CS - CS ) ) + ( MLU + RRSe ) )", "obj1": 0.6788008565310493, "obj2": 0.25862051505199884}, {"determining": "( ( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) / FirstVNF_Mem ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( ( MUR + MUC ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.8308351177730193, "obj2": 0.09117737154403585}, {"determining": "( ( ( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - DDR ) - Const ) + ( Const * PN ) ) ) + RRS ) - ( ( FirstVNF_Mem_Server - RRS ) - ( MDR * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( MUC / MUR ) ,Max( MUM,MUR ) ) + ( ( Max( MUC,( RCSe - ( MUC + ( MUR / MUM ) ) ) ) - MLU ) - Min( ( MUC + DS ) ,MUM ) ) )", "obj1": 0.841541755888651, "obj2": 0.08893340910851717}, {"determining": "( ( PN * ( Const / DDR ) ) - ( MRS / Min( FirstVNF_RAM ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC / ( ( Max( RRSe,CS ) * Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( RRSe - MUR ) * MUC ) ) - ( ( Min( ( MUC * DS ) ,( DS - MUC ) ) + MUR ) - DS ) ) ) ) + Max( ( MUC * DS ),Max( ( ( Max( MUR,( ( MLU / MUC ) + ( RCSe + RCSe ) ) ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.708779443254818, "obj2": 0.15057210251876124}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - ( ( ( ACS / FirstVNF_CPU_Server ) * ( FirstVNF_RAM_Server + Const ) ) - ( FirstVNF_Mem_Server - Const ) ) )", "choosing": "( Min( MLU ,Max( DS,Max( DS,MUR ) ) ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7109207708779444, "obj2": 0.14648883592588982}, {"determining": "( ( ( Max( FirstVNF_RAM,BR ) * ( MDR * FirstVNF_CPU ) ) - Min( Min( ACS ,ARS ) ,Max( CRS,FirstVNF_RAM_Server ) ) ) - ( ( ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) * ( Max( FirstVNF_Mem_Server,MRS ) * ( PN / FirstVNF_Mem ) ) ) / ( Min( ARS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server + CRS ) ) ) )", "choosing": "( ( CS - Min( DS ,RMSe ) ) - Min( DS ,MUR ) )", "obj1": 0.9828693790149893, "obj2": 0.011062401193902477}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( RCSe,MLU ) * ( Max( Max( ( Max( MUC,Max( RRSe,( CS - MUR ) ) ) + RCSe ),( RCSe - ( RMSe - MUR ) ) ),MUC ) - ( RMSe + MLU ) ) )", "obj1": 0.7987152034261242, "obj2": 0.10157186700141857}, {"determining": "( ( ( Min( PN ,DDR ) / ( CRS * DDR ) ) * PN ) - Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "( Min( MLU ,MLU ) * ( ( MLU + RMSe ) - Max( MUC,( RRSe + RMSe ) ) ) )", "obj1": 0.7794432548179872, "obj2": 0.10976744928367696}, {"determining": "( ( ARS * CRS ) - Min( ( FirstVNF_CPU - ( FirstVNF_RAM * ( FirstVNF_CPU * ( ( AMS - DDR ) / Const ) ) ) ) ,( ( FirstVNF_CPU_Server * FirstVNF_CPU ) + Max( ARS,Const ) ) ) )", "choosing": "( Max( RMSe,DS ) + CS )", "obj1": 0.8372591006423983, "obj2": 0.09087032367079867}, {"determining": "( Min( AMS ,( Min( MRS ,FirstVNF_Mem_Server ) + ( AMS - DDR ) ) ) - ( ARS * ( MDR - PN ) ) )", "choosing": "( Max( Max( ( MUR + MUC ),DS ),( MUC * ( CS * MUM ) ) ) * ( ( Min( ( ( Max( MUM,MUM ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.7944325481798715, "obj2": 0.10341479538039305}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - Max( FirstVNF_RAM,( FirstVNF_CPU * ( Min( FirstVNF_Mem ,( ARS / Const ) ) / Const ) ) ) ) ,Max( FirstVNF_CPU_Server,Max( ARS,AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + Max( Min( DS ,Max( RRSe,MUM ) ),MLU ) ) / ( Min( Min( RMSe ,Min( RRSe ,RCSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),CS ) ) ) ) ) * MUC ) )", "obj1": 0.9271948608137045, "obj2": 0.0347188564596318}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( ARS ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( ( ( ( DS + ( ( MLU - CS ) + MLU ) ) / ( Min( Min( Max( RMSe,MLU ) ,Min( MUR ,RRSe ) ) ,( RRSe + DS ) ) - ( RRSe + MUM ) ) ) + ( ( MUR * DS ) - ( MLU + ( RRSe / Max( Min( DS ,DS ),MUM ) ) ) ) ) * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( Min( AMS ,( MRS + ( FirstVNF_RAM_Server - DDR ) ) ) - FirstVNF_Mem )", "choosing": "( Min( ( RRSe - ( ( MUM - MUM ) + MUC ) ) ,( MUC * MUR ) ) * ( ( Min( ( ( ( RCSe + RCSe ) / CS ) + RCSe ) ,( ( CS + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) - Min( MLU ,RMSe ) ) )", "obj1": 0.9850107066381156, "obj2": 0.007805259883074832}, {"determining": "( ( ( Const + ( FirstVNF_CPU_Server - Max( DDR,( DDR - ( AMS / ACS ) ) ) ) ) - Min( RRS ,FirstVNF_CPU ) ) - Min( AMS ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( Max( ( ( DS / ( RMSe / MUM ) ) / ( Min( MUR ,MUC ) * MUC ) ),RCSe ),MUC ) - ( MLU + RMSe ) ) )", "obj1": 0.9314775160599572, "obj2": 0.03410200739321517}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( ( ( ARS / RRS ) - FirstVNF_RAM ) - ( FirstVNF_RAM / Max( ( ACS + AMS ),( Max( MDR,BR ) / PN ) ) ) ) ) / Const ) )", "choosing": "( ( Min( Min( MUR ,MLU ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 0.9357601713062098, "obj2": 0.03387332020520841}, {"determining": "( Min( ( ( FirstVNF_Mem / MDR ) - ( FirstVNF_RAM * ( FirstVNF_CPU * ( Min( Max( Const,ARS ) ,ARS ) / Const ) ) ) ) ,Max( MRS,( BR * AMS ) ) ) - Min( RRS ,( MRS - MDR ) ) )", "choosing": "( Max( RMSe,DS ) + ( RRSe * MUC ) )", "obj1": 0.961456102783726, "obj2": 0.018529058557773356}, {"determining": "( ( ( MDR - Max( ( ( ACS - MDR ) * FirstVNF_CPU ),FirstVNF_Mem ) ) / Min( ( Const - AMS ) ,Max( ( FirstVNF_Mem_Server - DDR ),FirstVNF_CPU ) ) ) - Min( FirstVNF_CPU ,( FirstVNF_Mem - ( Min( ( Const * AMS ) ,MRS ) - Max( AMS,FirstVNF_Mem ) ) ) ) )", "choosing": "( Max( RMSe,Max( MUR,RMSe ) ) + Min( ( MLU - RMSe ) ,MLU ) )", "obj1": 0.987152034261242, "obj2": 0.00657170265065925}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - ( MDR - Min( BR ,ACS ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) ) ) )", "obj1": 0.9892933618843683, "obj2": 0.0051823972244858935}, {"determining": "( ( DDR + ( Const - ( DDR * Min( MDR ,AMS ) ) ) ) - Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe * DS ) ,RMSe ) + Max( ( ( Min( MUR ,( CS - Max( ( MUM / RMSe ),RRSe ) ) ) + CS ) + ( MUR * Min( ( ( MUR + ( RCSe - MUR ) ) / RCSe ) ,( Min( ( MUR - MLU ) ,RMSe ) * ( ( CS / MUC ) * RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.9935760171306209, "obj2": 0.0028298296610398724}, {"determining": "( Max( Const,FirstVNF_RAM ) - ( DDR * FirstVNF_Mem_Server ) )", "choosing": "( Min( ( MUC * MUR ) ,( MUR - ( ( RRSe - MUM ) + MUC ) ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( ( Max( RMSe,RCSe ) + MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 0.6788008565310493, "obj2": 0.25862051505199884}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( ( ( Min( MUM ,RCSe ) - ( DS / MLU ) ) * ( Min( CS ,DS ) * ( RRSe / MLU ) ) ) + ( ( ( DS + RCSe ) * Min( MUC ,DS ) ) + Min( ( MUR * MUR ) ,Max( CS,RCSe ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( ARS ,Min( AMS ,FirstVNF_CPU_Server ) ) - ( Max( ( MDR + FirstVNF_Mem_Server ),Min( ( CRS + CRS ) ,AMS ) ) - Min( ACS ,Const ) ) )", "choosing": "( ( Min( RMSe ,RCSe ) + ( MUC - ( MLU - ( RMSe * RMSe ) ) ) ) + ( MUC - Min( ( DS + DS ) ,Max( Max( DS,MLU ),MUM ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( ( ( MDR / BR ) / ACS ) * Min( FirstVNF_CPU ,BR ) ) - ( MRS / ( FirstVNF_RAM + ( FirstVNF_Mem / ( Min( ( ACS * FirstVNF_CPU ) ,Const ) / Max( Min( ( Const / FirstVNF_RAM ) ,Const ),( Const + MDR ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUC ) + Min( ( CS * MUR ) ,( Min( MLU ,( ( MUM / ( CS / MUR ) ) * ( DS + ( RMSe * MLU ) ) ) ) - ( ( Min( ( MUC * DS ) ,( DS / RRSe ) ) + MUC ) - RRSe ) ) ) ) + Max( Min( Min( RCSe ,RMSe ) ,( ( MUR - ( Min( MUC ,DS ) / ( ( DS - MUC ) * DS ) ) ) + MUC ) ),Max( ( ( ( ( ( RRSe * RRSe ) - MUM ) - RMSe ) * RRSe ) + ( CS / Max( RCSe,( ( RMSe / RCSe ) * Min( DS ,DS ) ) ) ) ),RCSe ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( ( Min( Min( BR ,PN ) ,Min( ARS ,PN ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_RAM + MDR ) ) ) - Max( Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ),Min( CRS ,CRS ) ),( ( ARS * RRS ) + Min( MRS ,DDR ) ) ) )", "choosing": "( Min( Max( ( MUR * RMSe ),( MUC * DS ) ) ,( ( MUM + MLU ) - Min( MUM ,DS ) ) ) * ( Max( Min( RRSe ,CS ),( CS - RCSe ) ) / Max( Max( RRSe,RCSe ),( RRSe + MUM ) ) ) )", "obj1": 0.9914346895074947, "obj2": 0.004145917779588715}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / ( ( Max( Max( Max( FirstVNF_Mem_Server,Max( FirstVNF_CPU_Server,( Const / CRS ) ) ),Const ),( MRS - FirstVNF_RAM_Server ) ) * CRS ) - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS - RCSe ) + Max( RMSe,MUM ) ) * ( Min( MUR ,CS ) / ( CS + ( MUR / MUC ) ) ) )", "obj1": 0.9978586723768736, "obj2": 0.0009362067691601704}, {"determining": "( ( PN / ( Const / DDR ) ) - Min( Min( ( ( Min( ( FirstVNF_CPU / ( DDR - MDR ) ) ,FirstVNF_CPU ) * ( ACS / CRS ) ) + ( AMS - ( ( FirstVNF_RAM_Server / ( FirstVNF_Mem * MDR ) ) - RRS ) ) ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( Min( Min( Min( ( RCSe + RRSe ) ,RMSe ) ,RMSe ) ,( Min( ( RRSe + RCSe ) ,Max( MUM,CS ) ) - RCSe ) ) - ( MUC * ( ( Max( RRSe,CS ) + Max( RRSe,RMSe ) ) + RMSe ) ) ) / DS ) + Max( RMSe,RRSe ) ) + Max( ( MUC * DS ),( RCSe / ( MUC / ( MUC * MLU ) ) ) ) )", "obj1": 0.9957173447537473, "obj2": 0.0021099970166134577}, {"determining": "( PN - Min( MDR ,( MDR + ( ( ( ( ( BR + PN ) / ( BR - RRS ) ) - ( Min( RRS ,FirstVNF_Mem ) + MRS ) ) - FirstVNF_RAM_Server ) / ( FirstVNF_RAM + DDR ) ) ) ) )", "choosing": "( Max( ( DS / ( RCSe + MLU ) ),MUC ) + ( MUC - Min( ( MUR * Min( RCSe ,Max( MUR,( ( MUC - RCSe ) / RMSe ) ) ) ) ,Max( Max( MLU,DS ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - Max( BR,( ( ARS + ARS ) * FirstVNF_CPU_Server ) ) ) - Const ) + Max( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ),( FirstVNF_RAM * ( RRS / ( ( FirstVNF_CPU + Max( BR,Max( MRS,FirstVNF_Mem ) ) ) + ( Max( FirstVNF_Mem_Server,CRS ) / CRS ) ) ) ) ) )", "choosing": "Min( ( MLU - ( ( ( ( Max( Min( MLU ,RMSe ),( MUM / RCSe ) ) - ( MUC / MUR ) ) * MUR ) / ( MLU / RMSe ) ) * ( RRSe / RMSe ) ) ) ,( Min( ( ( RMSe / RRSe ) - ( MLU + CS ) ) ,( MUR + RMSe ) ) / ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( ( ARS / Const ) ,FirstVNF_Mem ) * CRS ) ,MRS ) - ARS ) - ( Min( ( ( ( DDR - ( Const - CRS ) ) * RRS ) + FirstVNF_Mem ) ,( Const - CRS ) ) / Const ) )", "choosing": "( ( Min( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) ,( MLU * ( Max( Min( Min( RCSe ,CS ) ,Max( MUR,MUC ) ),CS ) * MUC ) ) ) * RMSe ) + ( MUC * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / ( ( MDR + RRS ) - ACS ) ) )", "choosing": "Min( ( ( DS / ( RCSe / Min( ( MUC / RRSe ) ,( Max( CS,MLU ) * RMSe ) ) ) ) - RRSe ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,( ( ( MUM * MUR ) / MUR ) * ( RMSe / RRSe ) ) ) - Max( CS,( ( Min( Min( DS ,RCSe ) ,Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MDR ,( FirstVNF_Mem + ( ( Min( ( BR + BR ) ,FirstVNF_Mem_Server ) - ( MDR / FirstVNF_Mem ) ) / FirstVNF_CPU ) ) ) / RRS ) - ( FirstVNF_CPU + AMS ) )", "choosing": "Min( ( RMSe / ( ( RRSe / MUM ) / ( CS + MUM ) ) ) ,Min( MUR ,Max( Min( ( MUM / MUM ) ,RMSe ),Max( MUC,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( DDR / Min( BR ,( MRS - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - ( RMSe / RRSe ) ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( MLU - CS ) ,( Max( ( Min( MUR ,Min( MUC ,( Min( MUC ,MUM ) / MLU ) ) ) / RRSe ),DS ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( RMSe / Max( Min( ( RRSe - MUM ) ,MLU ),RCSe ) ) ,( ( MUM - MLU ) * ( MLU / ( RCSe * ( ( Min( MLU ,( CS / MUM ) ) + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( RRS,PN ) + ( Const - ACS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Const / Min( BR ,ARS ) ) ) / AMS ) )", "choosing": "Min( ( MLU + Max( ( CS / RRSe ),( ( MUM * RMSe ) * MUM ) ) ) ,( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS - Max( AMS,FirstVNF_CPU_Server ) ) / MRS ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) - Min( ( BR - Min( FirstVNF_CPU_Server ,RRS ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU + Max( MUR,CS ) ) ,( ( RMSe - RRSe ) * ( CS + Max( ( MUC / RCSe ),RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * Min( ( BR - ( ACS + ( RRS * BR ) ) ) ,FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( MLU / ( Max( Max( Min( ( ( RMSe / CS ) / ( MUM / MUC ) ) ,RMSe ),MUM ),( RMSe / ( MLU + RCSe ) ) ) / ( MUR / Min( ( RMSe / MUR ) ,( ( RRSe + ( DS - MLU ) ) * ( MUR - Min( MUC ,RMSe ) ) ) ) ) ) ) ,( ( MUC - RRSe ) * ( MLU / ( Min( DS ,DS ) * ( ( MUM + MUC ) * RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - MRS ) / ( Max( PN,RRS ) - FirstVNF_Mem ) )", "choosing": "Min( ( ( ( MUM + MUR ) / Max( MUM,MUC ) ) + Max( ( MLU / MUM ),( ( ( RRSe - CS ) - ( RRSe / Max( DS,MLU ) ) ) + RMSe ) ) ) ,( ( ( MLU - MLU ) / Min( RRSe ,MLU ) ) * ( Min( RRSe ,RCSe ) - Max( CS,( ( ( Min( DS ,RCSe ) - Min( DS ,MLU ) ) - DS ) - CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - RRS ) / FirstVNF_Mem ) + ( ( DDR / ( Max( FirstVNF_CPU_Server,ARS ) * ( ( BR - ( ( FirstVNF_RAM * BR ) + ACS ) ) * FirstVNF_CPU ) ) ) / CRS ) )", "choosing": "Min( ( RMSe / ( MUR - ( DS + Max( ( MUM * MUM ),MUM ) ) ) ) ,( ( ( RCSe * ( ( MUM + MUC ) * RMSe ) ) / MLU ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem * ( BR - Max( ( FirstVNF_RAM_Server / ( Const * PN ) ),FirstVNF_Mem ) ) ) + ( BR / CRS ) ) ,Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( Min( DS ,Min( ( RMSe - CS ) ,( Min( ( MUR + ( CS / ( RRSe + MUM ) ) ) ,( ( MLU / MUR ) * ( CS / ( DS - RMSe ) ) ) ) * MUM ) ) ) ,( MUR / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + Const ) + ( MRS + ( BR - ( ( CRS - PN ) + ACS ) ) ) )", "choosing": "Min( ( MLU / ( ( MUC + ( MUM - Min( ( MUM / ( MUM * MUC ) ) ,RMSe ) ) ) / ( MUR / Min( ( CS / RCSe ) ,( ( RRSe * ( DS - MLU ) ) * ( CS - MUC ) ) ) ) ) ) ,( ( MLU / ( RCSe * ( ( MUM + MUC ) * RMSe ) ) ) * ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + CRS ) - ( ( ( FirstVNF_Mem_Server + Min( Min( AMS ,ACS ) ,ARS ) ) / FirstVNF_Mem_Server ) / Const ) )", "choosing": "( ( Min( ( RRSe * ( MUC - ( ( ( DS - RCSe ) * RMSe ) - RMSe ) ) ) ,RMSe ) * RMSe ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * Min( Min( MDR ,FirstVNF_Mem ) ,( ( ARS - ( FirstVNF_Mem / BR ) ) + BR ) ) ) + FirstVNF_CPU )", "choosing": "( ( CS / RCSe ) - ( ( RMSe / Max( ( MUM * MUC ),RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( Min( FirstVNF_CPU_Server ,Max( PN,DDR ) ) ,FirstVNF_Mem ) )", "choosing": "( Max( MUM,MLU ) * ( Max( MUC,Max( Max( DS,( ( ( RRSe * RMSe ) * ( RCSe * RRSe ) ) * ( ( DS - RRSe ) * RMSe ) ) ),( RMSe + ( ( MUR - CS ) + ( MUC - MUM ) ) ) ) ) - ( Min( ( Max( ( ( MUM + CS ) - MUM ),Min( RRSe ,( MUC - MUR ) ) ) + RCSe ) ,RMSe ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) - Max( ( ( Max( ( Min( AMS ,DDR ) + ( FirstVNF_RAM_Server + AMS ) ),FirstVNF_CPU ) + FirstVNF_Mem ) + MRS ),( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,RMSe ) + Min( MUC ,( Min( ( ( DS / MUM ) * Min( ( RCSe - MUR ) ,RRSe ) ) ,Max( MUM,MUM ) ) + ( CS / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * MRS ) / FirstVNF_Mem_Server ) - Max( PN,RRS ) )", "choosing": "Max( Max( Max( ( DS + DS ),( RMSe * MUC ) ),MUR ),( RCSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) * ( BR / Min( ( ( Max( ACS,ACS ) * BR ) - ( Const + MDR ) ) ,FirstVNF_CPU ) ) ) ,Min( BR ,FirstVNF_RAM ) )", "choosing": "Min( Min( Max( CS,( MLU + ( Min( MUM ,Min( RRSe ,( MUM + MLU ) ) ) * MLU ) ) ) ,DS ) ,( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Min( RRS ,Const ) ,( Const - FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_Mem ) ) ,( Min( ( RRS * MDR ) ,( CRS * Const ) ) + ( ( MRS * FirstVNF_CPU ) + Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MLU / RMSe ) / RCSe ) - RMSe ) * ( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + ( ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( MDR ,MRS ) ) - PN ) ) - Min( BR ,FirstVNF_Mem ) )", "choosing": "( Min( RMSe ,( RCSe * DS ) ) + Max( ( ( Min( MUR ,( Max( ( MUM / MUM ),RRSe ) - DS ) ) + CS ) + ( MUR * Min( ( ( MLU + Min( RCSe ,MUR ) ) / RCSe ) ,( ( RCSe - MLU ) * ( ( MLU / MUC ) * RMSe ) ) ) ) ),( Min( ( ( RMSe - RMSe ) + ( ( Min( MUM ,RCSe ) - DS ) / Max( ( DS - RCSe ),( MUM - MLU ) ) ) ) ,Max( ( MUR + MLU ),DS ) ) * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) - Max( AMS,( Max( Const,ARS ) / ( CRS * Min( ( CRS * Min( FirstVNF_Mem ,( ARS / RRS ) ) ) ,( RRS - MDR ) ) ) ) ) )", "choosing": "Min( Min( RMSe ,( Min( DS ,( MLU - RMSe ) ) - RRSe ) ) ,( ( DS + RMSe ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_Mem ,AMS ) ,( ( FirstVNF_RAM_Server - Const ) + Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( RRSe + MLU ) + RCSe ),( ( Max( Min( ( MUC - DS ) ,Min( RRSe ,Min( ( RCSe * RRSe ) ,( MUM + CS ) ) ) ),Max( ( ( Max( RCSe,RMSe ) - RRSe ) - ( DS - RRSe ) ),DS ) ) / Min( DS ,( MUM / CS ) ) ) - ( CS + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM * ( FirstVNF_Mem - FirstVNF_CPU ) ),( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / ( RRS - Min( MDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS * RCSe ) + Max( MUM,RMSe ) ) * Min( MLU ,( ( ( Max( ( Max( MLU,CS ) * ( MUM + CS ) ),RMSe ) * RMSe ) + CS ) * ( ( RMSe + MUC ) / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ACS,BR ) / ( ( ( DDR + FirstVNF_RAM ) * MRS ) / ARS ) ) + Max( RRS,DDR ) ) ,( ( Min( Const ,( Const - ARS ) ) + AMS ) + ( BR - CRS ) ) )", "choosing": "Min( ( MLU * Max( RMSe,( MUC - ( RRSe * ( ( RMSe + Max( RMSe,DS ) ) + ( DS / MUM ) ) ) ) ) ) ,( ( RCSe - MUM ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( Min( ACS ,MRS ),DDR ) * FirstVNF_Mem ) / Max( FirstVNF_CPU,FirstVNF_CPU ) ) - Max( ( RRS + ( ACS * FirstVNF_RAM ) ),FirstVNF_RAM ) )", "choosing": "( ( RRSe - DS ) + Min( ( MUM * RCSe ) ,( RCSe * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * ACS ) ,( AMS + ACS ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - ( PN + FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUC - MUR ),( RRSe / DS ) ) / Max( ( CS - MUR ),Max( CS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - ARS ) + RRS ) + ( ( RRS * FirstVNF_RAM_Server ) + MRS ) )", "choosing": "Max( ( CS * DS ),( Min( MUM ,MUR ) / ( RRSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / AMS ) / ( AMS + RRS ) ) - Max( ( FirstVNF_CPU * FirstVNF_CPU_Server ),( AMS + ARS ) ) )", "choosing": "Max( ( MUR - Max( MUC,DS ) ),( ( MUM - CS ) / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ARS * AMS ) ,( MDR - Const ) ) ,( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_CPU_Server + DDR ) ) )", "choosing": "( ( Max( DS,MUC ) * ( MUM / MUR ) ) * ( ( MUM / CS ) + ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR - ACS ) / Max( ACS,FirstVNF_RAM ) ) ,( Min( AMS ,FirstVNF_Mem ) - ( CRS + BR ) ) )", "choosing": "( Max( ( MUM + RCSe ),( RMSe - CS ) ) + ( Min( DS ,MLU ) + ( MUM - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * PN ) / ( RRS / CRS ) ) ,Min( Max( DDR,RRS ) ,( Const - DDR ) ) )", "choosing": "( ( ( DS * MUM ) - ( MUC - RRSe ) ) * Max( Max( MLU,DS ),( MUC + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( RRS + CRS ),( ARS - FirstVNF_CPU ) ) / ( ( AMS + FirstVNF_RAM_Server ) * ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) ) - Min( ( ( FirstVNF_RAM_Server - Const ) / Min( FirstVNF_CPU ,PN ) ) ,( Max( FirstVNF_RAM_Server,BR ) * ( FirstVNF_CPU_Server / CRS ) ) ) )", "choosing": "( Min( ( RRSe / ( MUR - MUR ) ) ,( ( DS / DS ) - MUC ) ) * ( MUR / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( CRS * ARS ) ,( FirstVNF_CPU * BR ) ) + ( ( PN + Const ) - Max( FirstVNF_Mem_Server,RRS ) ) ) ,( ( ( Const * FirstVNF_RAM ) - ( PN / FirstVNF_RAM_Server ) ) + ( ( PN - FirstVNF_CPU_Server ) * ( MDR - ARS ) ) ) )", "choosing": "( ( MUC - RRSe ) / ( ( DS / RRSe ) * ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS / MDR ) + ( CRS - FirstVNF_CPU ) ) ,Min( ( Const + RRS ) ,( BR * CRS ) ) ) - Min( ( ( MDR / ACS ) + Max( ACS,ARS ) ) ,( ( PN / FirstVNF_Mem ) - Min( ARS ,PN ) ) ) )", "choosing": "Max( ( RMSe - RCSe ),( ( MUM - ( DS - RMSe ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + MRS ) - Max( DDR,CRS ) )", "choosing": "Max( ( ( MUM - MUR ) + Min( ( MUR - CS ) ,MUM ) ),( MUC - ( ( CS - RCSe ) + MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_RAM / CRS ) ) - Min( FirstVNF_RAM_Server ,Max( Max( DDR,BR ),ACS ) ) )", "choosing": "( Min( ( MUC * MUR ) ,Max( RMSe,RRSe ) ) * ( Min( MLU ,RMSe ) - ( Min( ( Max( Max( Max( RMSe,RCSe ),MUR ),RMSe ) + RCSe ) ,( ( Min( ( MLU - MUC ) ,MUR ) + MUM ) * MUC ) ) * ( RCSe - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU_Server ) + ( ACS * Min( AMS ,RRS ) ) )", "choosing": "Min( Min( RMSe ,MUC ) ,( ( MLU / RMSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( Max( Max( RRSe,MUR ),( RCSe * CS ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) - Max( MUR,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ARS ,( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) ,( DDR + FirstVNF_Mem ) )", "choosing": "Min( ( MUC * RMSe ) ,Max( CS,( CS / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR + FirstVNF_Mem ) - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - Min( ( MUC * RMSe ) ,Max( CS,MUC ) ) ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS - DDR ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( MUR - DS ) ,( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS - FirstVNF_RAM_Server ),PN ) / FirstVNF_Mem ) - ( FirstVNF_Mem * AMS ) )", "choosing": "Max( ( ( Max( MUR,DS ) / RRSe ) / RCSe ),( MUM - RMSe ) )", "obj1": 1.0, "obj2": 0.0}]}