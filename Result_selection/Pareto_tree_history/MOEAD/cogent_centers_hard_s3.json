{"1": [{"determining": "( Min( FirstVNF_Mem ,MRS ) / ( Const + FirstVNF_CPU_Server ) )", "choosing": "Min( ( MUM / CS ) ,( MUC - MUC ) )", "obj1": 0.7288461538461538, "obj2": 0.2510932557945343}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem + ACS ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + DS ),( RMSe + MLU ) )", "obj1": 0.698076923076923, "obj2": 0.26400162866475}, {"determining": "Min( ( FirstVNF_CPU / RRS ) ,( AMS - RRS ) )", "choosing": "Min( ( RRSe - CS ) ,( MUR * MUC ) )", "obj1": 0.7192307692307692, "obj2": 0.24011533339545257}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * ( FirstVNF_CPU_Server * FirstVNF_CPU ) )", "choosing": "( ( MUC * CS ) - ( CS / MLU ) )", "obj1": 0.7423076923076923, "obj2": 0.2426575971369792}, {"determining": "( ( Max( MRS,( FirstVNF_RAM_Server - AMS ) ) - BR ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - ( ( RCSe - RMSe ) - DS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) )", "choosing": "Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) )", "obj1": 0.7269230769230769, "obj2": 0.2601694170442694}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - ( ACS * BR ) )", "choosing": "Max( ( CS - MUM ),( RRSe / CS ) )", "obj1": 0.7326923076923076, "obj2": 0.24958236814972473}, {"determining": "Max( ( FirstVNF_CPU_Server * FirstVNF_Mem ),( FirstVNF_Mem / FirstVNF_RAM_Server ) )", "choosing": "( ( MUC - MLU ) - ( MUM + MUR ) )", "obj1": 0.7, "obj2": 0.26968639340464096}, {"determining": "Min( Min( AMS ,BR ) ,( ACS - MDR ) )", "choosing": "( Max( DS,MLU ) / ( RMSe / CS ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * ( ACS - ACS ) )", "choosing": "( ( RRSe + RRSe ) * ( MLU / MLU ) )", "obj1": 0.7403846153846154, "obj2": 0.2564692901846371}, {"determining": "Min( ( BR / FirstVNF_CPU_Server ) ,Min( ACS ,FirstVNF_Mem ) )", "choosing": "Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) )", "obj1": 0.7346153846153847, "obj2": 0.2434927336235659}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( MLU,MUR ) ,( MUC / MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.0874659885696508}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) )", "choosing": "( ( MLU / RMSe ) - ( RRSe * CS ) )", "obj1": 0.6519230769230769, "obj2": 0.26679137555663957}, {"determining": "( Max( ACS,FirstVNF_Mem ) / Min( ( AMS - Max( Max( Const,CRS ),MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUM ) - ( RCSe - MUM ) )", "obj1": 0.7346153846153847, "obj2": 0.24722845409499403}, {"determining": "( ( MDR - CRS ) + ( BR + DDR ) )", "choosing": "Max( ( DS - MLU ),( DS + DS ) )", "obj1": 0.7615384615384615, "obj2": 0.20746427933425224}, {"determining": "( Min( MDR ,FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) )", "choosing": "( ( RCSe / MUC ) + ( RMSe - MUM ) )", "obj1": 0.7096153846153846, "obj2": 0.2567312230633943}, {"determining": "Min( ( FirstVNF_CPU_Server * ARS ) ,Min( FirstVNF_RAM ,FirstVNF_Mem ) )", "choosing": "Min( Max( MUC,RRSe ) ,( RCSe + DS ) )", "obj1": 0.7403846153846154, "obj2": 0.2562988327946949}, {"determining": "( Min( MRS ,FirstVNF_RAM_Server ) * Min( MRS ,MDR ) )", "choosing": "( ( DS - MUC ) + ( MLU - Max( MLU,RCSe ) ) )", "obj1": 0.7615384615384615, "obj2": 0.2328723719228651}, {"determining": "( Min( FirstVNF_RAM_Server ,DDR ) + ( AMS / RRS ) )", "choosing": "( ( CS * MUM ) * ( MLU / MUM ) )", "obj1": 0.7596153846153846, "obj2": 0.2451948611677189}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const / Const ),Min( ARS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,MLU ) / ( MUM - DS ) )", "obj1": 0.7288461538461538, "obj2": 0.2528856638680318}, {"determining": "( Max( FirstVNF_Mem_Server,DDR ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / DS ) + ( CS - MUC ) )", "obj1": 0.7134615384615385, "obj2": 0.285292246137489}, {"determining": "( ( ACS / Const ) - Min( DDR ,DDR ) )", "choosing": "Min( Max( CS,CS ) ,( CS + MUC ) )", "obj1": 0.7403846153846154, "obj2": 0.2547954379170773}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + ( CRS + DDR ) )", "choosing": "( ( ( ( DS - CS ) * ( ( MLU + Max( RMSe,RCSe ) ) / DS ) ) * Min( RRSe ,MUM ) ) * ( DS * MUC ) )", "obj1": 0.7076923076923077, "obj2": 0.23392958944255465}, {"determining": "Min( Min( AMS ,ACS ) ,Max( DDR,FirstVNF_RAM_Server ) )", "choosing": "( Max( CS,RMSe ) + Max( CS,RRSe ) )", "obj1": 0.7326923076923076, "obj2": 0.25288114356907654}, {"determining": "Max( ( Max( FirstVNF_Mem,( PN * FirstVNF_Mem_Server ) ) * FirstVNF_CPU ),( MRS + FirstVNF_Mem ) )", "choosing": "Max( ( Max( Min( RCSe ,CS ),RMSe ) - MUR ),( RCSe * RRSe ) )", "obj1": 0.7480769230769231, "obj2": 0.26348739489831124}, {"determining": "Min( ( ( ARS - BR ) * Max( FirstVNF_Mem,MDR ) ) ,( MRS / ARS ) )", "choosing": "( Min( CS ,( RMSe - ( MUR - DS ) ) ) / ( RCSe / CS ) )", "obj1": 0.8365384615384616, "obj2": 0.17473166584491054}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem ,AMS ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe * DS ) / Min( MLU ,Max( Min( CS ,RMSe ),MLU ) ) )", "obj1": 0.7307692307692307, "obj2": 0.25553381852643914}, {"determining": "Min( ( ( MRS * BR ) - Min( ( DDR - ( CRS / FirstVNF_CPU_Server ) ) ,DDR ) ) ,( PN + MDR ) )", "choosing": "Min( ( RRSe + MUC ) ,( Min( ( RMSe + DS ) ,( DS + ( RMSe - MUM ) ) ) / MUM ) )", "obj1": 0.7307692307692307, "obj2": 0.24377262508399694}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,MDR ) + ( FirstVNF_CPU - CRS ) )", "choosing": "( Min( RMSe ,MLU ) / ( CS / MUC ) )", "obj1": 0.6692307692307692, "obj2": 0.2591969733361262}, {"determining": "( ( PN + DDR ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( CS + RRSe ) * ( DS - RRSe ) )", "obj1": 0.7884615384615384, "obj2": 0.2205931217552217}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( CS - MUM ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( PN / MDR ) * MRS ),Min( ( FirstVNF_Mem_Server - DDR ) ,( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( MUC / MUR ) * Max( RCSe,RMSe ) ) ,( ( RRSe + CS ) - Max( CS,MUM ) ) )", "obj1": 0.7615384615384615, "obj2": 0.25634132314184077}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( ( MRS + BR ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( MLU - MUC ),RMSe ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Max( Min( PN ,Max( RRS,RRS ) ),Const ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( Max( MUM,Min( ( MLU * MLU ) ,Max( ( DS - MUM ),( MUR + RCSe ) ) ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( ( ACS - BR ) / Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - RRSe ) ) )", "obj1": 0.7673076923076924, "obj2": 0.2421357848744397}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_Mem / AMS ) ) / Max( Min( FirstVNF_RAM_Server ,DDR ),( AMS + MRS ) ) )", "choosing": "( ( ( CS / CS ) * Max( CS,MLU ) ) + ( Min( DS ,RCSe ) / ( MUC * RMSe ) ) )", "obj1": 0.6961538461538461, "obj2": 0.23740616219772284}, {"determining": "( Min( Max( RRS,FirstVNF_RAM ) ,( MRS / ARS ) ) / ( AMS + BR ) )", "choosing": "Min( ( MUC * ( DS - CS ) ) ,( RMSe * CS ) )", "obj1": 0.7442307692307693, "obj2": 0.24387415329112536}, {"determining": "Min( Max( ( FirstVNF_Mem_Server * AMS ),( FirstVNF_RAM - AMS ) ) ,Max( Max( FirstVNF_RAM,BR ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( ( ( MUC / RCSe ) * Max( MLU,RMSe ) ) / Max( ( RMSe - DS ),( RCSe * MLU ) ) )", "obj1": 0.7653846153846153, "obj2": 0.25388888110887115}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( Max( ( BR * MDR ),( ACS + FirstVNF_Mem ) ) * Min( ( PN + BR ) ,( PN + MDR ) ) )", "choosing": "Max( ( ( MUR + RMSe ) + Min( MUM ,RCSe ) ),( MUR / CS ) )", "obj1": 0.7096153846153846, "obj2": 0.2584966301122533}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ),( PN * ( DDR / BR ) ) )", "choosing": "( Min( Max( RMSe,MUR ) ,( MUC * RMSe ) ) - ( ( MUM - CS ) - ( MLU + MUM ) ) )", "obj1": 0.7692307692307693, "obj2": 0.2500597391097152}, {"determining": "Max( ( Max( ARS,ARS ) / ( MDR + RRS ) ),Max( ( CRS / FirstVNF_RAM ),( MDR * FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,RMSe ) / ( RRSe / MUC ) ) / ( ( RCSe * RCSe ) / ( MUR / MUM ) ) )", "obj1": 0.7480769230769231, "obj2": 0.2648881948553543}, {"determining": "Max( ( Min( DDR ,CRS ) / Max( AMS,MDR ) ),( Max( Const,ACS ) - Min( Const ,FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RRSe / CS ),( Min( RRSe ,MUR ) / ( MUC + DS ) ) )", "obj1": 0.7634615384615384, "obj2": 0.2594869546907578}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_Mem / ( MDR - Const ) ) )", "choosing": "( ( ( RRSe + MUM ) / ( MUM / MLU ) ) / Max( ( RCSe * CS ),MLU ) )", "obj1": 0.7230769230769231, "obj2": 0.22897434137593453}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( AMS / ( MRS / CRS ) ),( ( Const * FirstVNF_Mem ) - PN ) )", "choosing": "( Max( ( CS - MLU ),( DS * CS ) ) + ( Max( MUC,RMSe ) / ( DS + RRSe ) ) )", "obj1": 0.7173076923076923, "obj2": 0.25222306688089063}, {"determining": "Max( ( ( DDR - FirstVNF_RAM ) * Min( Const ,ARS ) ),( ( FirstVNF_CPU_Server + MRS ) * ( FirstVNF_Mem_Server - ACS ) ) )", "choosing": "( ( ( MUR - RMSe ) - MUC ) + Max( RRSe,MUC ) )", "obj1": 0.7903846153846154, "obj2": 0.20048809016992003}, {"determining": "Max( ( ( FirstVNF_Mem_Server * RRS ) / ( PN * DDR ) ),Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),Min( Const ,PN ) ) )", "choosing": "Max( ( MUM - ( RMSe / MUC ) ),( ( MUR / RRSe ) - MUR ) )", "obj1": 0.7307692307692307, "obj2": 0.24956821474649935}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR + Max( ARS,Const ) ) ,Max( RRS,PN ) )", "choosing": "Max( Min( ( RCSe + DS ) ,( RMSe / RRSe ) ),Min( ( DS + MUC ) ,( RRSe * MUC ) ) )", "obj1": 0.7538461538461538, "obj2": 0.2564199249430402}, {"determining": "( ( MRS / FirstVNF_Mem_Server ) / ( Max( FirstVNF_CPU_Server,RRS ) + FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( MUR / DS ) ) / ( ( DS * MUR ) / ( MUM / MLU ) ) )", "obj1": 0.7403846153846154, "obj2": 0.2808325427844938}, {"determining": "Max( ( MRS / MDR ),( MDR - ARS ) )", "choosing": "Min( ( ( MUC * MLU ) * MUC ) ,Min( MUR ,RCSe ) )", "obj1": 0.7596153846153846, "obj2": 0.2539823104886295}, {"determining": "Max( ( FirstVNF_Mem_Server * ( ACS * Const ) ),( BR / FirstVNF_RAM ) )", "choosing": "( ( RRSe + MUR ) * ( RMSe / RCSe ) )", "obj1": 0.7634615384615384, "obj2": 0.2520075054654471}, {"determining": "Max( ( Min( ACS ,CRS ) - ( CRS - FirstVNF_RAM_Server ) ),( Min( MRS ,CRS ) * Min( MDR ,FirstVNF_Mem ) ) )", "choosing": "( Max( RCSe,( MUC * MUR ) ) / ( CS * RMSe ) )", "obj1": 0.6826923076923077, "obj2": 0.25426995782358613}, {"determining": "( Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - DDR ) )", "choosing": "Max( Max( Max( RCSe,MUR ),( MLU - MLU ) ),( ( RCSe - RMSe ) / RCSe ) )", "obj1": 0.7153846153846154, "obj2": 0.23635204638618443}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( DDR - Min( Const ,FirstVNF_CPU_Server ) ) - DDR ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Max( Min( Min( CS ,CS ) ,( RMSe - RMSe ) ),MUR ) ,Min( MUM ,RMSe ) ) / Max( ( CS - MUM ),( CS - MUR ) ) )", "obj1": 0.7788461538461539, "obj2": 0.2329757714972156}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + RRSe ) * MUC ) ) )", "obj1": 0.8442307692307692, "obj2": 0.14134867197756995}, {"determining": "( ( FirstVNF_Mem / RRS ) - ( CRS - CRS ) )", "choosing": "( ( RCSe / MUM ) * ( RRSe + RRSe ) )", "obj1": 0.7442307692307693, "obj2": 0.26683431408885133}, {"determining": "( ( DDR - FirstVNF_RAM ) * Min( AMS ,Const ) )", "choosing": "( Min( Min( Max( DS,DS ) ,( MUM / MUM ) ) ,Min( Max( MUR,MUC ) ,( RMSe * MUM ) ) ) - ( ( Max( MUR,RCSe ) - ( RMSe - MUC ) ) / Min( ( MUC / RCSe ) ,( CS - MUC ) ) ) )", "obj1": 0.8442307692307692, "obj2": 0.15138979026455684}, {"determining": "( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) / ( RRS + ACS ) ) ,( ( BR + ( DDR / FirstVNF_RAM ) ) / ( FirstVNF_Mem + CRS ) ) ) / ( Max( Min( BR ,RRS ),( FirstVNF_Mem_Server - DDR ) ) - ( ( MDR + Const ) * ( BR - FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( RCSe * Min( ( RMSe * MUM ) ,RRSe ) ) / ( ( Min( MUM ,MUC ) - Min( DS ,RRSe ) ) + MUC ) )", "obj1": 0.7423076923076923, "obj2": 0.2754712247871013}, {"determining": "( Max( Min( ( PN - Const ) ,( AMS + AMS ) ),Max( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( ( Max( MDR,( FirstVNF_RAM / BR ) ) - Min( Max( CRS,BR ) ,ACS ) ) + ARS ) )", "choosing": "( Max( ( Min( MUR ,MUC ) + Max( DS,CS ) ),( ( DS + RCSe ) + ( DS + MLU ) ) ) * ( Min( ( Min( RRSe ,CS ) - RCSe ) ,MUM ) / Max( RCSe,MUR ) ) )", "obj1": 0.7596153846153846, "obj2": 0.26575333520721584}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( ACS / AMS ) ) - Min( AMS ,PN ) )", "choosing": "Min( ( Max( ( CS + MUM ),( MUM / RCSe ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24821906900660495}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * MDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( ( CS + RMSe ) + ( RMSe * RRSe ) ),( ( MUM + MLU ) * ( MUC * CS ) ) ) )", "obj1": 0.6961538461538461, "obj2": 0.24073818486949328}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * ARS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) )", "choosing": "( ( RCSe + RMSe ) + ( RMSe + MUM ) )", "obj1": 0.7153846153846154, "obj2": 0.2526149078654409}, {"determining": "( ( ( ( ACS / FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_CPU_Server ) ) + ( Min( MDR ,FirstVNF_RAM ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( Max( RRS,FirstVNF_Mem ) + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_Mem / DDR ),( FirstVNF_RAM * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( RMSe * MUM ) + Max( DS,MUC ) ) - ( ( RRSe * DS ) * ( MLU + MLU ) ) ) / Min( Max( Max( MLU,MUM ),Min( RRSe ,MLU ) ) ,( Max( RCSe,MUC ) / ( MUC + CS ) ) ) )", "obj1": 0.7115384615384616, "obj2": 0.2556575088120902}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( Min( RMSe ,RMSe ),Min( CS ,RCSe ) ) + ( ( RCSe / MUM ) + Min( MUM ,RMSe ) ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.8807692307692307, "obj2": 0.11255763336710746}, {"determining": "( ( ( Max( ACS,ACS ) - Min( ACS ,RRS ) ) - Max( ( FirstVNF_CPU / BR ),( BR + AMS ) ) ) * ( ( Min( BR ,Const ) + ( DDR - Const ) ) / ( ( Const - ACS ) * ( CRS / ACS ) ) ) )", "choosing": "Min( ( ( Min( DS ,RRSe ) * Max( MLU,CS ) ) + ( Max( MLU,MUC ) / ( RCSe * MUR ) ) ) ,Min( ( ( CS / DS ) * ( RRSe / RRSe ) ) ,( ( RRSe + MLU ) / ( MUR / RCSe ) ) ) )", "obj1": 0.7653846153846153, "obj2": 0.24674672569212874}, {"determining": "Min( Min( PN ,AMS ) ,Max( RRS,Min( DDR ,( RRS / PN ) ) ) )", "choosing": "( Min( Min( Min( DS ,RRSe ) ,( RRSe - MUC ) ) ,( Max( DS,CS ) + Min( MUR ,MUR ) ) ) * ( ( ( RCSe - MUM ) + ( MLU + MUM ) ) - ( Max( MUC,MLU ) / ( MUM / MLU ) ) ) )", "obj1": 0.7461538461538462, "obj2": 0.272255003598514}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / ACS ) * Max( AMS,( ( FirstVNF_RAM_Server * ARS ) * ( MDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( ( Min( MUM ,MUM ) - MUR ) / Max( CS,( RMSe * MLU ) ) ) )", "obj1": 0.7557692307692307, "obj2": 0.2645408436773554}, {"determining": "( ( MRS + ARS ) * ( ( Min( ACS ,ARS ) / BR ) / PN ) )", "choosing": "( ( ( ( RMSe / MUC ) / ( MUM + RCSe ) ) * ( Max( RRSe,DS ) - ( MUR / MUM ) ) ) - Max( ( Min( CS ,MUR ) - Max( RRSe,RRSe ) ),( ( MUC - MUR ) * Min( MUC ,RMSe ) ) ) )", "obj1": 0.775, "obj2": 0.2382488634044304}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - CRS ) ,( MDR - FirstVNF_CPU ) ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,( MDR - PN ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) )", "choosing": "( Max( ( ( MUM / DS ) + CS ),RRSe ) / Max( RRSe,( RCSe + Max( RRSe,DS ) ) ) )", "obj1": 0.7, "obj2": 0.24162602403859593}, {"determining": "Min( Max( CRS,DDR ) ,( PN / ( ( FirstVNF_Mem_Server * BR ) / PN ) ) )", "choosing": "( Min( Min( ( CS + RCSe ) ,MLU ) ,MUR ) / ( ( MUC + CS ) * RCSe ) )", "obj1": 0.7365384615384616, "obj2": 0.26991587165815617}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( RRS,( Min( MRS ,RRS ) / PN ) ) )", "choosing": "Max( Min( MLU ,CS ),( MUR + MUM ) )", "obj1": 0.7423076923076923, "obj2": 0.24637202193077828}, {"determining": "Min( Min( Const ,FirstVNF_RAM_Server ) ,( MRS + Const ) )", "choosing": "( ( ( ( RCSe / DS ) * Max( MUR,MUR ) ) - ( ( RCSe * MLU ) / ( MUC - RRSe ) ) ) / Max( ( ( MUR * MUC ) / ( MUC - CS ) ),Min( ( MUR - MUM ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.7346153846153847, "obj2": 0.24017616294952285}, {"determining": "Min( ( ( ( PN / MDR ) * ( FirstVNF_CPU_Server - ARS ) ) + ( ( BR + PN ) / ( FirstVNF_Mem * AMS ) ) ) ,( ( ( FirstVNF_CPU * CRS ) - ( Const + PN ) ) + ( Min( ACS ,MDR ) - Min( BR ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RCSe - ( ( MUC / RMSe ) - CS ) ),( ( RCSe * MUR ) + RRSe ) )", "obj1": 0.9423076923076923, "obj2": 0.06721323172501653}, {"determining": "( Min( Max( ( AMS * FirstVNF_Mem_Server ),( FirstVNF_CPU - AMS ) ) ,( ( RRS - FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server / MRS ) ) ) + ( ( ( PN / DDR ) / ( FirstVNF_Mem * ACS ) ) / ( ( Const + FirstVNF_RAM_Server ) * Min( DDR ,CRS ) ) ) )", "choosing": "( ( ( MUC / RMSe ) + ( RRSe + Min( DS ,RCSe ) ) ) / Max( DS,( RRSe * CS ) ) )", "obj1": 0.7596153846153846, "obj2": 0.2522355144761689}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.7615384615384615, "obj2": 0.19477389638116865}, {"determining": "( ( CRS - DDR ) + ( ( ARS * FirstVNF_CPU_Server ) / ARS ) )", "choosing": "( ( MUR / ( MUM * RCSe ) ) * Min( RRSe ,( ( RRSe / Min( ( MLU * ( MLU * ( DS * RRSe ) ) ) ,MLU ) ) + ( MUR - DS ) ) ) )", "obj1": 0.7980769230769231, "obj2": 0.19701637943363456}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( RRS,RRS ) + Max( AMS,FirstVNF_RAM ) ),( ( AMS / AMS ) - ( DDR - BR ) ) ) + ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) / ( MRS / BR ) ) + Min( Max( FirstVNF_Mem_Server,CRS ) ,Min( PN ,FirstVNF_CPU ) ) ) )", "choosing": "( Min( Min( ( MUM - MUR ) ,( RCSe / CS ) ) ,( ( RRSe - MLU ) - ( RCSe - RRSe ) ) ) - ( Max( ( CS - CS ),( RMSe * RRSe ) ) * Min( ( MLU / DS ) ,( RCSe * DS ) ) ) )", "obj1": 0.7019230769230769, "obj2": 0.2617238843400958}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) - ( AMS / ARS ) ) ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( FirstVNF_RAM_Server + MDR ) + ( AMS / ACS ) ) ) )", "choosing": "( ( RRSe / ( MLU * RCSe ) ) + ( Max( Max( Max( MUC,Min( ( Max( MUC,RRSe ) / Max( CS,RRSe ) ) ,( MUR / Max( RCSe,MUR ) ) ) ),( DS * ( MUR / RCSe ) ) ),Max( ( MUR - MLU ),MLU ) ) + DS ) )", "obj1": 0.7384615384615385, "obj2": 0.23804223241299272}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - ( MRS - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / RMSe ) * ( MUM + CS ) ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + FirstVNF_CPU ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.6403846153846153, "obj2": 0.26183642450572703}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( ( ( DDR / FirstVNF_Mem_Server ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( RRSe,( ( ( MLU + MUR ) - ( MUM / RCSe ) ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.823076923076923, "obj2": 0.14001344130815702}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) ) )", "choosing": "Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "Max( ( ( ( FirstVNF_Mem - AMS ) - ( ( ( ( ACS / FirstVNF_RAM_Server ) - Min( MRS ,FirstVNF_CPU_Server ) ) + ( Min( MDR ,FirstVNF_RAM ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) + ( ( Max( RRS,FirstVNF_Mem ) + ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_Mem / DDR ),( FirstVNF_RAM * FirstVNF_CPU ) ) ) ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ),Min( ( ( RRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server - AMS ) ) ,( ( DDR + ACS ) / ( DDR * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RRSe * DS ) * ( MLU + MLU ) ) / ( ( ( MLU * DS ) / ( CS / DS ) ) + Max( ( MUM * MUM ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.9442307692307692, "obj2": 0.045520671772045704}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - CRS ) ,( MDR - FirstVNF_CPU ) ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,Min( Max( CRS,DDR ) ,( PN / ( ( FirstVNF_Mem_Server * BR ) / PN ) ) ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) )", "choosing": "( Max( ( ( MUM / DS ) + ( Min( Min( ( CS + RCSe ) ,MLU ) ,MUR ) / ( ( MUC + CS ) * RCSe ) ) ),RRSe ) / Max( RRSe,( RCSe + Max( RRSe,DS ) ) ) )", "obj1": 0.7230769230769231, "obj2": 0.21502086734377351}, {"determining": "( ( ( ( MRS - ARS ) / Max( ACS,MDR ) ) + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) )", "choosing": "( ( DS - MUC ) + ( MUR + CS ) )", "obj1": 0.9403846153846154, "obj2": 0.05974932443750672}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.8788461538461538, "obj2": 0.10801328283829838}, {"determining": "Min( Max( CRS,DDR ) ,( PN / ( ( FirstVNF_Mem_Server * BR ) / ( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / Min( ( FirstVNF_Mem_Server - CRS ) ,( MDR - FirstVNF_CPU ) ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,( MDR - PN ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) ) ) ) )", "choosing": "( Min( Min( RRSe ,MLU ) ,MUR ) / ( ( MUC + CS ) * RCSe ) )", "obj1": 0.7576923076923077, "obj2": 0.19657949061359506}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( MUC / MUR ) * CS ) )", "obj1": 0.9134615384615384, "obj2": 0.07495752936371707}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( MLU,MUR ) ,( MUC / MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.0874659885696508}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( Const,( Min( MRS ,RRS ) / PN ) ) )", "choosing": "Max( ( RCSe / DS ),( MUR + MUM ) )", "obj1": 0.8557692307692307, "obj2": 0.12755700188540617}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( ( ( MUC / MUR ) * Max( RCSe,RMSe ) ) * RCSe ) ) )", "obj1": 0.8384615384615385, "obj2": 0.134336008752487}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6942307692307692, "obj2": 0.22685151359574043}, {"determining": "Min( Min( AMS ,BR ) ,( ACS - MDR ) )", "choosing": "( Max( DS,MLU ) / ( RMSe / CS ) )", "obj1": 0.7076923076923077, "obj2": 0.2238973295395165}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.7615384615384615, "obj2": 0.19477389638116865}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) )", "choosing": "Min( Max( MLU,MUR ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6519230769230769, "obj2": 0.25909845137918563}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Max( Min( PN ,Max( RRS,RRS ) ),Const ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( Max( MUM,Min( ( MLU * MLU ) ,Max( ( DS - MUM ),( MUR + RCSe ) ) ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( Max( PN,( MRS * ( ( AMS / Min( CRS ,FirstVNF_Mem ) ) + MRS ) ) ) + ( FirstVNF_CPU - CRS ) )", "choosing": "( ( ( RCSe * Max( ( MUR + MUR ),MUM ) ) * MUC ) / Min( ( RCSe * DS ) ,Min( ( RCSe + ( MUM - ( RRSe * ( MUC * RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.23916868085754708}, {"determining": "Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24272763855398868}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * MDR ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( ( ( CS + RMSe ) + ( RMSe * RRSe ) ) + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.676923076923077, "obj2": 0.23950702945545202}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Max( Min( PN ,Max( RRS,RRS ) ),Const ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( Max( MUM,Min( ( MLU * MLU ) ,Max( ( DS - MUM ),( MUR + RCSe ) ) ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.8769230769230769, "obj2": 0.11631016653183647}, {"determining": "( ( Max( MRS,( FirstVNF_RAM_Server - AMS ) ) - BR ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - ( ( RCSe - RMSe ) - DS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( CS - MUM ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( ( MRS + BR ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( MLU - MUC ),RMSe ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - ( MRS - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / RMSe ) * ( MUM + CS ) ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( ARS,Max( ( FirstVNF_Mem - ( Max( FirstVNF_CPU,CRS ) + MDR ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + ( ( DS * ( RCSe - ( Min( CS ,( RRSe / CS ) ) / DS ) ) ) / RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ,( AMS - RRS ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / FirstVNF_CPU_Server ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / PN ) / FirstVNF_CPU ) / ( CRS + MDR ) ) / ( ( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Const ) ) - RRS ) )", "choosing": "Min( ( ( MUR / Max( DS,Max( ( DS * Min( Max( RMSe,MUC ) ,MUR ) ),( CS * MUC ) ) ) ) + Min( MUC ,Min( Min( ( MUR / CS ) ,( MLU * Min( ( CS / MLU ) ,Max( RRSe,MLU ) ) ) ) ,MLU ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * Max( FirstVNF_Mem,MDR ) ) ,( MRS / ARS ) ) - Min( Const ,ARS ) )", "choosing": "( ( RMSe - Min( ( RMSe - RCSe ) ,CS ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_RAM ) ,( PN + MDR ) ) - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( DS - CS ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_CPU_Server ) - ACS ) * FirstVNF_RAM ) ,( PN + MDR ) )", "choosing": "Min( ( MLU / MUR ) ,( ( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - FirstVNF_Mem_Server ) ,( PN + MDR ) )", "choosing": "Min( ( MLU * MUR ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( DDR - Min( CRS ,DDR ) ) )", "choosing": "Min( MUM ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( RMSe + DS ) - ( MLU - ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( RMSe + Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( DS,Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( PN + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( BR * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,MUR ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ),( PN * ( DDR / BR ) ) ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( ( MLU + MUM ) ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RMSe * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( ARS ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( Max( ( CS - MLU ),( DS * CS ) ) + ( Max( MUC,RMSe ) / ( DS + RRSe ) ) ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ( Const * FirstVNF_Mem ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - DS ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( PN * DDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - Max( ( MUM - ( RMSe / MUC ) ),( ( MUR / RRSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( ( MDR + Max( ARS,Const ) ) ,Max( RRS,PN ) ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + RMSe ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( MUC * CS ) ) / Max( ( CS - MUM ),( CS - ( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - ( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Max( ( CS - MUM ),( CS - MUR ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( DDR - Min( Const ,FirstVNF_CPU_Server ) ) - DDR ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Max( Min( Min( CS ,CS ) ,( RMSe - RMSe ) ),MUR ) ,Min( MUM ,RMSe ) ) / Max( ( CS - MUM ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - DDR ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * Max( ( CS - MUM ),( CS - MUR ) ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( ( RMSe * MUR ) + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + Max( ( RMSe / MUC ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * ( FirstVNF_RAM / ( AMS + AMS ) ) ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ,Max( RRS,Min( DDR ,( RRS / PN ) ) ) )", "choosing": "( Min( Min( Min( DS ,RRSe ) ,( RRSe - MUC ) ) ,( Max( DS,CS ) + Min( MUR ,MUR ) ) ) * ( ( MLU * DS ) / ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,( ( ARS * FirstVNF_CPU_Server ) / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( ( MLU * ( MLU * ( DS * RRSe ) ) ) ,MLU ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( ( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) ) - ( AMS / ARS ) ) ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) ) )", "choosing": "( CS + ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( FirstVNF_RAM_Server + MDR ) + ( AMS / ACS ) ) ) )", "choosing": "( ( RRSe / ( MLU * RCSe ) ) + ( Max( Max( Max( MUC,Min( ( Max( MUC,RRSe ) / Max( RCSe,RRSe ) ) ,( MUR / Max( RCSe,MUR ) ) ) ),( DS * ( MUR / RCSe ) ) ),Max( ( MUR - MLU ),MLU ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( ( FirstVNF_RAM_Server + MDR ) + ( AMS / ACS ) ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( ( MUR - MLU ) * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,FirstVNF_RAM_Server ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ,BR ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - MUC ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( Max( MDR,FirstVNF_RAM_Server ) - MRS ) ) ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - Min( MDR ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU * ( MUR * RCSe ) ) / MUC ) - ( CS + ( MUR * ( MUC / ( Max( Max( ( RRSe / RRSe ),( MUC - CS ) ),( ( MUM / RCSe ) - ( MUM - MUC ) ) ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Min( Max( PN,Const ) ,ARS ) - ( FirstVNF_Mem / RRS ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + ( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + FirstVNF_CPU ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( Min( PN ,( Const / ACS ) ) * RRS ) ) ) ) + ( BR + DDR ) )", "choosing": "Max( ( DS - ( ( CS - ( ( ( DS - Max( RRSe,MUR ) ) - ( ( RCSe / MUM ) - RCSe ) ) - MUC ) ) - MUR ) ),MLU )", "obj1": 0.6346153846153846, "obj2": 0.2643671788789327}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,( ( Min( AMS ,ACS ) / MDR ) - ARS ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( ( MUC / RRSe ) - ( MLU - ( MLU * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.7134615384615385, "obj2": 0.1855710587166466}, {"determining": "( Max( ACS,FirstVNF_Mem ) / Min( ( AMS - Max( Max( Const,CRS ),MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUM ) - ( RCSe - MUM ) )", "obj1": 0.8153846153846154, "obj2": 0.16098868696059646}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) ) ) / Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) ) - MUM ) - Min( RMSe ,CS ) )", "obj1": 0.9365384615384615, "obj2": 0.04424756210942839}, {"determining": "( BR - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MUR ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9673076923076923, "obj2": 0.039675992810804514}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / ( ( ( Const * BR ) - MDR ) * MDR ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,( MDR - PN ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) )", "choosing": "( Max( ( ( Min( MUM ,RCSe ) / DS ) + CS ),RRSe ) / Max( RRSe,( RCSe + Max( RRSe,DS ) ) ) )", "obj1": 0.7, "obj2": 0.20860208898593333}, {"determining": "( ( ( DDR / FirstVNF_Mem_Server ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( RRSe,( ( ( MLU + MUR ) - ( MUM / RCSe ) ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.823076923076923, "obj2": 0.14001344130815702}, {"determining": "( ( ( ARS - BR ) * Max( FirstVNF_Mem,MDR ) ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( CS,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 0.926923076923077, "obj2": 0.07050969063428265}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( ( ( MUC / MUR ) * Max( RCSe,RMSe ) ) * RCSe ) ) )", "obj1": 0.8384615384615385, "obj2": 0.134336008752487}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6942307692307692, "obj2": 0.22685151359574043}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,Const ),Max( ARS,Const ) ) )", "choosing": "Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),RMSe )", "obj1": 0.9788461538461538, "obj2": 0.01863412371103025}, {"determining": "( ( Min( ACS ,FirstVNF_Mem ) - ARS ) / ( AMS - RRS ) )", "choosing": "Min( ( RMSe * MUM ) ,Max( MUR,MLU ) )", "obj1": 0.8903846153846153, "obj2": 0.09536624655223466}, {"determining": "( Max( ( CRS - BR ),( DDR - AMS ) ) - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0032084863114570225}, {"determining": "( ( ARS / ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) / Max( Const,( Min( MRS ,RRS ) / PN ) ) )", "choosing": "Max( ( RCSe / DS ),( MUR + MUM ) )", "obj1": 0.8557692307692307, "obj2": 0.12755700188540617}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_Mem ) + Min( DDR ,( FirstVNF_Mem * ( DDR - DDR ) ) ) )", "choosing": "( RRSe * ( DS * ( ( MUR / ( MLU * ( RCSe - Min( MUR ,MUC ) ) ) ) * ( DS * MUC ) ) ) )", "obj1": 0.8596153846153847, "obj2": 0.12427813537338844}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( MLU,MUR ) ,( MUC / MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.0874659885696508}, {"determining": "( ( ( ( MRS - ARS ) / Max( ACS,MDR ) ) + FirstVNF_CPU_Server ) * Min( MRS ,( Min( MDR ,( ( MDR - CRS ) + ( BR + DDR ) ) ) * Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) )", "choosing": "( ( DS - MUC ) + ( MLU + CS ) )", "obj1": 0.8865384615384615, "obj2": 0.10549154499565629}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Max( Min( PN ,Max( RRS,RRS ) ),Const ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( Max( MUM,Min( ( MLU * MLU ) ,Max( ( DS - MUM ),( MUR + RCSe ) ) ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.875, "obj2": 0.11717258014319257}, {"determining": "Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24272763855398868}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) )", "obj1": 0.6615384615384615, "obj2": 0.24839244092784135}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( MUC / MUR ) * CS ) )", "obj1": 0.9134615384615384, "obj2": 0.07495752936371707}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.8788461538461538, "obj2": 0.10801328283829838}, {"determining": "( Max( ARS,CRS ) + ( AMS + Min( DDR ,Min( Const ,Max( AMS,MDR ) ) ) ) )", "choosing": "( ( RRSe / DS ) * ( DS / ( ( MLU + Max( MUC,RRSe ) ) - Max( ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ),Max( DS,( Max( ( MLU - MUM ),DS ) - MLU ) ) ) ) ) )", "obj1": 0.6826923076923077, "obj2": 0.2308423983645391}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( Max( RRSe,DS ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.6403846153846153, "obj2": 0.26183642450572703}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * MDR ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( ( ( CS + RMSe ) + ( RMSe * RRSe ) ) + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) )", "obj1": 0.676923076923077, "obj2": 0.23950702945545202}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_Mem / RRS ) - ( CRS - CRS ) ) )", "choosing": "( ( CS + RRSe ) * ( ( RCSe - ( MLU - MUM ) ) - RRSe ) )", "obj1": 0.9173076923076923, "obj2": 0.07271511901469263}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) ) )", "choosing": "Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "Max( ( ( ( ACS - BR ) / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - RRSe ) ) ) ) )", "obj1": 0.6519230769230769, "obj2": 0.25245912381009583}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Max( Min( PN ,Max( RRS,RRS ) ),Const ) ) / Min( ( ARS + FirstVNF_RAM ) ,Min( AMS ,AMS ) ) )", "choosing": "Min( Max( MUM,Min( ( MLU * MLU ) ,Max( ( DS - MUM ),( MUR + RCSe ) ) ) ) ,Min( Max( MUC,CS ) ,( MUM * RCSe ) ) )", "obj1": 0.8769230769230769, "obj2": 0.11631016653183647}, {"determining": "Max( ( ( ( ACS - BR ) / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),( AMS + AMS ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,MLU ) ) ) ) ) )", "obj1": 0.6423076923076924, "obj2": 0.2550533002930952}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ACS )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / Max( ( ( MUM + MUC ) * ( RMSe + RMSe ) ),( Min( RRSe ,MUR ) / ( MUC + DS ) ) ) )", "obj1": 0.65, "obj2": 0.2540295078453768}, {"determining": "Max( ( ( FirstVNF_CPU / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,Max( ( ( CS + RMSe ) + ( RMSe * RRSe ) ),( ( MUM + MLU ) * ( MUC * CS ) ) ) ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - RRSe ) ) ) )", "obj1": 0.6461538461538462, "obj2": 0.2549872604708153}, {"determining": "( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_RAM ) ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) )", "choosing": "Min( Max( ( MLU / RMSe ),( ( ( DS / Max( RRSe,MUM ) ) * RMSe ) + MLU ) ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) * ( PN * RRS ) ) ) )", "choosing": "Min( ( MLU / RMSe ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6788461538461539, "obj2": 0.23767496553148337}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6788461538461539, "obj2": 0.23767496553148337}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( FirstVNF_RAM_Server - AMS ) ) - BR ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - ( ( RCSe - RMSe ) - DS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( CS - MUM ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( ( MRS + BR ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( MLU - MUC ),RMSe ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - ( MRS - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / RMSe ) * ( MUM + CS ) ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( ARS,Max( ( FirstVNF_Mem - ( Max( FirstVNF_CPU,CRS ) + MDR ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + ( ( DS * ( RCSe - ( Min( CS ,( RRSe / CS ) ) / DS ) ) ) / RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ,( AMS - RRS ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / FirstVNF_CPU_Server ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / PN ) / FirstVNF_CPU ) / ( CRS + MDR ) ) / ( ( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Const ) ) - RRS ) )", "choosing": "Min( ( ( MUR / Max( DS,Max( ( DS * Min( Max( RMSe,MUC ) ,MUR ) ),( CS * MUC ) ) ) ) + Min( MUC ,Min( Min( ( MUR / CS ) ,( MLU * Min( ( CS / MLU ) ,Max( RRSe,MLU ) ) ) ) ,MLU ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * Max( FirstVNF_Mem,MDR ) ) ,( MRS / ARS ) ) - Min( Const ,ARS ) )", "choosing": "( ( RMSe - Min( ( RMSe - RCSe ) ,CS ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_RAM ) ,( PN + MDR ) ) - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( DS - CS ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_CPU_Server ) - ACS ) * FirstVNF_RAM ) ,( PN + MDR ) )", "choosing": "Min( ( MLU / MUR ) ,( ( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - FirstVNF_Mem_Server ) ,( PN + MDR ) )", "choosing": "Min( ( MLU * MUR ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( DDR - Min( CRS ,DDR ) ) )", "choosing": "Min( MUM ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( RMSe + DS ) - ( MLU - ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( RMSe + Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( DS,Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( PN + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( BR * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,MUR ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ),( PN * ( DDR / BR ) ) ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( ( MLU + MUM ) ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RMSe * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( ARS ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( Max( ( CS - MLU ),( DS * CS ) ) + ( Max( MUC,RMSe ) / ( DS + RRSe ) ) ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ( Const * FirstVNF_Mem ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - DS ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( PN * DDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - Max( ( MUM - ( RMSe / MUC ) ),( ( MUR / RRSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( ( MDR + Max( ARS,Const ) ) ,Max( RRS,PN ) ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + RMSe ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( MUC * CS ) ) / Max( ( CS - MUM ),( CS - ( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - ( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Max( ( CS - MUM ),( CS - MUR ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( DDR - Min( Const ,FirstVNF_CPU_Server ) ) - DDR ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Max( Min( Min( CS ,CS ) ,( RMSe - RMSe ) ),MUR ) ,Min( MUM ,RMSe ) ) / Max( ( CS - MUM ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - DDR ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * Max( ( CS - MUM ),( CS - MUR ) ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( ( RMSe * MUR ) + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + Max( ( RMSe / MUC ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * ( FirstVNF_RAM / ( AMS + AMS ) ) ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ,Max( RRS,Min( DDR ,( RRS / PN ) ) ) )", "choosing": "( Min( Min( Min( DS ,RRSe ) ,( RRSe - MUC ) ) ,( Max( DS,CS ) + Min( MUR ,MUR ) ) ) * ( ( MLU * DS ) / ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,( ( ARS * FirstVNF_CPU_Server ) / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( ( MLU * ( MLU * ( DS * RRSe ) ) ) ,MLU ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( ( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) ) - ( AMS / ARS ) ) ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) ) )", "choosing": "( CS + ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( FirstVNF_RAM_Server + MDR ) + ( AMS / ACS ) ) ) )", "choosing": "( ( RRSe / ( MLU * RCSe ) ) + ( Max( Max( Max( MUC,Min( ( Max( MUC,RRSe ) / Max( RCSe,RRSe ) ) ,( MUR / Max( RCSe,MUR ) ) ) ),( DS * ( MUR / RCSe ) ) ),Max( ( MUR - MLU ),MLU ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( Max( ( ARS - BR ),CRS ) ,BR ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MUC,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - ( FirstVNF_Mem / RRS ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + ( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( FirstVNF_CPU / MDR ) + MDR ) ,( ( MDR - ( FirstVNF_RAM / ( AMS + AMS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( Min( Max( ( DS / RCSe ),( ( ( MUM * CS ) - ( RRSe * MUM ) ) * ( Min( RRSe ,MUR ) / ( MUM * RRSe ) ) ) ) ,Max( CS,Min( RCSe ,CS ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.26044897268772826}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,( ( Min( AMS ,ACS ) / MDR ) - ARS ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( ( MUC / RRSe ) - ( MLU - ( MLU * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.7134615384615385, "obj2": 0.1855710587166466}, {"determining": "( Max( ACS,FirstVNF_Mem ) / Min( ( AMS - Max( Max( Const,CRS ),MDR ) ) ,FirstVNF_Mem ) )", "choosing": "( ( MUR - MUM ) - ( RCSe - MUM ) )", "obj1": 0.8153846153846154, "obj2": 0.16098868696059646}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) ) ) / Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) ) - MUM ) - Min( RMSe ,CS ) )", "obj1": 0.9365384615384615, "obj2": 0.04424756210942839}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / ( ( ( Const * BR ) - MDR ) * MDR ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,( MDR - PN ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) )", "choosing": "( Max( ( ( Min( MUM ,RCSe ) / DS ) + CS ),RRSe ) / Max( RRSe,( RCSe + Max( RRSe,DS ) ) ) )", "obj1": 0.7, "obj2": 0.20860208898593333}, {"determining": "Min( ( ( ARS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( MRS / ARS ) )", "choosing": "( Min( CS ,Min( CS ,( RMSe - ( Max( RMSe,MUC ) - DS ) ) ) ) / ( RCSe / CS ) )", "obj1": 0.8538461538461538, "obj2": 0.1239650332659048}, {"determining": "( ( ( DDR / FirstVNF_Mem_Server ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( RRSe,( ( ( MLU + MUR ) - ( MUM / RCSe ) ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.823076923076923, "obj2": 0.14001344130815702}, {"determining": "( ( ( ARS - BR ) * Max( FirstVNF_Mem,MDR ) ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( CS,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 0.926923076923077, "obj2": 0.07050969063428265}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( ( ( MUC / MUR ) * Max( RCSe,RMSe ) ) * RCSe ) ) )", "obj1": 0.8384615384615385, "obj2": 0.134336008752487}, {"determining": "( BR - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MUR ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9673076923076923, "obj2": 0.039675992810804514}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Min( ( BR / ( Max( ACS,FirstVNF_Mem ) / Min( ACS ,FirstVNF_Mem ) ) ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM + RMSe ) - ( MLU - MUM ) )", "obj1": 0.8692307692307693, "obj2": 0.11258706059224301}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( MUR - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "( MDR - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( ( DS - MUC ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9711538461538461, "obj2": 0.034945886690120394}, {"determining": "( ( Min( ACS ,FirstVNF_Mem ) - ARS ) / ( AMS - RRS ) )", "choosing": "Min( ( RMSe * MUM ) ,Max( MUR,MLU ) )", "obj1": 0.8903846153846153, "obj2": 0.09536624655223466}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,Const ),Max( ARS,Const ) ) )", "choosing": "Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),RMSe )", "obj1": 0.9788461538461538, "obj2": 0.01863412371103025}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6942307692307692, "obj2": 0.22685151359574043}, {"determining": "Max( ( ( ACS - BR ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU + RMSe ) ) ) )", "obj1": 0.6423076923076924, "obj2": 0.25335127607798746}, {"determining": "( ( FirstVNF_Mem - ( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + ( Min( DDR ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( BR + DDR ) ) ),FirstVNF_Mem ) ) ) + Max( ( DDR - DDR ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe - Min( MUR ,MUC ) ) ) * ( ( RCSe - Min( MUR ,MUC ) ) * MUC ) )", "obj1": 0.6519230769230769, "obj2": 0.2515192240352329}, {"determining": "( ( ( ( MRS - ARS ) / Max( ACS,Min( ACS ,FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) )", "choosing": "( ( MUM + RMSe ) + ( MUR + CS ) )", "obj1": 0.8826923076923077, "obj2": 0.10470800252330958}, {"determining": "( Max( PN,( MRS * ( ( AMS / AMS ) + MRS ) ) ) + ( FirstVNF_CPU - ( AMS - RRS ) ) )", "choosing": "( Min( RMSe ,MLU ) / Min( ( RCSe * DS ) ,Min( ( RCSe + ( MUM - ( RRSe * ( CS * RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.9057692307692308, "obj2": 0.09345952438151123}, {"determining": "Max( ( ( BR / PN ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + ( MLU - RRSe ) ) - ( MLU - RRSe ) ) ) )", "obj1": 0.6615384615384615, "obj2": 0.244460657279027}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( MUC / MUR ) * CS ) )", "obj1": 0.9134615384615384, "obj2": 0.07495752936371707}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.8788461538461538, "obj2": 0.10801328283829838}, {"determining": "( ( ( Const + FirstVNF_CPU_Server ) + ( Max( ( ( ( ACS - BR ) / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) ) * MDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "( Min( ( ( CS / MUR ) / ( MUM - RCSe ) ) ,Max( ( RCSe - DS ),( CS + MLU ) ) ) + Max( ( ( CS + RMSe ) + ( RMSe * RRSe ) ),( ( ( MLU + RMSe ) + MLU ) * ( MUC * CS ) ) ) )", "obj1": 0.6730769230769231, "obj2": 0.2392747446696016}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( Max( RRSe,DS ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( ( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( MLU * MUR ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( Max( ARS,CRS ) + ( AMS + Min( DDR ,Min( Const ,Max( AMS,MDR ) ) ) ) )", "choosing": "( ( RRSe / DS ) * ( DS / ( ( MLU + Max( MUC,RRSe ) ) - Max( ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ),Max( DS,( Max( ( MLU - MUM ),DS ) - MLU ) ) ) ) ) )", "obj1": 0.6826923076923077, "obj2": 0.2308423983645391}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_Mem / RRS ) - ( CRS - CRS ) ) )", "choosing": "( ( CS + RRSe ) * ( ( RCSe - ( MLU - MUM ) ) - RRSe ) )", "obj1": 0.9173076923076923, "obj2": 0.07271511901469263}, {"determining": "Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.24272763855398868}, {"determining": "( ( ( ( FirstVNF_CPU - ( CRS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) + ( AMS + Min( DDR ,FirstVNF_RAM_Server ) ) ) / Max( RRS,( AMS + MRS ) ) )", "choosing": "( ( ( CS / ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ) ) * Max( CS,MLU ) ) + ( ( DS - CS ) / ( MUC * RMSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.22819923531327116}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( MLU,MUR ) ,( MUC / MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.0874659885696508}, {"determining": "Max( ( ( ( ACS - ( BR / PN ) ) / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - RRSe ) ) ) + RMSe ) - ( MLU - RRSe ) ) ) )", "obj1": 0.6788461538461539, "obj2": 0.23494980077110458}, {"determining": "( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_RAM ) ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) )", "choosing": "Min( Max( ( MLU / RMSe ),( ( ( DS / Max( RRSe,MUM ) ) * RMSe ) + MLU ) ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) * ( PN * RRS ) ) ) )", "choosing": "Min( ( MLU / RMSe ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + FirstVNF_CPU ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( FirstVNF_RAM_Server - AMS ) ) - BR ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - ( ( RCSe - RMSe ) - DS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( CS - MUM ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( ( MRS + BR ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( MLU - MUC ),RMSe ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - ( MRS - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / RMSe ) * ( MUM + CS ) ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( ARS,Max( ( FirstVNF_Mem - ( Max( FirstVNF_CPU,CRS ) + MDR ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + ( ( DS * ( RCSe - ( Min( CS ,( RRSe / CS ) ) / DS ) ) ) / RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ,( AMS - RRS ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / FirstVNF_CPU_Server ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / PN ) / FirstVNF_CPU ) / ( CRS + MDR ) ) / ( ( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Const ) ) - RRS ) )", "choosing": "Min( ( ( MUR / Max( DS,Max( ( DS * Min( Max( RMSe,MUC ) ,MUR ) ),( CS * MUC ) ) ) ) + Min( MUC ,Min( Min( ( MUR / CS ) ,( MLU * Min( ( CS / MLU ) ,Max( RRSe,MLU ) ) ) ) ,MLU ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * Max( FirstVNF_Mem,MDR ) ) ,( MRS / ARS ) ) - Min( Const ,ARS ) )", "choosing": "( ( RMSe - Min( ( RMSe - RCSe ) ,CS ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_RAM ) ,( PN + MDR ) ) - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( DS - CS ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_CPU_Server ) - ACS ) * FirstVNF_RAM ) ,( PN + MDR ) )", "choosing": "Min( ( MLU / MUR ) ,( ( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - FirstVNF_Mem_Server ) ,( PN + MDR ) )", "choosing": "Min( ( MLU * MUR ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( DDR - Min( CRS ,DDR ) ) )", "choosing": "Min( MUM ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( RMSe + DS ) - ( MLU - ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( RMSe + Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( DS,Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( PN + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( BR * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,MUR ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ),( PN * ( DDR / BR ) ) ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( ( MLU + MUM ) ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RMSe * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( ARS ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( Max( ( CS - MLU ),( DS * CS ) ) + ( Max( MUC,RMSe ) / ( DS + RRSe ) ) ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ( Const * FirstVNF_Mem ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - DS ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( PN * DDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - Max( ( MUM - ( RMSe / MUC ) ),( ( MUR / RRSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( ( MDR + Max( ARS,Const ) ) ,Max( RRS,PN ) ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + RMSe ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( MUC * CS ) ) / Max( ( CS - MUM ),( CS - ( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - ( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Max( ( CS - MUM ),( CS - MUR ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( DDR - Min( Const ,FirstVNF_CPU_Server ) ) - DDR ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Max( Min( Min( CS ,CS ) ,( RMSe - RMSe ) ),MUR ) ,Min( MUM ,RMSe ) ) / Max( ( CS - MUM ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - DDR ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * Max( ( CS - MUM ),( CS - MUR ) ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( ( RMSe * MUR ) + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + Max( ( RMSe / MUC ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * ( FirstVNF_RAM / ( AMS + AMS ) ) ) ) ) )", "choosing": "( Max( ( RCSe * MLU ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( PN ,( ( ( FirstVNF_Mem - AMS ) - ( AMS + FirstVNF_CPU ) ) / ( ( FirstVNF_RAM_Server + AMS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) ) ) ,Max( RRS,Min( DDR ,( RRS / PN ) ) ) )", "choosing": "( Min( Min( Min( DS ,RRSe ) ,( RRSe - MUC ) ) ,( Max( DS,CS ) + Min( MUR ,MUR ) ) ) * ( ( MLU * DS ) / ( CS / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,( ( ARS * FirstVNF_CPU_Server ) / ARS ) ) ) ) )", "choosing": "Min( Min( ( Min( CS ,MLU ) / ( MUC - RMSe ) ) ,Max( ( RMSe + RMSe ),( DS / DS ) ) ) ,( ( Min( ( MLU * ( MLU * ( DS * RRSe ) ) ) ,MLU ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( FirstVNF_Mem,CRS ),Max( Const,CRS ) ) + ( ( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Max( Min( BR ,RRS ),Max( AMS,ACS ) ) ) ) - ( AMS / ARS ) ) ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( PN + FirstVNF_Mem ) + ( AMS / ACS ) ) ) )", "choosing": "( CS + ( MUM - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) * Max( Min( ( RRS * BR ) ,( FirstVNF_Mem_Server + MDR ) ),( ( FirstVNF_RAM_Server + MDR ) + ( AMS / ACS ) ) ) )", "choosing": "( ( RRSe / ( MLU * RCSe ) ) + ( Max( Max( Max( MUC,Min( ( Max( MUC,RRSe ) / Max( RCSe,RRSe ) ) ,( MUR / Max( RCSe,MUR ) ) ) ),( DS * ( MUR / RCSe ) ) ),Max( ( MUR - MLU ),MLU ) ) + DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,CRS ) - BR ) - Max( ARS,Max( ( FirstVNF_Mem - ( Max( FirstVNF_CPU,CRS ) + MDR ) ),FirstVNF_RAM ) ) )", "choosing": "( Min( CS ,( RRSe / CS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + ( ( ( ( MUC - RMSe ) * ( RCSe + ( DS - RRSe ) ) ) * ( RCSe - ( Min( CS ,( RRSe / CS ) ) / DS ) ) ) / RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( ( ( RRS + ( Min( ( MRS - ARS ) ,( FirstVNF_Mem * ( DDR - DDR ) ) ) / ( BR + DDR ) ) ) - FirstVNF_Mem ) + Max( ( DDR - DDR ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe - Min( MUR ,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ) ) * ( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( Max( ( ARS - BR ),CRS ) ,BR ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MUC,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) ) + ( PN * RRS ) )", "choosing": "Max( ( DS - Max( ( DS - MLU ),MLU ) ),MLU )", "obj1": 0.6269230769230769, "obj2": 0.26810615242895597}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,( ( Min( AMS ,ACS ) / MDR ) - ARS ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( ( MUC / RRSe ) - ( MLU - ( MLU * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.7134615384615385, "obj2": 0.1855710587166466}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / ( ( ( Const * BR ) - MDR ) * MDR ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,( MDR - PN ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) )", "choosing": "( Max( ( ( Min( MUM ,RCSe ) / DS ) + CS ),RRSe ) / Max( RRSe,( RCSe + Max( RRSe,DS ) ) ) )", "obj1": 0.7, "obj2": 0.20860208898593333}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ) )", "obj1": 0.7596153846153846, "obj2": 0.17997366934382905}, {"determining": "( ( ( DDR / FirstVNF_Mem_Server ) * ARS ) - Max( MRS,MDR ) )", "choosing": "Max( RRSe,( ( ( MLU + MUR ) - ( MUM / RCSe ) ) / Min( ( DS + MUC ) ,( MUM - RMSe ) ) ) )", "obj1": 0.823076923076923, "obj2": 0.14001344130815702}, {"determining": "( ARS - Max( FirstVNF_CPU,CRS ) )", "choosing": "( MLU * ( ( Min( CS ,( RMSe - ( Max( RMSe,MUC ) - DS ) ) ) / ( RCSe / CS ) ) - RRSe ) )", "obj1": 0.8, "obj2": 0.15870426861906686}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) ) ) / Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) ) - MUM ) - Min( RMSe ,CS ) )", "obj1": 0.9365384615384615, "obj2": 0.04424756210942839}, {"determining": "Min( ( ( ARS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( MRS / ARS ) )", "choosing": "( Min( CS ,Min( CS ,( RMSe - ( Max( RMSe,MUC ) - DS ) ) ) ) / ( RCSe / CS ) )", "obj1": 0.8538461538461538, "obj2": 0.1239650332659048}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * ( ( DDR - PN ) - ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) )", "choosing": "( ( MUC * ( MUC - RMSe ) ) - ( CS / MLU ) )", "obj1": 0.925, "obj2": 0.059396011848907734}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( ( ( MUC / MUR ) * Max( RCSe,RMSe ) ) * RCSe ) ) )", "obj1": 0.8384615384615385, "obj2": 0.134336008752487}, {"determining": "Min( ( ( ARS - ( PN + Max( DDR,MDR ) ) ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( MRS / ARS ) )", "choosing": "( Min( CS ,( ( MLU * ( DS - RRSe ) ) - ( Max( RMSe,MUC ) - DS ) ) ) / ( RCSe / CS ) )", "obj1": 0.7846153846153846, "obj2": 0.16342959062476856}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( BR - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MUR ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9673076923076923, "obj2": 0.039675992810804514}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Min( ( BR / ( Max( ACS,FirstVNF_Mem ) / Min( ACS ,FirstVNF_Mem ) ) ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM + RMSe ) - ( MLU - MUM ) )", "obj1": 0.8692307692307693, "obj2": 0.11258706059224301}, {"determining": "( MDR - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( ( DS - MUC ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9711538461538461, "obj2": 0.034945886690120394}, {"determining": "( ( Min( ACS ,FirstVNF_Mem ) - ARS ) / ( AMS - RRS ) )", "choosing": "Min( ( RMSe * MUM ) ,Max( MUR,MLU ) )", "obj1": 0.8903846153846153, "obj2": 0.09536624655223466}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,Const ),Max( ARS,Const ) ) )", "choosing": "Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),RMSe )", "obj1": 0.9788461538461538, "obj2": 0.01863412371103025}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( FirstVNF_CPU / MDR ) + MDR ) ,( ( MDR - ( FirstVNF_RAM / ( AMS + AMS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( Min( Max( ( DS / RCSe ),( ( ( MUM * CS ) - ( RRSe * MUM ) ) * ( Min( RRSe ,MUR ) / ( MUM * RRSe ) ) ) ) ,Max( CS,Min( RCSe ,CS ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.26044897268772826}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6942307692307692, "obj2": 0.22685151359574043}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_Mem / RRS ) - ( CRS - CRS ) ) )", "choosing": "( ( CS + RRSe ) * ( ( RCSe - ( MLU - MUM ) ) - RRSe ) )", "obj1": 0.9173076923076923, "obj2": 0.07271511901469263}, {"determining": "Max( ( ( ACS - BR ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU + RMSe ) ) ) )", "obj1": 0.6423076923076924, "obj2": 0.25335127607798746}, {"determining": "( ( ( ( MRS - ARS ) / Max( ACS,Min( ACS ,FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) )", "choosing": "( ( MUM + RMSe ) + ( MUR + CS ) )", "obj1": 0.8826923076923077, "obj2": 0.10470800252330958}, {"determining": "( Max( PN,( MRS * ( ( AMS / AMS ) + MRS ) ) ) + ( FirstVNF_CPU - ( AMS - RRS ) ) )", "choosing": "( Min( RMSe ,MLU ) / Min( ( RCSe * DS ) ,Min( ( RCSe + ( MUM - ( RRSe * ( CS * RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.9057692307692308, "obj2": 0.09345952438151123}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( MUC / MUR ) * CS ) )", "obj1": 0.9134615384615384, "obj2": 0.07495752936371707}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.8788461538461538, "obj2": 0.10801328283829838}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( MUR - DS ) ) ) ,Min( Min( Min( Max( RMSe,MUC ) ,MUR ) ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( Max( RRSe,DS ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( ( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( MLU * MUR ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( Max( ARS,CRS ) + ( AMS + Min( DDR ,Min( Const ,Max( AMS,MDR ) ) ) ) )", "choosing": "( ( RRSe / DS ) * ( DS / ( ( MLU + Max( MUC,RRSe ) ) - Max( ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ),Max( DS,( Max( ( MLU - MUM ),DS ) - MLU ) ) ) ) ) )", "obj1": 0.6826923076923077, "obj2": 0.2308423983645391}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( MLU,MUR ) ,( MUC / MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.0874659885696508}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( MUR - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( FirstVNF_Mem ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( ( ( DS * MUC ) * ( RCSe - Min( MUR ,Max( ( MUR * RRSe ),MUC ) ) ) ) ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.6557692307692308, "obj2": 0.24743638167804272}, {"determining": "( ( ( ( FirstVNF_CPU - ( CRS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) + ( AMS + Min( DDR ,FirstVNF_RAM_Server ) ) ) / Max( RRS,( AMS + MRS ) ) )", "choosing": "( ( ( CS / ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ) ) * Max( CS,MLU ) ) + ( ( DS - CS ) / ( MUC * RMSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.22819923531327116}, {"determining": "Max( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ),ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6596153846153846, "obj2": 0.24266811112482176}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6711538461538461, "obj2": 0.23788806810090177}, {"determining": "( ( FirstVNF_Mem - ( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + ( Min( DDR ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( BR + DDR ) ) ),FirstVNF_Mem ) ) ) + Max( ( DDR - DDR ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe - Min( MUR ,MUC ) ) ) * ( ( RCSe - Min( MUR ,MUC ) ) * MUC ) )", "obj1": 0.6519230769230769, "obj2": 0.2515192240352329}, {"determining": "Max( ( ( ( ACS - ( BR / PN ) ) / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - RRSe ) ) ) + RMSe ) - ( MLU - RRSe ) ) ) )", "obj1": 0.6788461538461539, "obj2": 0.23494980077110458}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( DDR * ACS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,( ( ( MUM * CS ) - ( RRSe * MUM ) ) * ( ( RMSe + RCSe ) / ( MUM * RRSe ) ) ) ) ) ) )", "obj1": 0.6692307692307692, "obj2": 0.24022564408485864}, {"determining": "Max( Max( ARS,ARS ),ARS )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( Max( RMSe,RRSe ) + MLU ) ) ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.25135936273614434}, {"determining": "Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.2421016015237054}, {"determining": "( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_RAM ) ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) )", "choosing": "Min( Max( ( MLU / RMSe ),( ( ( DS / Max( RRSe,MUM ) ) * RMSe ) + MLU ) ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.2421016015237054}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) * ( PN * RRS ) ) ) )", "choosing": "Min( ( MLU / RMSe ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - ( FirstVNF_Mem / RRS ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + ( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + FirstVNF_CPU ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( FirstVNF_RAM_Server - AMS ) ) - BR ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - ( ( RCSe - RMSe ) - DS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( CS - MUM ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( ( MRS + BR ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( MLU - MUC ),RMSe ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - ( MRS - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / RMSe ) * ( MUM + CS ) ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( ARS,Max( ( FirstVNF_Mem - ( Max( FirstVNF_CPU,CRS ) + MDR ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + ( ( DS * ( RCSe - ( Min( CS ,( RRSe / CS ) ) / DS ) ) ) / RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ,( AMS - RRS ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / FirstVNF_CPU_Server ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / PN ) / FirstVNF_CPU ) / ( CRS + MDR ) ) / ( ( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Const ) ) - RRS ) )", "choosing": "Min( ( ( MUR / Max( DS,Max( ( DS * Min( Max( RMSe,MUC ) ,MUR ) ),( CS * MUC ) ) ) ) + Min( MUC ,Min( Min( ( MUR / CS ) ,( MLU * Min( ( CS / MLU ) ,Max( RRSe,MLU ) ) ) ) ,MLU ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * Max( FirstVNF_Mem,MDR ) ) ,( MRS / ARS ) ) - Min( Const ,ARS ) )", "choosing": "( ( RMSe - Min( ( RMSe - RCSe ) ,CS ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_RAM ) ,( PN + MDR ) ) - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( DS - CS ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_CPU_Server ) - ACS ) * FirstVNF_RAM ) ,( PN + MDR ) )", "choosing": "Min( ( MLU / MUR ) ,( ( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - FirstVNF_Mem_Server ) ,( PN + MDR ) )", "choosing": "Min( ( MLU * MUR ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( DDR - Min( CRS ,DDR ) ) )", "choosing": "Min( MUM ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( RMSe + DS ) - ( MLU - ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( RMSe + Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( DS,Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( PN + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( BR * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,MUR ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ),( PN * ( DDR / BR ) ) ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( ( MLU + MUM ) ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RMSe * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( ARS ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( Max( ( CS - MLU ),( DS * CS ) ) + ( Max( MUC,RMSe ) / ( DS + RRSe ) ) ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ( Const * FirstVNF_Mem ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - DS ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( PN * DDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - Max( ( MUM - ( RMSe / MUC ) ),( ( MUR / RRSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( ( MDR + Max( ARS,Const ) ) ,Max( RRS,PN ) ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + RMSe ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( MUC * CS ) ) / Max( ( CS - MUM ),( CS - ( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - ( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Max( ( CS - MUM ),( CS - MUR ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( DDR - Min( Const ,FirstVNF_CPU_Server ) ) - DDR ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Max( Min( Min( CS ,CS ) ,( RMSe - RMSe ) ),MUR ) ,Min( MUM ,RMSe ) ) / Max( ( CS - MUM ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - DDR ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * Max( ( CS - MUM ),( CS - MUR ) ) ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( ( RMSe * MUR ) + RRSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( ( Min( Max( PN,Const ) ,ARS ) - Const ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + Max( ( RMSe / MUC ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) ) + ( PN * RRS ) )", "choosing": "Max( ( DS - Max( ( DS - MLU ),MLU ) ),MLU )", "obj1": 0.6269230769230769, "obj2": 0.26810615242895597}, {"determining": "( ( DDR - DDR ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - Min( ( ( DDR * BR ) / FirstVNF_CPU_Server ) ,AMS ) ) / ( AMS - RRS ) ) )", "choosing": "( Max( RMSe,RRSe ) - ( MUM + ( ( MUR - ( ( MUR / RMSe ) * CS ) ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + ( Min( ( MRS - ARS ) ,( FirstVNF_Mem * ( DDR - DDR ) ) ) / ( BR + DDR ) ) ) - FirstVNF_Mem ) + Max( ( DDR - DDR ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe - Min( MUR ,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ) ) * ( DS * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) ) )", "choosing": "Max( ( DS - Max( ( DS - MLU ),( DS - Max( ( DS - MLU ),MLU ) ) ) ),MLU )", "obj1": 0.6269230769230769, "obj2": 0.26810615242895597}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,( ( Min( AMS ,ACS ) / MDR ) - ARS ) ) / MDR ) - ARS ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( ( MUC / RRSe ) - ( MLU - ( MLU * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.7134615384615385, "obj2": 0.1855710587166466}, {"determining": "( ( ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( BR + AMS ) ) - ARS ) + DDR ) * ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( MUR - ( DS / ( MUR - DS ) ) ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.7923076923076923, "obj2": 0.13636419802936411}, {"determining": "( ( ( FirstVNF_RAM_Server - ACS ) / Min( ARS ,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_RAM - PN ),Min( FirstVNF_CPU ,CRS ) ) )", "choosing": "Min( ( MUM / ( RCSe - DS ) ) ,Min( Max( MUC,CS ) ,( ( ( MUC / MUR ) * Max( RCSe,RMSe ) ) * RCSe ) ) )", "obj1": 0.8384615384615385, "obj2": 0.134336008752487}, {"determining": "( ( Max( ( DDR / FirstVNF_RAM ),( ACS + FirstVNF_RAM ) ) / ( ( ( Const * BR ) - MDR ) * MDR ) ) / ( Min( ( AMS + FirstVNF_RAM_Server ) ,( MDR - PN ) ) - ( ( BR + FirstVNF_RAM ) * ( FirstVNF_Mem_Server - CRS ) ) ) )", "choosing": "( Max( ( ( Min( MUM ,RCSe ) / DS ) + CS ),RRSe ) / Max( RRSe,( RCSe + Max( RRSe,DS ) ) ) )", "obj1": 0.7, "obj2": 0.20860208898593333}, {"determining": "Min( ( ( ARS - ( PN + Max( DDR,MDR ) ) ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( MRS / ARS ) )", "choosing": "( Min( CS ,( ( MLU * ( DS - RRSe ) ) - ( Max( RMSe,MUC ) - DS ) ) ) / ( RCSe / CS ) )", "obj1": 0.7846153846153846, "obj2": 0.16342959062476856}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( ( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ) )", "obj1": 0.7596153846153846, "obj2": 0.17997366934382905}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,FirstVNF_Mem_Server ),Max( ARS,Const ) ) ) / Min( ACS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) ) - MUM ) - Min( RMSe ,CS ) )", "obj1": 0.9365384615384615, "obj2": 0.04424756210942839}, {"determining": "Min( ( ( ARS - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) * Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) ,( MRS / ARS ) )", "choosing": "( Min( CS ,Min( CS ,( RMSe - ( Max( RMSe,MUC ) - DS ) ) ) ) / ( RCSe / CS ) )", "obj1": 0.8538461538461538, "obj2": 0.1239650332659048}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * ( ( DDR - PN ) - ( FirstVNF_CPU_Server + ( ( FirstVNF_Mem * FirstVNF_RAM ) * ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ) ) ) )", "choosing": "( ( MUC * ( MUC - RMSe ) ) - ( CS / MLU ) )", "obj1": 0.925, "obj2": 0.059396011848907734}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( ( ( RRS + CRS ) - MDR ) / FirstVNF_CPU ) )", "choosing": "( ( ( ( MLU + DS ) + Max( RMSe,RCSe ) ) + ( ( MUR / RMSe ) + Max( DS,MUC ) ) ) * ( ( ( MUM - MUR ) * ( MUR * MUC ) ) + Max( ( MUR + MUC ),( RRSe * RRSe ) ) ) )", "obj1": 0.7615384615384615, "obj2": 0.16739629978346596}, {"determining": "( BR - ( ( CRS + FirstVNF_RAM_Server ) - ( MDR * ACS ) ) )", "choosing": "Max( ( MUC * MUR ),( ( CS / MUC ) + ( DS * RMSe ) ) )", "obj1": 0.9673076923076923, "obj2": 0.039675992810804514}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,Min( ( BR / ( Max( ACS,FirstVNF_Mem ) / Min( ACS ,FirstVNF_Mem ) ) ) ,Min( ACS ,FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM + RMSe ) - ( MLU - MUM ) )", "obj1": 0.8692307692307693, "obj2": 0.11258706059224301}, {"determining": "( ( Min( ACS ,FirstVNF_Mem ) - ARS ) / ( AMS - RRS ) )", "choosing": "Min( ( RMSe * MUM ) ,Max( MUR,MLU ) )", "obj1": 0.8903846153846153, "obj2": 0.09536624655223466}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / ( ( ( DDR - PN ) - PN ) - PN ) ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,RCSe ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.9846153846153847, "obj2": 0.006558005334231978}, {"determining": "Max( ( ( DDR * ACS ) + ( BR / PN ) ),Min( ( ( FirstVNF_CPU / MDR ) + MDR ) ,( ( MDR - ( FirstVNF_RAM / ( AMS + AMS ) ) ) + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( Min( Min( Max( ( DS / RCSe ),( ( ( MUM * CS ) - ( RRSe * MUM ) ) * ( Min( RRSe ,MUR ) / ( MUM * RRSe ) ) ) ) ,Max( CS,Min( RCSe ,CS ) ) ) ,RRSe ) + RMSe ) )", "obj1": 0.6326923076923077, "obj2": 0.26044897268772826}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6942307692307692, "obj2": 0.22685151359574043}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( ( FirstVNF_Mem / RRS ) - ( CRS - CRS ) ) )", "choosing": "( ( CS + RRSe ) * ( ( RCSe - ( MLU - MUM ) ) - RRSe ) )", "obj1": 0.9173076923076923, "obj2": 0.07271511901469263}, {"determining": "Max( ( ( ACS - BR ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU + RMSe ) ) ) )", "obj1": 0.6423076923076924, "obj2": 0.25335127607798746}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( FirstVNF_Mem,Const ),Max( ARS,Const ) ) )", "choosing": "Max( ( CS - Min( ( RMSe / MUC ) ,Min( RRSe ,RCSe ) ) ),RMSe )", "obj1": 0.9788461538461538, "obj2": 0.01863412371103025}, {"determining": "( ( DDR - DDR ) - ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - Min( MDR ,AMS ) ) / ( AMS - RRS ) ) )", "choosing": "( Max( RMSe,RRSe ) - ( MUM + ( RCSe - MUM ) ) )", "obj1": 0.9730769230769231, "obj2": 0.032557750371000206}, {"determining": "( ( ( ( MRS - ARS ) / Max( ACS,Min( ACS ,FirstVNF_Mem ) ) ) + FirstVNF_CPU_Server ) * Min( MRS ,MDR ) )", "choosing": "( ( MUM + RMSe ) + ( MUR + CS ) )", "obj1": 0.8826923076923077, "obj2": 0.10470800252330958}, {"determining": "( Max( PN,( MRS * ( ( AMS / AMS ) + MRS ) ) ) + ( FirstVNF_CPU - ( AMS - RRS ) ) )", "choosing": "( Min( RMSe ,MLU ) / Min( ( RCSe * DS ) ,Min( ( RCSe + ( MUM - ( RRSe * ( CS * RRSe ) ) ) ) ,CS ) ) )", "obj1": 0.9057692307692308, "obj2": 0.09345952438151123}, {"determining": "( Max( Const,FirstVNF_Mem_Server ) * ( PN * ( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) )", "choosing": "( ( MLU / RMSe ) - ( ( MUC / MUR ) * CS ) )", "obj1": 0.9134615384615384, "obj2": 0.07495752936371707}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_Mem_Server ) * ARS ) - Max( FirstVNF_Mem,( ( PN - ( Min( AMS ,MRS ) + FirstVNF_Mem ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( Min( ( RRSe / MUR ) ,( RRSe - RRSe ) ),Max( ( RMSe / CS ),Max( MUM,MUM ) ) ),Max( RMSe,CS ) )", "obj1": 0.8788461538461538, "obj2": 0.10801328283829838}, {"determining": "( Max( ARS,CRS ) + ( AMS + Min( DDR ,Min( Const ,Max( AMS,MDR ) ) ) ) )", "choosing": "( ( RRSe / DS ) * ( DS / ( ( MLU + Max( MUC,RRSe ) ) - Max( ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ),Max( DS,( Max( ( MLU - MUM ),DS ) - MLU ) ) ) ) ) )", "obj1": 0.6826923076923077, "obj2": 0.2308423983645391}, {"determining": "( ( FirstVNF_Mem - ( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + ( Min( DDR ,( FirstVNF_Mem * FirstVNF_Mem ) ) / ( BR + DDR ) ) ),FirstVNF_Mem ) ) ) + Max( ( DDR - DDR ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( RCSe - Min( MUR ,MUC ) ) ) * ( ( RCSe - Min( MUR ,MUC ) ) * MUC ) )", "obj1": 0.6519230769230769, "obj2": 0.2515192240352329}, {"determining": "( ( ( DDR - PN ) - ( MRS + RRS ) ) / ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) / Max( CRS,AMS ) ) )", "choosing": "( ( RMSe - CS ) / Max( Min( DS ,MUC ),MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.08376486426709776}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) )", "choosing": "Min( Max( MLU,MUR ) ,( MUC / MUR ) )", "obj1": 0.9076923076923077, "obj2": 0.0874659885696508}, {"determining": "( ( ( ( FirstVNF_CPU - ( CRS - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - FirstVNF_Mem ) + ( AMS + Min( DDR ,FirstVNF_RAM_Server ) ) ) / Max( RRS,( AMS + MRS ) ) )", "choosing": "( ( ( CS / ( ( MUR / ( Max( MUR,RMSe ) + MUC ) ) / RCSe ) ) * Max( CS,MLU ) ) + ( ( DS - CS ) / ( MUC * RMSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.22819923531327116}, {"determining": "Max( Max( Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ),ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6596153846153846, "obj2": 0.24266811112482176}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) + Max( ( RRS + Min( RRS ,AMS ) ),FirstVNF_Mem ) )", "choosing": "( ( MUR / ( MLU * ( RCSe - Min( ( RRSe / DS ) ,MUC ) ) ) ) * ( DS * MUC ) )", "obj1": 0.6711538461538461, "obj2": 0.23788806810090177}, {"determining": "( MDR - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( ( DS - MUC ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9711538461538461, "obj2": 0.034945886690120394}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( Min( ( AMS + ACS ) ,( BR - ACS ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( Max( RRSe,DS ) / MUC ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( MUR - DS ) ) ) ,Min( Min( Min( Max( RMSe,MUC ) ,MUR ) ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "Max( ( ( ( ACS - ( BR / PN ) ) / Max( MRS,FirstVNF_Mem_Server ) ) + ( BR / PN ) ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - RRSe ) ) ) + RMSe ) - ( MLU - RRSe ) ) ) )", "obj1": 0.6788461538461539, "obj2": 0.23494980077110458}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( FirstVNF_Mem ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( ( ( DS * MUC ) * ( RCSe - Min( MUR ,Max( ( MUR * RRSe ),MUC ) ) ) ) ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MLU,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 0.6557692307692308, "obj2": 0.24743638167804272}, {"determining": "( Max( ( FirstVNF_RAM / ( AMS + AMS ) ),( DDR * ACS ) ) - ( MRS - FirstVNF_Mem ) )", "choosing": "Min( ( Max( ( CS + MUM ),( RCSe * MLU ) ) / ( ( RRSe + RRSe ) / ( RCSe * MLU ) ) ) ,( Max( Min( RCSe ,DS ),( RCSe + CS ) ) * ( Min( MUR ,DS ) + Min( CS ,( ( ( MUM * CS ) - ( RRSe * MUM ) ) * ( ( RMSe + RCSe ) / ( MUM * RRSe ) ) ) ) ) ) )", "obj1": 0.6692307692307692, "obj2": 0.24022564408485864}, {"determining": "( ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server + PN ) ) * ( Min( ( BR / ( ( DDR - PN ) - PN ) ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( MUR - DS ) ) ) ,Min( Min( ( ( ( ( MUC * ( MUC - RMSe ) ) * MUC ) - RMSe ) * ( RCSe + RMSe ) ) ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 0.9980769230769231, "obj2": 0.0006405422566488313}, {"determining": "Max( Max( ARS,ARS ),Min( Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( MUC / RRSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6538461538461539, "obj2": 0.24774526689559584}, {"determining": "Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.2421016015237054}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) - Max( Max( ( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ),FirstVNF_Mem ) )", "choosing": "Max( ( CS - Min( ( MLU * MUR ) ,Min( RRSe ,RCSe ) ) ),( RRSe / CS ) )", "obj1": 0.9807692307692307, "obj2": 0.01594014907375982}, {"determining": "( ( FirstVNF_RAM_Server + Max( FirstVNF_CPU,FirstVNF_RAM ) ) * ( FirstVNF_CPU - ( Max( Const,FirstVNF_Mem_Server ) * ( PN * RRS ) ) ) )", "choosing": "Min( Max( ( MLU / RMSe ),( ( ( DS / Max( RRSe,MUM ) ) * RMSe ) + MLU ) ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "Max( Max( ARS,ARS ),Min( ( Max( Max( ARS,ARS ),Min( ( FirstVNF_Mem_Server + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) ) + DDR ) ,( ARS + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RMSe,RRSe ) / ( ( ( MLU + MLU ) / ( MUC / RRSe ) ) - ( ( MLU + RMSe ) - ( MLU - ( Min( RRSe ,( ( RRSe / RMSe ) / RMSe ) ) * ( RRSe + MLU ) ) ) ) ) )", "obj1": 0.6653846153846154, "obj2": 0.2421016015237054}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ( Max( Const,( ( FirstVNF_RAM_Server + DDR ) * ( FirstVNF_CPU - ARS ) ) ) * ( PN * RRS ) ) ) )", "choosing": "Min( ( MLU / RMSe ) ,( ( MLU / RMSe ) - ( RRSe * CS ) ) )", "obj1": 0.6807692307692308, "obj2": 0.2346146033857738}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( Max( ( ARS - BR ),CRS ) ,BR ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + DDR ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( Max( Min( CS ,Min( ( RMSe * MUC ) ,( Max( MUC,MLU ) + DS ) ) ),CS ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( PN,Const ) ,ARS ) - ( FirstVNF_Mem / RRS ) ) * ( FirstVNF_Mem_Server / Min( RRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / MUC ),RRSe ) - Max( Max( RCSe,Min( RMSe ,RMSe ) ),( ( RCSe + ( ( RCSe / MUM ) * ( RRSe + RRSe ) ) ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + FirstVNF_CPU ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server - BR ) * Min( MDR ,Const ) ) + Min( Min( FirstVNF_Mem_Server ,ARS ) ,( FirstVNF_CPU - ACS ) ) ) - Min( ( ( ACS + MRS ) + Max( FirstVNF_CPU,MRS ) ) ,Max( ( ARS + ACS ),Min( FirstVNF_Mem_Server ,ACS ) ) ) )", "choosing": "Max( ( ( ( RCSe + CS ) / Max( RRSe,MUM ) ) * ( ( RRSe * MUR ) + ( MUC / RMSe ) ) ),( ( ( RCSe + DS ) - Max( CS,RRSe ) ) + Min( Min( RRSe ,MUC ) ,( MUC / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( MRS,( FirstVNF_RAM_Server - AMS ) ) - BR ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUC - ( ( RCSe - RMSe ) - DS ) ) * ( RCSe + ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "Min( Max( CS,CS ) ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * FirstVNF_Mem_Server ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( CS - MUM ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( ( MRS + BR ) / FirstVNF_Mem ) ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( MLU - MUC ),RMSe ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_Mem_Server ) * ( ( Min( AMS ,ACS ) / MDR ) - ( FirstVNF_CPU_Server / ( ( MRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server + ( Min( Min( MDR ,RRS ) ,FirstVNF_RAM ) + ( Const / BR ) ) ) ) ) ) )", "choosing": "( Min( ( RRSe / RCSe ) ,Min( RCSe ,RMSe ) ) / ( Min( ( RMSe / Min( RMSe ,MLU ) ) ,MUC ) + ( ( ( Max( ( MLU + Max( MUM,CS ) ),MUR ) - ( MLU - ( Max( RCSe,MUM ) * MLU ) ) ) - MUM ) / ( ( ( ( RMSe - MUR ) * Min( ( DS + MLU ) ,( MLU * MLU ) ) ) + CS ) - ( MUR + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - ( AMS - MDR ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( MLU / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + ( MUM - ( DS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ACS ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + MUC ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - ( ( MLU - MUM ) + Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - DDR ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + ( CS - CS ) ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( FirstVNF_CPU_Server ,PN ),( MDR / BR ) ) / ( Max( FirstVNF_RAM_Server,DDR ) * ( BR - Const ) ) ) - Max( ( ( RRS / Const ) - ( BR - FirstVNF_CPU ) ),( ( FirstVNF_Mem / ACS ) + ( PN + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RMSe * MUR ) + ( DS * Max( ( RCSe * RMSe ),RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_Mem_Server ) - ( FirstVNF_CPU + FirstVNF_CPU ) ) ,( ( DDR / MRS ) * ( ARS / FirstVNF_CPU ) ) ) ,( ( Min( FirstVNF_RAM_Server ,RRS ) * ( AMS + BR ) ) / ( Max( FirstVNF_CPU,PN ) * ( CRS / BR ) ) ) )", "choosing": "( Max( Min( ( RMSe - RRSe ) ,( MUC * MUM ) ),( ( DS - RRSe ) + ( RCSe - CS ) ) ) / ( ( Min( MLU ,RRSe ) + Min( MUM ,MUR ) ) + Min( ( RRSe + RMSe ) ,Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * PN ) / ( BR - FirstVNF_RAM_Server ) ) / Min( ( MDR - CRS ) ,( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) ) - Max( ( ( CRS / FirstVNF_Mem_Server ) / Min( FirstVNF_Mem_Server ,PN ) ),( ( MRS * FirstVNF_CPU ) - ( Const * FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( DS + DS ) / ( DS + MUM ) ),Min( ( RMSe - DS ) ,( MLU + RCSe ) ) ) / ( ( ( MUM * DS ) * Min( RCSe ,MLU ) ) - ( ( RMSe / RCSe ) / Min( RMSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ARS - ARS ) / Min( MDR ,Const ) ) * Max( ( CRS * MRS ),( FirstVNF_Mem_Server / MDR ) ) ) ,Min( ( ( FirstVNF_RAM_Server * CRS ) * ( FirstVNF_RAM / MDR ) ) ,( ( FirstVNF_RAM * MRS ) - ( MDR / BR ) ) ) )", "choosing": "Max( Min( Max( ( MUR - MUM ),( RCSe * MUC ) ) ,( ( MUM + DS ) - ( CS / RRSe ) ) ),Max( ( ( MUR + RRSe ) + ( MUR + CS ) ),Min( ( MLU * MUC ) ,Max( MUM,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( Const ,Const ),( FirstVNF_Mem / FirstVNF_RAM_Server ) ) * Max( ( BR / AMS ),Max( FirstVNF_RAM,CRS ) ) ) - ( Min( ( ACS + CRS ) ,( Const + DDR ) ) / Min( Min( FirstVNF_Mem ,BR ) ,ARS ) ) )", "choosing": "Min( Max( RRSe,MLU ) ,( ( ( RCSe - MUM ) / ( CS + DS ) ) * Max( ( MLU * RMSe ),Max( RRSe,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( PN ,RRS ) - FirstVNF_Mem_Server ) - Min( CRS ,( CRS - FirstVNF_RAM ) ) ) - ( MRS - ( FirstVNF_CPU * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / RMSe ) * ( MUM + CS ) ) ) / MUC ) - ( CS + ( MUR * ( MUC / MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,BR ) - ( ( ( BR * PN ) + ARS ) - ( ( AMS - FirstVNF_CPU ) + BR ) ) )", "choosing": "( ( ( MUM - RCSe ) / RRSe ) / ( ( ( RRSe + CS ) * ( RCSe + DS ) ) / ( Min( RCSe ,MUM ) + ( MUC * MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM + Max( ARS,Max( ( FirstVNF_Mem - ( Max( FirstVNF_CPU,CRS ) + MDR ) ),FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( ( MLU + ( ( DS * ( RCSe - ( Min( CS ,( RRSe / CS ) ) / DS ) ) ) / RRSe ) ),MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - PN ) - ( FirstVNF_CPU_Server + PN ) ) ,( AMS - RRS ) )", "choosing": "Min( ( ( MUC - RMSe ) * ( RCSe + RMSe ) ) ,( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + DDR ) * ( Min( ( BR / FirstVNF_CPU_Server ) ,( BR + AMS ) ) - ARS ) )", "choosing": "Min( Max( MLU,( DS / ( Min( MUM ,RMSe ) - DS ) ) ) ,Min( Min( RCSe ,MUM ) ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) / Min( ( AMS + Const ) ,ACS ) )", "choosing": "Min( ( RMSe * MUM ) ,( ( ( ( MLU + MUC ) * DS ) - RMSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / PN ) / FirstVNF_CPU ) / ( CRS + MDR ) ) / ( ( Max( FirstVNF_Mem_Server,( Max( DDR,ARS ) / AMS ) ) + ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Const ) ) - RRS ) )", "choosing": "Min( ( ( MUR / Max( DS,Max( ( DS * Min( Max( RMSe,MUC ) ,MUR ) ),( CS * MUC ) ) ) ) + Min( MUC ,Min( Min( ( MUR / CS ) ,( MLU * Min( ( CS / MLU ) ,Max( RRSe,MLU ) ) ) ) ,MLU ) ) ) ,Max( MUR,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR * Max( FirstVNF_Mem,MDR ) ) ,( MRS / ARS ) ) - Min( Const ,ARS ) )", "choosing": "( ( RMSe - Min( ( RMSe - RCSe ) ,CS ) ) * ( RCSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( ( RRSe / RCSe ) / MUC ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( PN * FirstVNF_RAM ) ,( PN + MDR ) ) - FirstVNF_CPU_Server ) - ACS ) - Min( Const ,ARS ) )", "choosing": "( Min( RMSe ,RCSe ) * Min( Min( MUC ,Max( RCSe,( DS - CS ) ) ) ,( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - FirstVNF_CPU_Server ) - ACS ) * FirstVNF_RAM ) ,( PN + MDR ) )", "choosing": "Min( ( MLU / MUR ) ,( ( Max( RMSe,MUC ) * Min( ( CS / Max( RCSe,Max( RCSe,Min( RMSe ,MUC ) ) ) ) ,MUM ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - FirstVNF_Mem_Server ) ,( PN + MDR ) )", "choosing": "Min( ( MLU * MUR ) ,( MUM / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,PN ) - ( DDR - Min( CRS ,DDR ) ) )", "choosing": "Min( MUM ,( MLU * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - DDR ) - Max( FirstVNF_CPU,CRS ) )", "choosing": "( ( RMSe + DS ) - ( MLU - ( DS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) - DDR ) - Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( ( RMSe + Max( ( RCSe / CS ),Min( RCSe ,CS ) ) ) - ( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,AMS ) - ( FirstVNF_RAM_Server + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( RRSe * MUC ) ) ,Max( DS,Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ,( CRS / FirstVNF_Mem ) ) - ( PN + MDR ) )", "choosing": "Min( Max( ( DS / RCSe ),( Max( RMSe,RRSe ) / ( Min( MLU ,RRSe ) + RMSe ) ) ) ,Max( ( RCSe / CS ),Min( RCSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( ARS - BR ),CRS ) ,( ( BR * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( MUC ,MUR ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( FirstVNF_RAM_Server ,MRS ) - ( ARS + ARS ) ),( PN * ( DDR / BR ) ) ) ,( ( Const * BR ) - MDR ) )", "choosing": "( ( RMSe / Min( ( MLU + MUM ) ,RMSe ) ) - Min( MLU ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS / AMS ) - Min( ARS ,FirstVNF_Mem_Server ) ) - ( ( ACS / MDR ) + ( FirstVNF_RAM_Server / PN ) ) )", "choosing": "Max( ( ( RCSe - RMSe ) / ( MUR * MLU ) ),Min( ( DS * MLU ) ,( ( RMSe * MUC ) / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_CPU_Server ) * ( BR - Min( ARS ,DDR ) ) )", "choosing": "( Min( RCSe ,MUM ) + MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_Mem ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - ( MLU + ( Max( ( CS - MLU ),( DS * CS ) ) + ( Max( MUC,RMSe ) / ( DS + RRSe ) ) ) ) ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR - ( Const * FirstVNF_Mem ) ),FirstVNF_Mem_Server ) / ( RRS - FirstVNF_RAM ) )", "choosing": "( ( Min( RMSe ,RCSe ) - DS ) - ( Min( MUR ,MUC ) - ( MLU / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_RAM_Server ) ,( ACS + Max( ( PN * DDR ),FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( MUM ,DS ) - Min( CS ,MUC ) ) - Max( ( MUM - ( RMSe / MUC ) ),( ( MUR / RRSe ) - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * MRS ) - Min( ( MDR + Max( ARS,Const ) ) ,Max( RRS,PN ) ) ) / ( MDR / CRS ) )", "choosing": "Max( ( Min( MUC ,RRSe ) + RMSe ),Max( Min( DS ,MLU ),Min( CS ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( ( FirstVNF_RAM_Server * PN ),Max( MDR,MRS ) ) ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( MUC * CS ) ) / Max( ( CS - MUM ),( CS - ( ( DS * ( RCSe + RRSe ) ) / ( RMSe * MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - ( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Max( ( CS - MUM ),( CS - MUR ) ) / ( RMSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( DDR - Min( Const ,FirstVNF_CPU_Server ) ) - DDR ) ,DDR ) - ( FirstVNF_RAM * ARS ) ) ,( Max( ACS,RRS ) + Max( RRS,MDR ) ) )", "choosing": "( Min( Max( Min( Min( CS ,CS ) ,( RMSe - RMSe ) ),MUR ) ,Min( MUM ,RMSe ) ) / Max( ( CS - MUM ),( CS - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS + PN ),Min( FirstVNF_CPU ,CRS ) ) - Max( Max( Const,ARS ),Max( MDR,MRS ) ) )", "choosing": "( ( DS * ( RCSe + RRSe ) ) / ( RMSe * ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}]}