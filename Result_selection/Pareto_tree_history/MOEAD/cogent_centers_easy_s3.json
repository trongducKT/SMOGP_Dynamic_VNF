{"1": [{"determining": "Max( ( CRS / FirstVNF_CPU ),( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) )", "obj1": 0.23279352226720648, "obj2": 0.7483373386516984}, {"determining": "( ( ACS + DDR ) / ( ( FirstVNF_CPU_Server * ACS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( Max( MUM,CS ) ,CS ) + ( MLU - RRSe ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.3522267206477733, "obj2": 0.6057630612647608}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( ARS + ACS ) * ( ACS * ACS ) )", "choosing": "( ( MUR - MUR ) - ( MUR / RCSe ) )", "obj1": 0.2834008097165992, "obj2": 0.6977626472703226}, {"determining": "Max( Min( FirstVNF_RAM_Server ,Const ),( FirstVNF_RAM - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( RCSe - MUC ) )", "obj1": 0.23481781376518218, "obj2": 0.7350345795207601}, {"determining": "( ( RRS + FirstVNF_Mem ) + ( FirstVNF_RAM_Server + BR ) )", "choosing": "Max( Min( CS ,RRSe ),( RMSe - MLU ) )", "obj1": 0.26720647773279355, "obj2": 0.7074759939472914}, {"determining": "( Max( ARS,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUM ) / ( RMSe - MUM ) )", "obj1": 0.2408906882591093, "obj2": 0.7531878772537595}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) * ( PN - BR ) )", "choosing": "( Max( MUM,CS ) * Max( DS,MUR ) )", "obj1": 0.31376518218623484, "obj2": 0.6737222224240502}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( RMSe - Min( RMSe ,MUM ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.6319157482128659}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ( BR * ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Max( ( RRSe - ( RRSe / RMSe ) ),( RCSe - RCSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7759377309856371}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + Min( PN ,FirstVNF_RAM_Server ) ) + ( AMS / ARS ) )", "choosing": "Min( ( RCSe + RRSe ) ,Min( ( ( DS / Min( ( RCSe - RCSe ) ,Min( Max( ( MUM - MLU ),( DS * MLU ) ) ,MUR ) ) ) * RRSe ) ,MLU ) )", "obj1": 0.3340080971659919, "obj2": 0.6328706537896431}, {"determining": "( Max( MRS,Const ) * ( FirstVNF_RAM + PN ) )", "choosing": "Max( ( ( Max( MUM,( Min( Min( RCSe ,( CS - MUC ) ) ,DS ) - Max( MUC,RMSe ) ) ) + ( MUC * MLU ) ) - MLU ),Min( DS ,DS ) )", "obj1": 0.48380566801619435, "obj2": 0.4662353491268686}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MDR ) / ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( MUM - DS ) + ( MLU - RMSe ) )", "obj1": 0.10526315789473684, "obj2": 0.8707771222244208}, {"determining": "( Max( PN,MRS ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Max( RCSe,RMSe ) - Min( RCSe ,( ( ( MUR - Max( ( MUC / RCSe ),Max( ( CS / DS ),( RCSe * DS ) ) ) ) - MLU ) + RCSe ) ) )", "obj1": 0.1720647773279352, "obj2": 0.8187208266222499}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,AMS ) ,Max( FirstVNF_Mem,MRS ) )", "choosing": "Max( ( CS / MLU ),( MLU + DS ) )", "obj1": 0.4089068825910931, "obj2": 0.547351221776191}, {"determining": "( ( ACS / CRS ) + ( ACS + FirstVNF_RAM_Server ) )", "choosing": "( ( CS / RCSe ) - ( CS * RMSe ) )", "obj1": 0.2388663967611336, "obj2": 0.7508987198869892}, {"determining": "Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + MUC ) - Min( MLU ,CS ) )", "obj1": 0.30364372469635625, "obj2": 0.659086667479806}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( BR + Const ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * Min( MUM ,MUR ) )", "obj1": 0.3319838056680162, "obj2": 0.6199826726469694}, {"determining": "( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( RRSe * RCSe ) - Min( MUM ,MUM ) )", "obj1": 0.32186234817813764, "obj2": 0.664672404300845}, {"determining": "( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + ( CS / MLU ) )", "obj1": 0.2651821862348178, "obj2": 0.7455257159850855}, {"determining": "( Min( FirstVNF_CPU_Server ,ACS ) + ( AMS + FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe * MUC ) - ( MLU - MUR ) )", "obj1": 0.29959514170040485, "obj2": 0.687481199788825}, {"determining": "Min( ( FirstVNF_Mem_Server / Const ) ,( ACS + FirstVNF_Mem ) )", "choosing": "( ( Max( RCSe,MUR ) * MUM ) + ( MUM + RCSe ) )", "obj1": 0.33805668016194335, "obj2": 0.6458417472026828}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( Const / Const ) * FirstVNF_CPU ) )", "choosing": "Max( ( RRSe - RRSe ),Max( RMSe,MUC ) )", "obj1": 0.3340080971659919, "obj2": 0.6480910996633618}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MDR - Const ),( FirstVNF_Mem_Server / DDR ) )", "choosing": "Max( ( MLU + CS ),( DS + MUC ) )", "obj1": 0.19230769230769232, "obj2": 0.8390193343273115}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( DDR * MDR ) )", "choosing": "( ( RRSe - RCSe ) / ( RRSe / DS ) )", "obj1": 0.2388663967611336, "obj2": 0.7478158322120172}, {"determining": "( Max( PN,ARS ) / ( FirstVNF_RAM * AMS ) )", "choosing": "( ( MLU + RMSe ) + ( MUR - MLU ) )", "obj1": 0.32793522267206476, "obj2": 0.6450474919939628}, {"determining": "( ( ( ( MRS + Min( BR ,FirstVNF_RAM ) ) - ( Max( Min( Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ),Min( ( FirstVNF_CPU_Server - ( PN * MDR ) ) ,FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * MUC ) * ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * RRS ) ,Max( ACS,PN ) ) ,Min( Min( ACS ,FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU * MUC ) - ( ( MUM / RCSe ) / RCSe ) )", "obj1": 0.33805668016194335, "obj2": 0.6322014082223343}, {"determining": "( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,ACS ) - ( FirstVNF_CPU * FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MUR ) * Min( MLU ,CS ) ) * ( ( MLU + MUM ) / Min( RMSe ,RRSe ) ) )", "obj1": 0.22469635627530365, "obj2": 0.7697897361340833}, {"determining": "Min( ( Min( ARS ,ACS ) / ARS ) ,( RRS * FirstVNF_RAM_Server ) )", "choosing": "( Max( ( DS + CS ),( MLU - MUC ) ) - ( ( RMSe - MUC ) * ( Min( ( Max( ( Min( RCSe ,RCSe ) / ( RRSe + CS ) ),RMSe ) * MUC ) ,MUM ) * CS ) ) )", "obj1": 0.3603238866396761, "obj2": 0.6442358387743612}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( DDR - Max( FirstVNF_CPU,FirstVNF_Mem ) ) * ( FirstVNF_CPU * ( RRS - MRS ) ) )", "choosing": "( ( ( DS * RMSe ) - RCSe ) / Max( RCSe,Min( MLU ,RMSe ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5880149187154914}, {"determining": "( ( ( FirstVNF_Mem / FirstVNF_CPU ) + Min( FirstVNF_RAM_Server ,CRS ) ) / ( ( AMS - AMS ) * ( PN + FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( RMSe - MUC ),( RCSe / RCSe ) ) ,Min( ( RMSe / MUC ) ,MUC ) )", "obj1": 0.32186234817813764, "obj2": 0.666181097167414}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + ACS ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( Max( MUC,RRSe ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6564489066176573}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN + ( PN + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + MRS ) ) ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.31983805668016196, "obj2": 0.6456878830755379}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( CS * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.2388663967611336, "obj2": 0.7468197503878599}, {"determining": "Min( Max( FirstVNF_RAM,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ,Max( PN,FirstVNF_RAM ) )", "choosing": "Min( ( ( RRSe + RMSe ) + ( CS - DS ) ) ,( Max( RMSe,MUM ) + Max( MUR,CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.6723631358777084}, {"determining": "Min( ( RRS + Min( FirstVNF_Mem ,ACS ) ) ,( CRS * Min( FirstVNF_CPU_Server ,ARS ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( Min( CS ,MUM ) / RCSe ) )", "obj1": 0.24898785425101214, "obj2": 0.7398850614747708}, {"determining": "( Max( ( FirstVNF_Mem - ARS ),Const ) + ( MDR * ( MRS / Const ) ) )", "choosing": "( Min( ( RRSe * CS ) ,Min( RCSe ,RRSe ) ) / Min( ( MUR - RMSe ) ,Max( RCSe,CS ) ) )", "obj1": 0.2854251012145749, "obj2": 0.6776117656137679}, {"determining": "( Min( ( ARS * ARS ) ,MRS ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - CS ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9311740890688259, "obj2": 0.07041572024249179}, {"determining": "( ( RRS + MDR ) / ( FirstVNF_Mem_Server * FirstVNF_CPU ) )", "choosing": "( ( Min( RRSe ,MUR ) * ( RRSe - MLU ) ) - ( ( MUC / CS ) * ( RMSe - CS ) ) )", "obj1": 0.22469635627530365, "obj2": 0.7928654262083216}, {"determining": "Max( ( Min( MDR ,CRS ) * ( FirstVNF_CPU_Server * Const ) ),( Min( FirstVNF_Mem ,RRS ) - ( Const / FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RMSe ,MUC ) ,( DS / MLU ) ) - Min( Min( DS ,MUM ) ,Max( MUR,RMSe ) ) )", "obj1": 0.20445344129554655, "obj2": 0.7832136345963626}, {"determining": "( ( ( PN / BR ) * RRS ) + ( FirstVNF_RAM - ( Const / AMS ) ) )", "choosing": "( Max( RRSe,RRSe ) * ( ( MUR - MUM ) / RMSe ) )", "obj1": 0.7024291497975709, "obj2": 0.2907473572583116}, {"determining": "Max( Max( ( DDR - ACS ),( DDR * AMS ) ),Max( ( RRS * FirstVNF_Mem_Server ),( CRS * FirstVNF_CPU_Server ) ) )", "choosing": "Min( Max( RCSe,( RCSe * MUM ) ) ,( RRSe + RRSe ) )", "obj1": 0.340080971659919, "obj2": 0.6304563672430145}, {"determining": "( Max( Min( AMS ,FirstVNF_CPU ),( Const / MDR ) ) - ( MDR - PN ) )", "choosing": "( ( ( MUC / MLU ) - Min( MLU ,MUC ) ) * ( Max( MUC,MUC ) / ( RRSe + MUR ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7872090297003597}, {"determining": "( ( ( FirstVNF_CPU_Server + AMS ) * MRS ) * ( AMS + ( AMS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) )", "obj1": 0.1862348178137652, "obj2": 0.8146292841971431}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( ( Max( CS,RRSe ) / ( MUM / MUR ) ) - ( ( DS + MUC ) / ( MUR * RCSe ) ) )", "obj1": 0.6740890688259109, "obj2": 0.31506931501937413}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( MUR - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.2611336032388664, "obj2": 0.7416898656590425}, {"determining": "Min( ( ( CRS / FirstVNF_CPU ) + ( FirstVNF_Mem_Server + ACS ) ) ,( ( FirstVNF_Mem / ACS ) * ( RRS * Const ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) + ( RRSe - RCSe ) ) * ( MUC / Max( CS,RMSe ) ) )", "obj1": 0.340080971659919, "obj2": 0.6266394713227306}, {"determining": "( Min( CRS ,MDR ) + Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( ( MUR / RRSe ) / Max( RCSe,( MLU / CS ) ) )", "obj1": 0.2125506072874494, "obj2": 0.8125752058182377}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.2854251012145749, "obj2": 0.6779041506869677}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( ACS ,ARS ) ,( MRS + FirstVNF_RAM ) ) ,Max( ( MRS + PN ),( FirstVNF_CPU_Server - ACS ) ) )", "choosing": "( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( ( RCSe + MLU ) + Min( CS ,MUR ) ) )", "obj1": 0.3360323886639676, "obj2": 0.6448004664196046}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + RRSe ) )", "obj1": 0.43724696356275305, "obj2": 0.5098901125964637}, {"determining": "Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUR ) ,( MUR * RCSe ) ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.18016194331983806, "obj2": 0.8044753392327996}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "( ( ( ( FirstVNF_Mem / DDR ) * ( CRS / FirstVNF_CPU_Server ) ) * ( Max( ARS,FirstVNF_Mem ) + Max( FirstVNF_RAM_Server,AMS ) ) ) - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Min( RRSe ,DS ) - DS ) - ( Max( DS,RCSe ) * MUC ) )", "obj1": 0.20445344129554655, "obj2": 0.7921685334109833}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( AMS / MDR ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + ( Min( ( CS / RMSe ) ,Max( DS,RCSe ) ) + Min( ( DS + RRSe ) ,Min( RMSe ,MUC ) ) ) )", "obj1": 0.8218623481781376, "obj2": 0.1940987795334579}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "( ( ( ( FirstVNF_CPU * AMS ) + ( DDR / ACS ) ) / ( ( Const / DDR ) * Min( CRS ,PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) + ( CRS / ARS ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( AMS + ARS ) ) ) )", "choosing": "( Min( Min( ( RMSe * RMSe ) ,( RRSe / MUC ) ) ,( ( RMSe / DS ) - ( RCSe / CS ) ) ) / Max( Max( ( RMSe - RRSe ),Max( MLU,MUR ) ),Max( Max( RCSe,CS ),( RMSe - RCSe ) ) ) )", "obj1": 0.3299595141700405, "obj2": 0.6425954971033548}, {"determining": "( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),( ( FirstVNF_RAM + AMS ) - ( FirstVNF_CPU - FirstVNF_Mem ) ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) )", "choosing": "( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( CS / ( Max( MLU,MLU ) / ( MUR + MUR ) ) ) )", "obj1": 0.27530364372469635, "obj2": 0.7258017994012249}, {"determining": "Min( Min( ( RRS - FirstVNF_CPU ) ,BR ) ,( Max( ( MRS * RRS ),Max( RRS,CRS ) ) / ( Max( FirstVNF_CPU_Server,AMS ) + Max( MDR,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe - DS ) ,Min( ( ( MLU - MUC ) - ( ( RMSe / Max( Min( DS ,RMSe ),( ( MUM / RCSe ) - ( RMSe + RMSe ) ) ) ) - ( MLU - RCSe ) ) ) ,MUR ) )", "obj1": 0.23481781376518218, "obj2": 0.7546391315087028}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,( ( FirstVNF_RAM - ( ( ( FirstVNF_RAM_Server * RRS ) + ( RRS - CRS ) ) + FirstVNF_RAM ) ) / FirstVNF_Mem_Server ) ) / ( ( ( FirstVNF_RAM / CRS ) - FirstVNF_CPU_Server ) * Max( Const,FirstVNF_Mem ) ) ) / Min( DDR ,FirstVNF_RAM ) )", "choosing": "Max( ( RRSe + RCSe ),( MLU * ( MUM * Max( RRSe,RCSe ) ) ) )", "obj1": 0.2611336032388664, "obj2": 0.7200841285881113}, {"determining": "( ( Max( FirstVNF_CPU,( FirstVNF_CPU_Server + Min( ARS ,( ( FirstVNF_Mem_Server + MDR ) * FirstVNF_CPU ) ) ) ) - Min( FirstVNF_CPU ,( BR / ( ACS / ( AMS * FirstVNF_CPU_Server ) ) ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Min( ( RRSe / MUM ) ,Min( MUM ,MUR ) ) / ( ( CS * ( ( ( ( CS * ( RMSe * MUM ) ) * ( ( MUC / RCSe ) / RRSe ) ) * ( RCSe + MLU ) ) + ( Min( RCSe ,Max( RCSe,Max( MUM,RRSe ) ) ) - RRSe ) ) ) - MUR ) )", "obj1": 0.16194331983805668, "obj2": 0.8178634756811718}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * ( PN + FirstVNF_Mem_Server ) ) + ( Max( PN,FirstVNF_RAM_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ),( ( ( ACS * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) * ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUM + MUM ) + DS ) ,( ( ( RRSe + RRSe ) / MUM ) + RCSe ) )", "obj1": 0.4089068825910931, "obj2": 0.550305155330904}, {"determining": "Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( AMS / ACS ) )", "choosing": "Max( Min( ( ( RCSe + RMSe ) * Min( DS ,MUC ) ) ,( Min( MUR ,RMSe ) * ( DS - RRSe ) ) ),( ( ( RRSe / MUC ) * ( RMSe - DS ) ) + Min( ( RMSe / RCSe ) ,( MUM * RCSe ) ) ) )", "obj1": 0.2773279352226721, "obj2": 0.7081902438537245}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8943736512603861}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( ( ACS - BR ) + MRS ) ) ) )", "choosing": "( ( ( MLU * RCSe ) + ( ( CS / RRSe ) - Max( RCSe,CS ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 0.2145748987854251, "obj2": 0.800031922055755}, {"determining": "( Max( ( Min( Const ,Const ) + ( ACS / FirstVNF_Mem_Server ) ),Min( Min( FirstVNF_RAM_Server ,DDR ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) - ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) )", "choosing": "( ( Max( ( MUC - MUC ),( DS * DS ) ) * ( Min( MUR ,RMSe ) - ( MLU * MUC ) ) ) / Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.7073099802256242}, {"determining": "( Max( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_Mem - RRS ) ),( ( MDR * DDR ) / ( BR / ARS ) ) ) - ( ( Min( CRS ,FirstVNF_RAM ) * ( CRS * BR ) ) / ( ( DDR / FirstVNF_Mem ) / Min( CRS ,Const ) ) ) )", "choosing": "( Max( DS,( CS - CS ) ) - Max( Max( DS,Min( MUC ,RCSe ) ),MUR ) )", "obj1": 0.3785425101214575, "obj2": 0.5812181006286419}, {"determining": "( Min( ( DDR + MDR ) ,PN ) - Max( RRS,( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( CS,RCSe ) / ( RMSe / MLU ) ) * ( ( MUC + CS ) * Max( MLU,CS ) ) ) / Min( Max( ( CS + MUC ),( CS * RRSe ) ) ,( Max( DS,MLU ) + Max( CS,RRSe ) ) ) )", "obj1": 0.25708502024291496, "obj2": 0.7704663818742225}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Max( CRS,PN ),Max( FirstVNF_CPU_Server,ARS ) ) + Min( ( MDR / ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) + Max( DDR,AMS ) ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU - DDR ) ) ) )", "choosing": "( ( ( Min( DS ,MUC ) * ( CS + MLU ) ) - ( ( RMSe * MUC ) * ( RMSe / DS ) ) ) * ( ( ( MUM - CS ) * ( RRSe * DS ) ) / ( ( MUC / RMSe ) - ( MUR * MLU ) ) ) )", "obj1": 0.3724696356275304, "obj2": 0.6598006740660421}, {"determining": "Min( ( Max( CRS,FirstVNF_RAM_Server ) * CRS ) ,( RRS - ( BR - FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUM / CS ) ,( RMSe + MUC ) ) * ( ( CS * CS ) / Max( RMSe,CS ) ) ) / ( Max( ( MUC - MUR ),Max( RMSe,MUR ) ) + Max( ( RCSe / CS ),Max( DS,MUR ) ) ) )", "obj1": 0.22064777327935223, "obj2": 0.7864810528435643}, {"determining": "( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) )", "choosing": "Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6423186455189427}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS / FirstVNF_Mem_Server ) + ( MDR + CRS ) ) ,Max( ( FirstVNF_RAM + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,AMS ) ) ) + Max( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS - Const ) ),( ( DDR * ARS ) * ( FirstVNF_CPU * BR ) ) ) )", "choosing": "( ( ( ( CS - DS ) * CS ) * MUM ) * ( Min( MUC ,( DS - RRSe ) ) + MUM ) )", "obj1": 0.34615384615384615, "obj2": 0.6581169064566763}, {"determining": "Min( Max( FirstVNF_CPU_Server,PN ) ,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) )", "obj1": 0.25708502024291496, "obj2": 0.7189277393351295}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + FirstVNF_CPU_Server ) * ACS ) * ( Min( ACS ,FirstVNF_RAM ) + MDR ) ) - ( FirstVNF_Mem_Server * ( MRS + ACS ) ) )", "choosing": "Min( Max( ( Max( RCSe,RMSe ) + ( RMSe - MUR ) ),Max( ( MLU / DS ),( RMSe - RCSe ) ) ) ,( ( ( MUC - RRSe ) * Max( DS,RCSe ) ) * Min( Max( MUC,RCSe ) ,( MUC - RMSe ) ) ) )", "obj1": 0.5182186234817814, "obj2": 0.5639370631939684}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.6012145748987854, "obj2": 0.36510607092779973}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}], "2": [{"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / MRS )", "choosing": "Max( Max( Max( DS,RCSe ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8943736512603861}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + MLU )", "obj1": 0.7935222672064778, "obj2": 0.1783399241034202}, {"determining": "( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 0.8502024291497976, "obj2": 0.12518640407790763}, {"determining": "( ( Const - Min( FirstVNF_CPU ,Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( AMS / ACS ) ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Min( DS ,MUC ) / ( DS - MUR ) )", "obj1": 0.6720647773279352, "obj2": 0.27177066536720607}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ( BR * ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Max( ( RRSe - ( RRSe / RMSe ) ),( RCSe - RCSe ) )", "obj1": 0.9048582995951417, "obj2": 0.1039280776510711}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( FirstVNF_RAM * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( ( RCSe + MLU ) + Min( CS ,MUR ) ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.47529861115667027}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06512586048812628}, {"determining": "Min( ( ( PN / ( FirstVNF_Mem * Max( Const,FirstVNF_Mem ) ) ) / Min( DDR ,FirstVNF_RAM ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - ( ( ( MUM - MUC ) + Max( RMSe,CS ) ) / ( ( MUR + RMSe ) + Max( CS,MLU ) ) ) ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.11269459039841821}, {"determining": "( Max( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_Mem - RRS ) ),( ( MDR * DDR ) / ( BR / ARS ) ) ) - ( ( Min( CRS ,FirstVNF_RAM ) * Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) / ( ( DDR / FirstVNF_Mem ) / Min( CRS ,Const ) ) ) )", "choosing": "( Max( DS,( CS - Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) ) ) ) - Max( Max( DS,Min( MUC ,RCSe ) ),MUR ) )", "obj1": 0.41700404858299595, "obj2": 0.5400455033063823}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - ( MUC / CS ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9534412955465587, "obj2": 0.039149409938238934}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( ( MDR + FirstVNF_CPU_Server ) * ACS ) * ( Min( ACS ,FirstVNF_RAM ) + MDR ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( ( MLU / DS ) - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8619925557245495}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( RRS + CRS ),Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( MLU ,CS ) )", "obj1": 0.23279352226720648, "obj2": 0.7289025960296938}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - CS ) - ( RCSe / MUM ) )", "obj1": 0.2894736842105263, "obj2": 0.6517164517699723}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( Min( CRS ,( MDR * RRS ) ) + Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "( Min( ( MLU - ( RMSe / RMSe ) ) ,( CS - CS ) ) / Max( RCSe,( MLU / CS ) ) )", "obj1": 0.22469635627530365, "obj2": 0.7491742066860462}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( ( ( ( MDR + FirstVNF_CPU_Server ) * ACS ) * ( Min( ACS ,FirstVNF_RAM ) + MDR ) ) - ( ( Const - FirstVNF_RAM ) * ( MRS + ACS ) ) )", "choosing": "Min( ( Max( MUR,CS ) / ( RRSe + CS ) ) ,( ( ( MUC - RRSe ) * Max( DS,RCSe ) ) * Min( Max( MUC,RCSe ) ,( MUC - RMSe ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.7893052780384802}, {"determining": "( MDR - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Min( RRSe ,DS ) - DS ) - ( Max( DS,RCSe ) * Min( CS ,RRSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.666364115085726}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,( Const / MRS ) ) / ( Const + FirstVNF_CPU_Server ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( DS + Max( RMSe,MUM ) ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.09919028340080972, "obj2": 0.8795881461120242}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( RMSe + RCSe ) )", "obj1": 0.3299595141700405, "obj2": 0.6186881950805496}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( Min( FirstVNF_Mem_Server ,CRS ) / Min( FirstVNF_RAM_Server ,MRS ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( MUR + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6968646182209287}, {"determining": "( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,ACS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUR ) * Min( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ,CS ) ) * ( ( MLU + MUM ) / Min( RMSe ,RRSe ) ) )", "obj1": 0.9453441295546559, "obj2": 0.04743815675226042}, {"determining": "( ( ( ( FirstVNF_CPU * AMS ) + ( DDR / ACS ) ) / ( ( Const / DDR ) * Min( CRS ,PN ) ) ) - FirstVNF_Mem )", "choosing": "( Min( Min( ( RMSe * RMSe ) ,( RRSe / MUC ) ) ,( ( RMSe / DS ) - ( RCSe / CS ) ) ) / Max( MUM,DS ) )", "obj1": 0.3157894736842105, "obj2": 0.6450661607690313}, {"determining": "Min( Min( ( ( PN + ( PN + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + MRS ) ) ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "( Max( BR,DDR ) / ( FirstVNF_CPU / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR - MUM ) / Max( Min( CS ,RRSe ),( RMSe - MLU ) ) )", "obj1": 0.25708502024291496, "obj2": 0.7068223938213294}, {"determining": "( ( ( ( ( FirstVNF_CPU * AMS ) + ( DDR / ACS ) ) / ( ( Const / DDR ) * Min( CRS ,PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) + ( CRS / ARS ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( AMS + ARS ) ) ) ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,( RRSe / MUC ) ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.7607869019053952}, {"determining": "Min( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( Max( MLU,RMSe ) * CS ) / MUC ) ,Min( DS ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( Max( Min( AMS ,FirstVNF_CPU ),( Const / MDR ) ) - ( MDR - PN ) )", "choosing": "( ( ( MUC / MLU ) - Min( MLU ,MUC ) ) * ( Max( MUC,MUC ) / ( RRSe + MUR ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7872090297003597}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( RMSe - Min( RMSe ,MUM ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.3259109311740891, "obj2": 0.6319157482128659}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 0.2145748987854251, "obj2": 0.7682054376015669}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.20242914979757085, "obj2": 0.7812242339522033}, {"determining": "Max( Min( FirstVNF_RAM_Server ,Const ),( FirstVNF_CPU - RRS ) )", "choosing": "( Min( CS ,RCSe ) / ( MUR - CS ) )", "obj1": 0.31983805668016196, "obj2": 0.6332304686267337}, {"determining": "Min( Min( MRS ,AMS ) ,Max( FirstVNF_Mem,MRS ) )", "choosing": "Max( ( CS / MLU ),( MLU + DS ) )", "obj1": 0.4089068825910931, "obj2": 0.547351221776191}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ( BR * ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Max( ( RRSe - ( RRSe / RMSe ) ),( RCSe - RCSe ) )", "obj1": 0.20647773279352227, "obj2": 0.7759377309856371}, {"determining": "( ( RRS * PN ) / ( FirstVNF_RAM / MDR ) )", "choosing": "Max( ( ( ( MLU - MUM ) + ( RMSe + MUR ) ) - ( Max( MUR,RRSe ) + Min( RCSe ,MUR ) ) ),( ( ( CS / CS ) * Max( RMSe,MLU ) ) / ( ( MUC / RRSe ) / Min( MUR ,MUC ) ) ) )", "obj1": 0.31781376518218624, "obj2": 0.6423186455189427}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( Max( Const,MRS ) / ( Const * MDR ) )", "choosing": "( Max( MLU,RMSe ) - Min( RCSe ,MLU ) )", "obj1": 0.21052631578947367, "obj2": 0.7780129806905292}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * ( PN + FirstVNF_Mem_Server ) ) + ( Max( PN,FirstVNF_RAM_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ),( ( ( ACS * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) * ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUM + MUM ) + DS ) ,( ( ( RRSe + RRSe ) / MUM ) + RCSe ) )", "obj1": 0.4089068825910931, "obj2": 0.550305155330904}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + Min( BR ,FirstVNF_RAM ) ) - ( Max( Min( Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ),Min( ( FirstVNF_CPU_Server - ( PN * MDR ) ) ,FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * MUC ) * ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,Max( ( ARS * Const ),CRS ) ) * PN ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( MUM,CS ) * Max( ( RRSe * DS ),MUR ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Max( ( DDR * FirstVNF_Mem ),FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / Min( ( FirstVNF_RAM_Server * ( RRS + RRS ) ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( DS - RCSe ) - RRSe ) / CS ),Min( RMSe ,( ( RMSe * Min( MUR ,MUC ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ( PN * MRS ) / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,RCSe ),MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( AMS ,ACS ) ,MRS ) * MRS ) ,FirstVNF_RAM_Server ) - ( Const + ( ( BR + ( FirstVNF_Mem_Server + ( PN / ARS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RCSe ,MLU ) / MLU ) + ( ( RRSe - ( MUR - RCSe ) ) - ( ( ( ( MLU * Max( RCSe,( MUM + DS ) ) ) - ( MUC / ( Min( RCSe ,RMSe ) - Min( CS ,DS ) ) ) ) - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( PN - FirstVNF_Mem ) / ( CRS / Min( AMS ,MDR ) ) ) )", "choosing": "( ( CS + Min( MUM ,CS ) ) + Max( ( DS + ( Max( MUC,( RMSe / ( Max( RMSe,MUR ) + ( RCSe - MUM ) ) ) ) + MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( Max( PN,ARS ) / ( FirstVNF_RAM * AMS ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MLU * MUC ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * RRS ) ,Max( ACS,PN ) ) ,Min( Min( ACS ,FirstVNF_CPU_Server ) ,( RRS - BR ) ) )", "choosing": "( ( ( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) ) * MUC ) - ( ( MUM / RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( ( ( ( RRSe / MLU ) - Max( CS,RRSe ) ) * ( Min( RCSe ,MLU ) - ( DS + MUC ) ) ) / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( ( ( ( Const * FirstVNF_RAM ) / ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) - ( ( BR / BR ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ),MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( Min( Min( ( RMSe * RMSe ) ,( RRSe / MUC ) ) ,( ( RMSe / DS ) - ( RCSe / CS ) ) ),MLU ),( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,Min( ( ( FirstVNF_Mem_Server * AMS ) * ( BR + DDR ) ) ,( Min( Const ,FirstVNF_CPU_Server ) * ( AMS / RRS ) ) ) )", "choosing": "( Max( RRSe,( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( FirstVNF_Mem * Max( Const,FirstVNF_Mem ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),Min( ( ( RRSe + RRSe ) - ( MUM * RMSe ) ) ,Max( ( RMSe * CS ),( CS * MLU ) ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( FirstVNF_Mem * Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ) ) / Min( DDR ,FirstVNF_RAM ) )", "choosing": "Max( Min( ( ( RRSe + RRSe ) - ( MUM * RMSe ) ) ,Max( ( RMSe * CS ),( ( RMSe - MUC ) * MLU ) ) ),( ( ( MUM - MUC ) + Max( RMSe,CS ) ) / ( ( MUR + RMSe ) + Max( CS,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( ( FirstVNF_Mem_Server * MRS ) / ( MDR - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),( CS * CS ) ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),ACS ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,( ( Min( CRS ,FirstVNF_RAM ) * ( CRS * BR ) ) / ( ( DDR / FirstVNF_Mem ) / Min( CRS ,Const ) ) ) ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / Max( Max( DS,Min( MUC ,RCSe ) ),MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( Max( Max( CRS,PN ),Max( FirstVNF_CPU_Server,ARS ) ) + Min( ( MDR / ACS ) ,( BR - FirstVNF_RAM_Server ) ) ) / ( ( Max( FirstVNF_RAM_Server,Const ) + Max( DDR,AMS ) ) / ( ( PN / FirstVNF_Mem_Server ) / ( FirstVNF_CPU - DDR ) ) ) ) ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( RRSe + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( Max( CRS,FirstVNF_RAM_Server ) * CRS ) ,( RRS - ( BR - FirstVNF_RAM ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( ( ( Min( ( MUM / CS ) ,( RMSe + MUC ) ) * ( ( CS * CS ) / Max( RMSe,CS ) ) ) / ( Max( ( MUC - MUR ),Max( RMSe,MUR ) ) + Max( ( RCSe / CS ),Max( DS,MUR ) ) ) ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS - Const ) ) ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( ( Min( MUC ,( DS - RRSe ) ) + MUM ) - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( ( ( DDR * ARS ) * ( FirstVNF_CPU * BR ) ) / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( DS - RRSe ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / Max( FirstVNF_CPU_Server,PN ) ) + ARS ) )", "choosing": "Max( ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / MRS )", "choosing": "Max( Max( Max( DS,RCSe ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) / ( ( Max( FirstVNF_Mem,Const ) / ( FirstVNF_Mem + FirstVNF_CPU ) ) - Max( Min( MRS ,BR ),( MRS + CRS ) ) ) )", "choosing": "( ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) + MLU )", "obj1": 0.7935222672064778, "obj2": 0.1783399241034202}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.7246963562753036, "obj2": 0.22613598785434463}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( ( Const - Min( FirstVNF_CPU ,Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( AMS / ACS ) ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Min( DS ,MUC ) / ( DS - MUR ) )", "obj1": 0.6720647773279352, "obj2": 0.27177066536720607}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}, {"determining": "( ( ( Const / FirstVNF_CPU ) - ( RRS * CRS ) ) - ( Const + Const ) )", "choosing": "( ( CS / MLU ) + Max( Max( ( RRSe * CS ),RRSe ),MLU ) )", "obj1": 0.8481781376518218, "obj2": 0.12801439720425903}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.694331983805668, "obj2": 0.26466430288533377}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( ( ( CRS - AMS ) + Max( CRS,ACS ) ) / Max( Max( DDR,FirstVNF_RAM_Server ),( MDR / FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( DS - MLU ) + ( MLU * RMSe ) ) / ( Max( MLU,MUC ) * Max( RRSe,RMSe ) ) ) )", "obj1": 0.9291497975708503, "obj2": 0.06512586048812628}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( RRS + CRS ) ) )", "choosing": "Min( Max( RCSe,CS ) ,Min( MUM ,( ( MUR - DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.7863319483592083}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ( BR * ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Max( ( RRSe - ( RRSe / RMSe ) ),( RCSe - RCSe ) )", "obj1": 0.9048582995951417, "obj2": 0.1039280776510711}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( ( MRS + CRS ) - RRS ) ) )", "choosing": "( ( ( ( ( Max( RMSe,Max( MUC,RCSe ) ) * RRSe ) + ( ( RCSe + ( ( MUM * RMSe ) + ( MUR / RMSe ) ) ) - MUM ) ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.22064777327935223, "obj2": 0.7399390773061303}, {"determining": "Min( ( ( PN / ( FirstVNF_Mem * Max( Const,FirstVNF_Mem ) ) ) / Min( DDR ,FirstVNF_RAM ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - ( ( ( MUM - MUC ) + Max( RMSe,CS ) ) / ( ( MUR + RMSe ) + Max( CS,MLU ) ) ) ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 0.8906882591093117, "obj2": 0.11269459039841821}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU ) * ( FirstVNF_Mem - FirstVNF_RAM_Server ) )", "choosing": "( Min( MLU ,MLU ) - Min( ( MLU - ( MUC / CS ) ) ,Max( RRSe,MUM ) ) )", "obj1": 0.9534412955465587, "obj2": 0.039149409938238934}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,RRS )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,( ( MUR - DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.8145154046941893}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 0.8502024291497976, "obj2": 0.12518640407790763}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + AMS ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( Max( MUC,( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + Min( DS ,MUM ) ) ) ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8554978085241813}, {"determining": "Min( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU_Server * ( DDR + ( CRS / DDR ) ) ) - CRS ) + FirstVNF_CPU ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,( Max( RCSe,( RRSe + ( ( RCSe * ( DS * CS ) ) * RMSe ) ) ) / ( Max( MUM,MUC ) - RRSe ) ) )", "obj1": 0.5222672064777328, "obj2": 0.41628695602086413}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "( ( ( MRS - Min( PN ,Const ) ) / FirstVNF_CPU ) - PN )", "choosing": "( ( CS / MLU ) + ( ( MLU / RRSe ) - ( Max( ( RRSe * CS ),( MUR * RRSe ) ) + ( CS * MLU ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.696776343585907}, {"determining": "Max( Min( FirstVNF_RAM_Server ,Const ),( ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) - RRS ) )", "choosing": "( Min( CS ,MUR ) / ( MUR - CS ) )", "obj1": 0.3157894736842105, "obj2": 0.6402714898404014}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( MDR - ( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) + ( MDR + FirstVNF_RAM_Server ) ) * ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Min( RRSe ,DS ) - DS ) - ( Max( DS,RCSe ) * Min( CS ,RRSe ) ) )", "obj1": 0.27530364372469635, "obj2": 0.666364115085726}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.0931174089068826, "obj2": 0.8681445422682725}, {"determining": "( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,ACS ) - ( FirstVNF_CPU * ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) )", "choosing": "( ( ( RRSe / MUR ) * Min( Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( Min( MUM ,MUR ) - ( CS * MUR ) ) ) ,CS ) ) * ( ( MLU + MUM ) / Min( RMSe ,RRSe ) ) )", "obj1": 0.9453441295546559, "obj2": 0.04743815675226042}, {"determining": "( Max( ( ( FirstVNF_RAM * CRS ) + ( FirstVNF_Mem - RRS ) ),( ( MDR * DDR ) / ( BR / ARS ) ) ) - ( ( Min( CRS ,FirstVNF_RAM ) * Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) / ( ( DDR / FirstVNF_Mem ) / Min( CRS ,Const ) ) ) )", "choosing": "( Max( DS,( CS - Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) ) ) ) - Max( Max( DS,Min( MUC ,RCSe ) ),MUR ) )", "obj1": 0.41700404858299595, "obj2": 0.5400455033063823}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( FirstVNF_RAM * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( ( RCSe + MLU ) + Min( CS ,MUR ) ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.47529861115667027}, {"determining": "Min( Min( ( ( PN + ( PN + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + MRS ) ) ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "Min( ( Min( Min( PN ,FirstVNF_Mem ) ,( FirstVNF_Mem - Const ) ) * Max( ( FirstVNF_CPU * AMS ),( AMS - MRS ) ) ) ,Max( ( ( FirstVNF_Mem + FirstVNF_CPU ) * ( MDR - FirstVNF_CPU ) ),( Max( RRS,ARS ) / Min( RRS ,MRS ) ) ) )", "choosing": "( Max( MUM,DS ) / Max( MUR,( MLU * RRSe ) ) )", "obj1": 0.9352226720647774, "obj2": 0.057741041875901906}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + BR ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( MUM / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.1194331983805668, "obj2": 0.8492734647096022}, {"determining": "( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "( ( MUR - CS ) - ( ( Max( MLU,RMSe ) / ( ( MUR - CS ) - ( MUR / MUM ) ) ) / MUM ) )", "obj1": 0.31781376518218624, "obj2": 0.6316119486069871}, {"determining": "( ( ( ( ( FirstVNF_CPU * AMS ) + ( DDR / ACS ) ) / ( ( Const / DDR ) * Min( CRS ,PN ) ) ) - ( ( ( ARS * FirstVNF_RAM_Server ) + ( CRS / ARS ) ) * Min( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ,( AMS + ARS ) ) ) ) - ( FirstVNF_Mem_Server / Const ) )", "choosing": "( ( Min( Min( CS ,( RRSe / MUC ) ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.7607869019053952}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( ARS,FirstVNF_RAM_Server ) ) + CRS ) )", "choosing": "( ( ( ( RRSe + MUC ) - Min( MLU ,CS ) ) - RCSe ) / ( RCSe / MUR ) )", "obj1": 0.26720647773279355, "obj2": 0.6802277668319328}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( ( ( DS + MUR ) + RMSe ) / RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5761307529044407}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( PN - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.20242914979757085, "obj2": 0.7665441257499793}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( Const + FirstVNF_CPU_Server ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Max( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( ( MUR + MUM ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8766483643682171}, {"determining": "Min( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( Max( MLU,RMSe ) * CS ) / MUC ) ,Min( DS ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) * Min( Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.4574898785425101, "obj2": 0.47576153841566604}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Max( MRS,Const ) * ( Min( AMS ,( BR + ARS ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( CS - MLU ),Min( DS ,( RMSe * Max( Min( Min( CS ,MLU ) ,RRSe ),MUC ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4757331810971554}, {"determining": "( ( ARS - FirstVNF_CPU ) + ARS )", "choosing": "Max( ( RRSe - ( RRSe / RMSe ) ),( Min( ( ( RCSe + RRSe ) + RRSe ) ,Min( RRSe ,MLU ) ) - RCSe ) )", "obj1": 0.2125506072874494, "obj2": 0.7640822386278061}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( FirstVNF_CPU_Server / ( BR * ( FirstVNF_CPU - AMS ) ) ) ) )", "choosing": "Max( CS,Min( RCSe ,( RCSe - RCSe ) ) )", "obj1": 0.902834008097166, "obj2": 0.11115170220114304}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) * ( PN + FirstVNF_Mem_Server ) ) + ( Max( PN,FirstVNF_RAM_Server ) / Min( PN ,FirstVNF_Mem_Server ) ) ),( ( ( ACS * CRS ) * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) * ( Min( MDR ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MUM + MUM ) + DS ) ,( ( ( RRSe + RRSe ) / MUM ) + RCSe ) )", "obj1": 0.4089068825910931, "obj2": 0.550305155330904}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.20242914979757085, "obj2": 0.7665441257499793}, {"determining": "Min( Min( MRS ,AMS ) ,Max( FirstVNF_Mem,MRS ) )", "choosing": "Max( ( CS / MLU ),( MLU + DS ) )", "obj1": 0.4089068825910931, "obj2": 0.547351221776191}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( ( Max( MUM,CS ) * Max( DS,MUR ) ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( ( ( ACS + ( Const / MRS ) ) - ACS ) + ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( ( DS + Max( RMSe,MUM ) ) + ( ( MUC * RCSe ) - CS ) ) - ( ( MUM / RCSe ) * MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5462676825993384}, {"determining": "( ( ARS - ARS ) + ( FirstVNF_CPU_Server / ( BR * ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Max( ( RRSe - ( RRSe / RMSe ) ),CS )", "obj1": 0.902834008097166, "obj2": 0.11115170220114304}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + Min( BR ,FirstVNF_RAM ) ) - ( Max( Min( Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ),Min( ( FirstVNF_CPU_Server - ( PN * MDR ) ) ,FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * MUC ) * ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,Max( ( ARS * Const ),CRS ) ) * PN ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( MUM,CS ) * Max( ( RRSe * DS ),MUR ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Max( ( DDR * FirstVNF_Mem ),FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / Min( ( FirstVNF_RAM_Server * ( RRS + RRS ) ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( DS - RCSe ) - RRSe ) / CS ),Min( RMSe ,( ( RMSe * Min( MUR ,MUC ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ( PN * MRS ) / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,RCSe ),MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( AMS ,ACS ) ,MRS ) * MRS ) ,FirstVNF_RAM_Server ) - ( Const + ( ( BR + ( FirstVNF_Mem_Server + ( PN / ARS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RCSe ,MLU ) / MLU ) + ( ( RRSe - ( MUR - RCSe ) ) - ( ( ( ( MLU * Max( RCSe,( MUM + DS ) ) ) - ( MUC / ( Min( RCSe ,RMSe ) - Min( CS ,DS ) ) ) ) - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( PN - FirstVNF_Mem ) / ( CRS / Min( AMS ,MDR ) ) ) )", "choosing": "( ( CS + Min( MUM ,CS ) ) + Max( ( DS + ( Max( MUC,( RMSe / ( Max( RMSe,MUR ) + ( RCSe - MUM ) ) ) ) + MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( Max( PN,ARS ) / ( FirstVNF_RAM * AMS ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MLU * MUC ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( FirstVNF_Mem_Server * RRS ) ,Max( ACS,PN ) ) ,Min( Min( ACS ,FirstVNF_CPU_Server ) ,( RRS - BR ) ) )", "choosing": "( ( ( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) ) * MUC ) - ( ( MUM / RCSe ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( Min( AMS ,PN ) ,( PN - ( Const + Const ) ) )", "choosing": "( ( ( CS / MLU ) + MUM ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ( AMS / AMS ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RCSe + ( RCSe + RRSe ) ) + ( CS / MLU ) ) )", "obj1": 0.8906882591093117, "obj2": 0.10367715965977735}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( PN,ARS ) / ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( RMSe,MLU ) + ( MUR - ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.2125522891157079}, {"determining": "( ( Const - Min( FirstVNF_CPU ,Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),( AMS / ACS ) ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Min( DS ,MUC ) / ( DS - MUR ) )", "obj1": 0.6720647773279352, "obj2": 0.27177066536720607}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( RMSe - Min( RMSe ,MUM ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.7145748987854251, "obj2": 0.23970771667565166}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.7246963562753036, "obj2": 0.22613598785434463}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + Max( ( CS - MLU ),Min( DS ,DS ) ) ) - CS ) )", "obj1": 0.4048582995951417, "obj2": 0.5450028374761843}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( FirstVNF_CPU * FirstVNF_Mem ) ,Max( FirstVNF_CPU_Server,( RRS + CRS ) ) )", "choosing": "Min( Max( RCSe,CS ) ,Min( MUM ,( ( MUR - DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.1862348178137652, "obj2": 0.7863319483592083}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ( ( RRS + FirstVNF_RAM_Server ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( ( FirstVNF_CPU * Min( MRS ,ACS ) ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) + Const ) )", "choosing": "( ( ( ( MLU * ( ( MLU / MUM ) * ( MLU / MUM ) ) ) - DS ) - MUR ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.23076923076923078, "obj2": 0.7381974599299883}, {"determining": "Min( ( FirstVNF_CPU * Max( Max( CRS,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU * Max( Max( CRS,FirstVNF_RAM_Server ),Max( ( AMS - DDR ),BR ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( RCSe ,DS ) )", "obj1": 0.48582995951417, "obj2": 0.4510935290024416}, {"determining": "Min( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU_Server * ( DDR + ( CRS / DDR ) ) ) - CRS ) + FirstVNF_CPU ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,( Max( RCSe,( RRSe + ( ( RCSe * ( DS * CS ) ) * RMSe ) ) ) / ( Max( MUM,MUC ) - RRSe ) ) )", "obj1": 0.5222672064777328, "obj2": 0.41628695602086413}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.09109311740890688, "obj2": 0.8641314324173162}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + AMS ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( Max( MUC,( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + Min( DS ,MUM ) ) ) ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8554978085241813}, {"determining": "( ( ( MRS - Min( PN ,Const ) ) / FirstVNF_CPU ) - PN )", "choosing": "( ( CS / MLU ) + ( ( MLU / RRSe ) - ( Max( ( RRSe * CS ),( MUR * RRSe ) ) + ( CS * MLU ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.696776343585907}, {"determining": "( PN - ( PN - ( Const + Const ) ) )", "choosing": "( ( CS / ( CS / MLU ) ) + Max( ( ( ( DS - MUM ) + Max( RCSe,MLU ) ) / MLU ),MLU ) )", "obj1": 0.1902834008097166, "obj2": 0.7804973294944938}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( PN - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.20242914979757085, "obj2": 0.7665441257499793}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( FirstVNF_RAM * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( ( RCSe + MLU ) + Min( CS ,MUR ) ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.47529861115667027}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,RRS )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,( ( MUR - DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.8145154046941893}, {"determining": "Max( Max( Max( Max( FirstVNF_RAM,FirstVNF_CPU_Server ),( MDR - MRS ) ),Max( RRS,CRS ) ),( Min( ( MRS - Const ) ,( FirstVNF_RAM - FirstVNF_Mem ) ) / ( Max( BR,MRS ) * ( Const * MDR ) ) ) )", "choosing": "( ( ( ( MUM / MLU ) - MUC ) + ( DS + RMSe ) ) * ( RCSe - DS ) )", "obj1": 0.22064777327935223, "obj2": 0.7394702537976584}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "( Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) )", "obj1": 0.14777327935222673, "obj2": 0.8337741645011367}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( Const + FirstVNF_CPU_Server ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Max( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( ( MUR + MUM ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8766483643682171}, {"determining": "Min( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( ( ( DS + MUR ) + RMSe ) / RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5761307529044407}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) + ( Const * MRS ) )", "choosing": "( ( RRSe * RCSe ) - ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + Max( Max( MUM,CS ),DS ) ) ) + ( CS / MLU ) ) )", "obj1": 0.3522267206477733, "obj2": 0.5941270080721747}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "Max( Max( FirstVNF_Mem,( ( BR / FirstVNF_RAM ) + ACS ) ),Min( ARS ,FirstVNF_Mem ) )", "choosing": "Max( ( Max( Max( ( Max( MUC,RRSe ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) ),RRSe ) / ( MUM / MUC ) ),( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + Min( DS ,MUM ) ) ) )", "obj1": 0.15384615384615385, "obj2": 0.8234357931570877}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) * Min( Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.4574898785425101, "obj2": 0.47576153841566604}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + ( FirstVNF_CPU_Server / CRS ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + Max( Max( MUM,CS ),DS ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6654287074137646}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "( Max( MRS,Const ) * ( Min( AMS ,( BR + ARS ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( CS - MLU ),Min( DS ,( RMSe * Max( Min( Min( CS ,MLU ) ,RRSe ),MUC ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4757331810971554}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + ACS ) ),( BR / Max( Max( FirstVNF_Mem,( AMS + ACS ) ),Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( MUC,RRSe ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8497266306645413}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + BR ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( MUM / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.1194331983805668, "obj2": 0.8492734647096022}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( Max( DDR,DDR ),Max( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ),Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( MUR - DS ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.8369094659374405}, {"determining": "Min( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( Max( MLU,RMSe ) * CS ) / MUC ) ,Min( DS ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.20242914979757085, "obj2": 0.7665441257499793}, {"determining": "Min( Min( ( ( PN + ( PN + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + MRS ) ) ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( ( Max( ( RRS + CRS ),Max( ARS,FirstVNF_RAM_Server ) ) + CRS ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - Min( MLU ,CS ) ) - RCSe ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.27125506072874495, "obj2": 0.669870547540116}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( ( Max( MUM,CS ) * Max( DS,MUR ) ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,MLU ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,DS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0005000975920972813}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ( PN * MRS ) / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,RCSe ),MLU ) ) ) ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0005000975920972813}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / MRS )", "choosing": "Max( Max( Max( DS,RCSe ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + Min( BR ,FirstVNF_RAM ) ) - ( Max( Min( Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ),Min( ( FirstVNF_CPU_Server - ( PN * MDR ) ) ,FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * MUC ) * ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),( DDR + FirstVNF_RAM ) ) - ( ( ACS + FirstVNF_Mem ) * ( DDR / PN ) ) ) ,( ( Max( AMS,AMS ) / ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) - Max( ( FirstVNF_RAM + PN ),( PN * FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC / RMSe ) + Min( ( MUC - ( MLU / RMSe ) ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * ( FirstVNF_Mem_Server + RRS ) ) - ( ( Max( MRS,DDR ) / BR ) + ARS ) )", "choosing": "Max( ( Min( ( RRSe - MUR ) ,Max( MUR,MUR ) ) * ( Min( MUM ,RMSe ) - Min( RRSe ,RMSe ) ) ),( ( ( MUC * MUM ) * ( CS - RRSe ) ) / ( ( CS + RCSe ) / ( MUR - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / Min( ACS ,MRS ) )", "choosing": "Max( Max( ( Max( MUM,MUM ) + ( MUR * RMSe ) ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( MRS ,Max( ( ARS * Const ),CRS ) ) * PN ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( MUM,CS ) * Max( ( RRSe * DS ),MUR ) ),Min( RCSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_Mem,Max( ( DDR * FirstVNF_Mem ),FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * FirstVNF_RAM ) / Min( ( FirstVNF_RAM_Server * ( RRS + RRS ) ) ,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( DS - RCSe ) - RRSe ) / CS ),Min( RMSe ,( ( RMSe * Min( MUR ,MUC ) ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ( PN * MRS ) / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,RCSe ),MLU ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Min( Min( AMS ,ACS ) ,MRS ) * MRS ) ,FirstVNF_RAM_Server ) - ( Const + ( ( BR + ( FirstVNF_Mem_Server + ( PN / ARS ) ) ) / MDR ) ) )", "choosing": "( ( Min( RCSe ,MLU ) / MLU ) + ( ( RRSe - ( MUR - RCSe ) ) - ( ( ( ( MLU * Max( RCSe,( MUM + DS ) ) ) - ( MUC / ( Min( RCSe ,RMSe ) - Min( CS ,DS ) ) ) ) - MUR ) - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( PN - FirstVNF_Mem ) / ( CRS / Min( AMS ,MDR ) ) ) )", "choosing": "( ( CS + Min( MUM ,CS ) ) + Max( ( DS + ( Max( MUC,( RMSe / ( Max( RMSe,MUR ) + ( RCSe - MUM ) ) ) ) + MUM ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( ( DDR / FirstVNF_CPU_Server ) + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( MUC / RMSe ) * ( RRSe - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - ( Max( PN,ARS ) / ( FirstVNF_RAM * AMS ) ) )", "choosing": "( ( MUC / RMSe ) * Min( Min( DS ,MUR ) ,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( PN - ( RRS - ( PN - ( Const + Const ) ) ) )", "choosing": "( ( CS / MLU ) + ( ( ( DS - MUM ) + Max( RCSe,MLU ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,PN ) ,( PN - ( Const + Const ) ) )", "choosing": "( ( ( CS / MLU ) + MUM ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ( AMS / AMS ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RCSe + ( RCSe + RRSe ) ) + ( CS / MLU ) ) )", "obj1": 0.8906882591093117, "obj2": 0.10367715965977735}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ( ARS * DDR ) + Const ) )", "choosing": "( ( ( ( MLU * ( ( CS + RCSe ) * ( MLU / MUM ) ) ) - ( MLU * ( ( CS + RCSe ) * ( MLU / MUM ) ) ) ) - MUR ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.7408906882591093, "obj2": 0.2076869132438713}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( Min( Min( Const ,BR ) ,( PN - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,MUR ) / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.312038182678928}, {"determining": "( ( ( Max( FirstVNF_RAM,DDR ) / FirstVNF_RAM ) - ( DDR - FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / RRS ) )", "choosing": "( ( Max( ( RMSe * CS ),MUM ) - ( RMSe * MLU ) ) * ( MLU / CS ) )", "obj1": 0.5384615384615384, "obj2": 0.41263893645497435}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.8967611336032388, "obj2": 0.08000180079870847}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( RMSe - Min( RMSe ,MUM ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.7145748987854251, "obj2": 0.23970771667565166}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.7246963562753036, "obj2": 0.22613598785434463}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + Max( ( CS - MLU ),Min( DS ,DS ) ) ) - CS ) )", "obj1": 0.4048582995951417, "obj2": 0.5450028374761843}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) * Min( Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( Min( MUC ,Min( DS ,MUM ) ) / DS ) )", "obj1": 0.18218623481781376, "obj2": 0.7933381033870254}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( FirstVNF_CPU * Max( Max( CRS,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU * Max( Max( CRS,FirstVNF_RAM_Server ),Max( ( AMS - DDR ),BR ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( RCSe ,DS ) )", "obj1": 0.48582995951417, "obj2": 0.4510935290024416}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( Max( BR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RRSe ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.145748987854251, "obj2": 0.8183217142584138}, {"determining": "( Max( DDR,( ( FirstVNF_CPU_Server / RRS ) / MRS ) ) + ( FirstVNF_Mem_Server * FirstVNF_Mem ) )", "choosing": "Max( Min( RRSe ,( MUR + DS ) ),( Min( ( Min( ( ( ( MUC - MUR ) - RMSe ) + Max( Min( DS ,MUC ),MUM ) ) ,( ( MUR + MUR ) / MUM ) ) + RRSe ) ,Min( RRSe ,( ( Max( MUM,Min( RMSe ,RRSe ) ) + MUR ) * ( ( Max( CS,DS ) + RMSe ) - MLU ) ) ) ) - RCSe ) )", "obj1": 0.23076923076923078, "obj2": 0.7341454973409751}, {"determining": "Min( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU_Server * ( DDR + ( CRS / DDR ) ) ) - CRS ) + FirstVNF_CPU ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,( Max( RCSe,( RRSe + ( ( RCSe * ( DS * CS ) ) * RMSe ) ) ) / ( Max( MUM,MUC ) - RRSe ) ) )", "obj1": 0.5222672064777328, "obj2": 0.41628695602086413}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( PN - ( PN - ( Const + Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / ( CS / MLU ) ) + Max( ( ( ( DS - MUM ) + Max( DS,MLU ) ) / MLU ),MLU ) )", "obj1": 0.1862348178137652, "obj2": 0.7767628993068967}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.09109311740890688, "obj2": 0.8641314324173162}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + AMS ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( Max( MUC,( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + Min( DS ,MUM ) ) ) ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8554978085241813}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( ( ( MRS - Min( PN ,Const ) ) / FirstVNF_CPU ) - PN )", "choosing": "( ( CS / MLU ) + ( ( MLU / RRSe ) - ( Max( ( RRSe * CS ),( MUR * RRSe ) ) + ( CS * MLU ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.696776343585907}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,RRS )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,( ( MUR - DS ) / ( RCSe / MUR ) ) ) )", "obj1": 0.15587044534412955, "obj2": 0.8145154046941893}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( Max( PN,ARS ) / ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( RMSe,MLU ) + ( MUR - ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.2125522891157079}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "Min( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( ( ( DS + MUR ) + RMSe ) / RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5761307529044407}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( PN - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.20242914979757085, "obj2": 0.7665441257499793}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( Min( ( CRS * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,PN ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) - ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7699278615905616}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( Const + FirstVNF_CPU_Server ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Max( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( ( MUR + MUM ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8766483643682171}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 0.4534412955465587, "obj2": 0.48496920378724545}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( Min( DDR ,( DDR * ( ( Max( MRS,Const ) * ( FirstVNF_RAM + PN ) ) * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( ( Min( Min( RCSe ,( CS - MUC ) ) ,DS ) - Max( MUC,RMSe ) ) * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4797570850202429, "obj2": 0.47342762488608103}, {"determining": "( Max( MRS,Const ) * ( Min( AMS ,( BR + ARS ) ) / FirstVNF_Mem ) )", "choosing": "Max( ( CS - MLU ),Min( DS ,( RMSe * Max( Min( Min( CS ,MLU ) ,RRSe ),MUC ) ) ) )", "obj1": 0.46356275303643724, "obj2": 0.4757331810971554}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + ACS ) ),( BR / Max( Max( FirstVNF_Mem,( AMS + ACS ) ),Min( ARS ,FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( MUC,RRSe ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.11336032388663968, "obj2": 0.8497266306645413}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) * Min( Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.4574898785425101, "obj2": 0.47576153841566604}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + BR ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( MUM / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.1194331983805668, "obj2": 0.8492734647096022}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( FirstVNF_RAM * ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) )", "choosing": "( Min( DS ,MUR ) / ( DS + ( Max( Min( MUM ,MLU ),Max( MUR,DS ) ) * ( ( RCSe + MLU ) + Min( CS ,MUR ) ) ) ) )", "obj1": 0.4777327935222672, "obj2": 0.47529861115667027}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( Max( DDR,DDR ),Max( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ),Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( MUR - DS ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12955465587044535, "obj2": 0.8369094659374405}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "Min( Min( ( ( PN + ( PN + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + MRS ) ) ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "Min( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( Max( MLU,RMSe ) * CS ) / MUC ) ,Min( DS ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MUM,CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + RRSe ) - CS ) )", "obj1": 0.20242914979757085, "obj2": 0.7665441257499793}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * Max( RMSe,RCSe ) ) / ( RCSe + RRSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0005000975920972813}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,MLU ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,DS ) ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0005000975920972813}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / MRS )", "choosing": "Max( Max( Max( DS,RCSe ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( Max( DDR,MRS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - Max( Const,( Max( ARS,BR ) / AMS ) ) )", "choosing": "( ( Min( ( CS / ( ( ( ( MUR - MUR ) + CS ) / Min( Min( RMSe ,MUC ) ,RCSe ) ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / ( Max( Max( RMSe,Max( RCSe,MUR ) ),( Max( RMSe,( CS + RRSe ) ) * MUC ) ) - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * MUR ) / ( RCSe + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS + Min( BR ,FirstVNF_RAM ) ) - ( Max( Min( Max( ( Const / FirstVNF_RAM_Server ),FirstVNF_RAM_Server ) ,FirstVNF_RAM ),Min( ( FirstVNF_CPU_Server - ( PN * MDR ) ) ,FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( FirstVNF_RAM_Server / FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe - MUR ) * MUC ) * ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS / Const ) - Min( ARS ,FirstVNF_Mem ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) / ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( ( PN - ( Min( FirstVNF_Mem ,PN ) - DDR ) ),PN ) ) ) )", "choosing": "( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + ( ( ( RMSe + ( ( MUR * MUC ) / Max( Max( RMSe,CS ),( MLU - RRSe ) ) ) ) + RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( AMS,MDR ) ,CRS ) + ( ( DDR + BR ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( CS - ( DS / RRSe ) ),Min( Max( RRSe,DS ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - FirstVNF_CPU ) - Min( Const ,FirstVNF_RAM_Server ) ) / ( ( MDR * DDR ) * ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "Max( ( MLU + ( MUC - MUR ) ),( MUM + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( PN - FirstVNF_RAM ) * ( FirstVNF_Mem / FirstVNF_Mem ) ) ,( Min( AMS ,RRS ) * Max( FirstVNF_RAM_Server,ARS ) ) ) ,( ( ( MDR * PN ) * ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_CPU / FirstVNF_RAM ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( Max( ( RCSe * RCSe ),( RMSe - MUC ) ),( ( CS - MUC ) / ( MLU - CS ) ) ) - ( ( ( MUC + MUR ) + Max( RMSe,DS ) ) + ( Min( RCSe ,RRSe ) + ( RRSe - CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,RRS ) - Max( BR,Max( Min( FirstVNF_RAM ,FirstVNF_RAM_Server ),AMS ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / Min( DS ,MLU ) ) + Max( Max( MUM,MUM ),( RCSe + MUC ) ) ),Min( ( Max( RCSe,MUM ) / ( DS / MUC ) ) ,( ( CS / MUM ) - ( MUM / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ( ( PN + FirstVNF_Mem ) + ( AMS / ( Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( ( ( RCSe / MUR ) - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( RRS - ( PN - ( Const + Const ) ) ) )", "choosing": "( ( CS / MLU ) + ( ( ( DS - MUM ) + Max( RCSe,MLU ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( PN - ( RRS - Min( ( RRS - Min( DDR ,FirstVNF_Mem ) ) ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( DS / MLU ),MLU ) )", "obj1": 0.8866396761133604, "obj2": 0.10865279806099519}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( Const / FirstVNF_CPU ) - ( ( ARS * DDR ) + Const ) )", "choosing": "( ( ( ( MLU * ( ( CS + RCSe ) * ( MLU / MUM ) ) ) - ( MLU * ( ( CS + RCSe ) * ( MLU / MUM ) ) ) ) - MUR ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.7408906882591093, "obj2": 0.2076869132438713}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( BR * ACS ) )", "choosing": "Max( ( RMSe * ( ( RMSe - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ),Min( DS ,DS ) )", "obj1": 0.5384615384615384, "obj2": 0.4054019265808745}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( Min( Min( Const ,BR ) ,( PN - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,MUR ) / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.312038182678928}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( RMSe - Min( RMSe ,MUM ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.7145748987854251, "obj2": 0.23970771667565166}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.8967611336032388, "obj2": 0.08000180079870847}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.7246963562753036, "obj2": 0.22613598785434463}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + Max( ( CS - MLU ),Min( DS ,DS ) ) ) - CS ) )", "obj1": 0.4048582995951417, "obj2": 0.5450028374761843}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU_Server * ( DDR + ( CRS / DDR ) ) ) - CRS ) + FirstVNF_CPU ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,( Max( RCSe,( RRSe + ( ( RCSe * ( DS * CS ) ) * RMSe ) ) ) / ( Max( MUM,MUC ) - RRSe ) ) )", "obj1": 0.5222672064777328, "obj2": 0.41628695602086413}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( Min( DDR ,( DDR * ( ( Max( MRS,Const ) * ( FirstVNF_RAM + PN ) ) * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( ( Min( Min( RCSe ,( CS - MUC ) ) ,DS ) - Max( MUC,RMSe ) ) * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4797570850202429, "obj2": 0.47342762488608103}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( FirstVNF_CPU * Max( Max( CRS,FirstVNF_RAM_Server ),Min( ( FirstVNF_CPU * Max( Max( CRS,FirstVNF_RAM_Server ),Max( ( AMS - DDR ),BR ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( RCSe ,DS ) )", "obj1": 0.48582995951417, "obj2": 0.4510935290024416}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( ( ( DDR / FirstVNF_RAM ) - ( AMS / AMS ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RCSe + ( RCSe + RRSe ) ) + ( CS / MLU ) ) )", "obj1": 0.8906882591093117, "obj2": 0.10367715965977735}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( Max( BR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RRSe ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.145748987854251, "obj2": 0.8183217142584138}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( PN - ( PN - ( Const + Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / ( CS / MLU ) ) + Max( ( ( ( DS - MUM ) + Max( DS,MLU ) ) / MLU ),MLU ) )", "obj1": 0.1862348178137652, "obj2": 0.7767628993068967}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.09109311740890688, "obj2": 0.8641314324173162}, {"determining": "( ( ( MRS - Min( PN ,Const ) ) / FirstVNF_CPU ) - PN )", "choosing": "( ( CS / MLU ) + ( ( MLU / RRSe ) - ( Max( ( RRSe * CS ),( MUR * RRSe ) ) + ( CS * MLU ) ) ) )", "obj1": 0.25303643724696356, "obj2": 0.696776343585907}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "Max( Max( FirstVNF_Mem,( AMS + AMS ) ),( BR / FirstVNF_RAM ) )", "choosing": "Max( ( Max( MUC,( ( CS / RRSe ) / ( Max( MUC,( MUR * RMSe ) ) + Min( DS ,MUM ) ) ) ) / ( MUM / MUC ) ),( ( MUM / DS ) * ( RCSe + RRSe ) ) )", "obj1": 0.10526315789473684, "obj2": 0.8554978085241813}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Max( PN,ARS ) / ( ( ARS / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / Const ) ) )", "choosing": "( Max( RMSe,MLU ) + ( MUR - ( ( Min( Min( CS ,MLU ) ,( RCSe * RMSe ) ) + ( ( MUR * RCSe ) - ( RCSe * RRSe ) ) ) * ( Min( ( RRSe / MUC ) ,( MUC + MUM ) ) - Max( Max( DS,MLU ),( RCSe * RRSe ) ) ) ) ) )", "obj1": 0.7388663967611336, "obj2": 0.2125522891157079}, {"determining": "( ( PN + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Min( Max( ( RRSe - ( RRSe / RMSe ) ),( Min( ( RCSe + RRSe ) ,Min( RRSe ,MLU ) ) - RCSe ) ) ,Min( ( RRSe / RMSe ) ,MLU ) )", "obj1": 0.20040485829959515, "obj2": 0.7637189115411949}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( PN - FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( RMSe,MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.28042847253425524}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "Min( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( ( ( DS + MUR ) + RMSe ) / RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5761307529044407}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) * Min( Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( Min( MUC ,Min( DS ,MUM ) ) / DS ) )", "obj1": 0.18218623481781376, "obj2": 0.7933381033870254}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( Min( ( CRS * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,PN ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) - ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7699278615905616}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( Const + FirstVNF_CPU_Server ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Max( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( ( MUR + MUM ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8766483643682171}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "( PN - ( ( PN - FirstVNF_Mem ) / ( CRS / Min( AMS ,MDR ) ) ) )", "choosing": "( ( CS + Min( MUM ,CS ) ) + Max( ( DS + ( Max( MUC,( RMSe / ( Max( RMSe,MUR ) + ( RCSe - MUM ) ) ) ) + MUM ) ),MLU ) )", "obj1": 0.9919028340080972, "obj2": 0.010713364757168506}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RMSe - MUC ) - DS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.7953497192212151}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,( DDR / FirstVNF_CPU_Server ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / MUM ) )", "obj1": 0.17611336032388664, "obj2": 0.7951281155683348}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "Min( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ,Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( Max( MLU,RMSe ) * CS ) / MUC ) ,Min( DS ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( Min( ( ( PN + ( PN + FirstVNF_RAM ) ) + Min( FirstVNF_CPU ,( FirstVNF_RAM_Server + MRS ) ) ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ,CS ) ) / Min( RMSe ,RMSe ) )", "obj1": 0.48380566801619435, "obj2": 0.46106778085892874}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "Min( ( DDR / ( FirstVNF_RAM_Server + Min( ARS ,ARS ) ) ) ,( ( MDR + Max( Const,AMS ) ) / Max( FirstVNF_RAM_Server,( DDR - ACS ) ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( DS - Max( ( Max( RMSe,MUR ) + RRSe ),CS ) ) ) )", "obj1": 0.4493927125506073, "obj2": 0.4883382559607238}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MUM,CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.838467390249508}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( BR,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,Max( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ),Min( RCSe ,MUM ) ) )", "obj1": 0.9979757085020243, "obj2": 0.0005000975920972813}, {"determining": "( ( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) / Max( RRS,FirstVNF_CPU ) )", "choosing": "( ( MLU * Max( RMSe,RCSe ) ) / ( RCSe + RRSe ) )", "obj1": 0.9979757085020243, "obj2": 0.0005000975920972813}, {"determining": "Min( Min( AMS ,PN ) ,( PN - ( Const + Const ) ) )", "choosing": "( ( ( CS / MLU ) + MUM ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / MRS )", "choosing": "Max( Max( Max( DS,RCSe ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "( PN - ( RRS - Min( ( RRS - Const ) ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( ( CS / MLU ),RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN + FirstVNF_Mem ) + ( AMS / ( Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( ( ( RCSe / MUR ) - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( RMSe - Min( RMSe ,MUM ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.7145748987854251, "obj2": 0.23970771667565166}, {"determining": "Min( ( ( ( PN - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),BR ) / ( Max( BR,ACS ) * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / ( FirstVNF_CPU_Server / ( FirstVNF_CPU - ( BR / RRS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * PN ) )", "choosing": "Max( Min( MLU ,( RRSe * MLU ) ),Min( ( ( RMSe + DS ) - MUR ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * Min( RMSe ,RCSe ) ) ) / Min( Min( RCSe ,MUC ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8744939271255061, "obj2": 0.09840010754342812}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( BR * ACS ) )", "choosing": "Max( ( RMSe * ( ( RMSe - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ),Min( DS ,DS ) )", "obj1": 0.5384615384615384, "obj2": 0.4054019265808745}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.8967611336032388, "obj2": 0.08000180079870847}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( Min( Min( Const ,BR ) ,( PN - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,MUR ) / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.312038182678928}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + Max( ( CS - MLU ),Min( DS ,DS ) ) ) - CS ) )", "obj1": 0.4048582995951417, "obj2": 0.5450028374761843}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "Min( ( FirstVNF_CPU * ( ( ( FirstVNF_CPU_Server * ( DDR + ( CRS / DDR ) ) ) - CRS ) + FirstVNF_CPU ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "Min( ( MUC / RCSe ) ,( Max( RCSe,( RRSe + ( ( RCSe * ( DS * CS ) ) * RMSe ) ) ) / ( Max( MUM,MUC ) - RRSe ) ) )", "obj1": 0.5222672064777328, "obj2": 0.41628695602086413}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( Max( BR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RRSe ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.145748987854251, "obj2": 0.8183217142584138}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.09109311740890688, "obj2": 0.8641314324173162}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( PN - ( PN - ( Const + Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / ( CS / MLU ) ) + Max( ( ( ( DS - MUM ) + Max( DS,MLU ) ) / MLU ),MLU ) )", "obj1": 0.1862348178137652, "obj2": 0.7767628993068967}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( PN + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - ( FirstVNF_CPU - AMS ) ) ) )", "choosing": "Min( Max( ( RRSe - ( RRSe / RMSe ) ),( Min( ( RCSe + RRSe ) ,Min( RRSe ,MLU ) ) - RCSe ) ) ,Min( ( RRSe / RMSe ) ,MLU ) )", "obj1": 0.20040485829959515, "obj2": 0.7637189115411949}, {"determining": "Min( ( ( ( PN - ( ( Max( Min( FirstVNF_RAM ,FirstVNF_CPU_Server ),BR ) / ( Max( BR,ACS ) * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / ( FirstVNF_CPU_Server / ( FirstVNF_CPU - ( BR / RRS ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_Mem ) * PN ) )", "choosing": "Max( Min( MLU ,( RRSe * MLU ) ),Min( ( ( RMSe + DS ) - MUR ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * Min( RMSe ,RCSe ) ) ) / Min( Min( RCSe ,MUC ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8744939271255061, "obj2": 0.09840010754342812}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( PN - FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( RMSe,MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.28042847253425524}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "Min( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) ,( CRS * Min( FirstVNF_CPU_Server ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( ( ( DS + MUR ) * RMSe ) + ( ( ( DS + MUR ) + RMSe ) / RCSe ) )", "obj1": 0.36639676113360325, "obj2": 0.5761307529044407}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) * Min( Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( Min( MUC ,Min( DS ,MUM ) ) / DS ) )", "obj1": 0.18218623481781376, "obj2": 0.7933381033870254}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( Min( ( CRS * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,PN ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) - ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) )", "obj1": 0.19635627530364372, "obj2": 0.7699278615905616}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( Min( ( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) / ( Const + FirstVNF_CPU_Server ) ) ,Max( Min( RRS ,RRS ),( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Max( ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( RCSe - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( ( MUR + MUM ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8766483643682171}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "( PN - ( ( PN - FirstVNF_Mem ) / ( CRS / Min( AMS ,MDR ) ) ) )", "choosing": "( ( CS + Min( MUM ,CS ) ) + Max( ( DS + ( Max( MUC,( RMSe / ( Max( RMSe,MUR ) + ( RCSe - MUM ) ) ) ) + MUM ) ),MLU ) )", "obj1": 0.9919028340080972, "obj2": 0.010713364757168506}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RMSe - MUC ) - DS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.7953497192212151}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,( DDR / FirstVNF_CPU_Server ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / MUM ) )", "obj1": 0.17611336032388664, "obj2": 0.7951281155683348}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6862348178137652, "obj2": 0.26252448664178113}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MUM,CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( Min( MDR ,( ( DDR + ( ( FirstVNF_Mem * CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + Min( MUM ,MUM ) ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.838467390249508}, {"determining": "( PN - ( RRS - ( PN - ( Const + Const ) ) ) )", "choosing": "( ( CS / MLU ) + ( ( ( DS - MUM ) + Max( RCSe,MLU ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,PN ) ,( PN - ( Const + Const ) ) )", "choosing": "( ( ( CS / MLU ) + MUM ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const - FirstVNF_RAM ) - FirstVNF_RAM_Server ) / MRS )", "choosing": "Max( Max( Max( DS,RCSe ),Max( ( MLU / RMSe ),( RCSe / MUR ) ) ),Max( ( ( CS * MUM ) / ( RRSe * RRSe ) ),( Max( MUR,CS ) / ( RRSe + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_RAM_Server ) / ( ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) - Max( ARS,FirstVNF_CPU_Server ) ) * AMS ) )", "choosing": "Min( ( ( Min( MUR ,RRSe ) + ( ( RRSe - RRSe ) - RCSe ) ) * MUC ) ,( RMSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( PN - ( FirstVNF_Mem_Server / ( Const * Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( MUR + Min( CS ,MUM ) ) ,RRSe ) + Max( ( ( ( DS - Max( CS,CS ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( RRS - Min( ( RRS - Const ) ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( ( CS / MLU ),RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( RMSe - Min( RMSe ,MUM ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.7145748987854251, "obj2": 0.23970771667565166}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( BR * ACS ) )", "choosing": "Max( ( RMSe * ( ( RMSe - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ),Min( DS ,DS ) )", "obj1": 0.5384615384615384, "obj2": 0.4054019265808745}, {"determining": "Min( ( ( PN + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - ( ( ( ACS + BR ) / ( FirstVNF_RAM_Server - MRS ) ) / Min( ACS ,DDR ) ) ) ) ) ,Max( FirstVNF_CPU,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( ( ( ( Max( RMSe,Max( MUC,RCSe ) ) * RRSe ) + ( ( RCSe + ( ( MUM * RMSe ) + RRSe ) ) - MUM ) ) - DS ) ,DS ) )", "obj1": 0.854251012145749, "obj2": 0.09475412997238089}, {"determining": "( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - Min( MUR ,Min( RCSe ,RCSe ) ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.8076923076923077, "obj2": 0.09513976471015283}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / Max( DDR,CRS ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( MDR - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / CS ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.7564201173713747}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( ( MUM + MUM ) - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9736842105263158, "obj2": 0.02621892954090863}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( Min( Min( Const ,BR ) ,( PN - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,MUR ) / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.312038182678928}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,( DDR / FirstVNF_CPU_Server ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / MUM ) )", "obj1": 0.17611336032388664, "obj2": 0.7951281155683348}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + Max( ( CS - MLU ),Min( DS ,DS ) ) ) - CS ) )", "obj1": 0.4048582995951417, "obj2": 0.5450028374761843}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "( Min( MDR ,( PN - FirstVNF_Mem_Server ) ) * ( ( Min( MDR ,( PN - FirstVNF_Mem_Server ) ) * ( PN - BR ) ) - BR ) )", "choosing": "( ( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4151496675068853}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - ( PN - FirstVNF_Mem_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( RMSe,MUM ) ),Min( ( MUC * Max( Max( CS,( RMSe - ( MUM * DS ) ) ),MLU ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.28042847253425524}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( CRS + PN ) + ( ( FirstVNF_CPU_Server / CRS ) * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) )", "choosing": "( ( ( ( ( CS - RRSe ) + RRSe ) * ( MUR + ( MUM / DS ) ) ) - RRSe ) - ( MUR - ( MUM * CS ) ) )", "obj1": 0.15991902834008098, "obj2": 0.7977104524919701}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "( ( ( ( CRS * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * MRS ) ) / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) )", "choosing": "( ( MLU * MUM ) + MUM )", "obj1": 0.9878542510121457, "obj2": 0.014331975890384674}, {"determining": "( PN - ( Max( ACS,CRS ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( ( CS / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.9919028340080972, "obj2": 0.010019035130547577}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( RCSe + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.08299595141700405, "obj2": 0.886440259894059}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ),FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RMSe - MUC ) - DS ) ) )", "obj1": 0.1680161943319838, "obj2": 0.7953497192212151}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.09109311740890688, "obj2": 0.8641314324173162}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * ( ARS / CRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * CS ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9757085020242915, "obj2": 0.023293818121490416}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6862348178137652, "obj2": 0.26252448664178113}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "Min( ( ( ( AMS / BR ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( RRS + ( AMS / ARS ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RCSe ) ) / RMSe ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6543986260494346}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "( Min( MDR ,MRS ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( RRS - FirstVNF_Mem_Server ) * ( PN - BR ) )", "choosing": "( Max( MUM,CS ) * MLU )", "obj1": 0.9959514170040485, "obj2": 0.0027694476597330798}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.838467390249508}, {"determining": "( Min( MDR ,( ( Min( MDR ,( PN - FirstVNF_Mem_Server ) ) * ( PN - BR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS ) ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}, {"determining": "( Min( MDR ,( ( DDR + ( ( FirstVNF_Mem * CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + Min( MUM ,MUM ) ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}, {"determining": "Min( ( ( PN + FirstVNF_Mem ) + ( AMS / ( Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( ( ( RCSe / MUR ) - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( RRS - ( PN - ( Const + Const ) ) ) )", "choosing": "( ( CS / MLU ) + ( ( ( DS - MUM ) + Max( RCSe,MLU ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,PN ) ,( PN - ( Const + Const ) ) )", "choosing": "( ( ( CS / MLU ) + MUM ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const * FirstVNF_RAM ) / ( Const / Min( MDR ,( FirstVNF_Mem + ( ( ( BR * RRS ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( PN / Const ) ) ) ) ) ) )", "choosing": "( Max( ( ( RMSe / RCSe ) / ( CS - MUC ) ),( ( RMSe / RMSe ) / ( MUM * MUM ) ) ) / ( Max( ( RMSe * RRSe ),( MUM - MUC ) ) * ( ( MUC * MUM ) - Min( DS ,MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "( PN - ( PN - ( ( Max( Const,AMS ) * ( CRS / Max( DDR,CRS ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( FirstVNF_Mem_Server / ( Const * Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( Min( ( MUR + Min( CS ,MUM ) ) ,RRSe ) + Max( ( ( ( DS - Max( CS,CS ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * FirstVNF_CPU_Server ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( RMSe - Min( RMSe ,MUM ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.7145748987854251, "obj2": 0.23970771667565166}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( BR * ACS ) )", "choosing": "Max( ( RMSe * ( ( RMSe - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ),Min( DS ,DS ) )", "obj1": 0.5384615384615384, "obj2": 0.4054019265808745}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / Max( DDR,CRS ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( MDR - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / CS ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.18016194331983806, "obj2": 0.7564201173713747}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( ( MUM + MUM ) - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9736842105263158, "obj2": 0.02621892954090863}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( Min( Min( Const ,BR ) ,( PN - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,MUR ) / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.312038182678928}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Const ,( FirstVNF_CPU * FirstVNF_CPU ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe + Max( ( CS - MLU ),Min( DS ,DS ) ) ) - CS ) )", "obj1": 0.4048582995951417, "obj2": 0.5450028374761843}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + ( RCSe - MUM ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.2770889554915359}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * CS )", "obj1": 0.32793522267206476, "obj2": 0.6121741249688877}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( FirstVNF_Mem_Server / ARS ) * ( ( ARS / FirstVNF_Mem_Server ) - FirstVNF_CPU ) )", "choosing": "Min( ( Min( RRSe ,MUR ) / ( MLU - MLU ) ) ,( MUC - ( Min( MLU ,( RCSe - ( ( ( RCSe + RMSe ) + ( MUR + MUM ) ) * RCSe ) ) ) * CS ) ) )", "obj1": 0.32793522267206476, "obj2": 0.5990876297060487}, {"determining": "( ( FirstVNF_CPU_Server * Min( RRS ,BR ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,MUR ) )", "obj1": 0.31983805668016196, "obj2": 0.6197878536774544}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( PN - ( FirstVNF_Mem_Server / ( Const * ( Const / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Min( ( MUR + Min( CS ,MUM ) ) ,RRSe ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8855088827977166}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.09109311740890688, "obj2": 0.8641314324173162}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * ( ARS / CRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * CS ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9757085020242915, "obj2": 0.023293818121490416}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( BR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0021158816171138106}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6862348178137652, "obj2": 0.26252448664178113}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "Min( ( ( ( AMS / BR ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( RRS + ( AMS / ARS ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RCSe ) ) / RMSe ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6543986260494346}, {"determining": "( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.354251012145749, "obj2": 0.5904835920204963}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.838467390249508}, {"determining": "( Min( MDR ,( ( Min( MDR ,( PN - FirstVNF_Mem_Server ) ) * ( PN - BR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS ) ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}, {"determining": "( Min( MDR ,( ( DDR + ( ( FirstVNF_Mem * CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + Min( MUM ,MUM ) ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}, {"determining": "( PN - ( RRS - Min( ( RRS - Const ) ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( ( CS / MLU ),RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( PN + FirstVNF_Mem ) + ( AMS / ( Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( ( ( RCSe / MUR ) - DS ) ,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( RRS - ( PN - ( Const + Const ) ) ) )", "choosing": "( ( CS / MLU ) + ( ( ( DS - MUM ) + Max( RCSe,MLU ) ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( AMS ,PN ) ,( PN - ( Const + Const ) ) )", "choosing": "( ( ( CS / MLU ) + MUM ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "Min( Min( ( PN - ( Const + ( AMS / MDR ) ) ) ,PN ) ,Max( ( PN - ( Const + ( AMS / MDR ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS / MLU ) + Max( ( ( ( DS - MUM ) + Max( ( CS / MLU ),MLU ) ) / Min( RRSe ,( RCSe + Min( ( MUM / MLU ) ,DS ) ) ) ),MLU ) ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( PN - ( ( Max( Const,AMS ) * ( CRS / Max( DDR,CRS ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,( PN * MDR ) ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23270787780414434}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( Max( MUR,MUR ),CS ) * DS )", "obj1": 0.888663967611336, "obj2": 0.07832233057073021}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( Min( MDR ,( ( ( Min( RRS ,RRS ) + MDR ) + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + Min( MUM ,RMSe ) ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5506072874493927, "obj2": 0.39724392111393575}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( ( MUM + MUM ) - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9736842105263158, "obj2": 0.02621892954090863}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( ( MRS * DDR ) / ( RRS - BR ) ) - Min( ( Const + FirstVNF_RAM ) ,( Min( Min( Const ,BR ) ,( PN - FirstVNF_Mem_Server ) ) / FirstVNF_CPU ) ) )", "choosing": "( ( Max( DS,MUR ) / RMSe ) * Min( Min( DS ,MUR ) ,( RRSe + RCSe ) ) )", "obj1": 0.6437246963562753, "obj2": 0.312038182678928}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ACS + MDR ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,RMSe ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5400097423683794}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_CPU * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MUC ),MUC ) ),Min( ( MUC + ( MUR - CS ) ) ,MUM ) )", "obj1": 0.6882591093117408, "obj2": 0.2552428137028521}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( BR * ACS ) )", "choosing": "Max( ( RMSe * ( ( RMSe - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ),Min( DS ,DS ) )", "obj1": 0.5384615384615384, "obj2": 0.4054019265808745}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / ( DDR / PN ) ) )", "choosing": "( ( MUR - CS ) - RCSe )", "obj1": 0.26720647773279355, "obj2": 0.6719888836021902}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + ( RCSe - MUM ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.2770889554915359}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( FirstVNF_CPU_Server * Min( RRS ,BR ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,MUR ) )", "obj1": 0.31983805668016196, "obj2": 0.6197878536774544}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( PN - ( PN - ( FirstVNF_Mem_Server / ( Const * ( Const / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Min( ( MUR + Min( CS ,MUM ) ) ,RRSe ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8855088827977166}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * ( ARS / CRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * CS ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9757085020242915, "obj2": 0.023293818121490416}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( BR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0021158816171138106}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6862348178137652, "obj2": 0.26252448664178113}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "( PN - ( BR - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / Min( MUC ,DS ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( MUM,RRSe ) ) ) ) / RRSe ) + Max( ( ( ( Min( ( ( MUC / RMSe ) + RCSe ) ,MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.10931174089068826, "obj2": 0.8512515601835907}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}, {"determining": "Min( ( ( ( AMS / BR ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( RRS + ( AMS / ARS ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RCSe ) ) / RMSe ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6543986260494346}, {"determining": "( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.354251012145749, "obj2": 0.5904835920204963}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,DDR ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.12348178137651822, "obj2": 0.838467390249508}, {"determining": "( Min( MDR ,( ( Min( MDR ,( PN - FirstVNF_Mem_Server ) ) * ( PN - BR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS ) ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}, {"determining": "( Min( MDR ,( ( DDR + ( ( FirstVNF_Mem * CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + Min( MUM ,MUM ) ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.9979757085020243, "obj2": 0.000473950487820229}], "11": [{"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) - BR ),DDR ) + Max( AMS,( BR / FirstVNF_Mem ) ) ) ),( ( RRS - Min( DDR ,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( RRSe - ( Min( RCSe ,MLU ) + CS ) ) * ( Min( RMSe ,Max( ( MUR * RMSe ),RMSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( PN - ( Const + ( AMS / MDR ) ) ) ,PN ) ,Max( ( PN - ( Const + ( AMS / MDR ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS / MLU ) + Max( ( ( ( DS - MUM ) + Max( ( CS / MLU ),MLU ) ) / Min( RRSe ,( RCSe + Min( ( MUM / MLU ) ,DS ) ) ) ),MLU ) ) / Min( RMSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,( PN * MDR ) ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23270787780414434}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( Max( MUR,MUR ),CS ) * DS )", "obj1": 0.888663967611336, "obj2": 0.07832233057073021}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( FirstVNF_Mem_Server * ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( RRS / FirstVNF_CPU ),FirstVNF_CPU ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / ( FirstVNF_Mem_Server + DDR ) ) ) )", "choosing": "Min( ( MUC - DS ) ,( RRSe / MUR ) )", "obj1": 0.9615384615384616, "obj2": 0.03217008759951909}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * MUC ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.25504391014854877}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ACS + MDR ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,RMSe ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5400097423683794}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( PN - ( ( Max( Const,FirstVNF_CPU_Server ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( ( MLU - Max( RRSe,DS ) ) + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6497975708502024, "obj2": 0.29464907655720035}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( Min( MDR ,( ( DDR + ( MDR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Max( Min( MUC ,DS ),MLU ) ),CS ) * DS )", "obj1": 0.4959514170040486, "obj2": 0.4394781010981587}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - MUM ) ) / MUM ) )", "obj1": 0.2651821862348178, "obj2": 0.668937949986056}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + ( RCSe - MUM ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.2770889554915359}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "Max( ( AMS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( RCSe - RCSe ),( ( ( ( ( Min( Max( RMSe,MUM ) ,RRSe ) / RRSe ) + ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) - CS ) / RRSe ) - ( Max( MUM,RMSe ) / Min( ( ( Max( ( MUC * RCSe ),MUR ) - ( Min( RMSe ,RCSe ) * RMSe ) ) + Min( Max( MUM,CS ) ,MUR ) ) ,MUM ) ) ) )", "obj1": 0.35020242914979755, "obj2": 0.5915686907589024}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Min( FirstVNF_Mem ,( FirstVNF_RAM / ( RRS * ( PN - DDR ) ) ) ) ) ) / Max( Max( MRS,FirstVNF_Mem_Server ),Max( FirstVNF_Mem,Min( ( BR * ( FirstVNF_CPU * Max( MRS,AMS ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * MUR ) - ( ( ( RRSe * RMSe ) - Min( CS ,DS ) ) - DS ) ) / ( MUR * RCSe ) )", "obj1": 0.13562753036437247, "obj2": 0.8362795988237303}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( ( MUM + MUM ) - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9736842105263158, "obj2": 0.02621892954090863}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( ( FirstVNF_CPU_Server * Min( RRS ,BR ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,MUR ) )", "obj1": 0.31983805668016196, "obj2": 0.6197878536774544}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( PN - ( PN - ( FirstVNF_Mem_Server / ( Const * ( Const / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Min( ( MUR + Min( CS ,MUM ) ) ,RRSe ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8855088827977166}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - Max( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ),( DDR + BR ) ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( CS * MUM ) )", "obj1": 0.3562753036437247, "obj2": 0.5885449529265477}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * ( ARS / CRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * CS ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9757085020242915, "obj2": 0.023293818121490416}, {"determining": "( ( ( AMS / ACS ) / PN ) * ( ACS - MRS ) )", "choosing": "( ( Min( ( RRSe + MUR ) ,RCSe ) - RCSe ) - ( ( ( RCSe - DS ) * Min( ( MUR - Min( RCSe ,DS ) ) ,Max( ( Min( Min( MUM ,RRSe ) ,RCSe ) + RMSe ),RCSe ) ) ) * MUC ) )", "obj1": 0.9939271255060729, "obj2": 0.0015468413759140579}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "( PN - ( BR - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / Min( MUC ,DS ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( MUM,RRSe ) ) ) ) / RRSe ) + Max( ( ( ( Min( ( ( MUC / RMSe ) + RCSe ) ,MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.10931174089068826, "obj2": 0.8512515601835907}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * FirstVNF_CPU ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / ( ( ( RCSe / ( MUR / RRSe ) ) * DS ) * Max( Min( MLU ,RMSe ),DS ) ) ) / MLU ),Max( MUM,( MLU - RRSe ) ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}, {"determining": "Min( ( ( ( AMS / BR ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( RRS + ( AMS / ARS ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RCSe ) ) / RMSe ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6543986260494346}, {"determining": "( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.354251012145749, "obj2": 0.5904835920204963}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}], "12": [{"determining": "( ( ( Max( MDR,RRS ) / AMS ) - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR + Min( CS ,Max( ( ( ( RCSe + RRSe ) / Min( MUC ,MUC ) ) + ( ( DS + CS ) - ( MUC * MUM ) ) ),RRSe ) ) ) ,RRSe ) + ( Max( ( MLU - RMSe ),Min( ( RMSe + RRSe ) ,DS ) ) / Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) - BR ),DDR ) + Max( AMS,( BR / FirstVNF_Mem ) ) ) ),( ( RRS - Min( DDR ,FirstVNF_Mem ) ) + BR ) )", "choosing": "( ( RRSe - ( Min( RCSe ,MLU ) + CS ) ) * ( Min( RMSe ,Max( ( MUR * RMSe ),RMSe ) ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,( PN * MDR ) ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23270787780414434}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( Max( MUR,MUR ),CS ) * DS )", "obj1": 0.888663967611336, "obj2": 0.07832233057073021}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( FirstVNF_Mem_Server,MDR ) ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,MUM ) ) ,MUM ) ),Min( RCSe ,MUM ) )", "obj1": 0.7591093117408907, "obj2": 0.11490164928801745}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.025773301383292688}, {"determining": "( ( BR - ( MRS + FirstVNF_CPU ) ) - Max( ( BR + ( DDR + PN ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( Max( MUM,MLU ) / MUR ) ,RRSe ) + ( MUM / ( ( ( MUR - RCSe ) + MLU ) / MUC ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3924342193132001}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * MUC ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.25504391014854877}, {"determining": "Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,( PN - MDR ) )", "choosing": "Max( CS,Min( RCSe ,Max( Min( MUM ,DS ),Min( RCSe ,MUM ) ) ) )", "obj1": 0.7672064777327935, "obj2": 0.1104954295544231}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / ( Max( ( RRS + CRS ),Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) + CRS ) )", "choosing": "( ( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( DS,( CS * MUC ) ) ,CS ) ) / ( RCSe / MUR ) )", "obj1": 0.22064777327935223, "obj2": 0.7364253415732415}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ACS + MDR ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,RMSe ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5400097423683794}, {"determining": "( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server * MDR ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + ( MUC - Min( RMSe ,MUM ) ) ) ,CS ) ) ) )", "obj1": 0.4230769230769231, "obj2": 0.525719883665045}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "Min( ( ( ( PN - ( ( Max( Const,FirstVNF_CPU_Server ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( ( MLU - Max( RRSe,DS ) ) + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6497975708502024, "obj2": 0.29464907655720035}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( ( ( ACS * ( MDR / CRS ) ) + FirstVNF_Mem ) + ( AMS / ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,( ( RRSe - CS ) * Min( MUM ,MUR ) ) )", "obj1": 0.41700404858299595, "obj2": 0.5288391119099107}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + ( RCSe - MUM ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.2770889554915359}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "( ( ( ( DDR / FirstVNF_RAM ) - ( PN * FirstVNF_CPU ) ) - ( PN * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( MUM - ( ( MLU * MUM ) + ( CS / MLU ) ) )", "obj1": 0.32388663967611336, "obj2": 0.6160914289791339}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * ( ARS / CRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * CS ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.9757085020242915, "obj2": 0.023293818121490416}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "( ( DDR / PN ) * ( PN * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / RCSe ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.340080971659919, "obj2": 0.5927940769277015}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( ( ( Max( MDR,RRS ) / AMS ) - FirstVNF_Mem ),Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / ( ( ( RCSe / ( MUR / RRSe ) ) * DS ) * Max( Min( MLU ,RMSe ),DS ) ) ) / Max( MLU,MUR ) ),MLU ) )", "obj1": 0.13360323886639677, "obj2": 0.8314844841905422}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "( ( FirstVNF_CPU_Server * Min( RRS ,BR ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,MUR ) )", "obj1": 0.31983805668016196, "obj2": 0.6197878536774544}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( PN - ( PN - ( FirstVNF_Mem_Server / ( Const * ( Const / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Min( ( MUR + Min( CS ,MUM ) ) ,RRSe ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + ( MLU / DS ) ) / MLU ),MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8855088827977166}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( Min( PN ,( ARS / FirstVNF_Mem ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - ( MUR * Max( ( RCSe + MUR ),Min( RRSe ,CS ) ) ) ),Min( RMSe ,( MLU + ( MLU / MUM ) ) ) ),( MUM / ( RCSe / MLU ) ) ) - CS ) - Min( MUC ,Min( MUC ,RMSe ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "Min( Max( FirstVNF_Mem_Server,MDR ) ,( PN - Max( Min( Max( ( PN - FirstVNF_Mem_Server ),MDR ) ,Min( DDR ,FirstVNF_RAM ) ),MDR ) ) )", "choosing": "Max( Max( CS,Min( RCSe ,MUM ) ),Min( RCSe ,Max( CS,Min( MUR ,CS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.11242287198372396}, {"determining": "( PN - ( BR - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / Min( MUC ,DS ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( MUM,RRSe ) ) ) ) / RRSe ) + Max( ( ( ( Min( ( ( MUC / RMSe ) + RCSe ) ,MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.10931174089068826, "obj2": 0.8512515601835907}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}, {"determining": "Min( ( ( ( AMS / BR ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( RRS + ( AMS / ARS ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RCSe ) ) / RMSe ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6543986260494346}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "( ( BR - ( MRS + FirstVNF_CPU ) ) - Max( ( BR + ( DDR + PN ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( Max( MUM,MLU ) / MUR ) ,RRSe ) + ( MUM / ( ( ( MUR - RCSe ) + MLU ) / MUC ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3924342193132001}], "13": [{"determining": "( Min( FirstVNF_RAM_Server ,RRS ) - ( ( ARS + ACS ) - Min( FirstVNF_RAM_Server ,RRS ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( Max( CS,MUC ) - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( MDR,RRS ) / AMS ) - FirstVNF_Mem ) - Max( MDR,RRS ) )", "choosing": "( Min( ( MUR + Min( CS ,Max( ( ( ( RCSe + RRSe ) / Min( MUC ,MUC ) ) + ( ( DS + CS ) - ( MUC * MUM ) ) ),RRSe ) ) ) ,RRSe ) + ( Max( ( MLU - RMSe ),Min( ( RMSe + RRSe ) ,DS ) ) / Min( RMSe ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,( PN * MDR ) ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23270787780414434}, {"determining": "( ( Min( ( ( Max( Max( Max( MDR,Const ),Min( FirstVNF_Mem ,MDR ) ),Min( PN ,( AMS / MRS ) ) ) + ( PN * ( ( PN * CRS ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( DDR - FirstVNF_Mem_Server ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( ( RMSe + MUC ) * Max( CS,CS ) ) - Max( ( ( Max( Max( MUC,RCSe ),RMSe ) / ( ( Max( MUM,MLU ) / CS ) + RCSe ) ) * MLU ),( ( MUM * Max( RCSe,MUC ) ) / Max( CS,MUR ) ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10669336270883968}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( Max( MUR,MUR ),CS ) * DS )", "obj1": 0.888663967611336, "obj2": 0.07832233057073021}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( ( ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - Min( MUR ,Min( RCSe ,RCSe ) ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / ( RCSe * DS ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5238141853461625}, {"determining": "( ( ( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - AMS ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) ) + DDR ) / ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) )", "choosing": "( ( ( Max( CS,RRSe ) * ( MUM / RMSe ) ) * ( Min( DS ,CS ) + ( MLU - ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) ) ) ) - Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) )", "obj1": 0.6234817813765182, "obj2": 0.33511334738107074}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) / Min( ACS ,DDR ) ) ) )", "choosing": "( ( ( ( MUR - DS ) / ( RCSe / MUR ) ) + MUC ) - Min( Max( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ),( CS * MUC ) ) ,CS ) )", "obj1": 0.20445344129554655, "obj2": 0.7437317124411643}, {"determining": "( ( BR - ( MRS + FirstVNF_CPU ) ) - Max( ( BR + ( DDR + PN ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( Max( MUM,MLU ) / MUR ) ,RRSe ) + ( MUM / ( ( ( MUR - RCSe ) + MLU ) / MUC ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3924342193132001}, {"determining": "( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * MUC ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.25504391014854877}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( ( Min( ( MRS + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Min( MUC ,( ( RCSe - MUM ) + ( DS * MLU ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.7240777050849454}, {"determining": "Min( Max( ACS,MRS ) ,( MDR * PN ) )", "choosing": "( ( DS - MUM ) + Max( RCSe,MLU ) )", "obj1": 0.39473684210526316, "obj2": 0.5577576194633859}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ACS + MDR ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,RMSe ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.4008097165991903, "obj2": 0.5400097423683794}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "Min( ( ( ( PN - ( ( Max( Const,FirstVNF_CPU_Server ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( ( MLU - Max( RRSe,DS ) ) + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6497975708502024, "obj2": 0.29464907655720035}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,AMS ) ) + ( ( BR + FirstVNF_CPU ) - ( DDR * FirstVNF_CPU_Server ) ) ) - ( Max( ( FirstVNF_RAM + MDR ),( RRS / FirstVNF_CPU_Server ) ) - ( ( MRS - BR ) / ( Const / DDR ) ) ) )", "choosing": "( ( ( ( CS + MUM ) - ( RRSe / CS ) ) + ( Min( RCSe ,MUM ) * Max( MUM,MUR ) ) ) - ( Min( ( RRSe / RRSe ) ,( MUR - MLU ) ) * ( ( MUR - RCSe ) * ( MUC * RCSe ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.015957181803082747}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + ( RCSe - MUM ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.2770889554915359}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "( ( DDR / PN ) * ( PN * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / RCSe ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.340080971659919, "obj2": 0.5927940769277015}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( ( FirstVNF_CPU_Server * Min( RRS ,BR ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,MUR ) )", "obj1": 0.31983805668016196, "obj2": 0.6197878536774544}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( Min( RRS ,( ( FirstVNF_Mem - FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU,ARS ) ) ) ) ,( Max( ( MRS * RRS ),Max( RRS,CRS ) ) / ( Max( FirstVNF_CPU_Server,AMS ) + Max( MDR,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe - DS ) ,Min( ( Max( CS,( ( CS + RMSe ) / RMSe ) ) - ( ( RMSe / Max( Min( DS ,RMSe ),( ( MUM / RCSe ) - ( RMSe + RMSe ) ) ) ) - ( MLU - RCSe ) ) ) ,MUR ) )", "obj1": 0.9109311740890689, "obj2": 0.06261100253295591}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "( PN - ( BR - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / Min( MUC ,DS ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( MUM,RRSe ) ) ) ) / RRSe ) + Max( ( ( ( Min( ( ( MUC / RMSe ) + RCSe ) ,MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.10931174089068826, "obj2": 0.8512515601835907}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}, {"determining": "Min( ( ( ( AMS / BR ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( ( RRS + ( AMS / ARS ) ) / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RCSe ) ) / RMSe ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2732793522267207, "obj2": 0.6543986260494346}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( Max( FirstVNF_CPU,FirstVNF_Mem ) ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( ( RRSe - RRSe ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9595141700404858, "obj2": 0.025773301383292688}, {"determining": "Min( Min( Const ,BR ) ,( ( ( ( PN - ( Min( RRS ,RRS ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe + ( RRSe - ( Max( MLU,Min( DS ,Min( MUM ,RMSe ) ) ) - CS ) ) ),Min( RCSe ,MUM ) )", "obj1": 0.9919028340080972, "obj2": 0.0034676169586814365}, {"determining": "( ( RRS - Min( DDR ,FirstVNF_Mem ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,( DS - Max( CS,RMSe ) ) ) ) + ( MLU / DS ) ) / MLU ),MLU ) )", "obj1": 0.08502024291497975, "obj2": 0.8845436776975489}, {"determining": "( ( BR - ( MRS + FirstVNF_CPU ) ) - Max( ( BR + ( DDR + PN ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( Max( MUM,MLU ) / MUR ) ,RRSe ) + ( MUM / ( ( ( MUR - RCSe ) + MLU ) / MUC ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3924342193132001}], "14": [{"determining": "( PN - Max( Const,( ( MRS + FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( Max( CS,MLU ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,RRS ) - ( ( ARS + ACS ) - Min( FirstVNF_RAM_Server ,RRS ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( Max( CS,MUC ) - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,( PN * MDR ) ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23270787780414434}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - Min( MUR ,Min( RCSe ,RCSe ) ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / ( RCSe * DS ) ) ) ) - ( RMSe / MUR ) )", "obj1": 0.4089068825910931, "obj2": 0.5238141853461625}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( Min( ( Min( ( ( BR - CRS ) / ( Min( ( BR * FirstVNF_Mem ) ,( Const * FirstVNF_Mem ) ) * AMS ) ) ,MRS ) * MRS ) ,FirstVNF_RAM_Server ) - ( Const + ( ( BR + ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server * DDR ) - Max( Const,ARS ) ) ) ) )", "choosing": "( ( Min( RCSe ,MLU ) / MLU ) + ( ( RRSe - ( MUR - MUM ) ) - ( ( ( ( MLU * ( ( CS + RCSe ) * ( MLU / DS ) ) ) - DS ) - MUR ) - MUM ) ) )", "obj1": 0.5587044534412956, "obj2": 0.3921212537846638}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.12617340241066222}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7354188626435507}, {"determining": "( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( Min( ( ( Max( ( ( DDR / FirstVNF_Mem_Server ) / ( FirstVNF_Mem + DDR ) ),ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( Min( Max( MDR,DDR ) ,( MRS - MDR ) ) * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( CS + ( MUR + DS ) ) - RMSe ) ) + RMSe ),Max( ( DS * DS ),Max( ( Max( MUC,MUR ) + MUC ),RCSe ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.7509913598398149}, {"determining": "( ( Min( ( MRS + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Min( MUC ,( ( RCSe - MUM ) + ( DS * MLU ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.7240777050849454}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( PN + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RMSe / RRSe ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.694331983805668, "obj2": 0.24735513076645899}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( FirstVNF_RAM_Server * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + ( RCSe - MUM ) ) ,MUM ) )", "obj1": 0.6639676113360324, "obj2": 0.2770889554915359}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6842105263157895, "obj2": 0.2649895506930638}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ACS ) - MDR ) ) / ( ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( RRSe / MUR ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9089068825910931, "obj2": 0.06293684125236981}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * MUC ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.25504391014854877}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( DDR / PN ) * ( PN * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / RCSe ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.340080971659919, "obj2": 0.5927940769277015}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( ( FirstVNF_CPU_Server * Min( RRS ,BR ) ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,MUR ) )", "obj1": 0.31983805668016196, "obj2": 0.6197878536774544}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "Max( ( DDR / PN ),( DDR + FirstVNF_RAM_Server ) )", "choosing": "( Max( MLU,RMSe ) / ( MUR / MUM ) )", "obj1": 0.24493927125506074, "obj2": 0.7031392571211366}, {"determining": "Min( ( ( ( PN - ( ( Max( Const,FirstVNF_CPU_Server ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( ( MLU - Max( RRSe,DS ) ) + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6497975708502024, "obj2": 0.29464907655720035}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Max( ( FirstVNF_Mem_Server * PN ),( DDR + ARS ) )", "choosing": "( Min( MUR ,MLU ) * ( RMSe - MUR ) )", "obj1": 0.242914979757085, "obj2": 0.7037487054849364}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) / ( Max( ( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ),Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( Min( DS ,Min( MUM ,RMSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.07685642045927692}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( Min( RRS ,( ( FirstVNF_Mem - FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,Max( FirstVNF_CPU,ARS ) ) ) ) ,( Max( ( MRS * RRS ),Max( RRS,CRS ) ) / ( Max( FirstVNF_CPU_Server,AMS ) + Max( MDR,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe - DS ) ,Min( ( Max( CS,( ( CS + RMSe ) / RMSe ) ) - ( ( RMSe / Max( Min( DS ,RMSe ),( ( MUM / RCSe ) - ( RMSe + RMSe ) ) ) ) - ( MLU - RCSe ) ) ) ,MUR ) )", "obj1": 0.9109311740890689, "obj2": 0.06261100253295591}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_RAM ) ,( CRS + CRS ) )", "choosing": "Max( Min( DS ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6538461538461539, "obj2": 0.2914326470884865}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "( PN - ( BR - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / Min( MUC ,DS ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( MUM,RRSe ) ) ) ) / RRSe ) + Max( ( ( ( Min( ( ( MUC / RMSe ) + RCSe ) ,MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.10931174089068826, "obj2": 0.8512515601835907}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( PN * ARS ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * MLU ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6255060728744939, "obj2": 0.3198003092241015}, {"determining": "( PN - ( ( FirstVNF_CPU - MRS ) * Max( ( PN - FirstVNF_RAM_Server ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.0931174089068826, "obj2": 0.8611909714619982}], "15": [{"determining": "( ( ( Max( FirstVNF_CPU_Server,( Max( ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem ) ),FirstVNF_CPU ) + FirstVNF_RAM ) ) / AMS ) - FirstVNF_Mem ) - Max( ( BR + ( Max( ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem ) ),FirstVNF_CPU ) + FirstVNF_RAM ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe / MUR ) ,RRSe ) + ( MUM / ( ( Max( ( MLU - RRSe ),Min( Min( MUR ,MUR ) ,MUM ) ) / Min( RMSe ,MLU ) ) / Min( ( RRSe + ( MUC / Min( DS ,RCSe ) ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - Max( Const,( ( MRS + FirstVNF_RAM ) - MDR ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( Max( CS,MLU ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,( PN * MDR ) ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.7064777327935222, "obj2": 0.23270787780414434}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RMSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.5229731908997117}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) * ( FirstVNF_CPU / ( AMS * ( Max( ACS,( BR / MDR ) ) / BR ) ) ) )", "choosing": "Max( Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),( ( Min( RMSe ,MUR ) + MUR ) / DS ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.12617340241066222}, {"determining": "Min( ( Min( FirstVNF_Mem ,ACS ) + ( Max( FirstVNF_CPU,ARS ) - ( ARS - ( ( ( MDR + ( FirstVNF_RAM + MDR ) ) + FirstVNF_RAM ) * Max( MRS,MDR ) ) ) ) ) ,Min( ( Max( ARS,( ( FirstVNF_Mem_Server + MRS ) * ( ( DDR * FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) + ACS ) ,AMS ) )", "choosing": "Max( Min( RCSe ,( ( MUM * MUC ) * MLU ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( Min( RMSe ,RCSe ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.09796902419344176}, {"determining": "( ( Min( ( MRS + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Min( MUC ,( ( RCSe - MUM ) + ( DS * MLU ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.7240777050849454}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( Min( MDR ,( BR - ( RRS * BR ) ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * CRS ) )", "choosing": "( Min( RRSe ,Min( ( RCSe * DS ) ,MLU ) ) - ( ( RCSe + RRSe ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * Max( ACS,( BR / MDR ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),( CS - ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) ) ) ) )", "obj1": 0.1659919028340081, "obj2": 0.7509913598398149}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( PN + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RMSe / RRSe ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.694331983805668, "obj2": 0.24735513076645899}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( PN - ( Min( ( DDR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / MUC ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.05626063829622853}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( ( RRS + Min( FirstVNF_Mem ,( FirstVNF_Mem / FirstVNF_RAM_Server ) ) ) + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( ( DS + MUR ) * RMSe ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / ( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) * ( Const * FirstVNF_Mem ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( MUM / ( RCSe - RCSe ) ) ,( MLU + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.6896450963671698}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7354188626435507}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ACS + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6578947368421053, "obj2": 0.2728871611053418}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ACS ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Max( MUC,MUM ) - CS ) - Min( MUC ,( CS - MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6821862348178138, "obj2": 0.2605955388425288}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "( ( Min( ( ( Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( ( MUC * RCSe ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19230769230769232, "obj2": 0.736191901200001}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( Min( MDR ,( ( DDR + ( Min( Min( Const ,BR ) ,( ACS / CRS ) ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( Max( DS,MUR ) + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.520242914979757, "obj2": 0.4147278857415808}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Min( Const ,BR ) )", "choosing": "( Max( ( Max( Min( MUC ,( Max( RMSe,Max( MUM,CS ) ) + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5263157894736842, "obj2": 0.4129150596841211}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( DDR / PN ) * ( PN * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / RCSe ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.340080971659919, "obj2": 0.5927940769277015}, {"determining": "( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( MUR * MUC ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.6862348178137652, "obj2": 0.25504391014854877}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( MUR / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 0.31983805668016196, "obj2": 0.6188204917112432}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "Min( ( ( ( PN - ( ( Max( Const,FirstVNF_CPU_Server ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( CRS + CRS ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( ( MLU - Max( RRSe,DS ) ) + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6497975708502024, "obj2": 0.29464907655720035}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) / ( Max( ( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ),Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( Min( DS ,Min( MUM ,RMSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.07685642045927692}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.4918302815591407}, {"determining": "Min( ( ( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + MUC ) ) / RMSe ) + RMSe ),( Max( RCSe,Min( MLU ,MUR ) ) - ( MUM - MUR ) ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4716599190283401, "obj2": 0.4588828668595773}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_RAM ) ,( CRS + CRS ) )", "choosing": "Max( Min( DS ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,( MLU - RMSe ) ),MLU ) ) ,( ( Min( ( MLU + ( Max( RCSe,MLU ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.6538461538461539, "obj2": 0.2914326470884865}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}], "16": [{"determining": "( PN - ( Max( Const,( ( MRS + FirstVNF_RAM ) - MDR ) ) - ( RRS - ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MLU / DS ) / RMSe ) + CS ) / MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( FirstVNF_CPU_Server,( Max( ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem ) ),FirstVNF_CPU ) + FirstVNF_RAM ) ) / AMS ) - FirstVNF_Mem ) - Max( ( BR + ( Max( ( FirstVNF_RAM * Max( FirstVNF_Mem,FirstVNF_Mem ) ),FirstVNF_CPU ) + FirstVNF_RAM ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( RCSe / MUR ) ,RRSe ) + ( MUM / ( ( Max( ( MLU - RRSe ),Min( Min( MUR ,MUR ) ,MUM ) ) / Min( RMSe ,MLU ) ) / Min( ( RRSe + ( MUC / Min( DS ,RCSe ) ) ) ,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU - ( BR / RRS ) ) + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * ( Max( RCSe,MLU ) * RCSe ) ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.225314506491805}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ) ) )", "obj1": 0.742914979757085, "obj2": 0.12617340241066222}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( ( ( FirstVNF_CPU * AMS ) + FirstVNF_RAM_Server ) * ( ( MRS + Max( MDR,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * MLU ) * Min( Min( CS ,MUR ) ,MUM ) )", "obj1": 0.5688259109311741, "obj2": 0.37365849767640374}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / Max( Const,ACS ) ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( RMSe / MUC ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.16396761133603238, "obj2": 0.7497333653522094}, {"determining": "( ( Min( ( MRS + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Min( MUC ,( ( RCSe - MUM ) + ( DS * MLU ) ) ) )", "obj1": 0.2165991902834008, "obj2": 0.7240777050849454}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( PN,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( MUR + RCSe ) )", "obj1": 0.4251012145748988, "obj2": 0.5179583122159297}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) * ( FirstVNF_CPU / ( AMS * ( Max( ACS,( BR / MDR ) ) / BR ) ) ) )", "choosing": "Max( Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),( ( Min( RMSe ,MUR ) + MUR ) / DS ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "( ( ( ARS * ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.5182186234817814, "obj2": 0.4085686023222124}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RMSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.5229731908997117}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "Min( ( ( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.46558704453441296, "obj2": 0.4584550521288419}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( PN - ( Min( ( DDR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / MUC ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.05626063829622853}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / ( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) * ( Const * FirstVNF_Mem ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( MUM / ( RCSe - RCSe ) ) ,( MLU + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.6896450963671698}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7354188626435507}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ACS + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6578947368421053, "obj2": 0.2728871611053418}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( Const * FirstVNF_Mem_Server ) ) ) ) + MRS ) ,( ARS - PN ) ) / PN ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,Max( CS,RMSe ) ) - CS ) - ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.10303276941152704}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + ( AMS / ARS ) )", "choosing": "Min( ( DS + MUC ) ,( MUR / CS ) )", "obj1": 0.3643724696356275, "obj2": 0.5760820074570944}, {"determining": "( ( Min( ( ( Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( ( MUC * RCSe ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19230769230769232, "obj2": 0.736191901200001}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RMSe / Min( RRSe ,DS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6497975708502024, "obj2": 0.2906629597215083}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / ( PN / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( MUR / ( MUC + DS ) ) / MUM ) ) ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( DDR / PN ) * ( PN * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / RCSe ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.340080971659919, "obj2": 0.5927940769277015}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( AMS * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( ( MLU - RMSe ) - RRSe ),Min( Min( RMSe ,MUR ) ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.10153613403436344}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( Min( MDR ,( BR - ( RRS * BR ) ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * CRS ) )", "choosing": "( Min( RRSe ,Min( ( RCSe * DS ) ,MLU ) ) - ( ( RCSe + RRSe ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - ( CRS - MDR ) ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( Max( MUR,Max( MUM,CS ) ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7874493927125507, "obj2": 0.09237530407953709}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,FirstVNF_CPU ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( RCSe / DS ) ) / ( RCSe / DS ) )", "obj1": 0.44129554655870445, "obj2": 0.49311083626976293}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( MUR / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 0.31983805668016196, "obj2": 0.6188204917112432}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) / ( Max( ( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ),Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( Min( DS ,Min( MUM ,RMSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.07685642045927692}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4473684210526316, "obj2": 0.4918302815591407}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "Min( ( Min( FirstVNF_Mem ,ACS ) + ( Max( FirstVNF_CPU,ARS ) - ( ARS - ( ( ( MDR + ( FirstVNF_RAM + MDR ) ) + FirstVNF_RAM ) * Max( MRS,MDR ) ) ) ) ) ,Min( ( Max( ARS,( ( FirstVNF_Mem_Server + MRS ) * ( ( DDR * FirstVNF_Mem_Server ) / FirstVNF_RAM ) ) ) + ACS ) ,AMS ) )", "choosing": "Max( Min( RCSe ,( ( MUM * MUC ) * MLU ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( Min( RMSe ,RCSe ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7854251012145749, "obj2": 0.09796902419344176}, {"determining": "( ( Min( ( ( CRS - ARS ) + MRS ) ,MDR ) / PN ) * ( MDR - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( Min( MLU ,RCSe ) / Min( MLU ,RCSe ) ) )", "obj1": 0.2834008097165992, "obj2": 0.6457987494225829}, {"determining": "Min( Min( ( BR * FirstVNF_RAM ) ,PN ) ,Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / Min( RMSe ,RMSe ) )", "obj1": 0.15384615384615385, "obj2": 0.8159596852816542}, {"determining": "( ( Min( Min( Min( FirstVNF_RAM_Server ,RRS ) ,( DDR - Min( ( FirstVNF_RAM_Server + MRS ) ,MDR ) ) ) ,( MDR - ( PN - PN ) ) ) / PN ) * FirstVNF_Mem )", "choosing": "( ( ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) - CS ) - ( ( MUR / MUM ) / Max( Min( MLU ,RCSe ),MUC ) ) )", "obj1": 0.2813765182186235, "obj2": 0.6478573547247365}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( ( CRS - MDR ) - MDR ) ) - PN ) ) / PN ) * ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MLU ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.9939271255060729, "obj2": 0.0015129674994551906}], "17": [{"determining": "( PN - ( Max( Min( CRS ,AMS ),Min( ACS ,( ACS / DDR ) ) ) - ( Const * RRS ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( ( Min( RCSe ,MUM ) + RRSe ) - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( RRSe / ( DS * Max( RMSe,Min( ( DS / CS ) ,MLU ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Max( Const,( ( MRS + FirstVNF_RAM ) - MDR ) ) - ( RRS - ( Const * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( ( MLU / DS ) / RMSe ) + CS ) / MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU - ( BR / RRS ) ) + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * ( Max( RCSe,MLU ) * RCSe ) ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.225314506491805}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( FirstVNF_Mem * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0851524123010672}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Max( MLU,( DS + ( CS * CS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.3371303470365372}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( ( ( FirstVNF_CPU * AMS ) + FirstVNF_RAM_Server ) * ( ( MRS + Max( MDR,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * MLU ) * Min( Min( CS ,MUR ) ,MUM ) )", "obj1": 0.5688259109311741, "obj2": 0.37365849767640374}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / Max( Const,ACS ) ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( RMSe / MUC ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.16396761133603238, "obj2": 0.7497333653522094}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) * ( FirstVNF_CPU / ( AMS * ( Max( ACS,( BR / MDR ) ) / BR ) ) ) )", "choosing": "Max( Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),( ( Min( RMSe ,MUR ) + MUR ) / DS ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( ( ( ARS * ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.5182186234817814, "obj2": 0.4085686023222124}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RMSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.5229731908997117}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * Min( ( CRS * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( PN,FirstVNF_Mem ) - ( PN - PN ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( Min( ( MLU * RMSe ) ,MUR ) * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.7327935222672065, "obj2": 0.12023605923069641}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ( Min( ( MRS / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) / PN ) ) - PN ) ) / PN ) * ( ARS * Max( Const,MRS ) ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( RCSe / ( RCSe - RCSe ) ) ,( ( DS + CS ) + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,Min( DS ,( ( ( ( MUC / MLU ) + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.7233492523452775}, {"determining": "( PN - ( Min( ( DDR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / MUC ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.05626063829622853}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / ( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) * ( Const * FirstVNF_Mem ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( MUM / ( RCSe - RCSe ) ) ,( MLU + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.6896450963671698}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( Min( ( ( Max( Const,Max( Const,ACS ) ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( MLU * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.728744939271255, "obj2": 0.12685243898689488}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "Max( ( RRS + CRS ),Max( ARS,( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / RMSe ) ) ) - DS ) / ( RCSe / MUR ) ) - Min( Max( DS,( CS * MUC ) ) ,CS ) )", "obj1": 0.23076923076923078, "obj2": 0.7177989972673813}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.46558704453441296, "obj2": 0.4584550521288419}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ACS + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6578947368421053, "obj2": 0.2728871611053418}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( Const * FirstVNF_Mem_Server ) ) ) ) + MRS ) ,( ARS - PN ) ) / PN ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,Max( CS,RMSe ) ) - CS ) - ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.10303276941152704}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( ( ( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( MRS / ACS ) ) * FirstVNF_Mem ) / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / Max( MUM,MUC ) ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.5176598859432328}, {"determining": "( ( ( ( ( ( AMS / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( PN * FirstVNF_CPU ) ) ) ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * FirstVNF_RAM_Server ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / ( ( MUR / ( MUR / ( MUC + DS ) ) ) / MUM ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3643724696356275, "obj2": 0.574726125295311}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19838056680161945, "obj2": 0.7258020159336793}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RMSe / Min( RRSe ,DS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6497975708502024, "obj2": 0.2906629597215083}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( ( Min( ( CRS * DDR ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( CS ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.1882591093117409, "obj2": 0.7365994459950554}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( PN,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( MUR + RCSe ) )", "obj1": 0.4251012145748988, "obj2": 0.5179583122159297}, {"determining": "( Min( MDR ,( BR - ( RRS * BR ) ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * CRS ) )", "choosing": "( Min( RRSe ,Min( ( RCSe * DS ) ,MLU ) ) - ( ( RCSe + RRSe ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( DDR / PN ) * ( PN * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / RCSe ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.340080971659919, "obj2": 0.5927940769277015}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( MUR / ( MUC + DS ) ) ) ) / MUM ) )", "obj1": 0.31983805668016196, "obj2": 0.6188204917112432}, {"determining": "Min( ( AMS * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( ( MLU - RMSe ) - RRSe ),Min( Min( RMSe ,MUR ) ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.10153613403436344}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / ( PN / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( MUR / ( MUC + DS ) ) / MUM ) ) ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( AMS / Max( ( CRS + PN ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + MUC ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + ( MUC - MLU ) ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.45248551537757675}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - ( CRS - MDR ) ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( Max( MUR,Max( MUM,CS ) ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7874493927125507, "obj2": 0.09237530407953709}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "( ( Min( ( ( PN - FirstVNF_Mem_Server ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( MUC ,( ( ( ( ( MLU - RMSe ) + ( RRSe - MUC ) ) * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.2631578947368421, "obj2": 0.680968674839989}, {"determining": "Max( Min( ( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) * ( ACS + FirstVNF_Mem ) ) ,Max( ( MDR + FirstVNF_CPU_Server ),( DDR + ACS ) ) ),( ( ( RRS / FirstVNF_RAM_Server ) / ( MDR + MDR ) ) + ( ( BR - RRS ) - ( FirstVNF_CPU_Server * PN ) ) ) )", "choosing": "( ( Max( ( MLU + MUM ),( DS + DS ) ) * ( ( MLU - RRSe ) + Min( CS ,RRSe ) ) ) * Min( ( Max( RCSe,CS ) * ( MUC / RMSe ) ) ,( Min( MUR ,RRSe ) - ( RCSe + RRSe ) ) ) )", "obj1": 0.2591093117408907, "obj2": 0.6811819063849284}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7354188626435507}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) / ( Max( ( Min( MDR ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ),Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( Min( DS ,Min( MUM ,RMSe ) ) ,( RMSe * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.888663967611336, "obj2": 0.07685642045927692}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - PN ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * Min( DS ,MUM ) )", "obj1": 0.4433198380566802, "obj2": 0.4914199498700289}, {"determining": "( Max( ARS,FirstVNF_RAM_Server ) / Max( ( CRS + ( ( ( BR + BR ) - ACS ) * Min( FirstVNF_CPU_Server ,AMS ) ) ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + ( MUC / ( Min( Min( MLU ,RRSe ) ,Max( MUC,RMSe ) ) + MLU ) ) ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.12550607287449392, "obj2": 0.8368923523077609}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}], "18": [{"determining": "( Min( CRS ,AMS ) - ( MDR - ( Const * RRS ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( RRSe / ( DS * Max( RMSe,Min( ( DS / CS ) ,Min( RCSe ,MUM ) ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( Max( Min( CRS ,AMS ),Min( ACS ,( ACS / DDR ) ) ) - ( Const * RRS ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( ( Min( RCSe ,MUM ) + RRSe ) - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( RRSe / ( DS * Max( RMSe,Min( ( DS / CS ) ,MLU ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU - ( BR / RRS ) ) + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * ( Max( RCSe,MLU ) * RCSe ) ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.225314506491805}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( FirstVNF_Mem * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0851524123010672}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( ( ( FirstVNF_CPU * AMS ) + FirstVNF_RAM_Server ) * ( ( MRS + Max( MDR,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * MLU ) * Min( Min( CS ,MUR ) ,MUM ) )", "obj1": 0.5688259109311741, "obj2": 0.37365849767640374}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / Max( Const,ACS ) ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( RMSe / MUC ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.16396761133603238, "obj2": 0.7497333653522094}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( ( ( ARS * ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.5182186234817814, "obj2": 0.4085686023222124}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * ACS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( MUM ,MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.3422669564216244}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * Min( ( CRS * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( PN,FirstVNF_Mem ) - ( PN - PN ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( Min( ( MLU * RMSe ) ,MUR ) * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.7327935222672065, "obj2": 0.12023605923069641}, {"determining": "Min( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( Const - DDR ) ) ,Max( ( CRS + Const ),( ( Max( Max( DDR,DDR ),Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) / Min( ACS ,DDR ) ) + FirstVNF_RAM ) ) )", "choosing": "( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) / Min( Min( CS ,DS ) ,( MUM / ( Max( ( RCSe - Max( CS,RCSe ) ),Min( ( RMSe * MUR ) ,RRSe ) ) - ( DS + CS ) ) ) ) )", "obj1": 0.23279352226720648, "obj2": 0.7070896529554905}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( PN - ( Min( ( DDR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / MUC ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.05626063829622853}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ( Min( ( MRS / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) / PN ) ) - PN ) ) / PN ) * ( ARS * Max( Const,MRS ) ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( RCSe / ( RCSe - RCSe ) ) ,( ( DS + CS ) + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,Min( DS ,( ( ( ( MUC / MLU ) + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.7233492523452775}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / ( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) * ( Const * FirstVNF_Mem ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( MUM / ( RCSe - RCSe ) ) ,( MLU + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.6896450963671698}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( Min( ( ( Max( Const,Max( Const,ACS ) ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( MLU * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.728744939271255, "obj2": 0.12685243898689488}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( Min( MDR ,( BR - ( RRS * BR ) ) ) * ( ( ( ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( PN * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RRSe - DS ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( ( CS * RRSe ) ,RCSe ) ) / ( ( MUR - CS ) - ( MUC + DS ) ) ) / MUM ) )", "obj1": 0.22874493927125505, "obj2": 0.716951024436489}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RMSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.5229731908997117}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.46558704453441296, "obj2": 0.4584550521288419}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Max( MLU,( DS + ( CS * CS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.3371303470365372}, {"determining": "( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( DDR / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) - RMSe ) ) + RMSe ),Max( ( DS * DS ),Max( ( Max( MUC,MUR ) + Max( ( Max( MUC,MUR ) + MUC ),RCSe ) ),RCSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6760176958133616}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( AMS * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( ( MLU - RMSe ) - RRSe ),Min( Min( RMSe ,MUR ) ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.10153613403436344}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ACS + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6578947368421053, "obj2": 0.2728871611053418}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - ( CRS - MDR ) ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( Max( MUR,Max( MUM,CS ) ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7874493927125507, "obj2": 0.09237530407953709}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( Const * FirstVNF_Mem_Server ) ) ) ) + MRS ) ,( ARS - PN ) ) / PN ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,Max( CS,RMSe ) ) - CS ) - ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.10303276941152704}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( ( BR * ( RRS + ACS ) ) / ARS ) ) * ( FirstVNF_CPU / ( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) ) ) )", "choosing": "Max( ( CS - ( RMSe * Max( ( CS / RMSe ),( RMSe + DS ) ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "( ( ( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( MRS / ACS ) ) * FirstVNF_Mem ) / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / Max( MUM,MUC ) ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.5176598859432328}, {"determining": "( ( ( ( ( ( AMS / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( PN * FirstVNF_CPU ) ) ) ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * FirstVNF_RAM_Server ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / ( ( MUR / ( MUR / ( MUC + DS ) ) ) / MUM ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3643724696356275, "obj2": 0.574726125295311}, {"determining": "( ( Min( ( CRS * DDR ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( CS ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.1882591093117409, "obj2": 0.7365994459950554}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19838056680161945, "obj2": 0.7258020159336793}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RMSe / Min( RRSe ,DS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6497975708502024, "obj2": 0.2906629597215083}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( PN,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( MUR + RCSe ) )", "obj1": 0.4251012145748988, "obj2": 0.5179583122159297}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * ( MLU * RRSe ) ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( RMSe + RCSe ) )", "obj1": 0.9696356275303644, "obj2": 0.010211136998772328}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / ( PN / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( MUR / ( MUC + DS ) ) / MUM ) ) ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - PN ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * Min( DS ,MUM ) )", "obj1": 0.4433198380566802, "obj2": 0.4914199498700289}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * Max( Const,MRS ) ) / PN ) / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MLU + RMSe ) ) / MUM ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.33805668016194335, "obj2": 0.5873045542727777}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( Min( MDR ,( BR - ( RRS * BR ) ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * CRS ) )", "choosing": "( Min( RRSe ,Min( ( RCSe * DS ) ,MLU ) ) - ( ( RCSe + RRSe ) / MUM ) )", "obj1": 0.37044534412955465, "obj2": 0.5571181901243228}, {"determining": "Min( ( Const * ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / ( MUM + CS ) ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.5320835153174706}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( AMS / Max( ( CRS + PN ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + MUC ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + ( MUC - MLU ) ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.45248551537757675}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Min( MUC ,( CS - MUM ) ) - CS ) - Min( MUC ,( CS - MUM ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6345729606589617}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7354188626435507}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) * ( FirstVNF_CPU / ( AMS * ( Max( ACS,( BR / MDR ) ) / BR ) ) ) )", "choosing": "Max( Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),( ( Min( RMSe ,MUR ) + MUR ) / DS ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( ( DDR / ACS ) / ( RRS + CRS ) )", "choosing": "( ( MUR - DS ) / ( RCSe / MUR ) )", "obj1": 0.1214574898785425, "obj2": 0.8388326440579597}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}], "19": [{"determining": "( PN - ( ( Max( Const,( ( ( CRS * FirstVNF_RAM ) + FirstVNF_RAM ) - MDR ) ) - ( RRS - ( Const * FirstVNF_CPU ) ) ) - ( Const * RRS ) ) )", "choosing": "( ( ( RCSe + ( MLU * RMSe ) ) + CS ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( RRSe / ( DS * Max( RMSe,Min( ( DS / CS ) ,MLU ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,AMS ) - ( MDR - ( Const * RRS ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( RRSe / ( DS * Max( RMSe,Min( ( DS / CS ) ,Min( RCSe ,MUM ) ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU - ( BR / RRS ) ) + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * ( Max( RCSe,MLU ) * RCSe ) ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.225314506491805}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( FirstVNF_Mem * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0851524123010672}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + Min( MDR ,AMS ) ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / ( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.22267206477732793, "obj2": 0.700228665421633}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( ( ( FirstVNF_CPU * AMS ) + FirstVNF_RAM_Server ) * ( ( MRS + Max( MDR,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * MLU ) * Min( Min( CS ,MUR ) ,MUM ) )", "obj1": 0.5688259109311741, "obj2": 0.37365849767640374}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / Max( Const,ACS ) ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( RMSe / MUC ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.16396761133603238, "obj2": 0.7497333653522094}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ( Min( ( MRS / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) / PN ) ) - PN ) ) / PN ) * ( ARS * Max( Const,MRS ) ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( RCSe / ( RCSe - RCSe ) ) ,( ( DS + CS ) + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,Min( DS ,( ( ( ( MUC / MLU ) + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.7233492523452775}, {"determining": "( ( ( ARS * ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.5182186234817814, "obj2": 0.4085686023222124}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * ACS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( MUM ,MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.3422669564216244}, {"determining": "( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * Max( Const,MRS ) ) / PN ) * ( ( ( ( AMS / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( ( MUR - RRSe ) - Min( MLU ,RRSe ) ) - ( ( CS / MUM ) / MUM ) ) ) / ( ( MUR / ( MUC + DS ) ) / MUM ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5472197643660716}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / ( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) * ( Const * FirstVNF_Mem ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( MUM / ( RCSe - RCSe ) ) ,( MLU + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.6896450963671698}, {"determining": "( PN - ( Min( ( DDR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / MUC ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.05626063829622853}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.46558704453441296, "obj2": 0.4584550521288419}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Max( MLU,( DS + ( CS * CS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.3371303470365372}, {"determining": "( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( DDR / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) - RMSe ) ) + RMSe ),Max( ( DS * DS ),Max( ( Max( MUC,MUR ) + Max( ( Max( MUC,MUR ) + MUC ),RCSe ) ),RCSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6760176958133616}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( AMS * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( ( MLU - RMSe ) - RRSe ),Min( Min( RMSe ,MUR ) ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.10153613403436344}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "( ( Min( ( ( Max( Const,CRS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( Max( ( CS / MUR ),( Max( MUR,CS ) - ( MUM / DS ) ) ) * ( ( ( RCSe * Max( Max( RRSe,RMSe ),CS ) ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.7368421052631579, "obj2": 0.11824155883851906}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ACS + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6578947368421053, "obj2": 0.2728871611053418}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - ( CRS - MDR ) ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( Max( MUR,Max( MUM,CS ) ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7874493927125507, "obj2": 0.09237530407953709}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( Const * FirstVNF_Mem_Server ) ) ) ) + MRS ) ,( ARS - PN ) ) / PN ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,Max( CS,RMSe ) ) - CS ) - ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.10303276941152704}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) * ( FirstVNF_CPU / ( AMS * ( Max( ACS,( BR / MDR ) ) / BR ) ) ) )", "choosing": "Max( Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),( ( Min( RMSe ,MUR ) + MUR ) / DS ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "( ( ( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( MRS / ACS ) ) * FirstVNF_Mem ) / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / Max( MUM,MUC ) ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4291497975708502, "obj2": 0.5176598859432328}, {"determining": "( ( ( ( ( ( AMS / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( PN * FirstVNF_CPU ) ) ) ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * FirstVNF_RAM_Server ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / ( ( MUR / ( MUR / ( MUC + DS ) ) ) / MUM ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3643724696356275, "obj2": 0.574726125295311}, {"determining": "( ( Min( ( CRS * DDR ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( CS ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.1882591093117409, "obj2": 0.7365994459950554}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19838056680161945, "obj2": 0.7258020159336793}, {"determining": "( ( FirstVNF_Mem_Server * ( ( FirstVNF_RAM_Server * Max( PN,( Min( ( FirstVNF_RAM_Server * BR ) ,ARS ) - FirstVNF_Mem ) ) ) - MDR ) ) / ( Max( MRS,Const ) * FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( RMSe * ( ( ( ( RRSe / MLU ) - Min( CS ,RMSe ) ) - MUC ) - Max( ( ( RRSe - RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864589800983219}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RMSe / Min( RRSe ,DS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6497975708502024, "obj2": 0.2906629597215083}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RMSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.5229731908997117}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * ( MLU * RRSe ) ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( RMSe + RCSe ) )", "obj1": 0.9696356275303644, "obj2": 0.010211136998772328}, {"determining": "( PN - ( ( CRS + RRS ) - Min( ARS ,Min( ARS ,CRS ) ) ) )", "choosing": "( ( Max( Max( CS,( DS + ( MUR * ( RRSe - CS ) ) ) ),( CS / ( MUR * Max( ( Max( CS,MUC ) - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( ( ( MLU + MLU ) + MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11740890688259109, "obj2": 0.8369740994179948}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - PN ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * Min( DS ,MUM ) )", "obj1": 0.4433198380566802, "obj2": 0.4914199498700289}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * Max( Const,MRS ) ) / PN ) / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MLU + RMSe ) ) / MUM ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.33805668016194335, "obj2": 0.5873045542727777}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( Max( ACS,( BR / MDR ) ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) - RMSe ) ) + RMSe ),Max( ( DS * DS ),Max( ( Max( MUC,MUR ) + MUC ),RCSe ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6191794382825064}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "Min( ( Const * ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / ( MUM + CS ) ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.5320835153174706}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( ( PN - ( ( Max( Const,AMS ) * ( CRS / ( RRS - Min( DDR ,FirstVNF_Mem ) ) ) ) - Min( DDR ,FirstVNF_Mem ) ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( ( ( RMSe / DS ) / RMSe ) + CS ) + Max( RCSe,( ( ( RMSe / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.08299595141700405, "obj2": 0.8854582846675432}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "Min( ( ( ( AMS / Max( ( CRS + PN ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + MUC ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + ( MUC - MLU ) ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.45248551537757675}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Min( MUC ,( CS - MUM ) ) - CS ) - Min( MUC ,( CS - MUM ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6345729606589617}, {"determining": "( PN - ( Min( DDR ,FirstVNF_Mem ) - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / ( ( MLU + DS ) / DS ) ) ),MLU ) )", "obj1": 0.08906882591093117, "obj2": 0.8748215754600264}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19433198380566802, "obj2": 0.7354188626435507}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) )", "obj1": 0.42105263157894735, "obj2": 0.5215094115237409}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( ( BR * ( RRS + ACS ) ) / ARS ) ) * ( FirstVNF_CPU / ( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) ) ) )", "choosing": "Max( ( CS - ( RMSe * Max( ( CS / RMSe ),( RMSe + DS ) ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - PN ) ) ),Min( ( Min( ( AMS - MRS ) ,BR ) - PN ) ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * DS ) / MLU ) ) * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * DS ) - RCSe ) )", "obj1": 0.9959514170040485, "obj2": 0.003048214270275791}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( RMSe * MUR ) ),RMSe ) ) ) )", "obj1": 0.08704453441295547, "obj2": 0.8810507243186535}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * Min( ( CRS * ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ,( Max( PN,FirstVNF_Mem ) - ( PN - PN ) ) ) )", "choosing": "( ( Max( MLU,MUM ) - ( MUM * ( ( ( Min( ( MLU * RMSe ) ,MUR ) * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.7327935222672065, "obj2": 0.12023605923069641}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}], "20": [{"determining": "( ( BR - ( MRS + FirstVNF_CPU ) ) - Max( ( BR + ( DDR + PN ) ),FirstVNF_Mem ) )", "choosing": "( Min( ( Max( MUM,MLU ) / MUR ) ,RRSe ) + ( MUM / ( ( ( MUR - RCSe ) + MLU ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( PN - ( ( Max( Const,( ( ( CRS * FirstVNF_RAM ) + FirstVNF_RAM ) - MDR ) ) - ( RRS - ( Const * FirstVNF_CPU ) ) ) - ( Const * RRS ) ) )", "choosing": "( ( ( RCSe + ( MLU * RMSe ) ) + CS ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( RRSe / ( DS * Max( RMSe,Min( ( DS / CS ) ,MLU ) ) ) ) ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / MDR ) + Max( ( ( FirstVNF_Mem_Server * MRS ) / ( RRS - MDR ) ),( ( FirstVNF_RAM - ARS ) - ( BR * MDR ) ) ) )", "choosing": "Max( Max( Min( ( Min( RCSe ,RMSe ) - MUM ) ,( MUM * RRSe ) ),( ( MUR / RMSe ) - ( DS - MUM ) ) ),( Max( ( CS - MUC ),CS ) / Min( Min( DS ,RMSe ) ,( RMSe / RMSe ) ) ) )", "obj1": 0.07692307692307693, "obj2": 0.8950575649681447}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU - ( BR / RRS ) ) + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * ( Max( RCSe,MLU ) * RCSe ) ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.6781376518218624, "obj2": 0.225314506491805}, {"determining": "( PN - ( MDR - Min( Max( Max( FirstVNF_RAM_Server,Const ),ACS ) ,( FirstVNF_RAM - Min( ( FirstVNF_RAM * CRS ) ,( MDR + RRS ) ) ) ) ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / ( MLU - MUC ) ),MLU ) )", "obj1": 0.7165991902834008, "obj2": 0.14117015935652275}, {"determining": "Min( ( FirstVNF_Mem * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.8097165991902834, "obj2": 0.0851524123010672}, {"determining": "( Min( ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ,( ( DDR + ( BR / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.8846153846153846, "obj2": 0.08044058953025156}, {"determining": "( ( PN - ( MDR - BR ) ) - ( RRS - Min( DDR ,FirstVNF_Mem ) ) )", "choosing": "( Min( RCSe ,MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / DS ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.15991902834008098, "obj2": 0.7874124275751755}, {"determining": "( Min( PN ,( BR - MDR ) ) + ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) )", "choosing": "Min( ( MUM + DS ) ,Max( DS,( ( MUC + RRSe ) * Min( ( RRSe + Min( MLU ,Max( ( MLU * MUC ),MUC ) ) ) ,( CS * CS ) ) ) ) )", "obj1": 0.917004048582996, "obj2": 0.0351472564386403}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,DDR ) + ( PN * MRS ) ) * Max( ARS,RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( ( ( MUC / MUM ) / ( MUR - ( CS * MLU ) ) ) * MUC ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6680161943319838, "obj2": 0.26823118387843115}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + Min( MDR ,AMS ) ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / ( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.22267206477732793, "obj2": 0.700228665421633}, {"determining": "( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MLU ,MUR ) ) - CS ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9574898785425101, "obj2": 0.026233739122319303}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / Max( Const,ACS ) ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( RMSe / MUC ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.16396761133603238, "obj2": 0.7497333653522094}, {"determining": "( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * Max( Const,MRS ) ) / PN ) * ( ( ( ( AMS / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( ( MUR - RRSe ) - Min( MLU ,RRSe ) ) - ( ( CS / MUM ) / MUM ) ) ) / ( ( MUR / ( MUC + DS ) ) / MUM ) ) )", "obj1": 0.3825910931174089, "obj2": 0.5472197643660716}, {"determining": "( Max( Max( Max( Const,CRS ),Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server * MRS ) + ( FirstVNF_Mem_Server - ( Max( FirstVNF_CPU_Server,RRS ) - ( Const - BR ) ) ) ) ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Max( ( Max( MLU,MUM ) * ( DS * DS ) ),( ( RRSe - RRSe ) + ( RCSe / RMSe ) ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Max( MUR,MUM ) ) ) )", "obj1": 0.597165991902834, "obj2": 0.3632796130539339}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ( Min( ( MRS / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,DDR ) ) / PN ) ) - PN ) ) / PN ) * ( ARS * Max( Const,MRS ) ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( RCSe / ( RCSe - RCSe ) ) ,( ( DS + CS ) + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,Min( DS ,( ( ( ( MUC / MLU ) + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.2125506072874494, "obj2": 0.7233492523452775}, {"determining": "( ( ( ARS * ( ( ( ARS * ARS ) - MDR ) * FirstVNF_Mem ) ) - MDR ) * FirstVNF_Mem )", "choosing": "( ( ( RMSe / ( ( MLU + RCSe ) - ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) + ( ( RCSe * DS ) + ( ( MUR * ( RMSe / RRSe ) ) / RRSe ) ) ) - ( RMSe / MUR ) )", "obj1": 0.5182186234817814, "obj2": 0.4085686023222124}, {"determining": "( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Max( ( CRS + Const ),( FirstVNF_Mem + FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe + ( MUC / RMSe ) ) ,( ( MLU + Max( DS,( Min( ( MUM / MUC ) ,Min( DS ,CS ) ) * MUC ) ) ) - ( Max( MLU,RMSe ) * CS ) ) )", "obj1": 0.4311740890688259, "obj2": 0.4936745144212278}, {"determining": "( ( ( DDR * MRS ) + FirstVNF_RAM_Server ) * ( ( ( ( Min( MDR ,( BR - ( RRS * BR ) ) ) / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( ( MUR - RRSe ) - Min( MLU ,RRSe ) ) - ( ( ( MUM / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / ( ( MUR / ( MUC + DS ) ) / MUM ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5170950306495442}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * ACS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( MUM ,MUM ) )", "obj1": 0.6093117408906883, "obj2": 0.3422669564216244}, {"determining": "( ( ( ( CRS + PN ) + ( ACS * ARS ) ) / Min( Min( BR ,FirstVNF_CPU ) ,( Const - DDR ) ) ) + ( ( ACS + ARS ) - ( FirstVNF_RAM_Server + CRS ) ) )", "choosing": "( ( ( CS - RRSe ) + RRSe ) * ( MUR - ( MUM * CS ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5595531019102157}, {"determining": "( Min( Max( BR,FirstVNF_CPU_Server ) ,( FirstVNF_CPU_Server - Const ) ) - ( Min( FirstVNF_CPU ,ARS ) * MDR ) )", "choosing": "( Min( DS ,MUR ) / ( Max( ( RCSe - RCSe ),( MUM - Min( DS ,MUM ) ) ) + RRSe ) )", "obj1": 0.5040485829959515, "obj2": 0.41985965770296485}, {"determining": "Min( ( ( ( PN - ( ( ( FirstVNF_RAM + DDR ) / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_RAM + DDR ) - ( ACS / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) / ( ( ACS + Max( FirstVNF_CPU,FirstVNF_Mem ) ) + FirstVNF_CPU ) ) ) ) - FirstVNF_CPU ) )", "choosing": "Max( Min( MLU ,Max( ( ( MUC / RCSe ) * MUC ),MUM ) ),Min( ( MUC * Max( Max( CS,DS ),MLU ) ) ,( ( Min( ( MLU + ( ( RMSe / RRSe ) * RCSe ) ) ,( DS * CS ) ) / Min( ( MLU / Max( Max( RRSe,DS ),( MUR + DS ) ) ) ,CS ) ) + RRSe ) ) )", "obj1": 0.8927125506072875, "obj2": 0.07300379522965829}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( RRS * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * ( RMSe * Max( ( RMSe * DS ),Max( RMSe,MUR ) ) ) ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.1882591093117409, "obj2": 0.7335613765042777}, {"determining": "( ( Const - Min( Min( Const ,BR ) ,( ACS / CRS ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( ( Min( ( Max( MUM,Max( RMSe,Max( MUM,CS ) ) ) * Max( DS,MUR ) ) ,RCSe ) / RRSe ) / ( DS - MUR ) )", "obj1": 0.15587044534412955, "obj2": 0.8135862373625757}, {"determining": "( ( Min( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( Min( RMSe ,MUR ) + MUR ) / DS ) * DS ) ,DS ) ,Max( ( MUR / Min( RMSe ,MUR ) ),MUM ) ) )", "obj1": 0.7510121457489879, "obj2": 0.10666732272628414}, {"determining": "( Min( Min( ( CRS + PN ) ,ARS ) ,( FirstVNF_CPU_Server / CRS ) ) + ( RRS + Min( ( CRS * RRS ) ,( FirstVNF_Mem_Server / Min( ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Min( RRSe ,( ( DS / ( RMSe - DS ) ) / MUM ) ) * ( ( Max( CS,DS ) + RMSe ) + CS ) ) * ( MUR + Max( Max( Min( RCSe ,Max( Min( CS ,( MUM + CS ) ),( MUM + ( MUR - DS ) ) ) ),CS ),DS ) ) )", "obj1": 0.5668016194331984, "obj2": 0.3855738944138472}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - ( Max( CRS,CRS ) / ( CRS + ( DDR * Min( CRS ,MRS ) ) ) ) ) ) ),Min( ACS ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * Max( RCSe,MUR ) ) / MLU ) ) * ( ( MUM - Min( MUC ,Min( Max( MLU,( ( MUM / RRSe ) + MUR ) ) ,RRSe ) ) ) - RCSe ) )", "obj1": 0.17408906882591094, "obj2": 0.7456590535710982}, {"determining": "( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / ( ( Min( ( ( ACS + FirstVNF_CPU_Server ) + MRS ) ,( ( FirstVNF_CPU / ACS ) - PN ) ) / PN ) * ( Const * FirstVNF_Mem ) ) ) * ( Const * FirstVNF_Mem ) )", "choosing": "( ( Max( Max( ( ( MLU - RMSe ) - RRSe ),Min( ( MUM / ( RCSe - RCSe ) ) ,( MLU + ( MLU / MUM ) ) ) ),MUM ) - CS ) - Min( ( RRSe / MUR ) ,Min( MUC ,RMSe ) ) )", "obj1": 0.242914979757085, "obj2": 0.6896450963671698}, {"determining": "( PN - ( Min( ( DDR * FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - BR ) )", "choosing": "( ( CS / MLU ) + Max( ( ( ( DS - Max( CS,RMSe ) ) + Max( RCSe,( ( ( MUM / MUC ) / RMSe ) + CS ) ) ) / MLU ),MLU ) )", "obj1": 0.9048582995951417, "obj2": 0.05626063829622853}, {"determining": "( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / Max( ( ( ( FirstVNF_CPU_Server / ARS ) - FirstVNF_CPU ) / FirstVNF_CPU ),FirstVNF_CPU ) )", "choosing": "( RMSe / ( ( ( RCSe / Min( ( ( ( RCSe * RCSe ) + Min( MUM ,DS ) ) + DS ) ,Min( MUM ,DS ) ) ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.52834008097166, "obj2": 0.3958712871599117}, {"determining": "Min( ( ( ( AMS / Max( AMS,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( MUM * ( ( ( RCSe * MUM ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.46558704453441296, "obj2": 0.4584550521288419}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.39473684210526316, "obj2": 0.5351327586255152}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,( ARS / FirstVNF_Mem_Server ) ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( DS * MLU ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6417004048582996, "obj2": 0.3027211703237171}, {"determining": "( Max( ARS,( FirstVNF_Mem_Server + Const ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * Min( CRS ,Max( RRS,Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( MUM * ( Max( ( MLU * MLU ),Min( RRSe ,DS ) ) - ( CS + ( MUR + MUC ) ) ) ) - ( ( MUC - MLU ) - DS ) ) / Max( MUC,( MUR + ( Min( Min( RRSe ,RRSe ) ,( Min( MUM ,MLU ) / MUM ) ) - ( Min( ( ( MUR + CS ) + DS ) ,DS ) - MUM ) ) ) ) )", "obj1": 0.2651821862348178, "obj2": 0.6680575199102035}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Max( MUC,MUM ) - CS ) - Max( MLU,( DS + ( CS * CS ) ) ) )", "obj1": 0.6174089068825911, "obj2": 0.3371303470365372}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + BR ) * ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) ,( FirstVNF_CPU_Server / AMS ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - CS ) - Min( Min( ( ( ( RCSe - ( ( MUC - RCSe ) + Min( DS ,MUM ) ) ) / DS ) * DS ) ,DS ) ,Max( ( MUR / MUR ),MUM ) ) )", "obj1": 0.19838056680161945, "obj2": 0.7258020159336793}, {"determining": "( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( DDR / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) - RMSe ) ) + RMSe ),Max( ( DS * DS ),Max( ( Max( MUC,MUR ) + Max( ( Max( MUC,MUR ) + MUC ),RCSe ) ),RCSe ) ) ) )", "obj1": 0.2550607287449393, "obj2": 0.6760176958133616}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.2874493927125506, "obj2": 0.6403307378307153}, {"determining": "( ( RRS - ( ( FirstVNF_Mem_Server * ( ( BR * ( ( AMS / FirstVNF_Mem ) + ( Const * FirstVNF_RAM ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ) / ( Max( MRS,Const ) * ( ( RRS - Max( CRS,FirstVNF_Mem_Server ) ) / DDR ) ) )", "choosing": "( RMSe / ( ( ( ( RRSe - RRSe ) - RCSe ) + ( RRSe / MUR ) ) + RRSe ) )", "obj1": 0.9149797570850202, "obj2": 0.05541093489495739}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * RRS ) ,FirstVNF_CPU_Server ) ) / ( BR * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( CS - MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6234817813765182, "obj2": 0.32191318662301693}, {"determining": "Min( ( Const * CRS ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27530364372469635, "obj2": 0.6503642749527614}, {"determining": "Min( ( AMS * ( Min( DDR ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) * MDR ) ) ,Min( ( FirstVNF_Mem + DDR ) ,AMS ) )", "choosing": "Max( ( ( MLU - RMSe ) - RRSe ),Min( Min( RMSe ,MUR ) ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.7773279352226721, "obj2": 0.10153613403436344}, {"determining": "( PN - ( ( Min( ( BR + ACS ) ,MRS ) * MDR ) * Max( Max( AMS,Max( AMS,FirstVNF_Mem_Server ) ),PN ) ) )", "choosing": "( ( Max( ( ( MLU + ( ( Max( RMSe,RRSe ) / ( MUR * RRSe ) ) - Max( MUM,RRSe ) ) ) + MUC ),( CS / ( MUR * Max( ( MLU - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.12753036437246965, "obj2": 0.8300345544819694}, {"determining": "( ( FirstVNF_RAM / MDR ) - ( ( Min( ( ( ARS - ARS ) + ( MDR + Max( DDR,ARS ) ) ) ,MRS ) * MDR ) * Max( Max( Max( Max( Const,AMS ),RRS ),FirstVNF_CPU_Server ),PN ) ) )", "choosing": "( ( RMSe + ( RRSe - Max( RRSe,Min( ( RRSe + ( Max( CS,MUM ) - RRSe ) ) ,MUR ) ) ) ) + ( Max( ( CS + RRSe ),MUM ) - ( Max( MUM,( ( CS + RRSe ) * DS ) ) + DS ) ) )", "obj1": 0.1417004048582996, "obj2": 0.828295596347148}, {"determining": "( ( Min( ( ( Max( Const,CRS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * Min( FirstVNF_RAM ,FirstVNF_CPU ) ) ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) * FirstVNF_CPU )", "choosing": "( ( Max( MLU,MUM ) - ( Max( ( CS / MUR ),( Max( MUR,CS ) - ( MUM / DS ) ) ) * ( ( ( RCSe * Max( Max( RRSe,RMSe ),CS ) ) - Min( ( RRSe + MUM ) ,Min( MLU ,MUR ) ) ) / CS ) ) ) - Min( Min( DS ,DS ) ,Max( ( MUR / ( ( MUC + MUM ) * MUC ) ),MUM ) ) )", "obj1": 0.7368421052631579, "obj2": 0.11824155883851906}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ACS + RRS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + MUM ) ) + ( RRSe - MUC ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6578947368421053, "obj2": 0.2728871611053418}, {"determining": "( ( Min( FirstVNF_CPU ,ACS ) * MDR ) / Min( ( ( BR - MRS ) * ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) ) ,Min( ( RRS + DDR ) ,Min( CRS ,RRS ) ) ) )", "choosing": "( ( ( ( MUM * MUC ) * ( RCSe - MUC ) ) / Min( Max( MUM,CS ) ,( CS + RMSe ) ) ) / ( ( ( MUR * MLU ) + Min( RCSe ,CS ) ) - ( ( CS * MLU ) - Min( ( RCSe * RMSe ) ,MUM ) ) ) )", "obj1": 0.5850202429149798, "obj2": 0.3686337951213259}, {"determining": "( ( Min( ( MRS / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( CRS - ( CRS - MDR ) ) )", "choosing": "( ( Max( MLU,MUM ) - CS ) - ( ( Min( MUM ,( Max( MUR,Max( MUM,CS ) ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7874493927125507, "obj2": 0.09237530407953709}, {"determining": "( ( Min( ( ( Max( Const,ACS ) + ( PN * ( ( FirstVNF_Mem_Server + MDR ) * ( Const * FirstVNF_Mem_Server ) ) ) ) + MRS ) ,( ARS - PN ) ) / PN ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,( ( FirstVNF_CPU / ( PN - MDR ) ) - PN ) ) / PN ) )", "choosing": "( ( Max( MLU,Max( CS,RMSe ) ) - CS ) - ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) )", "obj1": 0.7651821862348178, "obj2": 0.10303276941152704}, {"determining": "( ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32388663967611336, "obj2": 0.6108478497255699}, {"determining": "( ( Min( ( MRS / ( ( FirstVNF_RAM_Server + MRS ) + Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_RAM_Server - PN ) ) ) ) ,( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( FirstVNF_RAM - PN ) )", "choosing": "( ( ( Min( MUC ,RRSe ) / RCSe ) / MUC ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7935222672064778, "obj2": 0.0864550454087209}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) * ARS ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( Max( MLU,( DS + ( CS * CS ) ) ) + ( RMSe / Min( RRSe ,DS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6497975708502024, "obj2": 0.2906629597215083}, {"determining": "( PN - ( Max( ACS,Min( DDR ,FirstVNF_Mem ) ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) / Min( RCSe ,MLU ) ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.145748987854251, "obj2": 0.8163913068408989}, {"determining": "( ( ( PN + FirstVNF_Mem ) + ( ( BR * ( RRS + ACS ) ) / ARS ) ) * ( FirstVNF_CPU / ( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) ) ) )", "choosing": "Max( ( CS - ( RMSe * Max( ( CS / RMSe ),( RMSe + DS ) ) ) ),Min( DS ,DS ) )", "obj1": 0.5425101214574899, "obj2": 0.3901745689616095}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / PN ) * ( MDR / ( ( ARS * Min( FirstVNF_CPU ,( ARS * Min( FirstVNF_CPU ,Min( Const ,FirstVNF_RAM ) ) ) ) ) - Max( FirstVNF_CPU,FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( Min( MUM ,MUM ) ,( Max( MUC,( Max( RCSe,Min( MUR ,MUR ) ) - ( MUM - MUR ) ) ) - CS ) ) + Max( ( RRSe - RRSe ),RMSe ) ) - ( RMSe / MUR ) )", "obj1": 0.9635627530364372, "obj2": 0.022344176015315503}, {"determining": "Min( ( FirstVNF_CPU * BR ) ,Max( FirstVNF_CPU_Server,Const ) )", "choosing": "Min( ( MUC / RCSe ) ,Min( MUM ,DS ) )", "obj1": 0.4979757085020243, "obj2": 0.43311903233574783}, {"determining": "Min( ( ( ARS - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / ( ( ( PN + FirstVNF_Mem ) + ( AMS / ARS ) ) * ( FirstVNF_CPU / FirstVNF_Mem ) ) ) )", "choosing": "Max( Min( MUC ,( Max( ( ( DS * MUM ) + RMSe ),( ( RRSe + DS ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.27125506072874495, "obj2": 0.6573369928485846}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * Min( PN ,FirstVNF_CPU ) ) ,Max( ( ACS + MDR ),Max( Max( RRS,FirstVNF_Mem_Server ),( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,( MUR * RCSe ) ) ) ) / ( RCSe / DS ) )", "obj1": 0.45546558704453444, "obj2": 0.46776713488819777}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - DDR ) ,PN ) / FirstVNF_RAM ) - DDR ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * ( MLU * RRSe ) ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * ( RMSe + RCSe ) )", "obj1": 0.9696356275303644, "obj2": 0.010211136998772328}, {"determining": "( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) * ( FirstVNF_RAM - PN ) )", "choosing": "( ( ( ( MLU / ( MUR / RCSe ) ) / ( DS / ( ( RRSe - ( RRSe * RCSe ) ) + Max( DS,RCSe ) ) ) ) - RCSe ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.7267206477732794, "obj2": 0.12736850855057386}, {"determining": "( PN - ( ( CRS + RRS ) - Min( ARS ,Min( ARS ,CRS ) ) ) )", "choosing": "( ( Max( Max( CS,( DS + ( MUR * ( RRSe - CS ) ) ) ),( CS / ( MUR * Max( ( Max( CS,MUC ) - RRSe ),RRSe ) ) ) ) / RRSe ) + Max( ( ( ( ( ( MLU + MLU ) + MLU ) + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11740890688259109, "obj2": 0.8369740994179948}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( ARS * Const ) ,FirstVNF_CPU_Server ) ) / ( ( RRS + FirstVNF_Mem ) + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) ) - ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Max( ( Min( RCSe ,MUM ) * MUC ),Min( RCSe ,MUM ) ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6558704453441295, "obj2": 0.2876824432465449}, {"determining": "( RRS * ( CRS - MDR ) )", "choosing": "( ( MUR / CS ) - Min( MUC ,( ( ( CS * MUR ) - ( ( ( ( RCSe - CS ) / CS ) + Min( Max( RMSe,MUR ) ,DS ) ) + ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) ) ) + ( RMSe / RRSe ) ) ) )", "obj1": 0.24898785425101214, "obj2": 0.6860678527282221}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( ( ( ( PN * ARS ) * ( PN - FirstVNF_CPU_Server ) ) - ARS ) * AMS ),( Const + ( ( ( FirstVNF_Mem / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + ( RRSe - ( Max( MLU,MUM ) - CS ) ) ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.631578947368421, "obj2": 0.30740701989857244}, {"determining": "( ( ACS - ( Max( ( BR + ( BR * ( ( PN * ARS ) + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) - ( RRS * CRS ) )", "choosing": "( ( Min( ( MLU / ( ( ( ( MUR - MUR ) + CS ) / DS ) / RMSe ) ) ,RCSe ) / MLU ) + ( MUM / MUM ) )", "obj1": 0.48380566801619435, "obj2": 0.4429633313591787}, {"determining": "( Max( ACS,( BR / MDR ) ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( CRS * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( RMSe * Max( ( MUR / RMSe ),( RMSe + DS ) ) ) - RMSe ) ) + RMSe ),Max( ( DS * DS ),Max( ( Max( MUC,MUR ) + MUC ),RCSe ) ) ) )", "obj1": 0.31983805668016196, "obj2": 0.6191794382825064}, {"determining": "( ( DDR / PN ) * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Min( MUM ,RCSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.32793522267206476, "obj2": 0.5972734999228078}, {"determining": "( Min( MDR ,( ( FirstVNF_Mem_Server * ( ( BR * ( ARS / ( CRS / BR ) ) ) - MDR ) ) - FirstVNF_Mem_Server ) ) * ( PN - BR ) )", "choosing": "( Max( ( Max( CS,MUM ) + Min( DS ,Min( MUM ,( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ),CS ) * DS )", "obj1": 0.9878542510121457, "obj2": 0.004847019585782782}, {"determining": "( Min( MDR ,MRS ) * ( ACS - ( Max( ( BR + ( BR * ( ARS + Const ) ) ),MDR ) - ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( MLU + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * MLU )", "obj1": 0.4534412955465587, "obj2": 0.47363707179335535}, {"determining": "( Min( DDR ,( DDR * ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) ) - ( Min( Min( ( ( ( ( PN * ARS ) * ( FirstVNF_CPU + RRS ) ) - ARS ) + MRS ) ,( FirstVNF_RAM_Server - PN ) ) ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( ( RCSe / ( ( DS - DS ) - ( MUM + MUM ) ) ) / ( MUR * ( Min( CS ,DS ) * Min( RMSe ,( MLU * RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.4493927125506073, "obj2": 0.4859125142147248}, {"determining": "Min( ( Const * ( Max( FirstVNF_CPU_Server,Min( CRS ,FirstVNF_RAM ) ) * ( ( FirstVNF_RAM - DDR ) * DDR ) ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + RRSe ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + DS ) / ( MUM + CS ) ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.402834008097166, "obj2": 0.5320835153174706}, {"determining": "( ( Min( ( MRS / ( ( FirstVNF_RAM_Server + MRS ) + Max( Max( RRS,FirstVNF_Mem_Server ),PN ) ) ) ,( DDR * FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM - PN ) )", "choosing": "( ( ( ( MLU / ( MUR / MUR ) ) / ( DS / ( ( RRSe - ( Min( MUR ,MUC ) * RCSe ) ) + Max( DS,RCSe ) ) ) ) - RCSe ) - ( ( Min( MUM ,( ( ( MUM + MUR ) + DS ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.08299595141700405, "obj2": 0.8816494976320126}, {"determining": "( Min( MDR ,( ( DDR + ( Max( ( Min( RRS ,RRS ) + MDR ),CRS ) / BR ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + RMSe ) ) ),MUM ) + Min( ( MUC + ( CS + RMSe ) ) ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.49190283400809715, "obj2": 0.43578191499266944}, {"determining": "Min( ( ( ( AMS / Max( ( CRS + PN ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) ) - DDR ) * ( FirstVNF_RAM_Server + RRS ) ) ,( FirstVNF_CPU_Server / FirstVNF_CPU ) )", "choosing": "Max( Min( MUC ,( Max( ( ( Min( MLU ,( MUC + MUC ) ) / RMSe ) + RMSe ),( ( ( MUR - MLU ) + ( MUC - MLU ) ) / CS ) ) + ( DS + MUC ) ) ),( MLU + ( MLU / CS ) ) )", "obj1": 0.4757085020242915, "obj2": 0.45248551537757675}, {"determining": "( ( ( ( ( ( AMS / ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( PN * FirstVNF_CPU ) ) ) ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * FirstVNF_RAM_Server ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / ( ( MUR / ( MUR / ( MUC + DS ) ) ) / MUM ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3643724696356275, "obj2": 0.574726125295311}, {"determining": "( Min( DDR ,MDR ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( RMSe / ( MUR * ( Min( CS ,DS ) * ( ( RMSe / ( MUR * RRSe ) ) + Max( ( RCSe * ( MUR * MUR ) ),RMSe ) ) ) ) ) * ( MUR / CS ) )", "obj1": 0.10323886639676114, "obj2": 0.8525820844252863}, {"determining": "( ( FirstVNF_Mem_Server * ( ( BR * ( MDR / ( CRS / BR ) ) ) - MDR ) ) / ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) )", "choosing": "Min( ( RMSe * Max( RMSe,RCSe ) ) ,( ( ( MLU * MUC ) + Max( RRSe,RMSe ) ) * Max( ( MUR + MUM ),Min( DS ,( MLU / ( Max( MUR,MUR ) / Max( Min( MUC ,DS ),MLU ) ) ) ) ) ) )", "obj1": 0.9777327935222672, "obj2": 0.009443852770244981}, {"determining": "( ( ( ( ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) / AMS ) + Max( PN,BR ) ) - Min( DDR ,FirstVNF_Mem ) ) - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + Max( FirstVNF_RAM,( ARS * DDR ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) + Max( ( CS / MLU ),MLU ) )", "obj1": 0.09109311740890688, "obj2": 0.8632031473086894}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( ( BR + Const ) * FirstVNF_CPU ) ),( DDR + BR ) )", "choosing": "( ( RRSe - CS ) * ( RRSe - CS ) )", "obj1": 0.3117408906882591, "obj2": 0.623833610853556}, {"determining": "( PN - ( ( FirstVNF_CPU - FirstVNF_CPU ) * Max( Max( AMS,Max( AMS,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ),PN ) ) )", "choosing": "( ( RMSe + ( ( MUR * MUC ) / Max( MUM,( MLU - RRSe ) ) ) ) + ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ) )", "obj1": 0.09716599190283401, "obj2": 0.8577096353421523}, {"determining": "Min( ( ( ( PN - ( ( ARS / ( PN * MDR ) ) * MRS ) ) - Min( FirstVNF_RAM ,CRS ) ) / FirstVNF_CPU ) ,( Max( ( FirstVNF_RAM * AMS ),( Const + ( ( ( ARS / MDR ) - Min( ( PN * Const ) ,FirstVNF_CPU_Server ) ) / ( ( Max( Const,ACS ) + ( PN * MRS ) ) * Max( ( FirstVNF_Mem_Server * ACS ),RRS ) ) ) ) ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MLU ,Max( ( MLU * ( RMSe + RMSe ) ),MUC ) ),Min( ( MUC + MLU ) ,MUM ) )", "obj1": 0.6275303643724697, "obj2": 0.3142127541660967}, {"determining": "( ( Min( ( ( ACS + RRS ) - AMS ) ,( FirstVNF_RAM_Server - PN ) ) / PN ) * ( CRS - MDR ) )", "choosing": "( ( Min( MUC ,( CS - MUM ) ) - CS ) - Min( MUC ,( CS - MUM ) ) )", "obj1": 0.2935222672064777, "obj2": 0.6345729606589617}, {"determining": "( ( Min( ( MRS / ( ( FirstVNF_RAM_Server + MRS ) + Max( Max( RRS,FirstVNF_Mem_Server ),PN ) ) ) ,( ( ( ( ( FirstVNF_Mem_Server + RRS ) / ( PN - MDR ) ) + RRS ) / ( PN - MDR ) ) - PN ) ) / PN ) * ( FirstVNF_RAM - PN ) )", "choosing": "( ( ( ( MLU / ( MUR / MUR ) ) / ( DS / ( ( RRSe - ( RRSe * RCSe ) ) + Max( DS,RCSe ) ) ) ) - RCSe ) - ( ( Min( MUM ,( Max( MUM,( RRSe * ( DS / DS ) ) ) / MUM ) ) + ( ( Max( MUM,( RRSe * ( DS / DS ) ) ) * MUM ) / RCSe ) ) * ( CS + MLU ) ) )", "obj1": 0.08906882591093117, "obj2": 0.8728771810801417}, {"determining": "( ( DDR / PN ) * ( FirstVNF_CPU / FirstVNF_Mem ) )", "choosing": "( ( MUR - CS ) - ( MUR / MUM ) )", "obj1": 0.3582995951417004, "obj2": 0.5796321398549555}, {"determining": "( FirstVNF_Mem * ( ( ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( FirstVNF_RAM_Server / ( DDR / ( ( DDR / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( ( MUR - CS ) - ( ( ( MUR / Min( RRSe ,RCSe ) ) / MUM ) / MUM ) ) - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / Max( MLU,RMSe ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.3481781376518219, "obj2": 0.5846837048821759}, {"determining": "( Min( MDR ,( ( DDR + ( ( FirstVNF_Mem * CRS ) / MRS ) ) - FirstVNF_Mem_Server ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUC + ( CS + Min( MUM ,MUM ) ) ) ),MUM ) + Min( DS ,Min( ( RMSe * Max( RMSe,RCSe ) ) ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5708502024291497, "obj2": 0.3688693572451866}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( ( ( FirstVNF_CPU * AMS ) + FirstVNF_RAM_Server ) * ( ( MRS + Max( MDR,FirstVNF_CPU ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS * MLU ) * Min( Min( CS ,MUR ) ,MUM ) )", "obj1": 0.5688259109311741, "obj2": 0.37365849767640374}, {"determining": "( ( Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) / Min( ACS ,DDR ) ) / Max( Max( DDR,DDR ),Max( FirstVNF_Mem,Min( ( BR * FirstVNF_RAM ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RRSe + MUC ) - ( RCSe + DS ) ) - DS ) / ( RCSe / MUR ) )", "obj1": 0.11133603238866396, "obj2": 0.8482542822219847}, {"determining": "( Min( DDR ,( DDR * ( ( ARS / FirstVNF_Mem_Server ) * Min( RRS ,BR ) ) ) ) - ( Min( PN ,ACS ) * ( RRS * MRS ) ) )", "choosing": "( ( DS * MLU ) * ( MUR / CS ) )", "obj1": 0.3340080971659919, "obj2": 0.5959800349561215}, {"determining": "Min( ( Min( FirstVNF_Mem ,ACS ) + ( ARS - ( ( ( MDR + ( FirstVNF_RAM + MDR ) ) + FirstVNF_RAM ) * Min( AMS ,DDR ) ) ) ) ,Min( ( Max( ARS,( ( FirstVNF_Mem_Server + MRS ) * FirstVNF_Mem ) ) + ACS ) ,AMS ) )", "choosing": "Max( Min( RCSe ,( ( MUM * MUC ) * Min( RMSe ,MUR ) ) ),Min( RMSe ,( MLU + ( Min( ( Min( RMSe ,MUR ) + MUR ) ,RMSe ) + ( ( ( MUM + MUR ) + DS ) / MUM ) ) ) ) )", "obj1": 0.41295546558704455, "obj2": 0.5223816455534542}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( Min( Max( FirstVNF_CPU,AMS ) ,AMS ) / ( DDR / PN ) ) ) )", "choosing": "( ( MUR - CS ) - ( ( ( Max( MLU,RMSe ) / Min( RMSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.4068825910931174, "obj2": 0.5229731908997117}, {"determining": "( Min( MDR ,Max( ( Min( RRS ,RRS ) + MDR ),CRS ) ) * Max( ( Min( RRS ,RRS ) + MDR ),CRS ) )", "choosing": "( Max( ( Max( Min( MUC ,( MUM + ( CS + RMSe ) ) ),MUM ) + Min( DS ,Min( MUM ,RMSe ) ) ),CS ) * DS )", "obj1": 0.5404858299595142, "obj2": 0.3948689423843091}, {"determining": "( ( DDR / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * ( FirstVNF_RAM_Server / FirstVNF_Mem ) ) / PN ) * ( ( ( ( ( AMS / FirstVNF_RAM ) / PN ) * Max( Const,MRS ) ) / PN ) / ( DDR / AMS ) ) ) )", "choosing": "( ( MUR - ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MLU + RMSe ) ) / MUM ) / MUM ) ) ) ) - ( ( ( Max( MLU,RMSe ) / Min( RRSe ,RCSe ) ) / ( ( MUR - CS ) - ( ( ( MUR / ( MUC + DS ) ) / MUM ) / MUM ) ) ) / MUM ) )", "obj1": 0.33805668016194335, "obj2": 0.5873045542727777}, {"determining": "( Max( ( MDR * RRS ),PN ) + ( ( FirstVNF_RAM - Min( Max( Max( FirstVNF_Mem_Server,FirstVNF_CPU ),( ( PN / Const ) * FirstVNF_CPU ) ) ,( FirstVNF_CPU * RRS ) ) ) / MRS ) )", "choosing": "Min( ( MLU - ( RMSe / RMSe ) ) ,( ( RRSe - RRSe ) - CS ) )", "obj1": 0.2975708502024291, "obj2": 0.6278266831095276}, {"determining": "( ( ARS / Max( Min( MDR ,AMS ),FirstVNF_RAM ) ) * ( Min( ( ( Max( Const,ACS ) + ( FirstVNF_CPU_Server * FirstVNF_RAM ) ) + MRS ) ,Max( FirstVNF_RAM,FirstVNF_Mem ) ) / ( ( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * DDR ) / PN ) * ( FirstVNF_RAM * MDR ) ) ) )", "choosing": "( ( ( RMSe * MUC ) - CS ) - Max( ( ( CS - ( ( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) - RMSe ) ) + RMSe ),( CS + ( Max( MUM,RMSe ) / ( RMSe / MUC ) ) ) ) )", "obj1": 0.3016194331983806, "obj2": 0.6242594778363907}, {"determining": "Max( ( ( DDR / FirstVNF_RAM ) - ( Max( ( ( ARS + ( Max( FirstVNF_RAM,PN ) * FirstVNF_CPU_Server ) ) - BR ),DDR ) + Max( Min( FirstVNF_RAM ,FirstVNF_RAM ),( BR / FirstVNF_Mem ) ) ) ),Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / FirstVNF_RAM ) - PN ) ,PN ) )", "choosing": "( ( RRSe - ( ( Max( ( MLU * RRSe ),Max( MUR,( Min( RCSe ,RMSe ) - MUC ) ) ) - ( Max( MUM,DS ) / ( ( Min( MLU ,MLU ) * MUM ) - Min( Min( DS ,MUM ) ,( MUR / RCSe ) ) ) ) ) + CS ) ) * Min( DS ,MUM ) )", "obj1": 0.4433198380566802, "obj2": 0.4914199498700289}, {"determining": "Min( ( DDR / FirstVNF_CPU_Server ) ,( Max( FirstVNF_CPU,Min( ( ACS * ( Max( MRS,Const ) * ( Max( FirstVNF_Mem_Server,AMS ) / DDR ) ) ) ,DDR ) ) * Min( RRS ,MRS ) ) )", "choosing": "( ( MUM - Min( MUC ,Min( DS ,MUM ) ) ) / ( ( ( ( RCSe / MLU ) + ( RRSe / MUR ) ) + RRSe ) / DS ) )", "obj1": 0.4777327935222672, "obj2": 0.44695016991839354}, {"determining": "( PN - ( Max( ACS,CRS ) * ( ( ACS - ( ( Const - Min( AMS ,FirstVNF_RAM_Server ) ) + ( MRS + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) ) - Max( ( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),FirstVNF_CPU ) / MDR ),( RRS + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( CS / Min( RCSe ,MLU ) ) + Max( ( ( ( MLU + DS ) / DS ) / ( CS / MLU ) ),MLU ) )", "obj1": 0.11538461538461539, "obj2": 0.8444453392911356}, {"determining": "Max( Min( CRS ,Min( ARS ,( Min( ( AMS - MRS ) ,BR ) - PN ) ) ),Min( ( Min( ( AMS - MRS ) ,BR ) - PN ) ,( ACS / DDR ) ) )", "choosing": "( ( MLU * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * DS ) / MLU ) ) * ( ( ( Min( RCSe ,( Min( MUR ,MLU ) + MLU ) ) + RRSe ) * DS ) - RCSe ) )", "obj1": 0.9959514170040485, "obj2": 0.003048214270275791}]}