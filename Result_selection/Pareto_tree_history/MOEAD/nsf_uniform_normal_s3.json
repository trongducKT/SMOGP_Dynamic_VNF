{"1": [{"determining": "( Max( CRS,MDR ) * ( AMS * DDR ) )", "choosing": "Min( Max( RCSe,CS ) ,Max( CS,RCSe ) )", "obj1": 0.2676348547717842, "obj2": 0.7295607756562682}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * DDR ) / ( DDR - MDR ) )", "choosing": "Max( ( Max( Max( DS,Max( MUC,RMSe ) ),CS ) / ( MUC - Max( MUM,MUR ) ) ),Max( MUC,MUC ) )", "obj1": 0.35892116182572614, "obj2": 0.5618731647044455}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / RCSe ) / ( RRSe * RMSe ) )", "obj1": 0.14315352697095435, "obj2": 0.7409754336988326}, {"determining": "Min( Min( PN ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) )", "choosing": "Min( ( RMSe + RRSe ) ,( CS * MLU ) )", "obj1": 0.23443983402489627, "obj2": 0.7578923923951556}, {"determining": "( ( FirstVNF_Mem / MRS ) / Max( BR,FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe + DS ) / Max( RMSe,RRSe ) )", "obj1": 0.36099585062240663, "obj2": 0.5983823858430823}, {"determining": "( ( BR * DDR ) - ( FirstVNF_CPU_Server * RRS ) )", "choosing": "Max( Min( MUC ,MUC ),Min( DS ,MUR ) )", "obj1": 0.25103734439834025, "obj2": 0.6468460232468639}, {"determining": "( Min( FirstVNF_CPU_Server ,DDR ) * ( ACS + FirstVNF_Mem ) )", "choosing": "Max( ( MUM - MUR ),( DS / MUM ) )", "obj1": 0.31950207468879666, "obj2": 0.6417585000671606}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - Min( BR ,( ( MRS * FirstVNF_RAM_Server ) + FirstVNF_RAM ) ) ) * FirstVNF_CPU ) + ( ARS + FirstVNF_Mem_Server ) )", "choosing": "( Min( RMSe ,( MUR - Max( Min( ( MUR - MUC ) ,RMSe ),( DS / ( MUM * MUM ) ) ) ) ) * ( RRSe + RMSe ) )", "obj1": 0.36099585062240663, "obj2": 0.603534219119154}, {"determining": "Max( ( PN / BR ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS * RRSe ),( MUC * MUR ) )", "obj1": 0.34232365145228216, "obj2": 0.60793136223564}, {"determining": "( ( MDR / FirstVNF_Mem ) * ( ACS / ( PN * BR ) ) )", "choosing": "( ( MUM * ( MUM / Min( ( RCSe * ( Max( Max( MUC,MLU ),RRSe ) * ( MUC / Min( MUC ,CS ) ) ) ) ,MUM ) ) ) * ( RRSe - RCSe ) )", "obj1": 0.24066390041493776, "obj2": 0.7266962438475935}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( MUM / RCSe ) + Min( MUC ,MUM ) )", "obj1": 0.2800829875518672, "obj2": 0.7032107783543381}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / RRS ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) - Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( CS / MUM ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.37344398340248963, "obj2": 0.6079139748705743}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( Max( MUC,CS ) ,Max( MLU,RRSe ) )", "obj1": 0.29045643153526973, "obj2": 0.6695349879865513}, {"determining": "( ( MDR / MDR ) - ( Const + MRS ) )", "choosing": "Min( Min( MUR ,MUC ) ,Min( CS ,MLU ) )", "obj1": 0.34439834024896265, "obj2": 0.62452073238864}, {"determining": "Max( ( Max( Min( Min( ACS ,Const ) ,Min( ( ( FirstVNF_RAM / MRS ) + FirstVNF_CPU ) ,MDR ) ),( Max( FirstVNF_CPU,RRS ) - Const ) ) * MRS ),( ( CRS + MDR ) + BR ) )", "choosing": "( ( ( ( ( Max( CS,Max( ( MLU * DS ),( MUC / RMSe ) ) ) - MUC ) - RCSe ) * ( CS + ( ( CS * RCSe ) / ( ( ( DS / RMSe ) / MUC ) / ( ( RRSe / DS ) + MUM ) ) ) ) ) / MLU ) - ( RMSe - Max( ( MUR / ( RMSe / ( RCSe - MUM ) ) ),RMSe ) ) )", "obj1": 0.27385892116182575, "obj2": 0.7217479474102036}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.1078838174273859, "obj2": 0.7940858839374361}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( MUC / MUR ) ,( RCSe / MUC ) )", "obj1": 0.22614107883817428, "obj2": 0.662164405107054}, {"determining": "Max( ( Const - FirstVNF_RAM_Server ),Min( ARS ,ARS ) )", "choosing": "Max( ( MUM + DS ),( RMSe * RCSe ) )", "obj1": 0.4107883817427386, "obj2": 0.5663521556013904}, {"determining": "( ( ARS + FirstVNF_RAM ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( CS,RMSe ) )", "obj1": 0.25311203319502074, "obj2": 0.7314284866705073}, {"determining": "Min( ( FirstVNF_Mem * FirstVNF_RAM ) ,( FirstVNF_RAM / RRS ) )", "choosing": "( ( RCSe + RCSe ) * ( MUC / RRSe ) )", "obj1": 0.34854771784232363, "obj2": 0.6009356070571308}, {"determining": "Max( Min( Const ,Const ),( FirstVNF_CPU / MDR ) )", "choosing": "Max( ( CS * RRSe ),( RCSe / MUR ) )", "obj1": 0.1991701244813278, "obj2": 0.6870340174455584}, {"determining": "Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( ( RCSe - RCSe ) - ( MLU / CS ) )", "obj1": 0.3921161825726141, "obj2": 0.5639556433458476}, {"determining": "( ( FirstVNF_RAM_Server * BR ) * ( CRS - BR ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe - CS ) )", "obj1": 0.7427385892116183, "obj2": 0.23617900464473698}, {"determining": "Max( ( RRS * MRS ),( DDR + ARS ) )", "choosing": "Min( ( CS / RCSe ) ,( MUR * RMSe ) )", "obj1": 0.3132780082987552, "obj2": 0.6246103963357889}, {"determining": "( Max( PN,AMS ) / ( FirstVNF_RAM_Server / FirstVNF_CPU ) )", "choosing": "Min( Min( MUM ,CS ) ,( MUM + MUM ) )", "obj1": 0.2842323651452282, "obj2": 0.669408422413178}, {"determining": "( Min( PN ,PN ) / Min( Const ,ACS ) )", "choosing": "Max( Max( MUC,DS ),( CS * RCSe ) )", "obj1": 0.29045643153526973, "obj2": 0.632502212090749}, {"determining": "( Min( MDR ,ARS ) + ( FirstVNF_Mem_Server + FirstVNF_Mem ) )", "choosing": "( Min( MUC ,RCSe ) + ( RMSe + MUM ) )", "obj1": 0.36099585062240663, "obj2": 0.6012758280766076}, {"determining": "Min( ( FirstVNF_RAM * ACS ) ,( FirstVNF_RAM_Server + BR ) )", "choosing": "Min( ( MLU + MUM ) ,( MUM - RMSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6851836147878912}, {"determining": "( Min( Const ,RRS ) * ( FirstVNF_RAM_Server * FirstVNF_Mem ) )", "choosing": "( ( RMSe - MLU ) / ( MUM - MUR ) )", "obj1": 0.2821576763485477, "obj2": 0.6610226802916797}, {"determining": "Min( ( ARS * FirstVNF_CPU ) ,Max( DDR,MDR ) )", "choosing": "( Min( MUM ,MUM ) + Max( MUC,MLU ) )", "obj1": 0.3215767634854772, "obj2": 0.6295117700641358}, {"determining": "( Min( Max( ACS,ACS ) ,( CRS + DDR ) ) + Max( ARS,( Max( FirstVNF_Mem,AMS ) / ( ARS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( Max( RRSe,MUR ) + ( MUM + CS ) ),( Max( RCSe,MUR ) * ( RRSe / DS ) ) )", "obj1": 0.12448132780082988, "obj2": 0.7685116328815379}, {"determining": "( Min( Const ,ACS ) - ( ( BR + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( ( MUR * RMSe ) - ( RCSe + RRSe ) ) )", "obj1": 0.7033195020746889, "obj2": 0.31086191506940397}, {"determining": "( ( Min( FirstVNF_RAM_Server ,MRS ) + Min( AMS ,RRS ) ) + ( ( ( ACS + FirstVNF_CPU_Server ) / ARS ) + ( Const + PN ) ) )", "choosing": "( ( DS + Max( MUR,CS ) ) - ( ( MUR - MLU ) - Min( MUM ,RRSe ) ) )", "obj1": 0.3278008298755187, "obj2": 0.6245494506141789}, {"determining": "( Min( ARS ,Const ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( MUM ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.26348547717842324, "obj2": 0.6767391024998741}, {"determining": "Max( ( Max( FirstVNF_CPU,ACS ) - Const ),Max( FirstVNF_RAM_Server,( Const * RRS ) ) )", "choosing": "( Min( ( ( Min( MUM ,( MLU - DS ) ) + DS ) / RCSe ) ,( RRSe - MUM ) ) / Min( ( MUR + DS ) ,Max( RMSe,RCSe ) ) )", "obj1": 0.17634854771784234, "obj2": 0.6896906390820716}, {"determining": "Min( ( FirstVNF_RAM * ( FirstVNF_RAM_Server - MDR ) ) ,( FirstVNF_RAM * Min( FirstVNF_CPU_Server ,BR ) ) )", "choosing": "Max( Max( Min( CS ,MUR ),( MUR / RMSe ) ),( ( CS / CS ) * Min( MUM ,MLU ) ) )", "obj1": 0.15975103734439833, "obj2": 0.6993584567677459}, {"determining": "( ( Min( MDR ,MRS ) / ( FirstVNF_Mem * RRS ) ) / ( ( FirstVNF_CPU_Server + FirstVNF_CPU ) / ( RRS / BR ) ) )", "choosing": "( ( ( RRSe + MUR ) * RCSe ) / Max( MUR,DS ) )", "obj1": 0.3049792531120332, "obj2": 0.6294952828567476}, {"determining": "Max( ( ( Const * MDR ) / ( FirstVNF_CPU_Server * ACS ) ),Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU * ACS ),( ( Max( AMS,BR ) + ( CRS - ARS ) ) / RRS ) ) ) )", "choosing": "Max( Min( ( MUM + CS ) ,( CS / MUM ) ),( Max( MUM,MLU ) / CS ) )", "obj1": 0.23858921161825727, "obj2": 0.6133207942208442}, {"determining": "Min( ( Max( ARS,ARS ) - ( AMS - MRS ) ) ,( ( ARS / ARS ) / ( MDR + ARS ) ) )", "choosing": "Max( ( Min( MUC ,RMSe ) * Max( MUM,RCSe ) ),Max( RCSe,MLU ) )", "obj1": 0.7966804979253111, "obj2": 0.18365848732051515}, {"determining": "( Min( ( CRS - DDR ) ,( FirstVNF_Mem + Const ) ) + Max( Max( MDR,FirstVNF_RAM_Server ),( FirstVNF_Mem / Max( ( ( ( MRS / ACS ) * FirstVNF_RAM ) + ACS ),ACS ) ) ) )", "choosing": "( ( ( CS + Min( CS ,RRSe ) ) / MUR ) * ( Max( CS,RCSe ) - ( RCSe / DS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.7690629348193092}, {"determining": "( ( ARS - ARS ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS * RMSe ) + ( MLU + MUR ) ) + ( Max( RMSe,RRSe ) - ( DS * MLU ) ) )", "obj1": 0.24481327800829875, "obj2": 0.6748551214286465}, {"determining": "Min( ( Const * ARS ) ,( FirstVNF_RAM_Server + ( PN * BR ) ) )", "choosing": "( ( ( CS / MLU ) - Max( RMSe,RCSe ) ) / Max( ( MUM + MUC ),( RMSe + CS ) ) )", "obj1": 0.25311203319502074, "obj2": 0.7238721193506318}, {"determining": "( ( Max( RRS,FirstVNF_RAM ) * ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) ) / ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RRSe / ( DS / ( ( ( RMSe + ( MLU - RMSe ) ) * MUC ) + MLU ) ) ) / ( RCSe + MLU ) ) - ( ( MUC - MLU ) + ( MUC * RRSe ) ) )", "obj1": 0.19294605809128632, "obj2": 0.6931045607068717}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * Min( BR ,PN ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU_Server ),FirstVNF_Mem ) )", "choosing": "( Max( CS,Max( RCSe,MUM ) ) * Min( RRSe ,RMSe ) )", "obj1": 0.27593360995850624, "obj2": 0.66827742437085}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * DDR ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.9875518672199171, "obj2": 0.009031157603538}, {"determining": "Max( ( BR + ( ( Min( ARS ,( Max( FirstVNF_RAM,Min( MRS ,Const ) ) * FirstVNF_Mem ) ) * BR ) + ( Const - DDR ) ) ),( FirstVNF_RAM + MRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( Min( ( DS * ( RMSe - MUR ) ) ,RCSe ),MLU ) * ( MUR * Min( ( Max( Max( MUM,CS ),Min( DS ,RMSe ) ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.24481327800829875, "obj2": 0.6188715241193223}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,ACS ) / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * Min( ( RCSe - RRSe ) ,( MLU + RRSe ) ) ) - Min( MLU ,Max( ( MUR + MUR ),RRSe ) ) ) * ( ( ( ( RRSe + RMSe ) - MUM ) / RCSe ) / ( Min( MUR ,RMSe ) - Max( MLU,MLU ) ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6291857714652999}, {"determining": "Max( Min( CRS ,Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ),Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "( Min( ( MUR - DS ) ,( MLU - DS ) ) / ( ( RRSe - RRSe ) - ( RRSe + DS ) ) )", "obj1": 0.2842323651452282, "obj2": 0.6316280552465828}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,FirstVNF_CPU_Server ) * Const ) )", "choosing": "( ( MLU / MUR ) + Max( RRSe,MUM ) )", "obj1": 0.24066390041493776, "obj2": 0.7031982564424291}, {"determining": "Max( ( CRS + FirstVNF_CPU ),Max( ( MDR / ACS ),( FirstVNF_Mem_Server / FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,( RRSe - DS ) ) - ( RCSe - MLU ) )", "obj1": 0.26556016597510373, "obj2": 0.714133696612869}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) * Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( ( ( MUC - DS ) - ( Max( Max( ( Max( MUR,RCSe ) * ( ( MUC + RRSe ) + ( MUM / RRSe ) ) ),( RCSe - MUR ) ),RCSe ) - RRSe ) ) - ( RMSe - MUM ) )", "obj1": 0.18049792531120332, "obj2": 0.71434893970529}, {"determining": "Min( ( CRS / Min( MRS ,( Max( FirstVNF_RAM,Min( Min( BR ,Max( DDR,FirstVNF_RAM_Server ) ) ,Max( ARS,MDR ) ) ) - ACS ) ) ) ,( Const + Max( ARS,Const ) ) )", "choosing": "Min( Min( ( CS * RCSe ) ,( MUC + RCSe ) ) ,( ( RMSe / MUC ) * ( MLU - Max( MLU,RRSe ) ) ) )", "obj1": 0.22821576763485477, "obj2": 0.6615470677225297}, {"determining": "( ( ACS * PN ) - ( Const - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.24066390041493776, "obj2": 0.6937739710303318}, {"determining": "Min( Min( Max( ARS,MRS ) ,( ACS - BR ) ) ,( ( FirstVNF_Mem_Server / CRS ) * Max( AMS,ACS ) ) )", "choosing": "( Max( ( RCSe * CS ),( RMSe - RRSe ) ) * Min( ( CS * MLU ) ,( RMSe + MLU ) ) )", "obj1": 0.29045643153526973, "obj2": 0.6763678370986272}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe + MUC ),( RRSe * MUM ) ) - ( Min( MUM ,MUC ) + ( MLU / MUR ) ) )", "obj1": 0.27800829875518673, "obj2": 0.6644903510908562}, {"determining": "( Max( ( MDR * PN ),Max( ARS,Const ) ) / Max( Min( FirstVNF_Mem_Server ,MDR ),( RRS * CRS ) ) )", "choosing": "( Max( ( RMSe - RMSe ),( RMSe - MUR ) ) / Max( ( MUM * MLU ),( MLU / MUM ) ) )", "obj1": 0.22614107883817428, "obj2": 0.6229033585871175}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Max( Min( ( PN + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Max( MUC,RMSe ) ,MLU ) )", "obj1": 0.3236514522821577, "obj2": 0.6287661447866014}, {"determining": "( ( FirstVNF_CPU / BR ) + ( MDR + Const ) )", "choosing": "( Max( ( DS / CS ),Min( DS ,Max( MUC,MUM ) ) ) * ( Max( RMSe,RRSe ) - ( MUR * MLU ) ) )", "obj1": 0.4045643153526971, "obj2": 0.5476426077933925}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( DDR,FirstVNF_Mem_Server ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + ( PN / DDR ) ) )", "choosing": "( Min( RCSe ,RMSe ) - ( Max( Max( CS,MLU ),( RMSe * ( MUC + MUC ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.6516137290984221}, {"determining": "( ( ARS / ( BR - Max( CRS,Max( AMS,MRS ) ) ) ) * ( CRS + MRS ) )", "choosing": "( ( RMSe - MUR ) + ( DS * Max( ( ( MUC + CS ) - ( MUR / MUM ) ),MLU ) ) )", "obj1": 0.22406639004149378, "obj2": 0.7338930852945802}, {"determining": "Max( Max( Max( ( BR - FirstVNF_Mem_Server ),( DDR * CRS ) ),( Max( BR,FirstVNF_RAM ) * Min( FirstVNF_RAM_Server ,ACS ) ) ),( Min( Min( AMS ,BR ) ,Max( FirstVNF_CPU,AMS ) ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ARS / ACS ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.31742738589211617, "obj2": 0.6275875944294546}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + Max( Max( CS,DS ),( MLU * RRSe ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) / ( FirstVNF_Mem * DDR ) ) * ( Min( FirstVNF_Mem_Server ,AMS ) + ( FirstVNF_Mem_Server / PN ) ) ),( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) - ( FirstVNF_RAM_Server - RRS ) ) + ( ( ACS + DDR ) / ( DDR / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Min( Max( ( RCSe / MUM ),Max( RMSe,RRSe ) ) ,( ( DS / MLU ) * Min( CS ,MUM ) ) ) / ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) )", "obj1": 0.29045643153526973, "obj2": 0.670297643205811}, {"determining": "Max( Min( Max( ( PN - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( BR * RRS ) ) ),Min( ( ( MDR + FirstVNF_RAM ) / ( MDR * ARS ) ) ,Max( ( FirstVNF_RAM_Server * PN ),( RRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.4066390041493776, "obj2": 0.5277153336889702}, {"determining": "( ( ( ( FirstVNF_Mem - RRS ) + ( RRS * FirstVNF_RAM ) ) - Max( ( FirstVNF_Mem + RRS ),( RRS * FirstVNF_CPU_Server ) ) ) + ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) )", "choosing": "Max( Max( ( ( RRSe - MUC ) - Max( CS,RMSe ) ),( ( CS - RMSe ) * ( CS + CS ) ) ),Min( ( ( MUM + CS ) + ( RMSe + RMSe ) ) ,( ( RRSe * MUM ) + Min( MUM ,MUC ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.5503528973943658}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "( ( ( ( MUM + RCSe ) - ( MUC * RCSe ) ) / Max( ( DS / RRSe ),Max( DS,CS ) ) ) / ( ( ( RRSe - MLU ) - ( RMSe + CS ) ) - Max( Max( MLU,MUR ),( RCSe / DS ) ) ) )", "obj1": 0.8796680497925311, "obj2": 0.12248593663048972}, {"determining": "( ( Max( ( DDR * MRS ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) - ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + Min( MDR ,CRS ) ) )", "choosing": "Max( ( ( CS + DS ) / RCSe ),( RRSe - ( Min( RRSe ,MLU ) - Max( Max( RRSe,Max( MUR,RRSe ) ),RRSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.055739486883034164}, {"determining": "( ( PN + DDR ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( ( MUC / MUC ) + ( MUM * Min( ( RCSe - Max( ( MUR + MUR ),Max( DS,CS ) ) ) ,RRSe ) ) )", "obj1": 0.2946058091286307, "obj2": 0.6343518367469}, {"determining": "Min( Min( DDR ,( PN * ( FirstVNF_CPU_Server * DDR ) ) ) ,Min( ARS ,( AMS - FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( MUC * Min( RRSe ,DS ) ) - MLU ),Max( RRSe,( MUC + MUM ) ) )", "obj1": 0.2800829875518672, "obj2": 0.6187511183889487}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6886821784337106}, {"determining": "( ( ( Max( Const,ARS ) + Min( ARS ,BR ) ) / Max( ( AMS * ARS ),( FirstVNF_RAM_Server / MRS ) ) ) - ( ( ( BR / AMS ) / Min( MDR ,ARS ) ) - ( Max( ACS,ACS ) - ( BR - ARS ) ) ) )", "choosing": "Max( ( Max( Max( MUC,CS ),Min( MUC ,RCSe ) ) - DS ),( MUR / RRSe ) )", "obj1": 0.23651452282157676, "obj2": 0.6766910506819565}, {"determining": "Min( Max( ( Max( BR,Const ) + ( FirstVNF_Mem_Server / ACS ) ),( Max( DDR,RRS ) * Max( FirstVNF_Mem_Server,ACS ) ) ) ,( ( Min( MDR ,DDR ) / ( FirstVNF_CPU_Server / ACS ) ) - ( ( PN - FirstVNF_Mem_Server ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( ( ( DS * RRSe ) * ( MUM / MUR ) ) - Min( ( RRSe + RMSe ) ,Min( RRSe ,MUM ) ) ) ,( ( ( MUM - MUC ) - ( RMSe * MLU ) ) - Min( Min( RRSe ,MUM ) ,( RMSe + DS ) ) ) )", "obj1": 0.22821576763485477, "obj2": 0.7015904427694178}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( Min( ( ARS * ACS ) ,Min( PN ,FirstVNF_RAM_Server ) ) / Max( ( BR / ARS ),Max( ARS,CRS ) ) ) - ( ( ( DDR + RRS ) * ( MRS - ARS ) ) * ( ( MRS / RRS ) + Max( FirstVNF_Mem,ACS ) ) ) )", "choosing": "Min( ( RCSe / ( ( RCSe / RCSe ) + MLU ) ) ,( Min( ( RRSe / CS ) ,MUC ) / RCSe ) )", "obj1": 0.2572614107883817, "obj2": 0.667145169458532}, {"determining": "( Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) * ( FirstVNF_CPU * RRS ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.26141078838174275, "obj2": 0.6568760130897151}, {"determining": "Max( ( ( ( ACS - FirstVNF_Mem ) * ( AMS / FirstVNF_CPU_Server ) ) + Max( ( ACS + AMS ),Max( DDR,AMS ) ) ),( ( Max( ARS,FirstVNF_RAM ) + ( AMS * RRS ) ) / ( Max( FirstVNF_CPU_Server,CRS ) - ( DDR * ACS ) ) ) )", "choosing": "Max( ( DS * ( ( DS / CS ) * RCSe ) ),Min( MUC ,MUM ) )", "obj1": 0.2966804979253112, "obj2": 0.6287677362665893}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( CRS / ( ( MRS * RRS ) / ( Const - FirstVNF_CPU_Server ) ) ),Max( FirstVNF_RAM,( DDR * BR ) ) )", "choosing": "( ( ( Min( MUR ,CS ) / Max( RCSe,MUM ) ) / ( ( RRSe * MLU ) * ( MUM / MUM ) ) ) * ( ( Max( MUR,DS ) / ( MUC + MUM ) ) * ( Max( RCSe,RMSe ) * ( RMSe - MUR ) ) ) )", "obj1": 0.2697095435684647, "obj2": 0.7137867558828589}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUM - MLU ),( DS - RRSe ) ) * ( ( CS / MUC ) - ( MUR / MUR ) ) ) + Max( ( ( MUM - MUM ) / ( DS + MUM ) ),( Min( RCSe ,RRSe ) - ( RCSe - MUR ) ) ) )", "obj1": 0.7717842323651453, "obj2": 0.18945463988146044}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( MUC / Max( MUM,MLU ) ) / ( MLU / RCSe ) )", "obj1": 0.11410788381742738, "obj2": 0.781077732333371}, {"determining": "Max( ( ( Min( FirstVNF_CPU ,Const ) / Max( FirstVNF_CPU_Server,RRS ) ) / ( ( AMS + FirstVNF_CPU ) + Max( FirstVNF_Mem_Server,BR ) ) ),( Max( Min( Const ,FirstVNF_CPU_Server ),Min( DDR ,FirstVNF_RAM ) ) - ( ( BR * MRS ) + ( PN - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( Min( MUM ,MUR ) + Min( RCSe ,MUR ) ),Max( ( MUC * RCSe ),Max( MUC,RRSe ) ) ) + ( ( ( RMSe + RMSe ) / ( RRSe * MLU ) ) - ( ( RMSe * MUM ) - ( MUR - MUC ) ) ) )", "obj1": 0.23443983402489627, "obj2": 0.6918439940307869}, {"determining": "Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) )", "choosing": "( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) )", "obj1": 0.8298755186721992, "obj2": 0.16071114905604997}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.26348547717842324, "obj2": 0.625068755358407}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( MDR + Const ) ),( ( ACS * ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,Max( MRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / Max( RRSe,RRSe ) ) + Max( Max( MUM,CS ),( MUC - MUM ) ) ) / Min( ( ( DS / Max( MUR,RMSe ) ) + MLU ) ,( RMSe * RMSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7635270991026126}, {"determining": "( Max( ( DDR + FirstVNF_RAM ),CRS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( CS + CS ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 0.9875518672199171, "obj2": 0.01317433038017619}, {"determining": "Min( Max( ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + ( MRS / DDR ) ) ) ,Max( RRS,CRS ) ) - Min( PN ,AMS ) ),RRS ) ,( AMS + Const ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 0.17012448132780084, "obj2": 0.8058007552535055}], "2": [{"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + FirstVNF_RAM ),CRS ) - Min( MRS ,Min( FirstVNF_RAM ,AMS ) ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( CS + CS ) ,Min( MUM ,MUR ) ) ) + ( ( ( Max( MUR,MUC ) + ( CS / DS ) ) - ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 0.0954356846473029, "obj2": 0.8345968017113516}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / ( FirstVNF_RAM * Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,MUM ) )", "obj1": 0.4730290456431535, "obj2": 0.4830884984015619}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.2541084738237581}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2987551867219917, "obj2": 0.5693839357531134}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( ( MLU / MUR ) ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 0.5560165975103735, "obj2": 0.4291648278394264}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) )", "choosing": "( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) )", "obj1": 0.8298755186721992, "obj2": 0.16071114905604997}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.26556016597510373, "obj2": 0.5821430781223128}, {"determining": "Max( Min( Const ,FirstVNF_RAM ),( ( MDR / FirstVNF_RAM_Server ) / Min( MRS ,PN ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS / MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( MUM + RMSe ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7635270991026126}, {"determining": "Min( ( Max( ARS,ARS ) - ( AMS - MRS ) ) ,( ( ARS / ARS ) / ( MDR + ARS ) ) )", "choosing": "Max( ( Min( MUC ,RMSe ) * Max( MUM,RCSe ) ),Max( RCSe,MLU ) )", "obj1": 0.7966804979253111, "obj2": 0.18365848732051515}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Max( Min( DDR ,FirstVNF_RAM ),( ( MDR / FirstVNF_RAM_Server ) / Min( MRS ,PN ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS / MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( CS + RRSe ) * ( MUR + MUM ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7554561467546809}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( ( RMSe / RCSe ) / ( RRSe * RMSe ) )", "obj1": 0.14315352697095435, "obj2": 0.7310329922673992}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7572614107883817, "obj2": 0.22612341931422342}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) * ( FirstVNF_CPU * RRS ) )", "choosing": "Min( ( MLU - RCSe ) ,Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.18672199170124482, "obj2": 0.6675727849571508}, {"determining": "( Max( ( RRS * MRS ),( DDR + ARS ) ) * ( CRS - BR ) )", "choosing": "Min( Min( ( CS / RCSe ) ,( MUR * RMSe ) ) ,( RRSe - CS ) )", "obj1": 0.7697095435684648, "obj2": 0.19766793245359646}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6886821784337106}, {"determining": "( ( FirstVNF_RAM_Server * BR ) * ( CRS - BR ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe - CS ) )", "obj1": 0.7427385892116183, "obj2": 0.23617900464473698}, {"determining": "( ( ( Max( ACS,RRS ) + ( BR * BR ) ) + ( Min( RRS ,MDR ) / Max( CRS,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6109951017735348}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "( Min( Const ,ACS ) - ( ( BR + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,MUM ) + Max( MUC,MLU ) )", "obj1": 0.7323651452282157, "obj2": 0.24612765500681952}, {"determining": "( Max( DDR,ACS ) / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * Min( ( RCSe - RRSe ) ,( MLU + RRSe ) ) ) - Min( MLU ,Max( ( MUR + MUR ),RRSe ) ) ) * ( ( ( ( RRSe + RMSe ) - MUM ) / RCSe ) / ( Min( MUR ,RMSe ) - Max( MLU,MLU ) ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6291857714652999}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUM - MLU ),( DS - RRSe ) ) * ( ( CS / MUC ) - ( MUR / MUR ) ) ) + Max( ( ( MUM - MUM ) / ( DS + MUM ) ),( Min( RCSe ,RRSe ) - ( RCSe - MUR ) ) ) )", "obj1": 0.7717842323651453, "obj2": 0.18945463988146044}, {"determining": "Max( ( ( Const * MDR ) / ( FirstVNF_CPU_Server * ACS ) ),Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU * ACS ),( ( Max( AMS,BR ) + ( CRS - ARS ) ) / RRS ) ) ) )", "choosing": "Max( Min( ( MUM + CS ) ,( CS / MUM ) ),( Max( MUM,MLU ) / CS ) )", "obj1": 0.23651452282157676, "obj2": 0.6009413684517119}, {"determining": "Max( ( ( Const * MDR ) / ( FirstVNF_CPU_Server * ACS ) ),Min( FirstVNF_RAM ,Max( ( FirstVNF_CPU * ACS ),( ( Max( AMS,BR ) + ( CRS - ARS ) ) / RRS ) ) ) )", "choosing": "Max( Min( ( MUM + CS ) ,( CS / MUM ) ),( Max( MUM,MLU ) / CS ) )", "obj1": 0.23651452282157676, "obj2": 0.6009413684517119}, {"determining": "Min( ( ARS * ACS ) ,( FirstVNF_Mem_Server + CRS ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7175569175182809}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( CRS * DDR ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.9875518672199171, "obj2": 0.009031157603538}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "Max( ( Max( FirstVNF_CPU,ACS ) - Const ),Max( FirstVNF_RAM_Server,( Const * RRS ) ) )", "choosing": "( Min( ( ( Min( MUM ,( MLU - DS ) ) + DS ) / RCSe ) ,( RRSe - MUM ) ) / Min( ( MUR + DS ) ,Max( RMSe,RCSe ) ) )", "obj1": 0.17634854771784234, "obj2": 0.6896906390820716}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6244562989373199}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( MDR + Const ) ),( ( ACS * ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,Max( MRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / Max( RRSe,RRSe ) ) + Max( Max( MUM,CS ),( MUC - MUM ) ) ) / Min( ( ( DS / Max( MUR,RMSe ) ) + MLU ) ,( RMSe * RMSe ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7635270991026126}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + Max( Max( CS,DS ),( MLU * RRSe ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ( CRS * DDR ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.9875518672199171, "obj2": 0.009031157603538}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6244562989373199}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUR ) + ( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( DDR + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - ( MUC - RRSe ) ) + MUC ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( RCSe / MUC ) ) + MUM ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( ( CS * RRSe ),( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( Min( MUM ,MUM ) + Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ARS )", "choosing": "( ( ( RCSe - MUC ) * ( MLU - CS ) ) * ( ( MUR * RMSe ) - ( RCSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( Max( RRS,FirstVNF_RAM ) * Max( Const,ARS ) ) / ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS * RMSe ) + ( MLU + MUR ) ) + ( Max( RMSe,RRSe ) - ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) ) ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,Max( RCSe,MUM ) ) * Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ARS + ARS ) )", "choosing": "( ( ( RRSe * ( MUM - MUM ) ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM * FirstVNF_RAM_Server ) / ( ( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) ) + FirstVNF_Mem_Server ) )", "choosing": "( Max( ( RMSe + MUC ),( RRSe * MUM ) ) - ( Min( MUM ,MUC ) + ( MUM / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( Max( ( RMSe + MUC ),( RRSe * MUM ) ) - ( Min( MUM ,MUC ) + ( MLU / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_Mem_Server ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + Min( MUM ,( RMSe / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / FirstVNF_RAM ) * ( BR - FirstVNF_Mem_Server ) )", "choosing": "( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + ( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( RCSe / MUM ),Max( RMSe,RRSe ) ) ,( ( DS / MLU ) * Min( CS ,MUM ) ) ) / ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( Max( ( PN - BR ),Min( FirstVNF_RAM_Server ,RRS ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) + ( BR * RRS ) ) ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( Min( ARS ,BR ) + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( ( Max( Max( MUC,CS ),Min( MUC ,RCSe ) ) - DS ),( MUR / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( ( ( MRS * RRS ) / ( Const - FirstVNF_CPU_Server ) ),DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + ( MUM / MUM ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / ( FirstVNF_RAM * Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,MUM ) )", "obj1": 0.4730290456431535, "obj2": 0.4830884984015619}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) )", "choosing": "( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) )", "obj1": 0.8298755186721992, "obj2": 0.16071114905604997}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Max( Min( ( RMSe * DS ) ,Max( RRSe,DS ) ),Max( DS,( Max( Max( ( Max( MUR,RCSe ) * ( ( MUC + RRSe ) + ( MUM / RRSe ) ) ),( RCSe - MUR ) ),RCSe ) - RRSe ) ) )", "obj1": 0.5518672199170125, "obj2": 0.40931300203576965}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.26556016597510373, "obj2": 0.5821430781223128}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.2541084738237581}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( Max( ARS,ARS ) - ( AMS - MRS ) ) ,( ( ARS / ARS ) / ( MDR + ARS ) ) )", "choosing": "Max( ( Min( MUC ,RMSe ) * Max( MUM,RCSe ) ),Max( RCSe,MLU ) )", "obj1": 0.7966804979253111, "obj2": 0.18365848732051515}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "( ( ACS * PN ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( Max( MUR,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.6120331950207469, "obj2": 0.3195433051246855}, {"determining": "( ( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,MLU ) ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.48132780082987553, "obj2": 0.45910695917250666}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7572614107883817, "obj2": 0.22612341931422342}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "( ( ( Max( ACS,RRS ) + ( BR * BR ) ) + ( Min( RRS ,MDR ) / Max( CRS,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6109951017735348}, {"determining": "( Max( ( RRS * MRS ),( DDR + ARS ) ) * ( CRS - BR ) )", "choosing": "Min( Min( ( CS / RCSe ) ,( MUR * RMSe ) ) ,( RRSe - CS ) )", "obj1": 0.7697095435684648, "obj2": 0.19766793245359646}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6886821784337106}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( FirstVNF_RAM_Server * BR ) * ( CRS - BR ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe - CS ) )", "obj1": 0.7427385892116183, "obj2": 0.23617900464473698}, {"determining": "( Min( Const ,ACS ) - ( ( BR + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,MUM ) + Max( MUC,MLU ) )", "obj1": 0.7323651452282157, "obj2": 0.24612765500681952}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( ( Max( ( MUM - MLU ),( DS - RRSe ) ) * ( ( CS / MUC ) - ( MUR / MUR ) ) ) + Max( ( ( MUM - MUM ) / ( DS + MUM ) ),( Min( RCSe ,RRSe ) - ( RCSe - MUR ) ) ) )", "obj1": 0.7717842323651453, "obj2": 0.18945463988146044}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "Max( Min( DDR ,FirstVNF_RAM ),( ( MDR / FirstVNF_RAM_Server ) / Min( MRS ,PN ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS / MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( CS + RRSe ) * ( MUR + MUM ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7554561467546809}, {"determining": "Min( Max( Min( BR ,( Const / ARS ) ),Const ) ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) + PN ) / Const ) + ( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem / PN ) ) + ACS ),FirstVNF_CPU ),( RRS * FirstVNF_RAM ) ) * ARS ) ) )", "choosing": "( ( ( DS - ( MLU + ( ( ( ( MUC - MUM ) / DS ) / RMSe ) * ( ( ( RRSe + MUC ) * RCSe ) + RMSe ) ) ) ) / Max( MUR,MUM ) ) - ( ( MUC * ( Max( Min( ( Min( RCSe ,CS ) - MUC ) ,MUC ),DS ) * ( ( MUR + DS ) - ( CS * RMSe ) ) ) ) / MUR ) )", "obj1": 0.13070539419087138, "obj2": 0.7337984119078197}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( ( AMS / FirstVNF_RAM ) + ( BR * AMS ) ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( ( RCSe * MUC ) ,RRSe ) )", "obj1": 0.2074688796680498, "obj2": 0.6364673583360742}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( Min( MRS ,Min( FirstVNF_RAM ,AMS ) ) ,FirstVNF_RAM )", "choosing": "( ( Max( ( MLU / RMSe ),Min( DS ,RRSe ) ) + ( ( RMSe - RCSe ) + ( MUC * CS ) ) ) * ( ( Max( MUR,MUC ) + ( ( ( Min( RRSe ,RRSe ) / ( DS / MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( MUM + RMSe ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) ) ) - ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ) )", "obj1": 0.12448132780082988, "obj2": 0.7488447806516529}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "Min( ( ARS * ACS ) ,( FirstVNF_Mem_Server + CRS ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7175569175182809}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( ( RMSe / RCSe ) / ( RRSe * RMSe ) )", "obj1": 0.14315352697095435, "obj2": 0.7310329922673992}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Max( FirstVNF_RAM_Server,( Const * Max( AMS,( FirstVNF_RAM_Server / Max( CRS,FirstVNF_RAM_Server ) ) ) ) ) / Max( FirstVNF_RAM,PN ) )", "choosing": "Min( Min( CS ,RRSe ) ,Min( ( Max( DS,MUR ) + MUR ) ,RRSe ) )", "obj1": 0.1887966804979253, "obj2": 0.6627974865303822}, {"determining": "( ( ( CRS * DDR ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.9875518672199171, "obj2": 0.009031157603538}, {"determining": "Min( Min( MRS ,Min( FirstVNF_RAM ,Min( FirstVNF_CPU_Server ,Max( PN,( BR * CRS ) ) ) ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( MLU / RMSe ),Min( DS ,RRSe ) ) + ( RRSe - CS ) ) * ( ( Max( MUR,MUC ) + ( CS / DS ) ) - ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7497258581553858}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6244562989373199}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Max( ( Max( FirstVNF_CPU,ACS ) - Const ),Max( FirstVNF_RAM_Server,( Const * RRS ) ) )", "choosing": "( Min( ( ( Min( MUM ,( MLU - DS ) ) + DS ) / RCSe ) ,( RRSe - MUM ) ) / Min( ( MUR + DS ) ,Max( RMSe,RCSe ) ) )", "obj1": 0.17634854771784234, "obj2": 0.6896906390820716}, {"determining": "( Max( DDR,ACS ) / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * Min( ( RCSe - RRSe ) ,( MLU + RRSe ) ) ) - Min( MLU ,Max( ( MUR + MUR ),RRSe ) ) ) * ( ( ( ( RRSe + RMSe ) - MUM ) / RCSe ) / ( Min( MUR ,RMSe ) - Max( MLU,MLU ) ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6291857714652999}, {"determining": "Max( Max( PN,AMS ),( ( AMS / FirstVNF_RAM ) + ( BR * AMS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.21369294605809128, "obj2": 0.6291857714652999}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6244562989373199}, {"determining": "( ( ( CRS * DDR ) * Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - ( Min( BR ,FirstVNF_RAM_Server ) - ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 0.9875518672199171, "obj2": 0.009031157603538}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + Max( Max( CS,DS ),( MLU * RRSe ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUR ) + ( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( DDR + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - ( MUC - RRSe ) ) + MUC ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( RCSe / MUC ) ) + MUM ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( ( CS * RRSe ),( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( Min( MUM ,MUM ) + Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ARS )", "choosing": "( ( ( RCSe - MUC ) * ( MLU - CS ) ) * ( ( MUR * RMSe ) - ( RCSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( Max( RRS,FirstVNF_RAM ) * Max( Const,ARS ) ) / ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS * RMSe ) + ( MLU + MUR ) ) + ( Max( RMSe,RRSe ) - ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) ) ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,Max( RCSe,MUM ) ) * Min( RRSe ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "Max( ( ( RMSe + RMSe ) + ( MUC * MLU ) ),Min( ( RRSe / CS ) ,Max( MUM,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ARS + ARS ) )", "choosing": "( ( ( RRSe * ( MUM - MUM ) ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / ( FirstVNF_RAM * Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,MUM ) )", "obj1": 0.4730290456431535, "obj2": 0.4830884984015619}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) )", "choosing": "( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) )", "obj1": 0.8298755186721992, "obj2": 0.16071114905604997}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Max( Min( ( RMSe * DS ) ,Max( RRSe,DS ) ),Max( DS,( Max( Max( ( Max( MUR,RCSe ) * ( ( MUC + RRSe ) + ( MUM / RRSe ) ) ),( RCSe - MUR ) ),RCSe ) - RRSe ) ) )", "obj1": 0.5518672199170125, "obj2": 0.40931300203576965}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.26556016597510373, "obj2": 0.5821430781223128}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( CRS ,MRS ) + Max( ACS,BR ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( DS - ( ( MUM * MUM ) - MUC ) ) * CS ) * RMSe ) )", "obj1": 0.7634854771784232, "obj2": 0.18172036741603953}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) * ( ACS / DDR ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( ACS / DDR ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Max( MUR,( RCSe - MUC ) ) ),( DS * MLU ) )", "obj1": 0.7925311203319502, "obj2": 0.17132137001057662}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7572614107883817, "obj2": 0.22612341931422342}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( Max( ( Const - FirstVNF_RAM_Server ),Min( ARS ,ARS ) ) - FirstVNF_Mem_Server )", "choosing": "Max( Min( MUC ,MUC ),Min( ( ( MUM / Max( ( MUM + DS ),( RMSe * RCSe ) ) ) + ( MUM * RMSe ) ) ,MUR ) )", "obj1": 0.6929460580912863, "obj2": 0.27162597770259717}, {"determining": "( ( ACS * PN ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( Max( MUR,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.6120331950207469, "obj2": 0.3195433051246855}, {"determining": "( ( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,MLU ) ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.48132780082987553, "obj2": 0.45910695917250666}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.2541084738237581}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( FirstVNF_RAM_Server * BR ) * ( CRS - BR ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe - CS ) )", "obj1": 0.7427385892116183, "obj2": 0.23617900464473698}, {"determining": "Max( Min( DDR ,FirstVNF_RAM ),( ( MDR / FirstVNF_RAM_Server ) / Min( MRS ,PN ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS / MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( CS + RRSe ) * ( MUR + MUM ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7554561467546809}, {"determining": "Min( ( ( ( ( FirstVNF_Mem + ( ( DDR * AMS ) * FirstVNF_RAM_Server ) ) + BR ) * Const ) + MDR ) ,Max( FirstVNF_RAM_Server,( PN / AMS ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( Min( Min( ( RMSe + DS ) ,( RMSe * MUM ) ) ,Min( CS ,MUC ) ) * CS ) + RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6090148194861169}, {"determining": "( Min( Const ,ACS ) - ( ( BR + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,MUM ) + Max( MUC,MLU ) )", "obj1": 0.7323651452282157, "obj2": 0.24612765500681952}, {"determining": "Min( ( Min( BR ,MRS ) / ( ACS - PN ) ) ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / ( ( ( RMSe - MUC ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2074688796680498, "obj2": 0.632178420013495}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Max( ACS,RRS ) + ( BR * BR ) ) + ( Min( RRS ,MDR ) / Max( CRS,CRS ) ) ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6109951017735348}, {"determining": "Max( ( MRS + AMS ),( FirstVNF_Mem_Server + MDR ) )", "choosing": "( RCSe / Max( ( DS + MUR ),Max( MUC,MUC ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7454242633263083}, {"determining": "Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( Min( RCSe ,MUC ) - ( MUC + RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.12448132780082988, "obj2": 0.7400899986985745}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( ( RMSe / RCSe ) / ( RRSe * RMSe ) )", "obj1": 0.14315352697095435, "obj2": 0.7310329922673992}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( DS / ( ( ( RMSe - RCSe ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.1825726141078838, "obj2": 0.6522538976480339}, {"determining": "( ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( DDR * MDR ) ) / Max( ( BR * Max( DDR,( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) ),Const ) )", "choosing": "( ( MUC - Min( MUM ,( Min( MLU ,( Max( MUC,MUM ) - ( Max( MLU,MUC ) - MUC ) ) ) + MUR ) ) ) * Min( CS ,RRSe ) )", "obj1": 0.14937759336099585, "obj2": 0.709544928295447}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.13070539419087138, "obj2": 0.7337984119078197}, {"determining": "Min( ( ARS * ACS ) ,( FirstVNF_Mem_Server + CRS ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7175569175182809}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6244562989373199}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( Min( RCSe ,MUC ) - ( MUC + RRSe ) ) ,Max( MLU,RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( Max( DDR,ACS ) / ( FirstVNF_CPU * FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe * Min( ( RCSe - RRSe ) ,( MLU + RRSe ) ) ) - Min( MLU ,Max( ( MUR + MUR ),RRSe ) ) ) * ( ( ( ( RRSe + RMSe ) - MUM ) / RCSe ) / ( Min( MUR ,RMSe ) - Max( MLU,MLU ) ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6291857714652999}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( Max( Min( BR ,( Const / ARS ) ),Const ) ,( ( ( Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,FirstVNF_CPU ) + PN ) / Const ) + ( Max( Max( ( ( FirstVNF_Mem / ( FirstVNF_Mem / PN ) ) + ACS ),FirstVNF_CPU ),( RRS * FirstVNF_RAM ) ) * ARS ) ) )", "choosing": "( ( ( DS - ( MLU + ( ( ( ( MUC - MUM ) / DS ) / RMSe ) * ( ( ( RRSe + MUC ) * RCSe ) + RMSe ) ) ) ) / Max( MUR,MUM ) ) - ( ( MUC * ( Max( Min( ( Min( RCSe ,CS ) - MUC ) ,MUC ),DS ) * ( ( MUR + DS ) - ( CS * RMSe ) ) ) ) / MUR ) )", "obj1": 0.13070539419087138, "obj2": 0.7337984119078197}, {"determining": "Min( ( ACS * ARS ) ,Max( FirstVNF_Mem,FirstVNF_RAM ) )", "choosing": "( Max( MUM,( ( MUC * ( RCSe * MUR ) ) / RRSe ) ) / Max( ( ( RMSe * RRSe ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6244562989373199}, {"determining": "Max( Max( PN,AMS ),( ( AMS / FirstVNF_RAM ) + ( BR * AMS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.21369294605809128, "obj2": 0.6291857714652999}, {"determining": "( Min( PN ,FirstVNF_Mem_Server ) - Min( Min( PN ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + Max( Max( CS,DS ),( MLU * RRSe ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUR ) + ( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( DDR + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - ( MUC - RRSe ) ) + MUC ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( RCSe / MUC ) ) + MUM ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( ( CS * RRSe ),( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( Min( MUM ,MUM ) + Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ARS )", "choosing": "( ( ( RCSe - MUC ) * ( MLU - CS ) ) * ( ( MUR * RMSe ) - ( RCSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( Max( RRS,FirstVNF_RAM ) * Max( Const,ARS ) ) / ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS * RMSe ) + ( MLU + MUR ) ) + ( Max( RMSe,RRSe ) - ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) ) ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / ( FirstVNF_RAM * Min( BR ,PN ) ) ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,MUM ) )", "obj1": 0.4730290456431535, "obj2": 0.4830884984015619}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7489626556016598, "obj2": 0.15856553950577257}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( ( FirstVNF_RAM_Server * BR ) * ( CRS - BR ) )", "choosing": "Min( ( RRSe - MUR ) ,( RRSe - CS ) )", "obj1": 0.7427385892116183, "obj2": 0.23617900464473698}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Max( Min( ( RMSe * DS ) ,Max( RRSe,DS ) ),Max( DS,( Max( Max( ( Max( MUR,RCSe ) * ( ( MUC + RRSe ) + ( MUM / RRSe ) ) ),( RCSe - MUR ) ),RCSe ) - RRSe ) ) )", "obj1": 0.5518672199170125, "obj2": 0.40931300203576965}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.26556016597510373, "obj2": 0.5821430781223128}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( Max( ( Const - FirstVNF_RAM_Server ),Min( ARS ,ARS ) ) - FirstVNF_Mem_Server )", "choosing": "Max( Min( MUC ,MUC ),Min( ( ( MUM / Max( ( MUM + DS ),( RMSe * RCSe ) ) ) + ( MUM * RMSe ) ) ,MUR ) )", "obj1": 0.6929460580912863, "obj2": 0.27162597770259717}, {"determining": "( ( ACS * PN ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( Max( MUR,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.6120331950207469, "obj2": 0.3195433051246855}, {"determining": "( ( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,MLU ) ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.48132780082987553, "obj2": 0.45910695917250666}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7489626556016598, "obj2": 0.15856553950577257}, {"determining": "( Max( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server / RRS ) ),( ( DDR / FirstVNF_RAM_Server ) + Min( FirstVNF_RAM_Server ,CRS ) ) ) - ( ( ( AMS * FirstVNF_RAM ) / Max( FirstVNF_CPU,MRS ) ) / Min( ( FirstVNF_RAM - MRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 0.7178423236514523, "obj2": 0.2541084738237581}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( Min( RCSe ,MUC ) - Min( RMSe ,RCSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7233209706470767}, {"determining": "Max( ( MRS + AMS ),( FirstVNF_Mem_Server + MDR ) )", "choosing": "( RCSe / Max( ( DS + MUR ),Max( MUC,MUC ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7454242633263083}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( AMS * DDR ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7548690173464275}, {"determining": "( Min( Const ,ACS ) - ( ( BR + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( Min( MUM ,MUM ) + Max( MUC,MLU ) )", "obj1": 0.7323651452282157, "obj2": 0.24612765500681952}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "Min( ( Min( BR ,MRS ) / ( ACS - PN ) ) ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM_Server ) )", "choosing": "( ( DS / ( ( ( RMSe - MUC ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.2074688796680498, "obj2": 0.632178420013495}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "Max( ( ( FirstVNF_Mem_Server * ( BR - Max( PN,CRS ) ) ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( ( Min( RCSe ,( MUR * CS ) ) / MUM ) + MUR ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.21369294605809128, "obj2": 0.6238565002621655}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( DS / ( ( ( RMSe - RCSe ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.1825726141078838, "obj2": 0.6522538976480339}, {"determining": "( ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( DDR * MDR ) ) / Max( ( BR * Max( DDR,( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) ),Const ) )", "choosing": "( ( MUC - Min( MUM ,( Min( MLU ,( Max( MUC,MUM ) - ( Max( MLU,MUC ) - MUC ) ) ) + MUR ) ) ) * Min( CS ,RRSe ) )", "obj1": 0.14937759336099585, "obj2": 0.709544928295447}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "Min( ( ARS * ACS ) ,( FirstVNF_Mem_Server + CRS ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7175569175182809}, {"determining": "( ( PN + DDR ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( ( MUC / MUC ) + ( MUM * Min( ( RCSe - Max( ( MUR + MUR ),Max( DS,CS ) ) ) ,RRSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6168922221093777}, {"determining": "( DDR - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( ( ( RCSe * MUM ) * ( RRSe - RCSe ) ) - RCSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6384282718744184}, {"determining": "Min( ( ( MRS * MRS ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( RMSe * CS ) + RRSe ) )", "obj1": 0.2012448132780083, "obj2": 0.6375269843527858}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( Min( RCSe ,MUC ) - ( MUC + RRSe ) ) ,Max( MLU,RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "( ( PN + DDR ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( ( MUC / MUC ) + ( MUM * Min( ( RCSe - Max( ( MUR + MUR ),Max( DS,CS ) ) ) ,RRSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6168922221093777}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "Max( ( ( FirstVNF_Mem_Server * DDR ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUR ) + ( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( DDR + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - ( MUC - RRSe ) ) + MUC ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( RCSe / MUC ) ) + MUM ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( ( CS * RRSe ),( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( Min( MUM ,MUM ) + Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ARS )", "choosing": "( ( ( RCSe - MUC ) * ( MLU - CS ) ) * ( ( MUR * RMSe ) - ( RCSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( Max( RRS,FirstVNF_RAM ) * Max( Const,ARS ) ) / ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS * RMSe ) + ( MLU + MUR ) ) + ( Max( RMSe,RRSe ) - ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) ) ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + MRS ) / Max( ( ( FirstVNF_CPU_Server * ( PN + ( ( MRS * MRS ) + FirstVNF_CPU_Server ) ) ) - CRS ),ARS ) )", "choosing": "Max( ( ( ( RRSe * RRSe ) - RMSe ) * ( ( RRSe * ( MUC * RCSe ) ) - ( RMSe - RMSe ) ) ),( Max( MUC,MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( FirstVNF_Mem * FirstVNF_RAM ) * Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Max( Min( ( RMSe * DS ) ,Max( RRSe,DS ) ),Max( DS,( Max( Max( ( Max( MUR,RCSe ) * ( ( MUC + RRSe ) + ( MUM / RRSe ) ) ),( RCSe - MUR ) ),RCSe ) - RRSe ) ) )", "obj1": 0.5518672199170125, "obj2": 0.40931300203576965}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "( Max( ( Const - FirstVNF_RAM_Server ),Min( ARS ,ARS ) ) - FirstVNF_Mem_Server )", "choosing": "Max( Min( MUC ,MUC ),Min( ( ( MUM / Max( ( MUM + DS ),( RMSe * RCSe ) ) ) + ( MUM * RMSe ) ) ,MUR ) )", "obj1": 0.6929460580912863, "obj2": 0.27162597770259717}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.26556016597510373, "obj2": 0.5821430781223128}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( ACS * PN ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( Max( MUR,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.6120331950207469, "obj2": 0.3195433051246855}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,AMS ) )", "choosing": "( Min( RCSe ,MUC ) - Min( RMSe ,RCSe ) )", "obj1": 0.12033195020746888, "obj2": 0.7233209706470767}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "Max( ( MRS + AMS ),( FirstVNF_Mem_Server + MDR ) )", "choosing": "( RCSe / Max( ( DS + MUR ),Max( MUC,MUC ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7454242633263083}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,MDR ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21161825726141079, "obj2": 0.6174024550502194}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( AMS * DDR ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7548690173464275}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( DS / ( ( ( RMSe - RCSe ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.1825726141078838, "obj2": 0.6522538976480339}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( Max( MUC,CS ) ,Max( MLU,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.17427385892116182, "obj2": 0.6719822035203868}, {"determining": "( ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( DDR * MDR ) ) / Max( ( BR * Max( DDR,( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) ),Const ) )", "choosing": "( ( MUC - Min( MUM ,( Min( MLU ,( Max( MUC,MUM ) - ( Max( MLU,MUC ) - MUC ) ) ) + MUR ) ) ) * Min( CS ,RRSe ) )", "obj1": 0.14937759336099585, "obj2": 0.709544928295447}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7493648370106742}, {"determining": "( ( PN + DDR ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( ( MUC / MUC ) + ( MUM * Min( ( RCSe - Max( ( MUR + MUR ),Max( DS,CS ) ) ) ,RRSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6168922221093777}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "Min( ( ARS * ACS ) ,( FirstVNF_Mem_Server + CRS ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7175569175182809}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( AMS * DDR ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7548690173464275}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( Min( PN ,FirstVNF_Mem_Server ) - PN ) )", "choosing": "Min( ( Min( RCSe ,MUC ) - ( MUC + RRSe ) ) ,( Min( RCSe ,MUC ) - ( MUC + RRSe ) ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RCSe ,MUC ) - ( MUC + RRSe ) ) ,Max( MLU,RRSe ) )", "obj1": 0.14522821576763487, "obj2": 0.7213632422400461}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( PN + DDR ) + ( ( ( FirstVNF_RAM_Server * MDR ) * ( MDR / FirstVNF_CPU_Server ) ) * Max( ( BR + MRS ),( FirstVNF_Mem_Server * MRS ) ) ) )", "choosing": "( ( MUC / MUC ) + ( MUM * Min( ( RCSe - Max( ( MUR + MUR ),Max( DS,CS ) ) ) ,RRSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6168922221093777}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUR ) + ( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( DDR + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - ( MUC - RRSe ) ) + MUC ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( RCSe / MUC ) ) + MUM ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( ( CS * RRSe ),( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( Min( MUM ,MUM ) + Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ARS )", "choosing": "( ( ( RCSe - MUC ) * ( MLU - CS ) ) * ( ( MUR * RMSe ) - ( RCSe + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS - ( ( Max( RRS,FirstVNF_RAM ) * Max( Const,ARS ) ) / ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) / Max( FirstVNF_RAM_Server,PN ) )", "choosing": "( ( ( CS * RMSe ) + ( MLU + MUR ) ) + ( Max( RMSe,RRSe ) - ( DS * MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) ) ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + MRS ) / Max( ( ( FirstVNF_CPU_Server * ( PN + ( ( MRS * MRS ) + FirstVNF_CPU_Server ) ) ) - CRS ),ARS ) )", "choosing": "Max( ( ( ( RRSe * RRSe ) - RMSe ) * ( ( RRSe * ( MUC * RCSe ) ) - ( RMSe - RMSe ) ) ),( Max( MUC,MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "( Max( ( Const - FirstVNF_RAM_Server ),Min( ARS ,ARS ) ) - FirstVNF_Mem_Server )", "choosing": "Max( Min( MUC ,MUC ),Min( ( ( MUM / Max( ( MUM + DS ),( RMSe * RCSe ) ) ) + ( MUM * RMSe ) ) ,MUR ) )", "obj1": 0.6929460580912863, "obj2": 0.27162597770259717}, {"determining": "( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) )", "choosing": "( ( ( MUM - MUM ) - MUC ) * Min( CS ,RRSe ) )", "obj1": 0.26556016597510373, "obj2": 0.5821430781223128}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "( ( ACS * PN ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( Max( MUR,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.6120331950207469, "obj2": 0.3195433051246855}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RMSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21161825726141079, "obj2": 0.6122628894677551}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Max( ( MRS + AMS ),( FirstVNF_Mem_Server + MDR ) )", "choosing": "( RCSe / Max( ( DS + MUR ),Max( MUC,MUC ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7454242633263083}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "Min( ( ARS * ACS ) ,( FirstVNF_Mem_Server + CRS ) )", "choosing": "( Max( ( MUR / RRSe ),MUM ) / Max( ( ( RMSe * MUM ) / ( MUR + RCSe ) ),Min( ( RRSe * MUR ) ,MUR ) ) )", "obj1": 0.14730290456431536, "obj2": 0.7175569175182809}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( AMS * DDR ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7548690173464275}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( DS / ( ( ( RMSe - RCSe ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.1825726141078838, "obj2": 0.6522538976480339}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( Max( MUC,CS ) ,Max( MLU,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.17427385892116182, "obj2": 0.6719822035203868}, {"determining": "( ( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( DDR * MDR ) ) / Max( ( BR * Max( DDR,( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) ),Const ) )", "choosing": "( ( MUC - Min( MUM ,( Min( MLU ,( Max( MUC,MUM ) - ( Max( MLU,MUC ) - MUC ) ) ) + MUR ) ) ) * Min( CS ,RRSe ) )", "obj1": 0.14937759336099585, "obj2": 0.709544928295447}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ACS * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7187276201553385}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7493648370106742}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( ( ( ACS * MDR ) * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( Max( ( MLU + RMSe ),MUR ) + RMSe ),MUR ) * DS ) )", "obj1": 0.11825726141078838, "obj2": 0.7187387323582355}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "( Max( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) * ( AMS * DDR ) )", "choosing": "( ( Max( Min( Max( ( RCSe / RCSe ),( ( DS / CS ) * MUC ) ) ,( DS - RCSe ) ),Max( MUC,MLU ) ) / MLU ) / ( DS * Max( ( MLU + RMSe ),MUR ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7548690173464275}, {"determining": "( ( ( Min( ( ( ( ( AMS + FirstVNF_Mem_Server ) / FirstVNF_RAM ) * BR ) / ( Max( Min( DDR ,FirstVNF_CPU_Server ),( ARS * ACS ) ) - FirstVNF_RAM ) ) ,ARS ) * Max( ( FirstVNF_Mem_Server / MRS ),FirstVNF_RAM_Server ) ) * RRS ) * ( FirstVNF_RAM_Server + ARS ) )", "choosing": "( ( RCSe / Min( MUM ,( ( MLU * ( DS + RMSe ) ) * ( RCSe / ( CS - ( RMSe / ( DS / MLU ) ) ) ) ) ) ) / ( DS * Max( ( RMSe + MLU ),( ( ( MUR * ( Max( RCSe,RMSe ) * ( MUM - RRSe ) ) ) * CS ) * Min( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.12448132780082988, "obj2": 0.7187276201553385}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUR ) + ( RRSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( DDR + FirstVNF_CPU_Server ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( ( RCSe - ( MUC - RRSe ) ) + MUC ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ( ACS * ( ( DDR + FirstVNF_CPU_Server ) + Min( MRS ,FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( ( Min( ( MUC / MUR ) ,( RCSe / MUC ) ) + MUM ) + DS ) - Min( DS ,CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,Const ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) )", "choosing": "Max( Min( MLU ,CS ),Max( ( CS * RRSe ),( RCSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( ( FirstVNF_CPU + RRS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MLU ,DS ) * ( MLU - CS ) ) * ( Min( MUM ,MUM ) + Max( MUC,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Max( BR,FirstVNF_Mem ) - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( Max( ( ( RCSe * MUM ) * ( RRSe - ( RRSe * ( RRSe / DS ) ) ) ),( DS * MLU ) ) - RCSe ) )", "obj1": 0.4190871369294606, "obj2": 0.4996200009266789}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "( ( ACS * PN ) - Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( Max( MUR,RCSe ) ,( MUR / RRSe ) )", "obj1": 0.6120331950207469, "obj2": 0.3195433051246855}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( Min( MUM ,( MLU * ( RCSe * CS ) ) ) - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.14730290456431536, "obj2": 0.7027894272548755}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,( ( MLU - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) )", "choosing": "( ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.2074688796680498, "obj2": 0.6264629455681586}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( DS / ( ( ( RMSe - RCSe ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.1825726141078838, "obj2": 0.6522538976480339}, {"determining": "( ( ACS * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7187276201553385}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( Max( MUC,CS ) ,Max( MLU,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.17427385892116182, "obj2": 0.6719822035203868}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ACS * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7187276201553385}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( Min( Max( CS,MLU ) ,( RMSe / MLU ) ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2095435684647303, "obj2": 0.6133722114928095}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RMSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21161825726141079, "obj2": 0.6122628894677551}, {"determining": "( ( ( ACS * MDR ) * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( Max( ( MLU + RMSe ),MUR ) + RMSe ),MUR ) * DS ) )", "obj1": 0.11825726141078838, "obj2": 0.7187387323582355}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / MDR ) - ( Const + Max( ACS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RCSe ) - ( RRSe - CS ) ) ,MUC ) ,Min( CS ,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * BR ) )", "choosing": "( ( MUR + MUR ) - ( DS / ( RRSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "9": [{"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Max( BR,FirstVNF_Mem ) - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( Max( ( ( RCSe * MUM ) * ( RRSe - ( RRSe * ( RRSe / DS ) ) ) ),( DS * MLU ) ) - RCSe ) )", "obj1": 0.4190871369294606, "obj2": 0.4996200009266789}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( Min( MUM ,( MLU * ( RCSe * CS ) ) ) - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.14730290456431536, "obj2": 0.7027894272548755}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,( ( MLU - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) )", "choosing": "( ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.2074688796680498, "obj2": 0.6264629455681586}, {"determining": "Min( ( PN + FirstVNF_CPU ) ,( Max( RRS,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR * MDR ) ) / Max( ( MRS + CRS ),( ARS + ARS ) ) ) ) * Const ) )", "choosing": "( ( MLU / MUR ) + ( ( MUM - MUM ) - MUC ) )", "obj1": 0.1970954356846473, "obj2": 0.6476205525940183}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( MRS + ACS ) / Min( BR ,MRS ) )", "choosing": "( ( DS / ( ( ( RMSe - RCSe ) / MUM ) - RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.1825726141078838, "obj2": 0.6522538976480339}, {"determining": "( ( ACS * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7187276201553385}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( Max( MUC,CS ) ,Max( MLU,RRSe ) ) - ( MUC + RRSe ) )", "obj1": 0.17427385892116182, "obj2": 0.6719822035203868}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ACS * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7187276201553385}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( Min( Max( CS,MLU ) ,( RMSe / MLU ) ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2095435684647303, "obj2": 0.6133722114928095}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_RAM_Server / ARS ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RMSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21161825726141079, "obj2": 0.6122628894677551}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( ACS * MDR ) * MDR ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( Max( ( MLU + RMSe ),MUR ) + RMSe ),MUR ) * DS ) )", "obj1": 0.11825726141078838, "obj2": 0.7187387323582355}, {"determining": "( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ( FirstVNF_RAM - PN ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.18049792531120332, "obj2": 0.6633729393650529}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,MUC ) - ( MUC + RRSe ) )", "obj1": 0.19294605809128632, "obj2": 0.6518000318867313}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}], "10": [{"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Max( BR,FirstVNF_Mem ) - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( Max( ( ( RCSe * MUM ) * ( RRSe - ( RRSe * ( RRSe / DS ) ) ) ),( DS * MLU ) ) - RCSe ) )", "obj1": 0.4190871369294606, "obj2": 0.4996200009266789}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( FirstVNF_CPU / RRS ) ) ) * ( MDR + ( PN * Min( BR ,ARS ) ) ) )", "choosing": "Min( ( RCSe * DS ) ,Min( ( ( RRSe * MLU ) / CS ) ,MUM ) )", "obj1": 0.9273858921161826, "obj2": 0.06458869141184663}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Min( ( CRS / ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( RCSe * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4914175142662942}, {"determining": "Max( Min( ( ( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) ) + MRS ) ,( FirstVNF_CPU_Server / MRS ) ),( ( PN * DDR ) - ( RRS + ACS ) ) )", "choosing": "Max( Min( Max( MUC,MUM ) ,( MUM * RCSe ) ),Min( Min( DS ,( CS - MLU ) ) ,MLU ) )", "obj1": 0.6390041493775933, "obj2": 0.3037966577303026}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( FirstVNF_CPU_Server + Max( FirstVNF_CPU_Server,CRS ) ) * ( AMS * DDR ) )", "choosing": "( ( RCSe / ( Min( MUM ,( MLU * ( RCSe * CS ) ) ) - DS ) ) / ( Max( ( MLU + RMSe ),MUR ) * DS ) )", "obj1": 0.14730290456431536, "obj2": 0.7027894272548755}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) )", "choosing": "( ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.2074688796680498, "obj2": 0.6264629455681586}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( Min( Max( CS,MLU ) ,( RMSe / MLU ) ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2095435684647303, "obj2": 0.6133722114928095}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( AMS / AMS ) / ( DDR - MDR ) )", "choosing": "( RCSe / ( RRSe * RMSe ) )", "obj1": 0.15145228215767634, "obj2": 0.7010151518210557}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RMSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21161825726141079, "obj2": 0.6122628894677551}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,( ( MLU - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - ( FirstVNF_CPU - Max( ( ARS - FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( ( FirstVNF_RAM + ( ( FirstVNF_CPU_Server + Min( Const ,ARS ) ) / CRS ) ) / ( BR - Min( DDR ,( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) ) ) ) )", "choosing": "Max( Max( Min( MUM ,MUC ),Max( MUR,( ( RRSe * RCSe ) / RRSe ) ) ),( DS - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS / ( FirstVNF_Mem_Server * RRS ) ) + Max( ( FirstVNF_Mem_Server - FirstVNF_Mem ),( FirstVNF_CPU_Server / ( ( ( Min( MDR ,MDR ) - FirstVNF_RAM_Server ) * Max( FirstVNF_Mem_Server,( MRS - AMS ) ) ) * Max( Const,( ( CRS * FirstVNF_CPU ) * Const ) ) ) ) ) ) - ( CRS * ( ( FirstVNF_RAM_Server - Max( Min( BR ,MRS ),FirstVNF_Mem_Server ) ) * ARS ) ) )", "choosing": "( ( Max( ( RMSe + ( ( ( MUM * RRSe ) * MLU ) * MUM ) ),( RRSe - Max( RCSe,( MUM + RMSe ) ) ) ) - ( MLU + MUR ) ) * Max( ( Max( ( ( RRSe - DS ) + RMSe ),Max( MUC,MUR ) ) / ( ( ( ( RRSe + MUR ) + ( RRSe - CS ) ) * MUR ) * ( Max( Min( Max( CS,RCSe ) ,MUC ),DS ) - RMSe ) ) ),DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( ARS * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),Max( DS,Min( MLU ,( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( BR,RRS ) - Max( ( Max( AMS,FirstVNF_RAM_Server ) * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "Max( Min( MUC ,Max( RRSe,DS ) ),MUM )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_Mem_Server / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( ( ( DS + MUR ) * RMSe ),MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_CPU_Server / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MUC,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "11": [{"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Max( BR,FirstVNF_Mem ) - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( Max( ( ( RCSe * MUM ) * ( RRSe - ( RRSe * ( RRSe / DS ) ) ) ),( DS * MLU ) ) - RCSe ) )", "obj1": 0.4190871369294606, "obj2": 0.4996200009266789}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Min( ( CRS / ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( RCSe * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4914175142662942}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6244813278008299, "obj2": 0.30071493106781716}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( ACS * MDR ) * ( ARS - Max( AMS,RRS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,( RCSe / RCSe ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.529045643153527, "obj2": 0.38248583797420366}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( FirstVNF_RAM + ( Min( FirstVNF_CPU ,PN ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "Max( ( DS + MUR ),( Max( ( RCSe / CS ),( DS + Max( MUR,Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) ) * MLU ) )", "obj1": 0.8609958506224067, "obj2": 0.10410720662173682}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ARS - ARS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * ( MLU + RMSe ) ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.725916693871503}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) )", "choosing": "( ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.2074688796680498, "obj2": 0.6264629455681586}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "( ( ACS * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6554971011529693}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( Min( Max( CS,MLU ) ,( RMSe / MLU ) ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2095435684647303, "obj2": 0.6133722114928095}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RMSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21161825726141079, "obj2": 0.6122628894677551}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,( ( MLU - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,MDR ) * ( ARS / Const ) ) ) ,Min( CRS ,( Max( Min( ( Max( Min( FirstVNF_CPU ,MRS ),FirstVNF_CPU_Server ) / ( ( Const - AMS ) / FirstVNF_RAM_Server ) ) ,Max( ( FirstVNF_Mem / PN ),( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) ),FirstVNF_RAM ) * Max( ( FirstVNF_CPU_Server - ( MRS / ( FirstVNF_Mem_Server + AMS ) ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( RCSe + DS ),( ( ( ( MUC - MUM ) * ( ( RRSe + CS ) * ( CS / MUC ) ) ) / CS ) * MUC ) ) + ( RMSe * RCSe ) ) + Max( Min( MLU ,MUC ),MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( RRS ,FirstVNF_CPU_Server ),( PN - Const ) ) ,Min( FirstVNF_RAM ,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server + CRS ) - ( Min( FirstVNF_RAM ,( RRS + MRS ) ) / DDR ) ) ) ) )", "choosing": "( ( ( ( MUC - ( MUC + DS ) ) + DS ) * MUC ) + ( Min( RMSe ,( ( MUM * Max( MLU,( MUC + ( RCSe * RCSe ) ) ) ) / DS ) ) - Min( MUM ,Max( Min( MLU ,RRSe ),MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem - ( ( BR + ( ( DDR / RRS ) * ( DDR / ( MRS / Max( ARS,FirstVNF_RAM ) ) ) ) ) / FirstVNF_CPU ) ) ,( ( Const * ACS ) - ( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) * ARS ) ) )", "choosing": "Max( ( MLU + Max( MUM,Max( MLU,Min( MUC ,CS ) ) ) ),( MLU / DS ) )", "obj1": 1.0, "obj2": 0.0}], "12": [{"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Max( BR,RRS ) - Max( ( ( MRS + FirstVNF_RAM ) * Max( ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ),PN ) ),Const ) )", "choosing": "Max( ( DS + MUR ),Max( DS,MLU ) )", "obj1": 0.8879668049792531, "obj2": 0.10281684457132716}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Max( BR,FirstVNF_Mem ) - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( Max( ( ( RCSe * MUM ) * ( RRSe - ( RRSe * ( RRSe / DS ) ) ) ),( DS * MLU ) ) - RCSe ) )", "obj1": 0.4190871369294606, "obj2": 0.4996200009266789}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Min( ( CRS / ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( RCSe * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4914175142662942}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6244813278008299, "obj2": 0.30071493106781716}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( ( Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) ) + ( FirstVNF_Mem_Server + ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUM / CS ) + ( ( ( RRSe + RMSe ) * Min( CS ,RCSe ) ) * RMSe ) )", "obj1": 0.6721991701244814, "obj2": 0.28081993897158253}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + MUR ),Max( MUC,MUC ) )", "obj1": 0.6597510373443983, "obj2": 0.28528129400923624}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( DDR - FirstVNF_CPU ) ) + ( Max( DDR,CRS ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( ( MUM + CS ) - CS ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.483402489626556, "obj2": 0.4303993361625255}, {"determining": "( ( ACS * MDR ) * ( ARS - Max( AMS,RRS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,( RCSe / RCSe ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.529045643153527, "obj2": 0.38248583797420366}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( FirstVNF_RAM + ( Min( FirstVNF_CPU ,PN ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "Max( ( DS + MUR ),( Max( ( RCSe / CS ),( DS + Max( MUR,Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) ) * MLU ) )", "obj1": 0.8609958506224067, "obj2": 0.10410720662173682}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ARS - ARS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * ( MLU + RMSe ) ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.725916693871503}, {"determining": "( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) ) * MDR ) * ( ARS - ARS ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( ( ( MLU + RMSe ) / MUR ) + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.7159059967447902}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( Max( MDR,Min( PN ,( ARS - AMS ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.2074688796680498, "obj2": 0.6257881459439997}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( Min( PN ,FirstVNF_Mem_Server ) ,PN )", "choosing": "( Min( RCSe ,Min( ( RMSe + RRSe ) ,( ( MUC + RRSe ) * MLU ) ) ) - ( MUC + RRSe ) )", "obj1": 0.1991701244813278, "obj2": 0.6319959257684412}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6554971011529693}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( Max( MUC,DS ) ,CS ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( Max( FirstVNF_Mem,FirstVNF_RAM_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) ,( Const + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( DS ,( CS - MLU ) ) + ( RCSe + MUM ) )", "obj1": 0.5705394190871369, "obj2": 0.3801619456917095}, {"determining": "( Max( MDR,( MRS + ( BR * ( DDR + FirstVNF_CPU ) ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( MUC ,MUR ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( ARS,BR ),( RRS - ACS ) ) * ( Max( FirstVNF_CPU,ACS ) / ( PN / MDR ) ) ) ,( ( Min( PN ,CRS ) - ( FirstVNF_CPU_Server - BR ) ) + ( Max( Const,MDR ) - ( DDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( MUC / RCSe ) ,( DS - ( RRSe + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( FirstVNF_RAM ,ARS ) + Min( FirstVNF_CPU ,MRS ) ) / Max( Max( FirstVNF_RAM_Server,MRS ),Min( FirstVNF_CPU_Server ,RRS ) ) ) * ( Min( ( FirstVNF_CPU / FirstVNF_CPU_Server ) ,( BR - FirstVNF_Mem_Server ) ) * ( ( FirstVNF_Mem_Server * ACS ) / Min( FirstVNF_RAM ,PN ) ) ) )", "choosing": "Max( Min( Max( DS,Max( MUR,MUC ) ) ,( CS / DS ) ),( RMSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR / FirstVNF_RAM_Server ) / ( Const - FirstVNF_CPU_Server ) ) * ( ( MDR - FirstVNF_Mem_Server ) + Max( CRS,FirstVNF_CPU_Server ) ) ) - ( Min( ( BR / AMS ) ,Max( Const,ARS ) ) + Min( Min( FirstVNF_RAM_Server ,CRS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) ) )", "choosing": "Min( Max( ( Min( RMSe ,RCSe ) * Min( CS ,RRSe ) ),Min( ( MUM - MUR ) ,( RMSe / MUR ) ) ) ,( ( ( RRSe - RCSe ) - ( MUR / DS ) ) / Min( Min( MUC ,MUR ) ,( RRSe * MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM_Server * DDR ) - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) * Min( Min( DDR ,Const ) ,Max( CRS,ACS ) ) ) / ( ( ( DDR + Const ) + Min( ARS ,Const ) ) + Max( Max( FirstVNF_CPU,DDR ),Max( AMS,BR ) ) ) )", "choosing": "Max( ( ( ( RCSe + RMSe ) + Max( DS,RCSe ) ) + ( ( RRSe / CS ) + ( MUM + DS ) ) ),Max( Max( ( CS + MUR ),( RRSe + DS ) ),( ( RMSe + RCSe ) + Min( MLU ,RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem - FirstVNF_RAM ) - ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) * ( ( FirstVNF_RAM + FirstVNF_CPU ) + ( PN / Const ) ) ) - Min( Max( ( FirstVNF_CPU_Server * FirstVNF_RAM ),Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ,( Max( FirstVNF_RAM_Server,DDR ) + ( BR - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Min( RRSe ,( CS * MLU ) ) + ( MUM + ( MUC / ( MLU / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ( AMS * Min( AMS ,ARS ) ) ) - ( Max( ( ARS + RRS ),FirstVNF_CPU_Server ) - ACS ) )", "choosing": "Max( ( Min( ( MLU - MUC ) ,RMSe ) * Min( RRSe ,( RCSe * MUR ) ) ),( Max( RMSe,( MLU - RRSe ) ) - ( ( RRSe / Max( ( Max( MUM,MUC ) - ( DS * ( RRSe / RCSe ) ) ),RCSe ) ) - ( ( Max( MUC,( CS - RRSe ) ) - ( RMSe / MUR ) ) + CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM + ( FirstVNF_RAM - CRS ) ) ) / Min( AMS ,Const ) ),Min( ( ( CRS + AMS ) + FirstVNF_Mem ) ,Const ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RMSe,Min( ( RRSe * MLU ) ,Min( ( MUM - ( MUR / MUC ) ) ,MUR ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "13": [{"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "( Max( BR,FirstVNF_Mem ) - Max( DDR,Const ) )", "choosing": "( ( RCSe * MUM ) * ( Max( ( ( RCSe * MUM ) * ( RRSe - ( RRSe * ( RRSe / DS ) ) ) ),( DS * MLU ) ) - RCSe ) )", "obj1": 0.4190871369294606, "obj2": 0.4996200009266789}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + Max( DDR,( BR + DDR ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * MUM ) - RCSe ) - MUM ) ) ) )", "obj1": 0.43983402489626555, "obj2": 0.4786145535485375}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( ( MDR / MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) + MUR ),( ( RRSe + MUC ) / RRSe ) )", "obj1": 0.9024896265560166, "obj2": 0.09070702539184358}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ) ,DS ) )", "obj1": 0.5601659751037344, "obj2": 0.3731498355765665}, {"determining": "( ( ACS * MDR ) * ( ARS - Max( AMS,RRS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,( RCSe / RCSe ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.529045643153527, "obj2": 0.38248583797420366}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( Min( PN ,( ARS - AMS ) ) ,Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( MUC - Min( RCSe ,MUM ) )", "obj1": 0.6307053941908713, "obj2": 0.2956147336808711}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6244813278008299, "obj2": 0.30071493106781716}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ACS * MDR ) * ( ARS - ARS ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.13070539419087138, "obj2": 0.7148883475364368}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( FirstVNF_RAM + ( Min( FirstVNF_CPU ,PN ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "Max( ( DS + MUR ),( Max( ( RCSe / CS ),( DS + Max( MUR,Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) ) * MLU ) )", "obj1": 0.8609958506224067, "obj2": 0.10410720662173682}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8900414937759336, "obj2": 0.0924753397564199}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Max( MDR,Min( PN ,( ARS - AMS ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.2074688796680498, "obj2": 0.6257881459439997}, {"determining": "( ( ACS * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6554971011529693}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8775933609958506, "obj2": 0.10282529601955186}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_Mem + DDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( ( DS * ( ( MLU + RMSe ) / MUR ) ) / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8817427385892116, "obj2": 0.1002376386614791}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Min( ( CRS / ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( RCSe * Max( ( RRSe - MUM ),Min( DS ,RMSe ) ) )", "obj1": 0.43775933609958506, "obj2": 0.4914175142662942}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( Min( BR ,FirstVNF_CPU ) + Const ) - MRS ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( RRSe ,CS ) )", "obj1": 0.1970954356846473, "obj2": 0.6317046568930196}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( CS ,RCSe ) + DS ),Max( MUC,MUC ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Min( Max( MUC,DS ) ,CS ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4336099585062241, "obj2": 0.4921453567363945}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( Max( FirstVNF_RAM_Server,( ( Min( Max( ARS,ACS ) ,FirstVNF_CPU ) + Const ) - MRS ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) ) ) ) - Min( RRSe ,CS ) )", "obj1": 0.1970954356846473, "obj2": 0.6317046568930196}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( Max( MDR,Min( PN ,( ARS - AMS ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.2074688796680498, "obj2": 0.6257881459439997}, {"determining": "( Max( MDR,( MRS + ( BR * ( DDR + FirstVNF_CPU ) ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( MUC ,MUR ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - DDR ) - FirstVNF_CPU_Server ) - ( ( FirstVNF_CPU - ARS ) / FirstVNF_CPU_Server ) )", "choosing": "( ( Min( MUR ,DS ) * ( MUM + CS ) ) + Min( ( MUC * DS ) ,Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS / FirstVNF_Mem_Server ) * ( Const - ARS ) ) / ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) * ( MDR / AMS ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUR ) - ( ( DS + RCSe ) / Max( DS,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - PN ) / Max( FirstVNF_RAM_Server,CRS ) ) - ( ( PN + FirstVNF_CPU ) + ( DDR + ARS ) ) )", "choosing": "( ( Min( MUM ,RRSe ) / RCSe ) * ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}], "14": [{"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( FirstVNF_CPU_Server / ( DDR - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS - ARS ) ) - Min( Min( FirstVNF_CPU ,PN ) ,Min( RRS ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( RCSe ,MUM ) - Min( MUR ,( MUC * ( MUM / ( RRSe / CS ) ) ) ) )", "obj1": 0.4107883817427386, "obj2": 0.49530688529837896}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.7365145228215768, "obj2": 0.17701112914933467}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( ( MDR / MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) + MUR ),( ( RRSe + MUC ) / RRSe ) )", "obj1": 0.9024896265560166, "obj2": 0.09070702539184358}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ) ,DS ) )", "obj1": 0.5601659751037344, "obj2": 0.3731498355765665}, {"determining": "( ( ACS * MDR ) * ( ARS - Max( AMS,RRS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,( RCSe / RCSe ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.529045643153527, "obj2": 0.38248583797420366}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "Min( Max( DDR,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / RMSe ) * MUC ),Min( RCSe ,MUR ) )", "obj1": 0.7012448132780082, "obj2": 0.21787961202229655}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( Min( PN ,( ARS - AMS ) ) ,Min( PN ,FirstVNF_Mem_Server ) )", "choosing": "( MUC - Min( RCSe ,MUM ) )", "obj1": 0.6307053941908713, "obj2": 0.2956147336808711}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6244813278008299, "obj2": 0.30071493106781716}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( ACS * MDR ) * ( ARS - ARS ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.13070539419087138, "obj2": 0.7148883475364368}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( FirstVNF_RAM + ( Min( FirstVNF_CPU ,PN ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "Max( ( DS + MUR ),( Max( ( RCSe / CS ),( DS + Max( MUR,Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) ) * MLU ) )", "obj1": 0.8609958506224067, "obj2": 0.10410720662173682}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8900414937759336, "obj2": 0.0924753397564199}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Max( MDR,Min( PN ,( ARS - AMS ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.2074688796680498, "obj2": 0.6257881459439997}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ACS * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6554971011529693}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8775933609958506, "obj2": 0.10282529601955186}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_Mem + DDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( ( DS * ( ( MLU + RMSe ) / MUR ) ) / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8817427385892116, "obj2": 0.1002376386614791}, {"determining": "Max( ( MDR + DDR ),( CRS + ( ( MDR / MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( Min( ( MUM - RMSe ) ,( ( ( ( MUR - Min( CS ,CS ) ) / Max( MLU,MUC ) ) + ( Min( RRSe ,Min( RMSe ,DS ) ) - MUR ) ) / ( ( ( ( MUR + MLU ) - MUR ) - Min( ( MLU + MUR ) ,RMSe ) ) - ( DS - ( ( CS * CS ) + ( MUM + RRSe ) ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6898815921522272}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( Min( DDR ,FirstVNF_CPU_Server ),( ARS * ACS ) ) - FirstVNF_RAM ) ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( MUM - RRSe ) / ( DS * ( ( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) + RMSe ) / MUR ) ) )", "obj1": 0.9273858921161826, "obj2": 0.055068265416106564}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( Min( BR ,FirstVNF_CPU ) + Const ) - MRS ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( RRSe ,CS ) )", "obj1": 0.1970954356846473, "obj2": 0.6317046568930196}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( Max( FirstVNF_RAM_Server,( ( Min( BR ,FirstVNF_CPU ) + Const ) - MRS ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( RRSe ,CS ) )", "obj1": 0.1970954356846473, "obj2": 0.6317046568930196}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( Max( MDR,Min( PN ,( ARS - AMS ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.2074688796680498, "obj2": 0.6257881459439997}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "( Max( MDR,( MRS + ( BR * ( DDR + FirstVNF_CPU ) ) ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( MUC ,MUR ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / Const ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( MRS ,Min( FirstVNF_Mem_Server ,MRS ) ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + MLU ) ) - Max( ( RMSe * ( ( RRSe + RCSe ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( MLU - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( BR ,( DDR - AMS ) ) / ( DDR / Min( Const ,MRS ) ) )", "choosing": "Max( ( CS - MUC ),Max( RMSe,RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "15": [{"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( FirstVNF_CPU_Server / ( DDR - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS - ARS ) ) - Min( Min( FirstVNF_CPU ,PN ) ,Min( RRS ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( RCSe ,MUM ) - Min( MUR ,( MUC * ( MUM / ( RRSe / CS ) ) ) ) )", "obj1": 0.4107883817427386, "obj2": 0.49530688529837896}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.7365145228215768, "obj2": 0.17701112914933467}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( ACS * MDR ) * ( ARS - Max( AMS,RRS ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,( RCSe / RCSe ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.529045643153527, "obj2": 0.38248583797420366}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( ( MDR / MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) + MUR ),( ( RRSe + MUC ) / RRSe ) )", "obj1": 0.9024896265560166, "obj2": 0.09070702539184358}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( Max( BR,RRS ) - Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) )", "choosing": "( ( RCSe * MUC ) - Max( Max( MUC,MLU ),( MUM + CS ) ) )", "obj1": 0.4979253112033195, "obj2": 0.4116469755527051}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,( DDR * Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( Max( MLU,MLU ),MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.5601659751037344, "obj2": 0.36611549255931064}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( Max( BR,RRS ) - Max( ( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - Max( ( PN / ( ACS + FirstVNF_RAM_Server ) ),Const ) ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RRSe - ( ( CS / MUM ) * ( MUR * CS ) ) ) )", "obj1": 0.5186721991701245, "obj2": 0.39555780584242745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( ( ( DDR / BR ) * Max( Min( Const ,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,( PN - ( Const * BR ) ) ) ) ,AMS ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( ( MLU / RRSe ) - Min( Max( RCSe,( DS - MUR ) ) ,RMSe ) ) - Min( ( Min( RRSe ,MLU ) * RMSe ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( ACS * MDR ) * ( ARS - ARS ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.13070539419087138, "obj2": 0.7148883475364368}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( FirstVNF_RAM + ( Min( FirstVNF_CPU ,PN ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "Max( ( DS + MUR ),( Max( ( RCSe / CS ),( DS + Max( MUR,Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) ) * MLU ) )", "obj1": 0.8609958506224067, "obj2": 0.10410720662173682}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8900414937759336, "obj2": 0.0924753397564199}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ACS * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6554971011529693}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8775933609958506, "obj2": 0.10282529601955186}, {"determining": "Max( ( MDR + DDR ),( CRS + ( ( MDR / MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( Min( ( MUM - RMSe ) ,( ( ( ( MUR - Min( CS ,CS ) ) / Max( MLU,MUC ) ) + ( Min( RRSe ,Min( RMSe ,DS ) ) - MUR ) ) / ( ( ( ( MUR + MLU ) - MUR ) - Min( ( MLU + MUR ) ,RMSe ) ) - ( DS - ( ( CS * CS ) + ( MUM + RRSe ) ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.15560165975103735, "obj2": 0.6898815921522272}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( MRS + FirstVNF_RAM ),( DDR + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / ( RMSe + RRSe ) ) / ( RRSe * RMSe ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( Min( DDR ,FirstVNF_CPU_Server ),( ARS * ACS ) ) - FirstVNF_RAM ) ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( MUM - RRSe ) / ( DS * ( ( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) + RMSe ) / MUR ) ) )", "obj1": 0.9273858921161826, "obj2": 0.055068265416106564}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_Mem + DDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( ( DS * ( ( MLU + RMSe ) / MUR ) ) / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8817427385892116, "obj2": 0.1002376386614791}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / Min( MUM ,( ( MLU * ( DS + RMSe ) ) * ( RCSe / ( CS - ( RMSe / ( DS / MLU ) ) ) ) ) ) ) / ( DS * Max( ( RMSe + MLU ),( ( ( MUR * ( Max( RCSe,RMSe ) * ( MUM - RRSe ) ) ) * CS ) * Min( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.8838174273858921, "obj2": 0.09845023740570291}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / Min( MUM ,( ( MLU * ( DS + RMSe ) ) * ( RCSe / ( CS - ( RMSe / ( DS / MLU ) ) ) ) ) ) ) / ( DS * Max( ( RMSe + MLU ),( ( ( MUR * ( Max( RCSe,RMSe ) * ( MUM - RRSe ) ) ) * CS ) * Min( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.8838174273858921, "obj2": 0.09845023740570291}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "( Max( MDR,FirstVNF_RAM_Server ) * ( Max( MDR,( MRS + ( BR * ( DDR + FirstVNF_CPU ) ) ) ) * ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( Min( DS ,MUR ) - ( RRSe * MUM ) ) - Min( DS ,CS ) )", "obj1": 0.15352697095435686, "obj2": 0.6941514860485326}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "16": [{"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( Max( ( BR / MDR ),( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7904564315352697, "obj2": 0.1238806371234286}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( FirstVNF_CPU_Server / ( DDR - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS - ARS ) ) - Min( Min( FirstVNF_CPU ,PN ) ,Min( RRS ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( RCSe ,MUM ) - Min( MUR ,( MUC * ( MUM / ( RRSe / CS ) ) ) ) )", "obj1": 0.4107883817427386, "obj2": 0.49530688529837896}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( ( MDR / MDR ) * ( FirstVNF_RAM_Server - FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) + MUR ),( ( RRSe + MUC ) / RRSe ) )", "obj1": 0.9024896265560166, "obj2": 0.09070702539184358}, {"determining": "Min( BR ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.8091286307053942, "obj2": 0.10871758077475985}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( FirstVNF_CPU_Server * MDR ) ) ) )", "choosing": "Max( ( ( Max( MUC,MUM ) * CS ) - RMSe ),( MUC * ( ( MUR * MUC ) / MUM ) ) )", "obj1": 0.9294605809128631, "obj2": 0.04639001560577543}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( Max( ( FirstVNF_Mem / FirstVNF_CPU ),( FirstVNF_Mem * ACS ) ) + ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / ( FirstVNF_RAM * FirstVNF_CPU ) ) ) - ( Max( ( DDR * BR ),( MRS - FirstVNF_CPU ) ) / ( ( MRS * BR ) / ( ( Min( FirstVNF_Mem ,ACS ) + Min( PN ,RRS ) ) - ( ( BR / MDR ) - Min( FirstVNF_RAM ,MRS ) ) ) ) ) )", "choosing": "Max( ( ( RRSe * MUM ) / MUM ),( RRSe - ( Min( RRSe ,MLU ) - RCSe ) ) )", "obj1": 0.8443983402489627, "obj2": 0.10497087556628122}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.7365145228215768, "obj2": 0.17701112914933467}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Min( ( Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) + ( ( ( MLU / Min( MUR ,CS ) ) - ( ( Max( RRSe,RCSe ) + MUM ) - ( MUM / ( RCSe * MUM ) ) ) ) * RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.6887966804979253, "obj2": 0.2257592797385197}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( ( ( DDR / BR ) * Max( Min( Const ,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,( PN - ( Const * BR ) ) ) ) ,AMS ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( ( MLU / RRSe ) - Min( Max( RCSe,( DS - MUR ) ) ,RMSe ) ) - Min( ( Min( RRSe ,MLU ) * RMSe ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( ( Max( Min( ( MRS * Const ) ,DDR ),FirstVNF_RAM ) + BR ) / FirstVNF_RAM ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,( Min( MUM ,MUC ) + ( CS - MUC ) ) ) ) ,CS ) ,CS ) )", "obj1": 0.15145228215767634, "obj2": 0.6895710167901317}, {"determining": "( ( ACS * MDR ) * ( ARS - ARS ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.13070539419087138, "obj2": 0.7148883475364368}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - ( CRS - AMS ) ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + RCSe ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.17634854771784234, "obj2": 0.646573227427183}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( ( ( Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Max( RCSe,MLU ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.7323651452282157, "obj2": 0.17924865796650805}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( FirstVNF_RAM + ( Min( FirstVNF_CPU ,PN ) - FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM_Server - ACS ) )", "choosing": "Max( ( DS + MUR ),( Max( ( RCSe / CS ),( DS + Max( MUR,Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) ) * MLU ) )", "obj1": 0.8609958506224067, "obj2": 0.10410720662173682}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8900414937759336, "obj2": 0.0924753397564199}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ACS * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + Min( ( MLU * ( DS / MUM ) ) ,MUM ) ) ) )", "obj1": 0.17427385892116182, "obj2": 0.6554971011529693}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( MUR / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8775933609958506, "obj2": 0.10282529601955186}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( Max( Min( DDR ,FirstVNF_CPU_Server ),( ARS * ACS ) ) - FirstVNF_RAM ) ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( MUM - RRSe ) / ( DS * ( ( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) + RMSe ) / MUR ) ) )", "obj1": 0.9273858921161826, "obj2": 0.055068265416106564}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( FirstVNF_RAM_Server * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - ( RMSe / ( MLU / MLU ) ) ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "Min( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) ) ,( ( FirstVNF_Mem + DDR ) * FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( MLU,RRSe ) ,Max( MUC,MUC ) ) - ( ( ( DS * ( ( MLU + RMSe ) / MUR ) ) / Min( RCSe ,DS ) ) / DS ) )", "obj1": 0.8817427385892116, "obj2": 0.1002376386614791}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / Min( MUM ,( ( MLU * ( DS + RMSe ) ) * ( RCSe / ( CS - ( RMSe / ( DS / MLU ) ) ) ) ) ) ) / ( DS * Max( ( RMSe + MLU ),( ( ( MUR * ( Max( RCSe,RMSe ) * ( MUM - RRSe ) ) ) * CS ) * Min( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.8838174273858921, "obj2": 0.09845023740570291}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - FirstVNF_Mem ) - Max( FirstVNF_Mem,RRS ) )", "choosing": "( ( RCSe / Min( MUM ,( ( MLU * ( DS + RMSe ) ) * ( RCSe / ( CS - ( RMSe / ( DS / MLU ) ) ) ) ) ) ) / ( DS * Max( ( RMSe + MLU ),( ( ( MUR * ( Max( RCSe,RMSe ) * ( MUM - RRSe ) ) ) * CS ) * Min( Min( RMSe ,Min( ( RMSe / RMSe ) ,( MUM / MUR ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.8838174273858921, "obj2": 0.09845023740570291}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}], "17": [{"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( Min( FirstVNF_RAM_Server ,( RRS + ( FirstVNF_CPU_Server - ( ( ACS * MDR ) * ( ARS - ARS ) ) ) ) ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "( Max( ( MUR - ( DS - MUC ) ),Min( Max( MUM,( ( MUR + ( RCSe + Min( MUC ,MUR ) ) ) * RMSe ) ) ,MUC ) ) / ( ( ( RCSe / CS ) * MUR ) * ( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( MUC ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) )", "obj1": 0.9253112033195021, "obj2": 0.05808346083976187}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( FirstVNF_CPU_Server / ( DDR - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS - ARS ) ) - Min( Min( FirstVNF_CPU ,PN ) ,Min( RRS ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( RCSe ,MUM ) - Min( MUR ,( MUC * ( MUM / ( RRSe / CS ) ) ) ) )", "obj1": 0.4107883817427386, "obj2": 0.49530688529837896}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( ( MRS / Min( ( Min( FirstVNF_Mem_Server ,( Max( FirstVNF_RAM_Server,PN ) / FirstVNF_CPU ) ) / FirstVNF_CPU ) ,FirstVNF_CPU ) ) - Max( ( FirstVNF_Mem - ( Const - FirstVNF_RAM_Server ) ),BR ) ) / ( ( ( BR / ( Const + FirstVNF_Mem ) ) / ACS ) - RRS ) )", "choosing": "Max( Max( MUR,CS ),Min( ( Min( MUC ,MUC ) + ( Max( ( ( ( MUC - MLU ) + ( CS * CS ) ) * ( ( RMSe * MLU ) * Max( DS,RMSe ) ) ),( ( Max( RCSe,CS ) * RRSe ) / DS ) ) + Max( Max( RCSe,RRSe ),MUM ) ) ) ,RRSe ) )", "obj1": 0.9273858921161826, "obj2": 0.039640143879906664}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Min( ( Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) + ( ( ( MLU / Min( MUR ,CS ) ) - ( ( Max( RRSe,RCSe ) + MUM ) - ( MUM / ( RCSe * MUM ) ) ) ) * RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.6887966804979253, "obj2": 0.2257592797385197}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( ( Max( Min( ( MRS * Const ) ,DDR ),FirstVNF_RAM ) + BR ) / FirstVNF_RAM ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,( Min( MUM ,MUC ) + ( CS - MUC ) ) ) ) ,CS ) ,CS ) )", "obj1": 0.15145228215767634, "obj2": 0.6895710167901317}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( MDR + Const ) ),( ( ACS * ( FirstVNF_CPU_Server + Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_CPU_Server ,Max( MRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( DS - MUR ) / Max( RRSe,RRSe ) ) + Max( Max( MUM,CS ),( MUC - MUM ) ) ) / Min( ( ( DS / Max( MUR,RMSe ) ) + MLU ) ,( RMSe * RMSe ) ) )", "obj1": 0.11203319502074689, "obj2": 0.7388230406300587}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "Max( ( ( AMS / AMS ) + AMS ),( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) )", "choosing": "( RCSe / ( RRSe * Max( ( DS + MUR ),Max( MUC,MUC ) ) ) )", "obj1": 0.16597510373443983, "obj2": 0.6721358649769343}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Min( Max( FirstVNF_Mem_Server,Min( ( ( DDR / BR ) * Max( Min( Const ,FirstVNF_RAM ),FirstVNF_Mem_Server ) ) ,( PN - ( Const * BR ) ) ) ) ,AMS ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( ( MLU / RRSe ) - Min( Max( RCSe,( DS - MUR ) ) ,RMSe ) ) - Min( ( Min( RRSe ,MLU ) * RMSe ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( MDR,( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15975103734439833, "obj2": 0.6731378914671317}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( FirstVNF_RAM_Server * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - ( RMSe / ( MLU / MLU ) ) ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * MRS ) / ( DDR - AMS ) )", "choosing": "Min( Max( RRSe,( ( MUM * MLU ) - RRSe ) ) ,Min( Max( RRSe,MUC ) ,( MUR - Max( MUM,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / ( BR - MRS ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( Min( MUC ,CS ) * DS ),MLU ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server + ARS ) - ( ( ( ( CRS + MDR ) - ( BR * Max( ( ( FirstVNF_RAM_Server - PN ) - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) ) * MRS ) + MDR ) )", "choosing": "Max( ( ( RRSe * ( RMSe + MUM ) ) * Max( Min( CS ,MLU ),Min( Max( MUM,Max( RCSe,RMSe ) ) ,CS ) ) ),Max( MUC,MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - ( Max( DDR,( FirstVNF_RAM_Server + MRS ) ) / ( FirstVNF_RAM - Max( Max( RRS,FirstVNF_RAM ),RRS ) ) ) ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "( ( ( RCSe / MUR ) / CS ) + ( MUM * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( RMSe * MUM ),Max( MUC,( ( MUC * MUC ) / Min( Min( RCSe ,( RCSe / MUR ) ) ,( MUR / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM_Server - DDR ) ,( RRS - ( Max( DDR,( FirstVNF_RAM_Server + MRS ) ) / ( FirstVNF_RAM - Max( Max( RRS,FirstVNF_RAM ),RRS ) ) ) ) )", "choosing": "( ( MUM / CS ) + ( Min( RCSe ,( RCSe / MUR ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "18": [{"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( Max( DDR,( FirstVNF_RAM_Server + MRS ) ) / ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "Max( ( RMSe * MUM ),Max( MUC,( ( MUC * MUC ) / Min( Min( RCSe ,( MUM / MUR ) ) ,( MUR / MUR ) ) ) ) )", "obj1": 0.9128630705394191, "obj2": 0.07069760041409928}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( FirstVNF_CPU_Server / ( DDR - ( Min( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ,( AMS - ARS ) ) - Min( Min( FirstVNF_CPU ,PN ) ,Min( RRS ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( RCSe ,MUM ) - Min( MUR ,( MUC * ( MUM / ( RRSe / CS ) ) ) ) )", "obj1": 0.4107883817427386, "obj2": 0.49530688529837896}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Min( ( Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) + ( ( ( MLU / Min( MUR ,CS ) ) - ( ( Max( RRSe,RCSe ) + MUM ) - ( MUM / ( RCSe * MUM ) ) ) ) * RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.6887966804979253, "obj2": 0.2257592797385197}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( ( Max( Min( ( MRS * Const ) ,DDR ),FirstVNF_RAM ) + BR ) / FirstVNF_RAM ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( ( MUR + MUC ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,( Min( MUM ,MUC ) + ( CS - MUC ) ) ) ) ,CS ) ,CS ) )", "obj1": 0.15145228215767634, "obj2": 0.6895710167901317}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "Max( ( ( FirstVNF_Mem_Server * PN ) * FirstVNF_Mem_Server ),( FirstVNF_CPU_Server + AMS ) )", "choosing": "( Min( RMSe ,RCSe ) - ( Max( Max( CS,MLU ),( MUC + MUR ) ) + ( Max( RCSe,MUC ) + Min( RCSe ,MUC ) ) ) )", "obj1": 0.15767634854771784, "obj2": 0.677207857230487}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( Min( MUC ,MUR ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.16597510373443983, "obj2": 0.6709592804115648}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( MDR,( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15975103734439833, "obj2": 0.6731378914671317}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( FirstVNF_RAM_Server * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - ( RMSe / ( MLU / MLU ) ) ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,AMS ) - ( FirstVNF_Mem + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( MLU / CS ) / Max( MUC,DS ) ) ,Min( ( Min( MUM ,MUR ) - Min( DS ,RMSe ) ) ,Min( MUM ,MUR ) ) ) + ( ( ( CS + RRSe ) * ( MUR + MUM ) ) - ( Min( MUC ,MUC ) + Max( CS,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "19": [{"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( Max( DDR,( FirstVNF_RAM_Server + MRS ) ) / ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "Max( ( RMSe * MUM ),Max( MUC,( ( MUC * MUC ) / Min( Min( RCSe ,( MUM / MUR ) ) ,( MUR / MUR ) ) ) ) )", "obj1": 0.9128630705394191, "obj2": 0.07069760041409928}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Min( ( Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) + ( ( ( MLU / Min( MUR ,CS ) ) - ( ( Max( RRSe,RCSe ) + MUM ) - ( MUM / ( RCSe * MUM ) ) ) ) * RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.6887966804979253, "obj2": 0.2257592797385197}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( ( ACS * MDR ) * ( AMS * MDR ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( Max( ( MLU + RMSe ),( RCSe / ( CS - DS ) ) ) * DS ) )", "obj1": 0.11618257261410789, "obj2": 0.7224392489959799}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( FirstVNF_RAM_Server * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - ( RMSe / ( MLU / MLU ) ) ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( ACS * PN ) - ( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Max( MLU,RCSe ) ,( RMSe - RRSe ) )", "obj1": 0.9937759336099585, "obj2": 0.002841473068239307}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,( ( FirstVNF_CPU_Server + MDR ) + MDR ) )", "choosing": "Min( ( MUR * ( RMSe * MLU ) ) ,( MUC - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS / ( BR - DDR ) ) * ( CRS + Const ) )", "choosing": "( CS - ( MUC + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "20": [{"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( Max( DDR,( FirstVNF_RAM_Server + MRS ) ) / ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "Max( ( RMSe * MUM ),Max( MUC,( ( MUC * MUC ) / Min( Min( RCSe ,( MUM / MUR ) ) ,( MUR / MUR ) ) ) ) )", "obj1": 0.9128630705394191, "obj2": 0.07069760041409928}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Min( ( Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) + ( ( ( MLU / Min( MUR ,CS ) ) - ( ( Max( RRSe,RCSe ) + MUM ) - ( MUM / ( RCSe * MUM ) ) ) ) * RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.6887966804979253, "obj2": 0.2257592797385197}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + ( MDR / FirstVNF_CPU ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - RCSe ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.2157676348547718, "obj2": 0.6058020077991904}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( FirstVNF_RAM_Server * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - ( RMSe / ( MLU / MLU ) ) ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6102723602840107}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),( ( ARS * ACS ) * ( MDR / CRS ) ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( Min( ( MLU - RRSe ) ,Min( RRSe ,RMSe ) ),Max( Max( RRSe,RMSe ),( CS * MLU ) ) ) - ( ( ( RRSe + RCSe ) - ( MUR * RRSe ) ) / Min( ( RRSe / CS ) ,( MLU / MUR ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( ( MRS / Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) / ( FirstVNF_RAM - PN ) )", "choosing": "Min( ( MUR * ( Min( RCSe ,Min( MUM ,RRSe ) ) * MLU ) ) ,( MUC - CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0008416603683249052}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( ( CRS / ( FirstVNF_CPU_Server + BR ) ) ,Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( MUR / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.21784232365145229, "obj2": 0.6036835558053377}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "21": [{"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( Max( DDR,( FirstVNF_RAM_Server + MRS ) ) / ( FirstVNF_RAM - Max( FirstVNF_RAM_Server,RRS ) ) )", "choosing": "Max( ( RMSe * MUM ),Max( MUC,( ( MUC * MUC ) / Min( Min( RCSe ,( MUM / MUR ) ) ,( MUR / MUR ) ) ) ) )", "obj1": 0.9128630705394191, "obj2": 0.07069760041409928}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Min( ( Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) + ( ( ( MLU / Min( MUR ,CS ) ) - ( ( Max( RRSe,RCSe ) + MUM ) - ( MUM / ( RCSe * MUM ) ) ) ) * RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.6887966804979253, "obj2": 0.2257592797385197}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "Max( Max( ( ( MUC - ( DS / ( ( RCSe - MUM ) - DS ) ) ) + MUR ),Max( MUC,MUC ) ),Max( MUC,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) * MRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( MDR - AMS ) * MRS ),( ( MDR - AMS ) / CRS ) )", "choosing": "( ( MLU / ( ( ( ( MUC + MUM ) * Max( MLU,RMSe ) ) - RCSe ) * ( MUC + ( MLU / Min( ( RMSe - RMSe ) ,Min( ( MUR * RRSe ) ,MUR ) ) ) ) ) ) - ( CS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( MRS * MRS ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) / CRS ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / RRS ) ) ) )", "choosing": "( Min( RCSe ,Min( MUM ,RRSe ) ) - ( ( ( ( ( MUM * Max( MLU,RCSe ) ) + RMSe ) - Max( CS,MUC ) ) * CS ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}], "22": [{"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( Min( PN ,( ARS - AMS ) ) * ( DDR + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * MUM ) ) - Min( Min( Max( Min( Min( Max( Min( RRSe ,MUM ),Max( MUC,DS ) ) ,MUC ) ,CS ),Max( MUC,DS ) ) ,MUC ) ,CS ) )", "obj1": 0.6473029045643154, "obj2": 0.2681255089941986}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( Max( FirstVNF_RAM,DDR ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( RCSe + MUM ) / RMSe ) + MUM ) / RMSe ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7074688796680498, "obj2": 0.19962607204146374}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / FirstVNF_CPU ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),Min( DS ,( ( MUC / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,( FirstVNF_Mem - ( ACS / AMS ) ) ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( CS + ( ( RCSe + RMSe ) * CS ) ) + Min( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) ,( Max( RMSe,( RMSe - RRSe ) ) + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( RRSe - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7157676348547718, "obj2": 0.1914767623017173}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( Min( Min( RRSe ,( MUM / MUR ) ) ,MUC ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( AMS / FirstVNF_CPU_Server ) / Min( ( ( MRS * ( FirstVNF_CPU * ACS ) ) - DDR ) ,Max( Const,FirstVNF_CPU_Server ) ) ) ,Min( ( FirstVNF_CPU_Server + MDR ) ,Max( ( DDR + AMS ),( CRS / MRS ) ) ) )", "choosing": "( ( Max( ( MUM + Max( MUM,RMSe ) ),( MUM * ( MUR + RCSe ) ) ) - MUM ) - ( Min( MUR ,MUR ) / ( MUR + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "23": [{"determining": "Min( Min( ( ( FirstVNF_RAM * PN ) - Min( ARS ,Max( Const,FirstVNF_Mem_Server ) ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( RMSe * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( FirstVNF_CPU_Server / ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) - ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( ( Min( Min( RRSe ,( MUM / MUR ) ) ,MUC ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( FirstVNF_CPU_Server + BR ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( DDR + ( ( ( ( Max( ARS,MRS ) - FirstVNF_RAM_Server ) + FirstVNF_Mem_Server ) - ( ( MRS * FirstVNF_RAM ) / MRS ) ) / FirstVNF_CPU_Server ) ),ACS ) / ( CRS * ( ( MRS + FirstVNF_RAM_Server ) * ( Max( FirstVNF_Mem,FirstVNF_CPU ) - ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( BR ,FirstVNF_Mem ) ) + FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( DS / ( ( ( Min( DS ,RMSe ) / ( ( MUC * RMSe ) / Max( DS,MUC ) ) ) + MLU ) * Min( ( ( Min( MUR ,RCSe ) / MUM ) - RRSe ) ,( ( RRSe - RRSe ) * RCSe ) ) ) ) - ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}], "24": [{"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( Max( ( RRSe - CS ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( MUR / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( MUC + RRSe ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM * PN ) - Min( ARS ,Max( Const,FirstVNF_Mem_Server ) ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( RMSe * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( MRS + ( DDR + FirstVNF_CPU ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Max( MUC,Max( MLU,( ( RRSe * RMSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_CPU_Server + BR ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( DS ,RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "25": [{"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "Max( ( MUR + Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / RCSe ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( Max( ( RRSe - CS ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( MUR / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( MUC + RRSe ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( Min( RRS ,( ( Min( FirstVNF_CPU ,PN ) - FirstVNF_RAM ) - ( ( CRS - ARS ) + Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( ( MUC * ( RCSe / CS ) ) / ( ( RCSe - RCSe ) * MLU ) ) - ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * CS ) ) * ( MUR / MUM ) ) ) ) ) ),( MUC - MLU ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Max( ( Min( MRS ,FirstVNF_CPU_Server ) - Max( MRS,FirstVNF_CPU_Server ) ),Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ,Min( ( Max( FirstVNF_Mem_Server,MDR ) + Max( ARS,FirstVNF_Mem ) ) ,Min( Min( FirstVNF_RAM ,ACS ) ,( PN - FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( MUC / MUC ) - ( MUC - RMSe ) ),( Min( RCSe ,MUR ) / ( MUM / MUR ) ) ) / ( Min( ( MUC / RRSe ) ,( RMSe - MLU ) ) + ( Min( ( MUM * RMSe ) ,( DS + MUC ) ) / Max( Min( MLU ,RMSe ),Min( MUM ,CS ) ) ) ) )", "obj1": 0.995850622406639, "obj2": 0.0016833207366498105}, {"determining": "Min( Min( ( ( FirstVNF_RAM * PN ) - Min( ARS ,Max( Const,FirstVNF_Mem_Server ) ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( RMSe * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "26": [{"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Min( ARS ,Max( Const,Max( Const,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( CS ,CS ) - ( MLU + MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "Max( ( MUR + Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / RCSe ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.3132780082987552, "obj2": 0.5496698775226677}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( Max( PN,( ARS * Max( Const,FirstVNF_Mem_Server ) ) ) * ( ( CRS * FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( PN - FirstVNF_CPU ) * ( ( AMS / RRS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( ( MUC * MUM ) - Min( MUC ,CS ) ) - ( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( MUM / Min( ( RCSe / RCSe ) ,MLU ) ) / Max( CS,MUM ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0020519215903739385}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10580912863070539, "obj2": 0.7383423902770261}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( Max( ( RRSe - CS ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( MUR / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( MUC + RRSe ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM * PN ) - Min( ARS ,Max( Const,FirstVNF_Mem_Server ) ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( RMSe * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server / ( DDR - ( FirstVNF_RAM_Server + ( BR * ( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) / Min( Const ,DDR ) ) + FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUM * RMSe ),Max( MUC,Max( MLU,( ( ( MUC * ( Max( MLU,MLU ) / ( RCSe * RCSe ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "27": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( RRSe ,CS ) - Min( ( RRSe * MUM ) ,MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Min( ARS ,Max( Const,Max( Const,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( CS ,CS ) - ( MLU + MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( Max( FirstVNF_Mem_Server,Min( Min( FirstVNF_CPU_Server ,ACS ) ,( AMS / DDR ) ) ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Min( RMSe ,MUR ) + Max( CS,RRSe ) ) + ( MUC - MUC ) ) ) )", "obj1": 0.6058091286307054, "obj2": 0.31480654288209825}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( RRS,BR ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) )", "choosing": "Max( ( ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) + ( RCSe / Max( RRSe,( DS - ( RRSe / Max( DS,MUC ) ) ) ) ) ),( Max( ( CS + ( RRSe - CS ) ),Max( DS,( Max( RCSe,MUC ) / ( CS * DS ) ) ) ) - Max( CS,RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.7549708920985808}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "Max( ( MUR + Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / RCSe ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( Max( ( RRSe - CS ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( MUR / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( MUC + RRSe ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM * PN ) - Min( ARS ,Max( Const,FirstVNF_Mem_Server ) ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( RMSe * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( DDR ,Min( ( ARS / ARS ) ,FirstVNF_CPU_Server ) ) ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( ( ( FirstVNF_CPU_Server / CRS ) + FirstVNF_Mem ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( MUR * RMSe ) / ( ( RCSe + MUM ) / ( ( MUR / RCSe ) * Min( MUC ,( DS + ( ( RRSe / ( DS * MLU ) ) - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS - FirstVNF_RAM_Server ) - Const ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( ( MUR * RCSe ) / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( MRS ,PN ) / ( FirstVNF_Mem_Server / Min( FirstVNF_RAM_Server ,( ( ARS - Max( Max( Const,FirstVNF_RAM_Server ),RRS ) ) - CRS ) ) ) ),( ( ( ( RRS / MRS ) / FirstVNF_CPU_Server ) - Const ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC * ( Min( RRSe ,Min( MUR ,( RMSe / CS ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MLU ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "28": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( RRSe ,CS ) - Min( ( RRSe * MUM ) ,MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( ( RCSe + RMSe ) * CS ) + CS ) + ( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) * ( RRSe + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),( ( Max( MLU,CS ) + MUM ) / RCSe ) )", "obj1": 0.6410788381742739, "obj2": 0.2712921902150848}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( FirstVNF_CPU_Server / ( Max( ( ( ( FirstVNF_Mem_Server - CRS ) / CRS ) * ( ( CRS - MDR ) * MRS ) ),( FirstVNF_CPU_Server + ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) + DDR ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.2925311203319502, "obj2": 0.558292305364086}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( ( BR / MRS ) - Max( AMS,Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),( Const + Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS * RCSe ) ,( MUC + RCSe ) ),Max( DS,MLU ) ) / ( RMSe * MUC ) )", "obj1": 0.2966804979253112, "obj2": 0.5505171002003928}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( CS / Min( ( MUM * RCSe ) ,MUC ) ),( Max( MUR,RCSe ) * ( CS + RRSe ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Min( ARS ,Max( Const,Max( Const,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( CS ,CS ) - ( MLU + MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "Max( ( MUR + Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / RCSe ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( Max( ( RRSe - CS ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( MUR / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( MUC + RRSe ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM * PN ) - Min( ARS ,Max( Const,FirstVNF_Mem_Server ) ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( RMSe * Max( DS,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / ( ( RRS + AMS ) + Min( DDR ,( RRS * BR ) ) ) ) * ( Min( RRS ,( FirstVNF_Mem - ( RRS + Max( ( Max( FirstVNF_Mem,ARS ) * FirstVNF_RAM ),Max( ( FirstVNF_CPU_Server + CRS ),( FirstVNF_CPU_Server - MDR ) ) ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RCSe ) - ( ( RCSe * RCSe ) / ( RCSe / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "Max( ( RRSe / RMSe ),Max( MUC,Max( Min( Max( CS,MUM ) ,( RRSe / RMSe ) ),( MLU / ( Min( ( ( MUM * MUR ) / RMSe ) ,Max( Min( MUM ,DS ),( RMSe / MLU ) ) ) + MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "29": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( ( MUR - Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / ( RRSe / MUC ) ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( ( RCSe + RMSe ) * CS ) + CS ) + ( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) * ( RRSe + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),( ( Max( MLU,CS ) + MUM ) / RCSe ) )", "obj1": 0.6410788381742739, "obj2": 0.2712921902150848}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( MUR,( MUM / Max( Min( DS ,Min( MUC ,Min( ( RCSe * ( MUR + RRSe ) ) ,MUC ) ) ),MUC ) ) )", "obj1": 0.91701244813278, "obj2": 0.036847843453462745}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUC / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( RRSe ,CS ) - Min( ( RRSe * MUM ) ,MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Min( ARS ,Max( Const,Max( Const,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( CS ,CS ) - ( MLU + MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "Max( ( MUR + Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / RCSe ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( Max( RRS,CRS ) - Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - Min( PN ,AMS ) ) ,RRS ) ,( CRS + ARS ) )", "choosing": "( Max( ( RRSe - CS ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( MUR / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( MUC + RRSe ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "30": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( Min( RMSe ,Min( Min( RMSe ,RRSe ) ,Min( MUR ,( MUM - MUR ) ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( ( MUR - Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / ( RRSe / MUC ) ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( ( RCSe + RMSe ) * CS ) + CS ) + ( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) * ( RRSe + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),( ( Max( MLU,CS ) + MUM ) / RCSe ) )", "obj1": 0.6410788381742739, "obj2": 0.2712921902150848}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUC / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( RRSe ,CS ) - Min( ( RRSe * MUM ) ,MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_RAM_Server ,DDR ) ,Min( ARS ,Max( Const,Max( Const,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( CS ,CS ) - ( MLU + MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "31": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( Min( RMSe ,Min( Min( RMSe ,RRSe ) ,Min( MUR ,( MUM - MUR ) ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( MDR / ( FirstVNF_CPU - Max( DDR,( BR + DDR ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( RMSe,DS ) + ( DS - MUC ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.45435684647302904, "obj2": 0.46886762210445687}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( AMS + FirstVNF_CPU_Server ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,Min( ACS ,FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( ( ( ( RCSe + RMSe ) * CS ) + CS ) + ( ( DS / Max( ( RMSe * RCSe ),( MUC / MUR ) ) ) * ( RRSe + RMSe ) ) ) / ( RCSe + MUM ) ) * ( CS + ( CS - Max( RRSe,( RMSe / ( MUM - ( DS - DS ) ) ) ) ) ) ),( ( Max( MLU,CS ) + MUM ) / RCSe ) )", "obj1": 0.6410788381742739, "obj2": 0.2712921902150848}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUC / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( ( MUR - Max( MUR,MLU ) ),( MUC * ( ( ( Min( ( Min( MUM ,MUR ) * ( RMSe * MUM ) ) ,Min( MUM ,( CS / DS ) ) ) / ( RRSe / MUC ) ) / MUM ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( Min( RRSe ,CS ) - Min( ( RRSe * MUM ) ,MUC ) ) - ( Max( RRSe,RCSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}], "32": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( Min( RMSe ,Min( Min( RMSe ,RRSe ) ,Min( MUR ,( MUM - MUR ) ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( CS / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( ( CS + MLU ),DS ) - ( Max( Min( RCSe ,RRSe ),( ( MUC / DS ) / RCSe ) ) - Max( MUC,MUR ) ) ) ),( ( Min( MUC ,( RMSe / RMSe ) ) - MUC ) / MUC ) )", "obj1": 0.43568464730290457, "obj2": 0.4641272481697605}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Min( ( Const - ( ARS - FirstVNF_RAM_Server ) ) ,Min( ( CRS * ( ( Const - MDR ) + ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) ,Max( ( ARS - ACS ),( PN - FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.483402489626556, "obj2": 0.40856539317242224}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( ( ( ( DDR / ( DDR - ARS ) ) + ( ARS - AMS ) ) + FirstVNF_CPU_Server ) - BR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,DS ) ) )", "obj1": 0.6286307053941909, "obj2": 0.2630126974182074}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( ACS / ( AMS / ( DDR - RRS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( ( ACS * AMS ) - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server + CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( Min( PN ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( ( RMSe - RMSe ) ,( CS * CS ) ) / Min( DS ,( RCSe + RRSe ) ) ) / RRSe ) * MUR ) + Max( MUM,MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + MUC ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.42531120331950206, "obj2": 0.47797976368228445}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( ( AMS / ( FirstVNF_Mem - RRS ) ) / ACS ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) + AMS ) ) * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( FirstVNF_Mem,FirstVNF_Mem ) * RRS ) ) )", "choosing": "( ( ( ( ( ( MUR + ( RCSe - CS ) ) / MUR ) + ( RMSe / ( MUR + DS ) ) ) + RRSe ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUC / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( FirstVNF_Mem_Server - ( Min( Max( MDR,ACS ) ,( Const - ( ( ACS + AMS ) * Max( CRS,ARS ) ) ) ) / Min( Const ,Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + CS ),Min( ( ( RRSe + ( RMSe + CS ) ) * MLU ) ,( ( ( ( DS + MUC ) * ( RCSe + MUR ) ) - ( Min( RRSe ,RRSe ) - Max( RRSe,MUM ) ) ) + RCSe ) ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( MDR - BR ) / ( DDR - ( MRS + AMS ) ) )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( MUM * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( Min( RMSe ,Min( Min( RMSe ,RRSe ) ,Min( MUR ,( MUM - MUR ) ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}], "33": [{"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,CS ),( MUC - MUM ) ) ) / Min( ( RMSe - RMSe ) ,Min( Max( MUM,CS ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "Max( Min( RMSe ,Min( Min( RMSe ,RRSe ) ,Min( MUR ,( MUM - MUR ) ) ) ),( MLU * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( ( CS + MLU ),DS ) - ( Max( Min( RCSe ,RRSe ),( ( MUC / DS ) / RCSe ) ) - Max( MUC,MUR ) ) ) ),( ( Min( MUC ,( RMSe / RMSe ) ) - MUC ) / MUC ) )", "obj1": 0.43568464730290457, "obj2": 0.4641272481697605}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "( ( ( ACS / ( AMS / ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server - CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * Min( PN ,FirstVNF_Mem ) ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR + ( ( MUC / CS ) - CS ) ) / MUR ) + ( RMSe / ( CS + ( ( CS / RRSe ) - RMSe ) ) ) ) + ( ( MUC / CS ) - CS ) ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.37344398340248963, "obj2": 0.4991660202006996}, {"determining": "Min( ( FirstVNF_RAM_Server - MRS ) ,( ( ARS + Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) ) - ( ( FirstVNF_CPU + ( MRS + ( AMS - Const ) ) ) * ARS ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / Min( MUC ,RMSe ) ),MLU ) )", "obj1": 0.4004149377593361, "obj2": 0.4921640785898883}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem * DDR ) ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.5352697095435685, "obj2": 0.3648989415320846}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( ( ( ( DDR / ( DDR - ARS ) ) + ( ARS - AMS ) ) + FirstVNF_CPU_Server ) - BR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,DS ) ) )", "obj1": 0.6286307053941909, "obj2": 0.2630126974182074}, {"determining": "( ( PN / ARS ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,RCSe ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4170124481327801, "obj2": 0.4730064565994559}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "Min( ( BR * ( DDR + FirstVNF_CPU ) ) ,Min( ( ( Max( CRS,( ( ACS / FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) ) - ( MDR * FirstVNF_CPU_Server ) ) + MDR ) ,Max( ( ARS - ACS ),( PN - FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MLU,( ( MUC / Min( Max( RMSe,RCSe ) ,MUM ) ) + ( ( Min( ( RCSe / MUR ) ,MLU ) / MUM ) / Max( CS,MUM ) ) ) ) - ( RCSe * MLU ) )", "obj1": 0.41286307053941906, "obj2": 0.485651722504808}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( ( ACS / ( AMS / ( DDR - RRS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( ( ACS * AMS ) - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server + CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( Min( PN ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( ( RMSe - RMSe ) ,( CS * CS ) ) / Min( DS ,( RCSe + RRSe ) ) ) / RRSe ) * MUR ) + Max( MUM,MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( ( AMS / ( FirstVNF_Mem - RRS ) ) / ACS ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) + AMS ) ) * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( FirstVNF_Mem,FirstVNF_Mem ) * RRS ) ) )", "choosing": "( ( ( ( ( ( MUR + ( RCSe - CS ) ) / MUR ) + ( RMSe / ( MUR + DS ) ) ) + RRSe ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUC / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}], "34": [{"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Const,BR ),Max( ( Min( MRS ,ACS ) - MRS ),BR ) ) ) ) * ( FirstVNF_RAM_Server - ( ( ( ARS + ACS ) + ( AMS + FirstVNF_Mem ) ) / AMS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,CS ),( MUC - MUM ) ) ) / Min( ( RMSe - RMSe ) ,Min( Max( MUM,CS ) ,( RRSe / RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "Min( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) + FirstVNF_Mem ) ,Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( ( Max( RCSe,MLU ) / ( MUC + MUR ) ),( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6991701244813278, "obj2": 0.2083809153124611}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( ( PN / Min( ( FirstVNF_Mem * MDR ) ,Max( FirstVNF_RAM_Server,Const ) ) ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( Min( RMSe ,RCSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4004149377593361, "obj2": 0.4805060630857344}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( ( CS + MLU ),DS ) - ( Max( Min( RCSe ,RRSe ),( ( MUC / DS ) / RCSe ) ) - Max( MUC,MUR ) ) ) ),( ( Min( MUC ,( RMSe / RMSe ) ) - MUC ) / MUC ) )", "obj1": 0.43568464730290457, "obj2": 0.4641272481697605}, {"determining": "( ( ( ACS / ( AMS / ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server - CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * Min( PN ,FirstVNF_Mem ) ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR + ( ( MUC / CS ) - CS ) ) / MUR ) + ( RMSe / ( CS + ( ( CS / RRSe ) - RMSe ) ) ) ) + ( ( MUC / CS ) - CS ) ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.37344398340248963, "obj2": 0.4991660202006996}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( PN / ARS ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,RCSe ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4170124481327801, "obj2": 0.4730064565994559}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem * DDR ) ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.5352697095435685, "obj2": 0.3648989415320846}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( ( ( ( DDR / ( DDR - ARS ) ) + ( ARS - AMS ) ) + FirstVNF_CPU_Server ) - BR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,DS ) ) )", "obj1": 0.6286307053941909, "obj2": 0.2630126974182074}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( Min( ( DDR / ( DDR - ARS ) ) ,Max( FirstVNF_Mem_Server,RRS ) ) + MDR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,Max( Min( ( ( DS / RRSe ) - ( MUC - RMSe ) ) ,MUR ),( DS + MUM ) ) ) ) )", "obj1": 0.8941908713692946, "obj2": 0.07427475695223777}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( ACS / ( AMS / ( DDR - RRS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( ( ACS * AMS ) - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server + CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( Min( PN ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( ( RMSe - RMSe ) ,( CS * CS ) ) / Min( DS ,( RCSe + RRSe ) ) ) / RRSe ) * MUR ) + Max( MUM,MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( ( AMS / ( FirstVNF_Mem - RRS ) ) / ACS ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) + AMS ) ) * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( FirstVNF_Mem,FirstVNF_Mem ) * RRS ) ) )", "choosing": "( ( ( ( ( ( MUR + ( RCSe - CS ) ) / MUR ) + ( RMSe / ( MUR + DS ) ) ) + RRSe ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( ( RRS + CRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}], "35": [{"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( ( ( ACS * ( FirstVNF_CPU_Server - RRS ) ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / FirstVNF_CPU_Server )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + RRSe ),( MUC / DS ) )", "obj1": 0.6950207468879668, "obj2": 0.20034737405465794}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( ( CS + MLU ),DS ) - ( Max( Min( RCSe ,RRSe ),( ( MUC / DS ) / RCSe ) ) - Max( MUC,MUR ) ) ) ),( ( Min( MUC ,( RMSe / RMSe ) ) - MUC ) / MUC ) )", "obj1": 0.43568464730290457, "obj2": 0.4641272481697605}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "( ( PN / Min( ( FirstVNF_Mem * MDR ) ,Max( FirstVNF_RAM_Server,Const ) ) ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( Min( RMSe ,RCSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4004149377593361, "obj2": 0.4805060630857344}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( PN / ARS ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,RCSe ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4170124481327801, "obj2": 0.4730064565994559}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem * DDR ) ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.5352697095435685, "obj2": 0.3648989415320846}, {"determining": "( ( BR * DDR ) - Min( Min( Min( ( BR * ( Max( FirstVNF_CPU_Server,( FirstVNF_RAM * ARS ) ) / Min( ( FirstVNF_RAM + MDR ) ,FirstVNF_Mem_Server ) ) ) ,Min( ( MRS / FirstVNF_RAM ) ,Max( FirstVNF_RAM,DDR ) ) ) ,FirstVNF_CPU ) ,Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Max( ( Min( ( RRSe + RMSe ) ,( CS * MLU ) ) * MLU ),Min( ( RMSe + RRSe ) ,( ( Max( ( DS / RMSe ),MLU ) / MUM ) * MLU ) ) )", "obj1": 0.5933609958506224, "obj2": 0.3260772826359979}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( ( ( ( DDR / ( DDR - ARS ) ) + ( ARS - AMS ) ) + FirstVNF_CPU_Server ) - BR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,DS ) ) )", "obj1": 0.6286307053941909, "obj2": 0.2630126974182074}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( Min( ( DDR / ( DDR - ARS ) ) ,Max( FirstVNF_Mem_Server,RRS ) ) + MDR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,Max( Min( ( ( DS / RRSe ) - ( MUC - RMSe ) ) ,MUR ),( DS + MUM ) ) ) ) )", "obj1": 0.8941908713692946, "obj2": 0.07427475695223777}, {"determining": "( Min( ARS ,FirstVNF_CPU ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( ( FirstVNF_Mem_Server - AMS ) ,MRS ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + DS ) ) - Max( ( RMSe * ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( CS - RMSe ) + MUR ) ) ) ),( RRSe - ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 0.38589211618257263, "obj2": 0.4956549439112484}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( Min( Max( MRS,MRS ) ,FirstVNF_Mem ) - ( MDR * ( ( ( ACS * ( ( MDR / ( ARS * BR ) ) / FirstVNF_Mem ) ) - Max( FirstVNF_Mem_Server,MDR ) ) * MRS ) ) )", "choosing": "Max( ( ( ( ( ( ( RMSe + ( RMSe / MLU ) ) + CS ) - ( RCSe * ( MUM * Max( MUC,DS ) ) ) ) * ( RCSe / CS ) ) / ( ( RMSe - Min( ( ( MUR / RMSe ) * DS ) ,( MLU / MUR ) ) ) * Min( RMSe ,CS ) ) ) - ( Min( MUC ,MUM ) - Min( MLU ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) ),Max( MUC,MLU ) )", "obj1": 0.6556016597510373, "obj2": 0.23642562031781747}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( ( ACS / ( AMS / ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server - CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * Min( PN ,FirstVNF_Mem ) ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR + ( ( MUC / CS ) - CS ) ) / MUR ) + ( RMSe / ( CS + ( ( CS / RRSe ) - RMSe ) ) ) ) + ( ( MUC / CS ) - CS ) ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.37344398340248963, "obj2": 0.4991660202006996}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "Min( Max( ARS,( ( FirstVNF_Mem_Server / ARS ) / ( ( DDR * Min( ( BR / MDR ) ,Const ) ) - FirstVNF_CPU_Server ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / MLU ) * MUC ),DS )", "obj1": 0.6763485477178424, "obj2": 0.2298443373878962}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "( ( ( ACS / ( AMS / ( DDR - RRS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( ( ACS * AMS ) - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server + CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( Min( PN ,FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( Min( ( RMSe - RMSe ) ,( CS * CS ) ) / Min( DS ,( RCSe + RRSe ) ) ) / RRSe ) * MUR ) + Max( MUM,MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( DS + ( ( Max( ( ( Max( MLU,CS ) + MUM ) / RCSe ),MUC ) + ( ( MUM + MUM ) + Min( DS ,Max( CS,CS ) ) ) ) / MUM ) ),Max( MUC,( ( RRSe * CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.6784232365145229, "obj2": 0.2256334475585796}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( PN / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) )", "obj1": 0.6473029045643154, "obj2": 0.24563602769721798}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( ( ( AMS / ( FirstVNF_Mem - RRS ) ) / ACS ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) + AMS ) ) * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server / FirstVNF_Mem ),( Max( FirstVNF_Mem,FirstVNF_Mem ) * RRS ) ) )", "choosing": "( ( ( ( ( ( MUR + ( RCSe - CS ) ) / MUR ) + ( RMSe / ( MUR + DS ) ) ) + RRSe ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.6452282157676349, "obj2": 0.26116365987954465}], "36": [{"determining": "( Min( ARS ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem - MDR ) ,( CRS - ( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( DDR - MRS ) ) * ( Max( MDR,FirstVNF_RAM ) - Max( MRS,RRS ) ) ) ) ) ) )", "choosing": "Max( ( RRSe - ( CS * MUC ) ),( Max( MUR,Max( Min( MLU ,( MUM * RMSe ) ),MUR ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "( ( BR + PN ) - ( MDR + ( MRS * Min( Min( MDR ,AMS ) ,AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUC + MUC ) + DS ) + ( MUR / ( Min( MUC ,( ( MUC + MUC ) + DS ) ) / MLU ) ) ) / ( DS - MUM ) ),Max( MUC,MLU ) )", "obj1": 0.6410788381742739, "obj2": 0.2174183794433735}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( ( ( ACS * ( FirstVNF_CPU_Server - RRS ) ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / FirstVNF_CPU_Server )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + RRSe ),( MUC / DS ) )", "obj1": 0.6950207468879668, "obj2": 0.20034737405465794}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( ( ( ( DDR / ( DDR - ARS ) ) + ( ARS - AMS ) ) + FirstVNF_CPU_Server ) - BR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,DS ) ) )", "obj1": 0.6286307053941909, "obj2": 0.2630126974182074}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( ( CS + MLU ),DS ) - ( Max( Min( RCSe ,RRSe ),( ( MUC / DS ) / RCSe ) ) - Max( MUC,MUR ) ) ) ),( ( Min( MUC ,( RMSe / RMSe ) ) - MUC ) / MUC ) )", "obj1": 0.43568464730290457, "obj2": 0.4641272481697605}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ARS ,( FirstVNF_Mem - RRS ) ) - ( MRS * ( FirstVNF_CPU_Server * BR ) ) ) + Max( Max( FirstVNF_Mem,MDR ),( BR + ( ( ( ( MDR / FirstVNF_CPU ) + FirstVNF_CPU ) / ( ( FirstVNF_RAM_Server - ARS ) * FirstVNF_Mem_Server ) ) + AMS ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( Min( ( MUC / MUC ) ,( RMSe + CS ) ) - RRSe ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( ( CS - ( Min( DS ,( MUM * MLU ) ) + ( ( Min( MUC ,CS ) + MUR ) / CS ) ) ) - ( MLU * ( ( MLU * MUC ) * CS ) ) ) ) )", "obj1": 0.7074688796680498, "obj2": 0.18145534663789556}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( PN / Min( ( FirstVNF_Mem * MDR ) ,Max( FirstVNF_RAM_Server,Const ) ) ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( Min( RMSe ,RCSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4004149377593361, "obj2": 0.4805060630857344}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( PN / ARS ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,RCSe ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4170124481327801, "obj2": 0.4730064565994559}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem * DDR ) ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.5352697095435685, "obj2": 0.3648989415320846}, {"determining": "Min( Max( ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + ( MRS / DDR ) ) ) ,Max( RRS,CRS ) ) - Min( PN ,AMS ) ),RRS ) ,( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem_Server ),Min( ( Min( MRS ,ACS ) - MRS ) ,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / AMS ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( ( ( MLU - RRSe ) - MLU ) / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 0.5933609958506224, "obj2": 0.3131761336685769}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + ( ACS + Min( ( FirstVNF_Mem + ( PN + AMS ) ) ,Const ) ) ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / ( MUC + MUR ) ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) ) )", "obj1": 0.7344398340248963, "obj2": 0.17272499613820005}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( Min( ( DDR / ( DDR - ARS ) ) ,Max( FirstVNF_Mem_Server,RRS ) ) + MDR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,Max( Min( ( ( DS / RRSe ) - ( MUC - RMSe ) ) ,MUR ),( DS + MUM ) ) ) ) )", "obj1": 0.8941908713692946, "obj2": 0.07427475695223777}, {"determining": "( Min( ARS ,FirstVNF_CPU ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( ( FirstVNF_Mem_Server - AMS ) ,MRS ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + DS ) ) - Max( ( RMSe * ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( CS - RMSe ) + MUR ) ) ) ),( RRSe - ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 0.38589211618257263, "obj2": 0.4956549439112484}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( ( ACS / ( AMS / ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server - CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * Min( PN ,FirstVNF_Mem ) ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR + ( ( MUC / CS ) - CS ) ) / MUR ) + ( RMSe / ( CS + ( ( CS / RRSe ) - RMSe ) ) ) ) + ( ( MUC / CS ) - CS ) ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.37344398340248963, "obj2": 0.4991660202006996}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,ARS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),AMS ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,Min( DS ,Max( MUR,MUC ) ) ),Max( MLU,MLU ) ) * ( MLU / ( RCSe + MUM ) ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,( Min( ( RRSe / MUM ) ,MLU ) - ( MLU * MUM ) ) ) )", "obj1": 0.7261410788381742, "obj2": 0.17371791529024477}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( PN + ( ( MRS * MRS ) + FirstVNF_CPU_Server ) ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( RCSe * DS ),MUM ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ( ARS + FirstVNF_Mem ) ) ) + BR ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe * RRSe ) - RMSe ) * ( ( RRSe * ( MUC * RCSe ) ) - ( RMSe - RMSe ) ) ),( Max( MUC,MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) / ( Min( PN ,( FirstVNF_Mem_Server * DDR ) ) - Max( FirstVNF_Mem,( ( ( PN + MRS ) + MDR ) - ( ( MDR * MDR ) / Max( DDR,( ACS + RRS ) ) ) ) ) ) )", "choosing": "Max( ( Min( MLU ,( ( ( RRSe * RRSe ) - RMSe ) * ( ( RRSe * ( MUC * RCSe ) ) - ( RMSe - RMSe ) ) ) ) + MUR ),( RMSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MRS,DDR ) / ( Min( PN ,( FirstVNF_Mem_Server * DDR ) ) - Max( FirstVNF_Mem,( ( ARS + MDR ) - ( ( MDR * MDR ) / Max( DDR,( ACS + RRS ) ) ) ) ) ) )", "choosing": "Max( ( Min( MLU ,( Max( Max( Min( CS ,MUR ),RCSe ),( MUC / RCSe ) ) * RRSe ) ) + MUR ),( RMSe + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR - CRS ) - CRS ) / ( Min( PN ,( FirstVNF_Mem_Server * DDR ) ) - Max( FirstVNF_Mem,( ( ARS + MDR ) - ( ( MDR * MDR ) / Max( DDR,( ACS + RRS ) ) ) ) ) ) )", "choosing": "Max( ( Min( MLU ,( Max( Max( Min( CS ,MUR ),RCSe ),( MUC / RCSe ) ) * RRSe ) ) + MUR ),( RMSe + Max( MUM,Max( ( MUM * DS ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ( ARS + FirstVNF_Mem ) ) ) + BR ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( Max( MRS,DDR ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( MUM * DS ),MUM ) ) + Max( Max( Min( CS ,MUR ),RCSe ),( MUC / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "37": [{"determining": "( Min( ARS ,FirstVNF_CPU ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( ( Min( PN ,CRS ) - ( Const + Min( PN ,CRS ) ) ) ,MRS ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + DS ) ) - Max( ( RMSe * ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( CS - RMSe ) + MUR ) ) ) ),( RRSe - ( ( CS - Min( ( ( RCSe / MUC ) * MLU ) ,MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,FirstVNF_RAM_Server ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem - MDR ) ,( CRS - ( ( ( FirstVNF_CPU / FirstVNF_Mem ) * ( DDR - MRS ) ) * ( Max( MDR,FirstVNF_RAM ) - Max( MRS,RRS ) ) ) ) ) ) )", "choosing": "Max( ( RRSe - ( CS * MUC ) ),( Max( MUR,Max( Min( MLU ,( MUM * RMSe ) ),MUR ) ) + RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( MRS + AMS ),DDR )", "choosing": "( RCSe / ( RRSe * DS ) )", "obj1": 0.08298755186721991, "obj2": 0.7593312174289172}, {"determining": "( Max( PN,ACS ) * ( PN - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - Max( DS,RRSe ) )", "obj1": 0.7614107883817427, "obj2": 0.08896022670535945}, {"determining": "Min( Max( FirstVNF_RAM,( BR / MDR ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( RCSe + MUM ) / Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUC ),Min( DS ,MUR ) )", "obj1": 0.7448132780082988, "obj2": 0.14709630276808303}, {"determining": "( ( FirstVNF_RAM - ( MDR * ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) ) ) - ( ( BR * CRS ) + Max( ( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) * FirstVNF_RAM_Server ),Min( PN ,RRS ) ) ) )", "choosing": "Max( ( Min( CS ,CS ) * Min( RRSe ,( RCSe * MUR ) ) ),( ( RCSe * MUR ) - ( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.8858921161825726, "obj2": 0.07726195933390742}, {"determining": "( ( ( ACS * ( FirstVNF_CPU_Server - RRS ) ) - Max( FirstVNF_CPU_Server,FirstVNF_Mem ) ) / FirstVNF_CPU_Server )", "choosing": "Max( ( ( Min( RRSe ,( Min( Max( RRSe,RRSe ) ,( MUC / Max( DS,MUR ) ) ) - Max( MUM,( RMSe * ( MUM * MUM ) ) ) ) ) * DS ) + RRSe ),( MUC / DS ) )", "obj1": 0.6950207468879668, "obj2": 0.20034737405465794}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( ( ( ( DDR / ( DDR - ARS ) ) + ( ARS - AMS ) ) + FirstVNF_CPU_Server ) - BR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,DS ) ) )", "obj1": 0.6286307053941909, "obj2": 0.2630126974182074}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( ( Max( MUC,( ( Max( MLU,CS ) + MUM ) / RCSe ) ) + ( ( MUM + MUM ) + Min( DS ,( CS / CS ) ) ) ) / MUM ) + DS ),Max( MUC,( ( RRSe - CS ) * ( MUM - Max( ( Min( ( MUC / MUC ) ,MUR ) - RRSe ),RRSe ) ) ) ) )", "obj1": 0.4979253112033195, "obj2": 0.3658861602870807}, {"determining": "( ( BR + PN ) - ( MDR + ( MRS * Min( MDR ,AMS ) ) ) )", "choosing": "Max( ( RRSe / ( ( Min( RCSe ,RMSe ) * ( RRSe / MLU ) ) * ( RCSe - Max( ( MUC / MUM ),Max( ( MUC / Max( RRSe,RMSe ) ),DS ) ) ) ) ),( ( RCSe / MUM ) + MLU ) )", "obj1": 0.6452282157676349, "obj2": 0.21115625365853732}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( ( CS + MLU ),DS ) - ( Max( Min( RCSe ,RRSe ),( ( MUC / DS ) / RCSe ) ) - Max( MUC,MUR ) ) ) ),( ( Min( MUC ,( RMSe / RMSe ) ) - MUC ) / MUC ) )", "obj1": 0.43568464730290457, "obj2": 0.4641272481697605}, {"determining": "( ( BR + PN ) - ( MDR + ( MDR * Min( MDR ,AMS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RCSe ) + ( MUR / ( Min( MUC ,( ( DS + MUC ) + DS ) ) / MLU ) ) ) / ( DS - MUM ) ),Max( MUC,MLU ) )", "obj1": 0.7012448132780082, "obj2": 0.1642623995347457}, {"determining": "( ( BR + PN ) - ( MDR + ( MRS * ( ( BR + PN ) - ( MDR + ( MRS * Min( MDR ,AMS ) ) ) ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RCSe ) + ( MUR / ( Min( MUC ,( ( MUC + MUM ) + DS ) ) / MLU ) ) ) / ( DS - MUM ) ),Max( MUC,MLU ) )", "obj1": 0.6369294605809128, "obj2": 0.2234885160422117}, {"determining": "Min( ( ( FirstVNF_Mem_Server + Min( ( ( BR - FirstVNF_RAM ) / ( ( ( FirstVNF_CPU + PN ) * ARS ) / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( ( MUC - MUC ) - RCSe ) ) + ( MUC - Min( CS ,( ( CS / ( RMSe * MUR ) ) + ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.25933609958506226, "obj2": 0.5637977779619617}, {"determining": "( ( ( FirstVNF_Mem_Server / Max( CRS,Max( ( FirstVNF_RAM_Server * DDR ),FirstVNF_RAM_Server ) ) ) - FirstVNF_RAM ) - ( DDR - ( Const - CRS ) ) )", "choosing": "Max( ( RCSe - Max( ( RCSe * MUM ),( MLU - Min( ( RRSe + MUM ) ,RMSe ) ) ) ),( ( RMSe / ( MLU - MUC ) ) - ( ( MUR + ( RCSe - RCSe ) ) - ( MUC * MUM ) ) ) )", "obj1": 0.495850622406639, "obj2": 0.3960807918592124}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( PN + AMS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / Min( DS ,Max( MUR,MUC ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.4730290456431535, "obj2": 0.4189195421324192}, {"determining": "( MDR / ( FirstVNF_CPU - ( MRS + ( Max( DDR,PN ) * Max( DDR,( FirstVNF_CPU_Server + DDR ) ) ) ) ) )", "choosing": "Max( Min( DS ,MUR ),Min( MUC ,Max( MLU,( ( ( MUC * ( Max( MUR,MLU ) + ( DS - CS ) ) ) - RCSe ) - MUM ) ) ) )", "obj1": 0.5684647302904564, "obj2": 0.35782893750459993}, {"determining": "( ( PN / Min( ( FirstVNF_Mem * MDR ) ,Max( FirstVNF_RAM_Server,Const ) ) ) - Max( FirstVNF_Mem,AMS ) )", "choosing": "( Min( RMSe ,RCSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4004149377593361, "obj2": 0.4805060630857344}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem_Server ) / ( ( DDR - Const ) - ( FirstVNF_Mem / ( ( BR / FirstVNF_RAM_Server ) / ( ARS * Max( ( ARS + PN ),( FirstVNF_CPU_Server + Max( AMS,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.3132780082987552, "obj2": 0.5486431847396165}, {"determining": "( ( PN / ARS ) - ( FirstVNF_Mem * MDR ) )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,RCSe ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.4170124481327801, "obj2": 0.4730064565994559}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( FirstVNF_RAM,ARS ) - ( FirstVNF_Mem - Const ) ) ) + ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) / ( RRS / AMS ) ) * ( ( ( MDR * MRS ) * CRS ) / ( FirstVNF_RAM + ACS ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.31742738589211617, "obj2": 0.5315653526751091}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( DDR + ( FirstVNF_CPU_Server + ( Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem * DDR ) ) ,( FirstVNF_RAM / BR ) ) - Const ) ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( DS + ( CS + MLU ) ) / CS ) )", "obj1": 0.5352697095435685, "obj2": 0.3648989415320846}, {"determining": "Min( Max( ( Min( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_Mem_Server / FirstVNF_RAM ) - FirstVNF_Mem_Server ) + ( MRS / DDR ) ) ) ,Max( RRS,CRS ) ) - Min( PN ,AMS ) ),RRS ) ,( ( Min( FirstVNF_RAM_Server ,DDR ) + Min( ARS ,Max( Max( Max( MRS,FirstVNF_RAM ),FirstVNF_Mem_Server ),Min( ( Min( MRS ,ACS ) - MRS ) ,BR ) ) ) ) * ( FirstVNF_RAM_Server - ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) / AMS ) ) ) )", "choosing": "( Max( ( RCSe - RRSe ),Min( ( ( ( MLU - RRSe ) - MLU ) / DS ) ,RMSe ) ) * Max( ( ( DS + Min( ( ( Min( MUC ,MLU ) / RRSe ) * Min( ( RCSe * MUM ) ,CS ) ) ,( RRSe + ( ( MUM - CS ) / ( CS * CS ) ) ) ) ) - RRSe ),RCSe ) )", "obj1": 0.5933609958506224, "obj2": 0.3131761336685769}, {"determining": "( Max( PN,ACS ) * ( ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) - Min( AMS ,MDR ) ) )", "choosing": "( ( DS * ( RRSe / RRSe ) ) - ( CS * RRSe ) )", "obj1": 0.2572614107883817, "obj2": 0.5823448584721387}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( DS,Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) )", "obj1": 0.6265560165975104, "obj2": 0.28706683652928794}, {"determining": "( Max( MDR,AMS ) / ( ( AMS + ( Min( ( DDR / ( DDR - ARS ) ) ,Max( FirstVNF_Mem_Server,RRS ) ) + MDR ) ) - ( Max( FirstVNF_RAM,Const ) / FirstVNF_Mem ) ) )", "choosing": "Max( ( DS / Min( ( MUR * RRSe ) ,DS ) ),( DS / Max( RCSe,Max( Min( ( ( DS / RRSe ) - ( MUC - RMSe ) ) ,MUR ),( DS + MUM ) ) ) ) )", "obj1": 0.8941908713692946, "obj2": 0.07427475695223777}, {"determining": "( ( BR + PN ) - ( MDR + Const ) )", "choosing": "Max( ( ( Min( RMSe ,RCSe ) + ( MUR / ( Min( MUC ,( ( MUC + MUC ) + DS ) ) / MUC ) ) ) / ( DS - MUM ) ),Max( MUC,MLU ) )", "obj1": 0.6991701244813278, "obj2": 0.1661430281299854}, {"determining": "( Min( ARS ,FirstVNF_CPU ) * Min( ( ( AMS - ( FirstVNF_RAM * Const ) ) / RRS ) ,( ( Min( ( FirstVNF_Mem_Server - AMS ) ,MRS ) / Min( ARS ,FirstVNF_RAM ) ) * PN ) ) )", "choosing": "( Max( ( Max( CS,Min( RRSe ,( Min( MUR ,( RRSe + RRSe ) ) - CS ) ) ) + Max( ( ( MUC * DS ) + RCSe ),RRSe ) ),( RMSe + DS ) ) - Max( ( RMSe * ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) + Max( ( ( ( CS / RRSe ) - DS ) * DS ),( ( CS - RMSe ) + MUR ) ) ) ),( RRSe - ( ( MLU / ( Min( MUR ,DS ) - MUC ) ) / Min( DS ,MUC ) ) ) ) )", "obj1": 0.38589211618257263, "obj2": 0.4956549439112484}, {"determining": "( Max( PN,ACS ) * ( Max( ARS,ACS ) - ( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) ) ) )", "choosing": "( ( Min( MUC ,Max( DS,RRSe ) ) - CS ) - ( CS * RRSe ) )", "obj1": 0.35477178423236516, "obj2": 0.5031664914002963}, {"determining": "( Max( MDR,( MRS + ( BR * ( ARS - ACS ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( ( Min( Min( ( MLU / CS ) ,MLU ) ,( MUM * RMSe ) ) + ( MUM / RRSe ) ) ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * Min( MUM ,DS ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.15145228215767634, "obj2": 0.6660885329580749}, {"determining": "( Max( BR,RRS ) - Max( Max( BR,RRS ),Const ) )", "choosing": "( ( RCSe * MUM ) * ( RCSe - RCSe ) )", "obj1": 0.45850622406639, "obj2": 0.4380185941565475}, {"determining": "( ( BR / MRS ) - Max( ( MRS / Const ),Max( ( BR * Max( ( ( FirstVNF_Mem * ACS ) - PN ),ACS ) ),Const ) ) )", "choosing": "( Max( Min( MUC ,Max( RRSe,DS ) ),MLU ) / ( RMSe * MUC ) )", "obj1": 0.32987551867219916, "obj2": 0.5170834737816608}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "( ( ( ( FirstVNF_RAM_Server - AMS ) * PN ) - Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,FirstVNF_Mem_Server ) ) - ( ( RRS - ACS ) + DDR ) )", "choosing": "( ( ( MUR / MUR ) / ( RRSe * Max( RCSe,( ( MUM + ( MUR / ( MLU * RRSe ) ) ) * Min( CS ,Min( ( RMSe * MLU ) ,Max( RCSe,RMSe ) ) ) ) ) ) ) / ( Min( ( Max( Min( RMSe ,( ( MLU / RMSe ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / DS ) ) ) / ( Max( ( MUR * MUM ),MLU ) + ( Max( MUR,RCSe ) - MUC ) ) ) - ( CS * RCSe ) ) ) * ( ( ( ( ( RMSe / RRSe ) * RCSe ) * ( MUM + ( MLU - ( MUC + RCSe ) ) ) ) + MLU ) / MUR ) ) )", "obj1": 0.6037344398340249, "obj2": 0.2952251423408636}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) )", "choosing": "Max( ( RMSe * ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) ),( ( MUM + MUC ) / CS ) )", "obj1": 0.5477178423236515, "obj2": 0.3618376832117167}, {"determining": "( ( BR + RRS ) - ( MRS * FirstVNF_CPU_Server ) )", "choosing": "( Min( MUR ,( MUM - DS ) ) * Max( Min( ( Min( MLU ,DS ) * ( MLU - CS ) ) ,RMSe ),( RCSe - MUC ) ) )", "obj1": 0.34232365145228216, "obj2": 0.5135624674081042}, {"determining": "Min( ( ( Max( ( Max( ( FirstVNF_Mem * RRS ),DDR ) * Max( AMS,RRS ) ),FirstVNF_RAM ) + Min( ( ( ( ARS - ARS ) - BR ) / ( Const / PN ) ) ,RRS ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( ( ( ( MUC - MUC ) - DS ) / RRSe ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.5746887966804979, "obj2": 0.33320919137146}, {"determining": "( Max( MDR,( MRS + ( BR * Max( Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ),( PN + RRS ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( MUC * Max( Max( MUR,( ( RRSe * Min( RCSe ,MLU ) ) * ( ( RCSe * RMSe ) / RRSe ) ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.14937759336099585, "obj2": 0.6852790082834882}, {"determining": "( Min( Min( FirstVNF_Mem_Server ,PN ) ,Max( ( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,Min( AMS ,BR ) ) + Max( PN,FirstVNF_Mem_Server ) ) / ( ACS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) ),FirstVNF_Mem ) ) * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( MUR,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.17427385892116182, "obj2": 0.6459532639887399}, {"determining": "( ( ( ACS / ( AMS / ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) ) * ( ( ( PN * FirstVNF_CPU_Server ) + ( ( ( RRS - FirstVNF_CPU ) * ( FirstVNF_Mem_Server + MRS ) ) + AMS ) ) * Min( ( FirstVNF_Mem_Server - CRS ) ,ARS ) ) ) / Max( ( Max( FirstVNF_Mem,( FirstVNF_CPU_Server * Min( PN ,FirstVNF_Mem ) ) ) * RRS ),( FirstVNF_CPU_Server / FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( ( MUR + ( ( MUC / CS ) - CS ) ) / MUR ) + ( RMSe / ( CS + ( ( CS / RRSe ) - RMSe ) ) ) ) + ( ( MUC / CS ) - CS ) ) - RMSe ) + ( MUM - MUR ) )", "obj1": 0.37344398340248963, "obj2": 0.4991660202006996}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Max( ACS,Max( Min( ARS ,CRS ),( FirstVNF_RAM_Server * PN ) ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Min( RRSe ,( Max( DS,RRSe ) * Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9439834024896265, "obj2": 0.01944830348209756}, {"determining": "( Max( RRS,ACS ) / ( ( ( ( ( FirstVNF_RAM - FirstVNF_Mem ) / Max( DDR,( FirstVNF_RAM_Server + Const ) ) ) - Max( DDR,( Max( ACS,( Const * MDR ) ) * BR ) ) ) - BR ) * FirstVNF_Mem ) )", "choosing": "Max( ( ( ( RCSe / Min( ( CS + ( DS - CS ) ) ,Max( RRSe,( Max( RCSe,MUC ) / Max( MUC,RRSe ) ) ) ) ) + RRSe ) + DS ),( ( Max( DS,( MUR / RMSe ) ) - ( Max( MUC,MUR ) - ( ( MUM * ( CS - ( MUR * RCSe ) ) ) + ( ( MUC + ( MUC - MUM ) ) - MUR ) ) ) ) - ( MLU - MUR ) ) )", "obj1": 0.966804979253112, "obj2": 0.01900385817579178}, {"determining": "Max( ( ( ARS / FirstVNF_RAM ) * FirstVNF_Mem_Server ),Max( FirstVNF_CPU_Server,AMS ) )", "choosing": "( Max( Min( MUM ,( RMSe / RMSe ) ),CS ) - ( Max( Max( CS,MLU ),( RRSe + ( ( RMSe - MLU ) + ( ( ( MUC / MUC ) - ( MUR / CS ) ) + RMSe ) ) ) ) + ( Max( RCSe,MUC ) + RMSe ) ) )", "obj1": 0.23651452282157676, "obj2": 0.5868737997545412}, {"determining": "( ( Min( ( AMS * FirstVNF_Mem_Server ) ,( PN * FirstVNF_RAM_Server ) ) + ( Min( ( ACS * AMS ) ,( DDR - FirstVNF_CPU ) ) + ( AMS * MDR ) ) ) / Max( ( ( BR / ARS ) / ( MDR - FirstVNF_CPU_Server ) ),Max( Min( FirstVNF_CPU ,FirstVNF_CPU ),Min( DDR ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( Max( ( MUR / RCSe ),( MLU / CS ) ) + ( ( MUM * DS ) / ( MUC - ( ( RMSe * CS ) - ( ( MUM + CS ) + ( DS / ( RMSe - MUM ) ) ) ) ) ) ),Min( Max( Min( DS ,MUR ),( CS + MUR ) ) ,( ( CS / MUR ) / ( RCSe + MLU ) ) ) )", "obj1": 0.5892116182572614, "obj2": 0.3263713227543776}, {"determining": "( Max( MDR,( MRS + ( BR * ( MRS + ( BR * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) ) ) ) * ( FirstVNF_Mem_Server + BR ) )", "choosing": "( ( Min( MUC ,MUR ) - ( RRSe * Max( Max( MUR,( ( RCSe - RRSe ) * DS ) ),CS ) ) ) - Min( MUC ,DS ) )", "obj1": 0.12448132780082988, "obj2": 0.7051298271630332}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( Max( FirstVNF_Mem_Server,( Const + ( Min( BR ,BR ) / BR ) ) ) * Max( ( FirstVNF_Mem + FirstVNF_CPU_Server ),FirstVNF_CPU ) )", "choosing": "( ( Min( MUC ,MUR ) - ( ( Max( ( DS / Max( DS,RMSe ) ),MUM ) - MUM ) * MUM ) ) - ( DS + ( DS + RRSe ) ) )", "obj1": 0.09336099585062241, "obj2": 0.746436210592758}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - PN ) ,RRS ) - ( MRS * FirstVNF_CPU ) ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( Max( Min( RMSe ,( MLU - ( MUM * MUM ) ) ),Max( DS,( Max( RRSe,( MLU + ( MUM / RRSe ) ) ) * ( MUR * Max( RMSe,( RMSe / MUM ) ) ) ) ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( ( ( Max( MUC,MUR ) / RRSe ) / Max( MUM,RCSe ) ) ,DS ) )", "obj1": 0.6120331950207469, "obj2": 0.2910150159622319}, {"determining": "( Const * ( Max( ARS,ACS ) - Min( AMS ,MDR ) ) )", "choosing": "( ( Min( ( ( Min( CS ,CS ) - ( MUC / MUC ) ) - MUM ) ,Max( DS,RRSe ) ) - Min( MUC ,CS ) ) - ( CS * RRSe ) )", "obj1": 0.22821576763485477, "obj2": 0.6030872742504202}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe / RMSe ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.2053941908713693, "obj2": 0.617592005916059}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,MUM ) )", "obj1": 0.19294605809128632, "obj2": 0.6362109282241507}, {"determining": "( FirstVNF_RAM * ( Max( ARS,( ( CRS * ( MDR * MRS ) ) / ( FirstVNF_RAM + ACS ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.21369294605809128, "obj2": 0.6032755110411847}, {"determining": "( ( BR + PN ) - ( MDR + ( ( AMS + DDR ) * Min( MDR ,AMS ) ) ) )", "choosing": "Max( ( ( Min( RMSe ,RCSe ) + ( MUR / ( Min( MUC ,( ( MUC + MUC ) + DS ) ) / MLU ) ) ) / ( DS - MUM ) ),( Min( Min( RRSe ,( MUM / MUR ) ) ,MUC ) - ( RCSe * ( MUM * Max( MUR,DS ) ) ) ) )", "obj1": 0.9356846473029046, "obj2": 0.025475306416456928}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,Max( ( FirstVNF_CPU * Max( FirstVNF_CPU,( FirstVNF_CPU_Server - DDR ) ) ),( BR * CRS ) ) ) + Max( Const,FirstVNF_CPU_Server ) ) / ACS ) / ( FirstVNF_CPU_Server * DDR ) )", "choosing": "( ( RMSe / MUR ) + ( ( RCSe / CS ) + ( ( RMSe / ( Min( CS ,RRSe ) * ( ( ( MUM - DS ) + RRSe ) * ( MUM / ( MUM / MUC ) ) ) ) ) - RCSe ) ) )", "obj1": 0.23443983402489627, "obj2": 0.5947388940278086}, {"determining": "( ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( ( FirstVNF_RAM_Server * ( ( FirstVNF_CPU - ( ( Const + CRS ) / ( MDR + Max( ACS,MDR ) ) ) ) + Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "Max( ( Max( RCSe,MUM ) * Min( MUC ,Min( ( MUM + ( Max( DS,RRSe ) / ( Max( DS,RRSe ) * RRSe ) ) ) ,CS ) ) ),Max( MUC,( MLU / CS ) ) )", "obj1": 0.9045643153526971, "obj2": 0.03811320370801438}, {"determining": "( Max( FirstVNF_RAM,( Min( MRS ,FirstVNF_CPU_Server ) - RRS ) ) / Min( FirstVNF_RAM ,Min( ( FirstVNF_Mem * MDR ) ,( ( PN * DDR ) - CRS ) ) ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS / ( ( ( MLU / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * Min( ( CS / MLU ) ,( MLU - CS ) ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.2842323651452282, "obj2": 0.5500341966127563}, {"determining": "Max( Min( ARS ,Max( Const,Max( Const,BR ) ) ),( ( ACS - ( FirstVNF_CPU_Server + PN ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( Max( RRSe,RCSe ) + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1037344398340249, "obj2": 0.7334878845850673}, {"determining": "( ( ACS * MDR ) * ( ARS - ( ( Const * Const ) - Max( AMS,RRS ) ) ) )", "choosing": "( ( RCSe / ( CS - DS ) ) / ( DS * Max( ( MLU + RMSe ),( ( ( MUR * ( MLU * RMSe ) ) * DS ) * Min( Min( RMSe ,Min( ( MLU + RMSe ) ,( CS / RMSe ) ) ) ,Max( DS,RRSe ) ) ) ) ) )", "obj1": 0.11825726141078838, "obj2": 0.7166976421708293}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( Min( PN ,ARS ) - Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR * ARS ) ,( ( ( RRS + FirstVNF_RAM ) * ( ACS / Min( DDR ,BR ) ) ) / Const ) ) / PN ) - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( MUM ,CS ),( RRSe / ( ( CS + DS ) + ( Max( ( MUM + ( ( RRSe * RCSe ) + MUM ) ),RRSe ) + RCSe ) ) ) )", "obj1": 0.9336099585062241, "obj2": 0.03463186261082116}, {"determining": "( ( DDR + FirstVNF_Mem ) * Max( MDR,Max( FirstVNF_RAM,MDR ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( BR + PN ) - ( MDR + ( MRS * Min( Min( MDR ,AMS ) ,AMS ) ) ) )", "choosing": "Max( ( ( ( ( MUC + MUC ) + DS ) + ( MUR / ( Min( MUC ,( ( MUC + MUC ) + DS ) ) / MLU ) ) ) / ( DS - MUM ) ),Max( MUC,MLU ) )", "obj1": 0.6410788381742739, "obj2": 0.2174183794433735}, {"determining": "( ( ACS / Min( AMS ,ACS ) ) * ( ( MRS / ( FirstVNF_Mem - ( RRS + Max( MDR,RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.13485477178423236, "obj2": 0.6997844844805425}, {"determining": "( ( PN / ARS ) - DDR )", "choosing": "( ( Min( ( DS * RMSe ) ,MUC ) + RRSe ) / ( Min( ( Max( Min( RMSe ,( ( MUM / MLU ) / MUR ) ),MUM ) * Max( Min( Min( MUC ,RMSe ) ,DS ),RRSe ) ) ,( ( ( CS + ( RMSe * ( DS / RMSe ) ) ) / ( Max( ( MUR * MUM ),MLU ) + Min( Max( MUR,RCSe ) ,MUC ) ) ) - ( ( ( MLU / Max( CS,RRSe ) ) - CS ) * RRSe ) ) ) - ( ( ( ( ( RRSe / RMSe ) * RCSe ) * ( MUM - MUC ) ) + MLU ) / MUR ) ) )", "obj1": 0.9128630705394191, "obj2": 0.03587985920207193}, {"determining": "Max( ( ( ACS - ( FirstVNF_CPU_Server + Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * ( ( MUM * MUR ) / RMSe ) ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( RRSe ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.10995850622406639, "obj2": 0.7246744182727068}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "( Max( MUM,CS ) + ( MUC - Min( Min( MUC ,RMSe ) ,Min( Max( MLU,( DS + CS ) ) ,RCSe ) ) ) )", "obj1": 0.9232365145228216, "obj2": 0.03483642225629445}, {"determining": "( ( ACS / ( FirstVNF_RAM + Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) ) ) * ( ( RRS / ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM - BR ),( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ,DDR ) + Max( Min( FirstVNF_RAM_Server ,ACS ),RRS ) ) ) ) * FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe / ( ( ( DS * ( RRSe / RRSe ) ) - ( RCSe - RRSe ) ) - RCSe ) ) - ( RRSe * CS ) )", "obj1": 0.14730290456431536, "obj2": 0.6965227989724373}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.45228215767634855, "obj2": 0.4407113233961401}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( FirstVNF_CPU_Server - DDR ) / ( ( Min( FirstVNF_CPU ,( ( CRS * ( ( CRS - DDR ) / Min( PN ,BR ) ) ) / FirstVNF_CPU ) ) / PN ) - ( ( CRS - AMS ) + FirstVNF_Mem ) ) )", "choosing": "Max( ( ( ( MUC - ( RCSe - ( Max( RCSe,MLU ) / ( MUM / MUC ) ) ) ) - DS ) / RRSe ),Max( ( MUC / DS ),MLU ) )", "obj1": 0.9004149377593361, "obj2": 0.04804389481213444}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "Min( ( FirstVNF_RAM_Server * BR ) ,Min( ( ( ACS + RRS ) * ( ( MRS + FirstVNF_RAM ) + ( PN / Max( ( FirstVNF_RAM * RRS ),BR ) ) ) ) ,Min( ( Min( ( FirstVNF_Mem_Server / ACS ) ,PN ) * FirstVNF_RAM_Server ) ,( ( ACS - ARS ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RCSe ) - ( MUR / ( RCSe * ( Max( DS,MUC ) / ( RCSe - CS ) ) ) ) )", "obj1": 0.47925311203319504, "obj2": 0.4034857646583399}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.0975103734439834, "obj2": 0.7436515941026862}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( PN / ( ( FirstVNF_Mem * ACS ) - ( AMS + DDR ) ) ) + FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) * ( ACS / ( ( MRS / Const ) - ARS ) ) )", "choosing": "Max( Min( ( RCSe - RCSe ) ,Max( RRSe,DS ) ),Max( DS,MLU ) )", "obj1": 0.9875518672199171, "obj2": 0.004659345971025633}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) + Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) ) * ( PN / DDR ) ) - ( FirstVNF_CPU - ( ( Const + CRS ) * ( CRS + FirstVNF_Mem ) ) ) )", "choosing": "Max( ( ( RCSe * MUM ) * Min( MUC ,Min( ( MUM + ( RMSe / ( RRSe * Max( MUR,RRSe ) ) ) ) ,CS ) ) ),Max( MUR,RRSe ) )", "obj1": 0.9813278008298755, "obj2": 0.007382854854959262}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "Max( Min( MUC ,Min( DS ,Max( MUR,MUC ) ) ),Min( ( ( MUM / CS ) + ( MUM * RMSe ) ) ,( ( DS + ( ( MUM / CS ) * DS ) ) / ( ( ( Min( DS ,RRSe ) * MUM ) - Min( ( RRSe + MUM ) ,Min( RCSe ,CS ) ) ) * MUR ) ) ) )", "obj1": 0.979253112033195, "obj2": 0.009399870761791189}, {"determining": "Max( ( ( MDR / Min( FirstVNF_RAM_Server ,( CRS - ( MDR - MDR ) ) ) ) / Min( MRS ,PN ) ),Min( Const ,FirstVNF_RAM ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( ( ( ( MUM - DS ) + ( DS / DS ) ) / ( RMSe + MLU ) ) ,Min( Max( CS,MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.11410788381742738, "obj2": 0.7233850181670219}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ( MDR * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server - Max( PN,PN ) ) ) ) + ACS ) ) * ( PN / DDR ) ) - ( CRS - AMS ) )", "choosing": "Max( ( ( RCSe * MUM ) * ( RRSe - ( RMSe * ( RRSe * MUM ) ) ) ),Min( ( DS + Min( ( ( MLU / Min( MUR ,CS ) ) - ( ( MUM + Max( MUR,RCSe ) ) - ( MUM / RRSe ) ) ) ,RCSe ) ) ,( MUC + MUM ) ) )", "obj1": 0.16804979253112035, "obj2": 0.6609016023526089}, {"determining": "Max( ( ( ACS - ( PN - FirstVNF_CPU ) ) / Max( FirstVNF_Mem_Server,Min( FirstVNF_RAM_Server ,( ( ARS - ( FirstVNF_RAM / ARS ) ) - CRS ) ) ) ),( ( FirstVNF_CPU_Server - ( ( RRS / MRS ) / FirstVNF_CPU_Server ) ) * DDR ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( DS * MUR ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( MUC + ( Min( ( ( MUM * MUR ) / RMSe ) ,( ( MUR - RMSe ) / Min( MUC ,MUR ) ) ) * MUM ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.11618257261410789, "obj2": 0.7188508100174185}, {"determining": "( FirstVNF_RAM * ( Max( ARS,ACS ) - Min( MDR ,AMS ) ) )", "choosing": "( ( Max( MUC,RCSe ) - Min( MUC ,Max( RCSe,( RRSe - MUR ) ) ) ) - Min( ( RRSe + MUM ) ,CS ) )", "obj1": 0.1950207468879668, "obj2": 0.6253701884104548}, {"determining": "( ( FirstVNF_Mem_Server * RRS ) / ( RRS - ( ( Max( Max( ( ( PN - FirstVNF_CPU ) / FirstVNF_CPU_Server ),BR ),RRS ) / RRS ) + CRS ) ) )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + Max( Max( MUM,MUC ),( MUC - MUM ) ) ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.1016597510373444, "obj2": 0.7389797356360671}, {"determining": "Max( ( DDR + ACS ),( CRS + MRS ) )", "choosing": "Max( ( ( RMSe - RRSe ) - RCSe ),( ( DS - Min( MUM ,Max( RCSe,( ( ( CS / MUM ) * ( MUR * RMSe ) ) * ( MUR / MUM ) ) ) ) ) * Min( ( ( DS / Min( ( RMSe - RCSe ) ,MUR ) ) + RRSe ) ,CS ) ) )", "obj1": 0.13900414937759337, "obj2": 0.6980620413499552}, {"determining": "( Max( FirstVNF_RAM_Server,( ( CRS + PN ) - MRS ) ) * ( MRS + FirstVNF_Mem ) )", "choosing": "( ( Min( MUC ,MUR ) - Min( MUR ,MUC ) ) - Min( CS ,CS ) )", "obj1": 0.2095435684647303, "obj2": 0.6120549744267159}, {"determining": "( ( Min( PN ,FirstVNF_RAM ) * RRS ) / Max( ( ( ( BR / Min( CRS ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) - BR ) + ( AMS * ( ( BR / Min( CRS ,Max( FirstVNF_Mem,FirstVNF_Mem ) ) ) / MDR ) ) ),FirstVNF_RAM_Server ) )", "choosing": "Max( ( DS / Min( ( ( DS / Min( ( MUR * RRSe ) ,DS ) ) * RRSe ) ,DS ) ),( DS / Max( RCSe,MLU ) ) )", "obj1": 0.14315352697095435, "obj2": 0.6976290095824145}, {"determining": "Max( Min( FirstVNF_CPU_Server ,( Const - MDR ) ),ARS )", "choosing": "( ( ( Min( RRSe ,RRSe ) / ( MUR * DS ) ) + MUC ) / Min( Max( ( RRSe + ( RMSe + MLU ) ),RMSe ) ,Min( Max( CS,MUM ) ,( RRSe / RMSe ) ) ) )", "obj1": 0.0995850622406639, "obj2": 0.7395370567704121}, {"determining": "Min( ( ( Const + ( CRS / DDR ) ) - DDR ) ,( FirstVNF_Mem_Server - RRS ) )", "choosing": "( Min( MUM ,( Max( DS,DS ) + ( ( Min( RMSe ,MUR ) + Max( MUC,( MUR / ( MLU - MUM ) ) ) ) + ( MUC - DS ) ) ) ) + ( MUC - Min( Min( Min( ( RMSe / RCSe ) ,CS ) ,RCSe ) ,( ( CS / ( RMSe * MUR ) ) * ( Min( MUC ,RCSe ) / DS ) ) ) ) )", "obj1": 0.991701244813278, "obj2": 0.004304487655564554}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "( ( ( ( ( RCSe * RRSe ) / RMSe ) + MUR ) * MUC ) - ( ( Max( MLU,Min( ( DS * ( RMSe - MLU ) ) ,RCSe ) ) * ( MUR * Min( ( Max( Max( MUM,CS ),MUM ) + MUR ) ,MUC ) ) ) * Min( ( ( DS / MUM ) + MUC ) ,Min( RCSe ,RCSe ) ) ) )", "obj1": 0.9937759336099585, "obj2": 0.0019379606103249046}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - RRS ) ,AMS ) - Const ) + Max( ( FirstVNF_Mem / MDR ),( ACS + RRS ) ) ) ,( ACS - FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( CS + ( Max( RCSe,MLU ) / RMSe ) ) * ( ( RCSe + MUM ) / MLU ) ),Min( DS ,( ( Max( MUC,RRSe ) / RRSe ) / Max( MUM,RCSe ) ) ) )", "obj1": 0.5767634854771784, "obj2": 0.3302504822005465}, {"determining": "( ( ( ( BR * Max( ( FirstVNF_CPU - Max( FirstVNF_RAM_Server,Const ) ),FirstVNF_Mem ) ) - Max( CRS,MDR ) ) * MRS ) / ( DDR + ( FirstVNF_RAM * ( ACS / ACS ) ) ) )", "choosing": "Max( ( RRSe * RMSe ),Min( ( Max( RRSe,( MUR - MUR ) ) / CS ) ,( RMSe + Max( MUC,MUC ) ) ) )", "obj1": 0.9979253112033195, "obj2": 0.0006604905092229777}, {"determining": "( ( ACS + ( Min( Max( DDR,FirstVNF_RAM_Server ) ,DDR ) + FirstVNF_RAM ) ) * ( ( ARS / BR ) + ACS ) )", "choosing": "( ( ( RCSe - ( ( MUR * RCSe ) + ( DS * ( ( ( RCSe / MLU ) / Max( MUR,DS ) ) * MUR ) ) ) ) / RRSe ) - ( Max( Max( RMSe,Max( ( MUC * ( RRSe * CS ) ),( MUR - ( Min( MUC ,MLU ) - ( MUR / MUM ) ) ) ) ),( Min( DS ,CS ) / RMSe ) ) * CS ) )", "obj1": 0.1887966804979253, "obj2": 0.6446535314492008}, {"determining": "( ( FirstVNF_RAM_Server * ( PN / FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server + RRS ) )", "choosing": "Max( ( ( Max( RRSe,( DS / DS ) ) / ( ( Min( CS ,( MUC / RCSe ) ) / RMSe ) / Min( ( Min( RMSe ,RRSe ) - ( MUC / CS ) ) ,MUR ) ) ) - Min( RCSe ,MUM ) ),Max( MUC,DS ) )", "obj1": 0.995850622406639, "obj2": 0.0013562060497984579}, {"determining": "( ( ( Max( CRS,Const ) - Max( MRS,CRS ) ) * Min( ( FirstVNF_RAM + BR ) ,( ACS + MDR ) ) ) - ( ( Max( CRS,CRS ) + Max( MRS,BR ) ) * ( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + Min( FirstVNF_CPU_Server ,RRS ) ) ) )", "choosing": "( ( ( ( MLU / MUC ) - ( RMSe * MUC ) ) / ( ( RRSe / MUC ) * ( MLU + DS ) ) ) * Max( Max( ( CS + RMSe ),Min( MUM ,MLU ) ),( Min( MUM ,DS ) * ( MUC * CS ) ) ) )", "obj1": 0.970954356846473, "obj2": 0.009838365909891426}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_Mem_Server ,Min( AMS ,( FirstVNF_CPU - ( CRS / CRS ) ) ) ) ,Max( FirstVNF_Mem,( ( Min( Min( FirstVNF_Mem ,FirstVNF_RAM ) ,( DDR / MDR ) ) + Max( ( FirstVNF_Mem - FirstVNF_CPU ),FirstVNF_Mem_Server ) ) * ( ACS + ( Min( ARS ,ARS ) - PN ) ) ) ) ) * ( Max( FirstVNF_RAM,ARS ) - ( Const - FirstVNF_Mem ) ) ) + ( ( ( ( ( Max( BR,MDR ) - Const ) - AMS ) - FirstVNF_RAM_Server ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * Min( ( CRS * ( MDR * ( FirstVNF_CPU_Server * PN ) ) ) ,( FirstVNF_RAM + ACS ) ) ) )", "choosing": "Max( ( RCSe / ( ( MUR + Min( ( MUR * ( ( CS + MLU ) / RMSe ) ) ,MUC ) ) + ( MUM * MLU ) ) ),Max( MUC,( ( DS / Min( Min( ( ( DS + RRSe ) - ( MUM - RRSe ) ) ,MUR ) ,( DS + MUM ) ) ) - RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( PN + ( ( MRS * MRS ) + FirstVNF_CPU_Server ) ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( MUM,Max( ( RCSe * DS ),MUM ) ) + Max( DS,( DS + ( CS * DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ( ( FirstVNF_CPU - ( FirstVNF_Mem_Server - ( ARS + FirstVNF_Mem ) ) ) + BR ) ) ,( ARS - ( FirstVNF_CPU_Server + Max( ( ( ( DDR - CRS ) - CRS ) * MDR ),FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( ( RRSe * RRSe ) - RMSe ) * ( ( RRSe * ( MUC * RCSe ) ) - ( RMSe - RMSe ) ) ),( Max( MUC,MUM ) / CS ) )", "obj1": 1.0, "obj2": 0.0}]}